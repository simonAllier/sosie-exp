[{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[1,2,3,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[13,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[16,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,3,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:193","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isArray()) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n                return false;\n            } \n            break;\n        } \n    } \n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[22,123,124,125,126,127],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"failures":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[1,154,155,156,4,157],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[93,158,159],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[160,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[162,163,164,165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[131,132,134,137,138,141,143,144,146,149,150,153],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[166,167,168,169,170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[23,171,24,172],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[173,174,175,176,177,178,179,180,181,128,19,20,129,182,183,184,185,186,135,187,188,189,190,191,192,1,2,193,171,24,194,25,28,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,33,34,210,35,36,37,39,44,211,6,212,47,48,49,213,147,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,7,230,231,232,167,233,234,235,236,237,238,168,239,240,241,242,169,243,244,245,246,247,248,249,250,251,252,253,170,254,255,160,256,257,258,259,260,261,262,263,264,265,266,267,268,67,269,155,156,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,14,285,286,4,5,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,100,101,103,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,157,106,346,347,348,349,350,351,352,9,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,120,121,122,375,376,377,378,379,380,381,382,383,384,385],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[16,16,17,17,18,19,20,21,23,24,25,26,27,28,29,30,33,34,35,36,37,38,39,3,42,43,44,46,49,50,51,52,54,55,56,57,59,60,61,67,70,80,86,96,97,98,100,101,102,106,110,111,112,113,386,116,117,118,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[159],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[173,174,175,176,177,178,179,180,387,181,16,16,17,17,128,18,19,20,129,182,183,184,185,186,130,131,132,133,134,135,136,137,138,139,140,141,388,389,187,188,21,22,189,190,191,192,1,2,193,23,171,24,194,25,26,27,28,195,29,30,196,197,198,199,200,201,202,203,204,205,206,207,208,209,33,34,210,35,36,37,38,390,39,40,41,3,42,43,44,45,46,211,6,212,47,48,49,213,142,143,144,145,146,147,148,149,150,151,152,153,391,392,393,394,395,214,215,216,396,217,218,219,220,221,222,223,224,397,225,226,227,228,229,7,230,231,232,167,233,398,234,235,236,237,238,168,399,239,240,241,242,169,243,244,245,246,247,248,249,250,251,252,253,170,400,401,402,403,404,254,405,406,255,160,256,50,51,52,53,54,55,56,57,58,59,60,61,62,63,407,408,257,258,259,260,261,262,263,264,15,265,266,267,268,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,409,410,411,0,412,413,414,415,269,155,156,270,271,272,273,274,416,417,418,419,420,421,275,276,277,278,279,280,281,282,283,284,14,285,286,4,5,287,288,162,163,164,89,90,91,92,93,94,95,289,422,423,290,424,96,291,292,293,294,295,296,97,12,425,98,426,427,428,429,297,298,299,300,430,301,302,99,100,101,102,103,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,431,432,8,433,434,435,436,437,438,439,440,441,323,442,324,325,443,444,445,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,157,104,105,106,107,446,346,347,447,448,348,349,449,450,451,452,453,454,350,351,352,9,353,354,355,356,357,358,359,455,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,108,109,110,111,112,456,113,457,458,114,115,386,116,117,118,119,120,121,122,459,460,461,462,463,464,465,466,467,161,165,468,469,470,471,472,473,474,10,475,476,477,478,479,480,11,481,375,482,376,377,378,379,483,380,381,382,383,384,385],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:99","failures":[174,177,178,180,181,18,226,228,239,54,484,375],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":233,"org.easymock.tests2.UsageTest.argumentsOrdered":266,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":378,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":470,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":262,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":128,"org.easymock.tests2.DelegateToTest.testReturnException":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":292,"org.easymock.tests.MockingTest.testPartialClassMocking":111,"org.easymock.tests.MockClassControlTest.testToString":116,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":400,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":74,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":326,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":123,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":168,"org.easymock.tests2.UsageTest.wrongArguments":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":350,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":141,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":414,"org.easymock.samples.ExampleTest.answerVsDelegate":176,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":98,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":458,"org.easymock.tests2.UsageConstraintsTest.testNull":235,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":35,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":121,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":226,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":31,"org.easymock.tests2.CaptureTest.testPrimitive":199,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":353,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":345,"org.easymock.tests.UsageTest.moreThanOneArgument":379,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":372,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":446,"org.easymock.tests.UsageTest.argumentsOrdered":384,"org.easymock.tests.UsageVarargTest.varargIntAccepted":359,"org.easymock.tests.InvocationTest.testEquals":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":270,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":152,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":464,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":274,"org.easymock.tests.ReplayStateInvalidUsageTest.times":438,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":135,"org.easymock.tests2.DependencyTest.testClassMocking":388,"org.easymock.tests2.AnswerTest.answer":254,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":394,"org.easymock.tests2.CaptureTest.testAnd":196,"org.easymock.tests2.UsageTest.strictResetToDefault":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":376,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":448,"org.easymock.tests2.DelegateToTest.testDelegate":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":341,"org.easymock.tests.LimitationsTest.mockFinalMethod":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":454,"org.easymock.tests2.DependencyTest.testClassMockingSupport":389,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":419,"org.easymock.tests2.CaptureTest.testCapture1_2446744":200,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":390,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":392,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":8,"org.easymock.tests.UsageThrowableTest.throwError":275,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":425,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":88,"org.easymock.samples.PartialClassMockTest.testGetArea":18,"org.easymock.tests.MockingTest.testInterfaceMocking":456,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":433,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":271,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":411,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":75,"org.easymock.tests2.UsageTest.niceToStrict":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":54,"org.easymock.tests2.MockBuilderTest.testCreateMock":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":83,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":138,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":335,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":223,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":461,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":428,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":412,"org.easymock.tests.UsageOverloadedMethodTest.overloading":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":85,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":169,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":325,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":314,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":354,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":158,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":242,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":205,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":455,"org.easymock.tests.MockClassControlTest.testEquals":120,"org.easymock.tests2.EasyMockSupportClassTest.testAll":67,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":101,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":343,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":452,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":393,"org.easymock.tests2.CaptureTest.testCaptureAll":197,"org.easymock.tests.MockNameTest.defaultName":449,"org.easymock.tests2.UsageConstraintsTest.testMatches":243,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":373,"org.easymock.samples.ExampleTest.voteForRemovals":180,"org.easymock.tests.UsageVarargTest.allKinds":367,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":453,"org.easymock.samples.BasicClassMockTest.testPrintContent":20,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":281,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":189,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":396,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":296,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":126,"org.easymock.tests2.UsageConstraintsTest.greaterThan":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":68,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":482,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":44,"org.easymock.samples.ExampleTest.voteForRemoval":177,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":95,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":183,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":45,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":38,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":122,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":257,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":220,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":291,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":395,"org.easymock.tests2.CaptureTest.testCaptureFirst":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":221,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":268,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":445,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":310,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":185,"org.easymock.tests2.CaptureTest.testCapture2_2446744":208,"org.easymock.tests2.UsageTest.moreThanOneArgument":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":477,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":60,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":366,"org.easymock.tests.GenericTest.testBridgedEquals":103,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":301,"org.easymock.tests.UsageExpectAndReturnTest.longType":306,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":450,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":218,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":344,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":409,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":250,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":342,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":370,"org.easymock.tests.UsageCallCountTest.tooManyCalls":302,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":84,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":280,"org.easymock.tests.MockingTest.testNiceClassMocking":114,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":26,"org.easymock.tests.MockingTest.testClassMocking":109,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":429,"org.easymock.tests2.UsageConstraintsTest.testContains":241,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":49,"org.easymock.tests2.UsageConstraintsTest.testFind":234,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":356,"org.easymock.tests.MockTypeTest.fromEasyMockClass":12,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":212,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":283,"org.easymock.tests.UsageExpectAndReturnTest.object":313,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":124,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":361,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":290,"org.easymock.tests.UsageTest.exactCallCountByLastCall":385,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":416,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":346,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":319,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":357,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":143,"org.easymock.tests.MockClassControlTest.testHashCode":119,"org.easymock.tests2.EasyMockSupportTest.testVerify":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":77,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":347,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":460,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":391,"org.easymock.tests.UsageVarargTest.varargCharAccepted":360,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":481,"org.easymock.tests2.UsageTest.openCallCountByLastCall":263,"org.easymock.tests.DefaultClassInstantiatorTest.object":89,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":228,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":459,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":78,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":333,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":133,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":142,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":118,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":332,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":162,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":86,"org.easymock.tests2.UsageTest.resumeIfFailure":267,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":294,"org.easymock.tests2.StubTest.stubWithReturnValue":230,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":127,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":251,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":312,"org.easymock.tests2.SerializationTest.testAllMockedMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":475,"org.easymock.samples.SupportTest.voteForRemovals":174,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":99,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":338,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":172,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":11,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":405,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":418,"org.easymock.tests.UsageExpectAndThrowTest.object":336,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":248,"org.easymock.tests2.DelegateToTest.testWrongClass":216,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":368,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":369,"org.easymock.tests.UsageStrictMockTest.range":4,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":407,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":397,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":337,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":56,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":64,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":413,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":0,"org.easymock.tests2.CaptureTest.testCaptureNone":204,"org.easymock.tests.UsageUnorderedTest.message":157,"org.easymock.tests.UsageVerifyTest.twoReturns":156,"org.easymock.tests.UsageVarargTest.varargByteAccepted":365,"org.easymock.tests2.ThreadingTest.testThreadSafe":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":81,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":300,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":424,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":19,"org.easymock.tests2.CaptureTest.testCapture_2617107":198,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":9,"org.easymock.tests2.UsageConstraintsTest.any":239,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":437,"org.easymock.tests2.StubTest.stub":7,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":293,"org.easymock.tests.UsageExpectAndThrowTest.longType":329,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":93,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":436,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":192,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":147,"org.easymock.tests2.SerializationTest.testClass":23,"org.easymock.tests.LimitationsTest.mockNativeMethod":106,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":322,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":132,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":193,"org.easymock.tests2.NameTest.nameForMocksControl":404,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":134,"org.easymock.tests2.MockedExceptionTest.testMockedException":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":69,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":382,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":113,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":6,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":33,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":57,"org.easymock.tests.MockingTest.testNicePartialClassMocking":112,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":37,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":130,"org.easymock.tests2.CaptureTest.testCaptureLast":203,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":420,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":30,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":238,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":249,"org.easymock.tests.MockingTest.testTwoMocks":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":334,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":265,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":253,"org.easymock.samples.ExampleTest.removeNonExistingDocument":387,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":434,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":137,"org.easymock.tests.UsageStrictMockTest.differentMethods":5,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":144,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":91,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":184,"org.easymock.tests2.MockBuilderTest.testCreateMockString":61,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":71,"org.easymock.tests.UsageExpectAndThrowTest.floatType":328,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":66,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":255,"org.easymock.tests.UsageVerifyTest.twoThrows":155,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":80,"org.easymock.samples.ExampleTest.voteAgainstRemoval":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":471,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":410,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":43,"org.easymock.tests.LimitationsTest.privateConstructor":105,"org.easymock.tests2.UsageConstraintsTest.testNotNull":252,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":282,"org.easymock.tests2.UsageTest.defaultResetToNice":15,"org.easymock.samples.ExampleTest.voteAgainstRemovals":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":318,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":131,"org.easymock.tests.UsageVarargTest.differentLength":362,"org.easymock.tests2.CallbackTest.callback":194,"org.easymock.tests2.UsageConstraintsTest.equals":398,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":40,"org.easymock.tests.UsageTest.openCallCountByLastCall":381,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":352,"org.easymock.tests.UsageCallCountTest.tooFewCalls":298,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":415,"org.easymock.tests.UsageThrowableTest.throwCheckedException":279,"org.easymock.tests.MockingTest.testStrictClassMocking":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":29,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":349,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":136,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":27,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":439,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":195,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":256,"org.easymock.tests.ObjectMethodsTest.testHashCode":423,"org.easymock.tests2.CompareToTest.testGreateOrEqual":166,"org.easymock.tests2.NameTest.nameForNiceMock":403,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":186,"org.easymock.tests2.DependencyTest.testInterfaceMocking":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":125,"org.easymock.samples.ExampleTest.addDocument":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.DelegateToTest.testStubDelegate":215,"org.easymock.tests2.AnswerTest.stubAnswer":160,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":285,"org.easymock.tests.UsageVarargTest.varargLongAccepted":364,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndReturnTest.floatType":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":443,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":151,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":246,"org.easymock.tests.UsageThrowableTest.noUpperLimit":276,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":232,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":62,"org.easymock.tests2.SerializationTest.test":171,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":201,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":159,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":90,"org.easymock.tests2.UsageConstraintsTest.testSame":236,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":304,"org.easymock.samples.SupportTest.addDocument":173,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":72,"org.easymock.tests.GenericTest.testPackageScope":100,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":150,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":457,"org.easymock.tests2.NameTest.nameForMock":401,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":315,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":41,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":340,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":289,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":377,"org.easymock.tests2.MockedExceptionTest.testRealException":213,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":473,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":191,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":441,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":351,"org.easymock.tests2.NameTest.nameForStrictMock":402,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":53,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":36,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":63,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":92,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":247,"org.easymock.tests.ErrorMessageTest.testGetters":154,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":51,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":468,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":76,"org.easymock.tests2.CaptureTest.testCaptureRightOne":206,"org.easymock.tests2.UsageConstraintsTest.testOr":237,"org.easymock.tests.UsageRangeTest.combination":375,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":34,"org.easymock.tests.UsageTest.wrongArguments":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":73,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":386,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":316,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":94,"org.easymock.tests.UsageVarargTest.varargShortAccepted":363,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":430,"org.easymock.tests2.UsageConstraintsTest.cmpTo":240,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":465,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":264,"org.easymock.tests2.CaptureTest.testCaptureFromStub":207,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":432,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":52,"org.easymock.tests.UsageTest.unexpectedCallWithArray":483,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":299,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":317,"org.easymock.tests2.UsageConstraintsTest.constraints":167,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":286,"org.easymock.samples.ExampleTest.addAndChangeDocument":181,"org.easymock.tests.UsageStrictMockTest.testVerify":288,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":129,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":451,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":272,"org.easymock.tests.LimitationsTest.abstractClass":104,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":309,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":444,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":224,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":358}}]
