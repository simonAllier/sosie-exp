[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[8,9,10,11,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[13,14,15,16],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[18,19,14,20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"failures":[21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:70","failures":[23,24,24,25,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,3,4,72,73,74,75,76,77,78,79,18,19,13,80,81,82,83,14,20,84,85,86,87,88,89,90,91,15,92,93,94,95,16,96,97,98,99,100,101,17,102,103,104,105,106,107,108,109,110,111],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[112],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[24,24,25,25,28,38,39,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,98,156,157,158,159,160,161],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,162,46,47,48,49,50,51,52,53,163,164,165,9,10,166,167,168,169,170,171,172,173,174,175,176,177,113,178,179,114,180,181,182,183,115,116,117,184,118,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,54,55,210,11,211,212,213,214,215,216,217,218,219,56,57,58,59,60,61,62,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,119,243,244,245,246,63,247,64,65,66,67,68,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,0,120,121,122,1,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,123,290,69,70,71,291,124,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,2,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,21,22,343,112,344,345,346,347,348,349,350,351,352,3,353,4,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,72,73,5,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,74,386,12,387,388,125,389,390,391,392,393,394,6,395,396,7,397,398,399,400,401,402,126,403,127,404,405,406,128,407,408,129,409,410,411,412,413,414,415,416,417,130,418,419,420,421,422,131,423,424,132,134,135,425,136,137,138,139,426,140,141,143,144,145,146,147,427,148,149,428,429,430,431,76,77,78,79,18,432,19,13,80,81,82,83,14,20,84,85,86,87,88,89,90,91,15,92,93,94,95,16,96,97,150,151,433,152,153,154,155,434,98,435,436,156,157,158,159,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,99,100,101,17,102,103,104,105,106,107,108,109,110,111,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,161,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,3,4,74,75,431,77,78,79,18,19,13,80,81,82,83,14,20,84,85,86,87,88,89,90,91,15,92,93,94,95,16,96,97,98,99,100,101,17,102,103,104,105,106,107,108,109,110,111],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[164,215,218],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[40,41,42,9,166,171,239,63,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,301,334,336,337,338,339,340,341,355,371,378],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[24,24,25,25,28,38,39,113,114,115,116,117,118,119,120,121,122,1,123,291,124,292,293,294,295,296,297,333,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,98,156,157,158,159,438,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[54,55,11,211,213,74,12,387,152,154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[379],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1531","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[477,478,479,8,165,9,10,167,55,11,211,71,373,74,12,387],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[28,116,117,118,65,123,125,128,129,130,131,134,136,138,139,141,144,145,146,147,427,148,149,431,150,433,152,154,469],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[30,31,32,33,34,35,36,37,40,41,42,163,164,165,9,10,166,167,168,169,170,171,172,173,174,175,176,177,183,115,184,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,214,215,216,218,56,57,58,59,60,61,62,220,221,222,223,224,225,226,227,228,229,230,231,232,236,237,238,239,240,241,242,119,243,244,245,246,63,247,64,65,66,67,68,253,254,255,256,257,258,259,260,261,262,263,264,120,121,1,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,123,69,70,71,291,124,292,293,294,295,296,297,480,321,322,323,324,325,326,481,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,21,22,343,112,344,345,346,347,348,369,72,371,373,374,376,377,378,379,380,381,382,383,6,395,396,7,397,398,403,127,75,144,428,429,430,76,77,78,79,18,19,13,80,81,82,83,14,20,84,85,86,87,88,89,90,91,15,92,93,94,95,16,96,97,150,151,433,152,434,98,436,156,437,451,452,453,454,99,100,101,17,102,103,104,105,106,107,108,109,110,111,460,467,468,469,470,471,472,473,474,161,475],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[57,60,243,244,245,246,63,247,473,474,161,475],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[439,446,455,462],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,162,46,47,48,49,50,51,52,53,163,164,165,9,10,166,167,168,169,170,171,172,173,174,175,176,177,113,178,179,114,180,181,182,183,115,116,117,184,118,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,54,55,210,11,211,212,213,214,215,216,217,218,219,56,57,58,59,60,61,62,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,119,243,244,245,246,63,247,64,65,66,67,68,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,0,120,121,122,1,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,123,290,69,70,71,291,124,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,2,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,21,22,343,112,344,345,346,347,348,349,350,351,352,3,353,4,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,72,73,5,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,74,386,12,387,388,125,389,390,391,392,393,394,6,395,396,7,397,398,399,400,401,402,126,403,127,404,405,406,128,407,408,129,409,410,411,412,413,414,415,416,417,130,418,419,420,421,422,131,423,424,132,134,135,425,136,137,138,139,426,140,141,143,144,145,146,147,427,148,149,428,429,430,431,76,77,78,79,18,432,19,13,80,81,82,83,14,20,84,85,86,87,88,89,90,91,15,92,93,94,95,16,96,97,150,151,433,152,153,154,155,434,98,435,436,156,157,158,159,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,99,100,101,17,102,103,104,105,106,107,108,109,110,111,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,161,475],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[482],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":18,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":166,"org.easymock.tests2.UsageTest.argumentsOrdered":381,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":366,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":308,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":376,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":29,"org.easymock.tests2.DelegateToTest.testReturnException":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":244,"org.easymock.tests.MockingTest.testPartialClassMocking":116,"org.easymock.tests.MockClassControlTest.testToString":292,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":390,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":412,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":268,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":477,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":73,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":58,"org.easymock.tests2.UsageTest.wrongArguments":374,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":466,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":234,"org.easymock.samples.ExampleTest.answerVsDelegate":31,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":114,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":186,"org.easymock.tests2.UsageConstraintsTest.testNull":13,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":152,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":297,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":365,"org.easymock.tests2.CaptureTest.testPrimitive":17,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":62,"org.easymock.tests.UsageTest.moreThanOneArgument":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":287,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":433,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":346,"org.easymock.tests.UsageTest.argumentsOrdered":173,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":342,"org.easymock.tests.UsageVarargTest.varargIntAccepted":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":64,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":449,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":68,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":460,"org.easymock.tests.ReplayStateInvalidUsageTest.times":228,"org.easymock.tests2.DependencyTest.testClassMocking":369,"org.easymock.tests2.AnswerTest.answer":6,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":402,"org.easymock.tests2.CaptureTest.testAnd":99,"org.easymock.tests2.UsageTest.strictResetToDefault":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":360,"org.easymock.tests2.DelegateToTest.testDelegate":472,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":112,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":283,"org.easymock.tests.LimitationsTest.mockFinalMethod":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":252,"org.easymock.tests2.DependencyTest.testClassMockingSupport":370,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":175,"org.easymock.tests2.CaptureTest.testCapture1_2446744":102,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":434,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":400,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":222,"org.easymock.tests.UsageThrowableTest.throwError":334,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":179,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":450,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":424,"org.easymock.samples.PartialClassMockTest.testGetArea":28,"org.easymock.tests.MockingTest.testInterfaceMocking":184,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":413,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":269,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":333,"org.easymock.tests2.UsageTest.niceToStrict":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":136,"org.easymock.tests2.MockBuilderTest.testCreateMock":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":420,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":463,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":277,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":361,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":232,"org.easymock.tests.UsageOverloadedMethodTest.overloading":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":417,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":87,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":199,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":265,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":86,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":107,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":162,"org.easymock.tests2.EasyMockSupportClassTest.testAll":128,"org.easymock.tests.MockClassControlTest.testEquals":296,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":121,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":401,"org.easymock.tests2.CaptureTest.testCaptureAll":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":250,"org.easymock.tests.MockNameTest.defaultName":163,"org.easymock.tests2.UsageConstraintsTest.testMatches":88,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":347,"org.easymock.samples.ExampleTest.voteForRemovals":35,"org.easymock.tests.UsageVarargTest.allKinds":53,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":165,"org.easymock.samples.BasicClassMockTest.testPrintContent":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":251,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":340,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":384,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":471,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":247,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":481,"org.easymock.tests2.UsageConstraintsTest.greaterThan":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":407,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":350,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":159,"org.easymock.samples.ExampleTest.voteForRemoval":32,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":327,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":437,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":429,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":180,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":155,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":119,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":371,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":358,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":243,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":467,"org.easymock.tests2.CaptureTest.testCaptureFirst":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":359,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":383,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":195,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":431,"org.easymock.tests2.CaptureTest.testCapture2_2446744":110,"org.easymock.tests2.UsageTest.moreThanOneArgument":373,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":315,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":52,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":263,"org.easymock.tests.UsageExpectAndReturnTest.longType":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":248,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":356,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":286,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":164,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":94,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":284,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":344,"org.easymock.tests.UsageCallCountTest.tooManyCalls":264,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":421,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":465,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":273,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":339,"org.easymock.tests.MockingTest.testNiceClassMocking":187,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":145,"org.easymock.tests.MockingTest.testClassMocking":183,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":133,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":257,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":161,"org.easymock.tests2.UsageConstraintsTest.testFind":19,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":267,"org.easymock.tests.MockTypeTest.fromEasyMockClass":178,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":4,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":208,"org.easymock.tests.UsageExpectAndReturnTest.object":198,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":364,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":47,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":331,"org.easymock.tests.UsageTest.exactCallCountByLastCall":174,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":303,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":21,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":389,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":204,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":238,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":440,"org.easymock.tests.MockClassControlTest.testHashCode":295,"org.easymock.tests2.EasyMockSupportTest.testVerify":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":415,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":22,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":41,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":399,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":75,"org.easymock.tests.UsageVarargTest.varargCharAccepted":46,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":480,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":320,"org.easymock.tests2.UsageTest.openCallCountByLastCall":377,"org.easymock.tests.DefaultClassInstantiatorTest.object":321,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":40,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":416,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":275,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":337,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":439,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":157,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":294,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":274,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":131,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":293,"org.easymock.tests2.UsageTest.resumeIfFailure":382,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":246,"org.easymock.tests2.StubTest.stubWithReturnValue":355,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":197,"org.easymock.tests2.SerializationTest.testAllMockedMethod":127,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":2,"org.easymock.samples.SupportTest.voteForRemovals":27,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":442,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":280,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":319,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":395,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":219,"org.easymock.tests.UsageExpectAndThrowTest.object":278,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":92,"org.easymock.tests2.DelegateToTest.testWrongClass":470,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":69,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":70,"org.easymock.samples.ConstructorCalledMockTest.testTax":24,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":453,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":144,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":279,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":404,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":172,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":233,"org.easymock.tests2.CaptureTest.testCaptureNone":106,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":216,"org.easymock.tests.UsageUnorderedTest.message":71,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":482,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":51,"org.easymock.tests2.ThreadingTest.testThreadSafe":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":418,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":261,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":38,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":332,"org.easymock.tests2.CaptureTest.testCapture_2617107":101,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":177,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":317,"org.easymock.tests2.UsageConstraintsTest.any":20,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":227,"org.easymock.tests2.StubTest.stub":354,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":245,"org.easymock.tests.UsageExpectAndThrowTest.longType":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":318,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":325,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":226,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":386,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":444,"org.easymock.tests2.SerializationTest.testClass":126,"org.easymock.tests.LimitationsTest.mockNativeMethod":123,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":122,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":207,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":457,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":388,"org.easymock.tests2.NameTest.nameForMocksControl":394,"org.easymock.tests2.MockedExceptionTest.testMockedException":474,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":408,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":171,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":118,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":272,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":353,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":139,"org.easymock.tests.MockingTest.testNicePartialClassMocking":117,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":154,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":455,"org.easymock.tests2.CaptureTest.testCaptureLast":105,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":176,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":149,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":82,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":93,"org.easymock.tests.MockingTest.testTwoMocks":115,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":276,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":380,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.samples.ExampleTest.removeNonExistingDocument":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":462,"org.easymock.tests.UsageStrictMockTest.differentMethods":211,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":441,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":323,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":430,"org.easymock.tests2.MockBuilderTest.testCreateMockString":143,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":409,"org.easymock.tests.UsageExpectAndThrowTest.floatType":270,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":406,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":7,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":130,"org.easymock.samples.ExampleTest.voteAgainstRemoval":33,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":309,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":158,"org.easymock.tests.LimitationsTest.privateConstructor":289,"org.easymock.tests2.UsageConstraintsTest.testNotNull":16,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":473,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":341,"org.easymock.tests2.UsageTest.defaultResetToNice":379,"org.easymock.samples.ExampleTest.voteAgainstRemovals":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":310,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":456,"org.easymock.tests.UsageVarargTest.differentLength":48,"org.easymock.tests2.CallbackTest.callback":5,"org.easymock.tests2.UsageConstraintsTest.equals":432,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":435,"org.easymock.tests.UsageTest.openCallCountByLastCall":170,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":60,"org.easymock.tests.UsageCallCountTest.tooFewCalls":259,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":147,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":235,"org.easymock.tests.UsageThrowableTest.throwCheckedException":338,"org.easymock.tests.MockingTest.testStrictClassMocking":182,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":148,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":461,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":146,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":229,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":427,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":398,"org.easymock.tests.ObjectMethodsTest.testHashCode":330,"org.easymock.tests2.NameTest.nameForNiceMock":393,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":76,"org.easymock.tests2.DependencyTest.testInterfaceMocking":72,"org.easymock.samples.ExampleTest.addDocument":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":419,"org.easymock.tests2.DelegateToTest.testStubDelegate":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":423,"org.easymock.tests2.AnswerTest.stubAnswer":397,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":55,"org.easymock.tests.UsageVarargTest.varargLongAccepted":50,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":307,"org.easymock.tests.UsageExpectAndReturnTest.floatType":190,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":125,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":25,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":448,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":91,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageThrowableTest.noUpperLimit":335,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":78,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":451,"org.easymock.tests2.SerializationTest.test":403,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":103,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":322,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":189,"org.easymock.tests2.UsageConstraintsTest.testSame":80,"org.easymock.samples.SupportTest.addDocument":26,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":410,"org.easymock.tests.GenericTest.testPackageScope":120,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":447,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":185,"org.easymock.tests2.NameTest.nameForMock":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":200,"org.easymock.tests2.UsageStrictMockTest.differentMethods":387,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":436,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":192,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":282,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":328,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":352,"org.easymock.tests2.MockedExceptionTest.testRealException":475,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":181,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":311,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":231,"org.easymock.tests2.NameTest.nameForStrictMock":392,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":425,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":3,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":153,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":452,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":478,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":15,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":324,"org.easymock.tests.ErrorMessageTest.testGetters":479,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":134,"org.easymock.tests2.UsageStrictMockTest.range":12,"org.easymock.tests2.UsageConstraintsTest.lessThan":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":306,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":414,"org.easymock.tests2.CaptureTest.testCaptureRightOne":108,"org.easymock.tests2.UsageConstraintsTest.testOr":81,"org.easymock.tests.UsageRangeTest.combination":349,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":151,"org.easymock.tests.UsageTest.wrongArguments":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":411,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":299,"org.easymock.tests.UsageVarargTest.varargShortAccepted":49,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":326,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":262,"org.easymock.tests2.UsageConstraintsTest.cmpTo":84,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":301,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":378,"org.easymock.tests2.CaptureTest.testCaptureFromStub":109,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":221,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":135,"org.easymock.tests.UsageTest.unexpectedCallWithArray":168,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":54,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":202,"org.easymock.tests2.CaptureTest.testCapture":476,"org.easymock.tests2.UsageConstraintsTest.constraints":79,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":210,"org.easymock.samples.ExampleTest.addAndChangeDocument":37,"org.easymock.tests.UsageStrictMockTest.testVerify":213,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":23,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":249,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":104,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":66,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":194,"org.easymock.tests.LimitationsTest.abstractClass":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":67,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":44,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":8,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":362}}]
