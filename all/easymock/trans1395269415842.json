[{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[12,13,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[54,55,56],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,21,22,71,72,23,24,25,26,73,74,75,76,27,77,28,29,78,30,31,79,80,81,82,32,33,34,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,36,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,37,38,39,40,41,186,187,188,189,190,191,192,193,194,195,196,197,198,42,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,43,44,45,217,218,219,220,46,47,48,49,50,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,51,52,236,53,237,238,239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[240,241],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[242,243],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[71,74,28,34],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[242,243],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[244,19,20,57,58,59,60,61,62,63,245,246,247,248,249,250,64,65,66,67,68,69,70,21,22,71,72,23,24,25,26,73,74,75,76,27,77,28,29,78,30,31,79,80,81,82,32,33,34,83,84,85,86,87,88,89,251,252,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,253,116,117,118,119,120,121,122,254,123,255,124,125,126,127,128,256,129,130,257,258,131,132,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,133,134,135,136,137,36,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,37,38,39,40,41,186,187,188,189,190,191,192,193,194,195,196,197,198,42,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,43,44,45,217,218,219,220,46,47,48,49,50,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,51,52,236,53,237,238,239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[140,141,142,276],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[277,278,279,280,281,282,283,284,285,286,228,229,287,288],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[19,20,64,12,289,290,13,291,292,293,294,295,296,297,140],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[103,105,36,280,138,287,53,288,237,239],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[77,214,287],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[71,72,26,73,298,79,90,92,99],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[12,299,300,289,290,13,292,293,130,132,301],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[302,30],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[244,19,20,64,12,303,87,289,304,305,290,306,88,89,251,13,252,307,291,308,309,293,310,311,297,312,108,313,112,273,274,275,140,314,315,242,316],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[58,124,317,126,318],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[319,120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[320,34],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[321,76,106],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[322],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[244,19,20,57,58,59,60,61,62,63,245,246,247,248,249,250,64,69,70,21,22,71,72,23,24,25,26,73,74,75,76,27,77,28,29,78,30,31,79,80,81,323,82,32,33,34,83,84,85,86,87,304,88,89,251,252,308,309,310,90,91,92,93,324,94,95,96,97,98,99,35,325,100,101,326,102,103,104,105,311,106,107,312,108,327,109,110,328,329,111,112,113,114,115,253,330,116,117,277,118,119,331,332,120,278,279,121,333,122,254,123,255,124,125,317,126,127,128,256,129,130,257,258,131,132,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,133,134,135,136,334,137,36,335,280,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,37,38,39,40,41,336,318,337,338,188,190,191,339,192,282,283,340,341,284,285,342,193,194,195,196,197,198,286,42,343,344,199,200,345,346,347,348,349,201,202,350,203,204,205,206,207,208,209,351,210,211,212,213,214,216,43,44,352,353,45,217,218,219,220,46,47,48,49,50,221,222,223,224,225,226,227,228,229,232,233,234,235,354,355,356,51,52,357,236,287,53,358,288,237,238],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[100],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[359,240,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[71,72,24,26,73,298,79,32,90,92,99],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[140,141,142,276],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[244,57,58,59,60,61,62,63,245,246,247,248,249,250,64,65,66,67,68,69,70,21,22,71,72,23,24,25,26,73,74,298,75,76,27,77,28,29,78,30,31,79,80,81,323,82,32,33,34,304,88,251,252,309,90,91,92,93,324,94,95,96,97,98,99,325,100,101,326,102,103,104,105,106,312,108,327,109,110,328,329,111,114,253,330,116,117,277,118,119,331,332,120,278,279,121,333,122,254,123,255,124,125,317,126,127,128,256,129,130,257,258,131,132,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,133,134,135,136,334,137,36,335,280,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,336,318,337,186,188,189,190,191,339,192,283,340,341,284,285,342,193,360,361,286,42,343,344,199,200,345,346,347,348,349,201,202,350,203,204,205,206,207,208,209,351,210,211,212,213,214,362,216,43,44,352,353,45,217,46,47,48,49,50,225,227,228,229,230,232,233,234,235,355,356,51,52,357,236,287,53,358,288,237,238,239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[12,13,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[244,19,19,20,20,246,247,64,12,87,304,305,306,88,89,251,252,291,308,309,310,101,326,103,104,105,311,106,297,319,107,312,108,327,363,313,112,113,114,364,365,366,367,368,369,256,129,130,257,131,132,370,371,372,272,373,374,273,375,376,377,378,379,380,381,382,383,274,384,385,386,387,388,275,389,390,140,142,391,392,393,183,184,185,394,314,315,193,54,55,395,396,359,56,397,242,201,202,316,243,362,215,398,399,400,401,402,403,404,405,216,406],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[65,66,67,68,117,277,278,279,36,280,138,192,283,284,285,407,408,409,286,227,228,229,287,53,288,237],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[344,345],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[410,411,412],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":72,"org.easymock.tests2.UsageTest.argumentsOrdered":279,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":339,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":269,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":119,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":245,"org.easymock.tests2.DelegateToTest.testReturnException":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":222,"org.easymock.tests.MockingTest.testPartialClassMocking":183,"org.easymock.tests.MockClassControlTest.testToString":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":378,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":143,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":273,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":407,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":14,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":43,"org.easymock.tests2.UsageTest.wrongArguments":277,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":219,"org.easymock.samples.ExampleTest.answerVsDelegate":58,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":315,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":103,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":403,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":268,"org.easymock.tests2.CaptureTest.testPrimitive":93,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":162,"org.easymock.tests.UsageTest.moreThanOneArgument":192,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":39,"org.easymock.tests.UsageTest.argumentsOrdered":285,"org.easymock.tests.UsageVarargTest.varargIntAccepted":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":46,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":18,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":368,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":50,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":255,"org.easymock.tests2.DependencyTest.testClassMocking":364,"org.easymock.tests2.AnswerTest.answer":133,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":86,"org.easymock.tests2.CaptureTest.testAnd":90,"org.easymock.tests2.UsageTest.strictResetToDefault":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":107,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":38,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":263,"org.easymock.tests2.DelegateToTest.testDelegate":126,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":158,"org.easymock.tests.LimitationsTest.mockFinalMethod":406,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":198,"org.easymock.tests2.DependencyTest.testClassMockingSupport":365,"org.easymock.tests2.CaptureTest.testCapture1_2446744":324,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":84,"org.easymock.tests.UsageThrowableTest.throwError":344,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":5,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":41,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":294,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":390,"org.easymock.samples.PartialClassMockTest.testGetArea":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":47,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":144,"org.easymock.tests2.UsageTest.niceToStrict":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":379,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":412,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":88,"org.easymock.tests2.MockBuilderTest.testCreateMock":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":386,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":10,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":152,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":217,"org.easymock.tests.UsageOverloadedMethodTest.overloading":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":28,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":337,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":174,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":350,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":77,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":240,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":98,"org.easymock.tests.MockClassControlTest.testEquals":402,"org.easymock.tests2.EasyMockSupportClassTest.testAll":272,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":202,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":160,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":85,"org.easymock.tests2.CaptureTest.testCaptureAll":91,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":196,"org.easymock.tests2.UsageConstraintsTest.testMatches":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":40,"org.easymock.samples.ExampleTest.voteForRemovals":62,"org.easymock.tests.UsageVarargTest.allKinds":214,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":197,"org.easymock.samples.BasicClassMockTest.testPrintContent":247,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":348,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":334,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":226,"org.easymock.tests2.UsageConstraintsTest.greaterThan":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":189,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":327,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":397,"org.easymock.samples.ExampleTest.voteForRemoval":59,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":110,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":363,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":311,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":193,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":330,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":261,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":371,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":221,"org.easymock.tests2.CaptureTest.testCaptureFirst":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":262,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":333,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":170,"org.easymock.tests2.UsageTest.moreThanOneArgument":117,"org.easymock.tests2.CaptureTest.testCapture2_2446744":325,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":329,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":309,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":213,"org.easymock.tests.GenericTest.testBridgedEquals":243,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":355,"org.easymock.tests.UsageExpectAndReturnTest.longType":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":194,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":259,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":161,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":37,"org.easymock.tests.UsageCallCountTest.tooManyCalls":356,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":171,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":148,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":347,"org.easymock.tests.MockingTest.testNiceClassMocking":394,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":129,"org.easymock.tests.MockingTest.testClassMocking":392,"org.easymock.tests2.UsageConstraintsTest.testContains":27,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":231,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":114,"org.easymock.tests2.UsageConstraintsTest.testFind":23,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":204,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":70,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":357,"org.easymock.tests.UsageExpectAndReturnTest.object":173,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":15,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":209,"org.easymock.tests.UsageTest.exactCallCountByLastCall":342,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":42,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":179,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":205,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":318,"org.easymock.tests.MockClassControlTest.testHashCode":401,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":0,"org.easymock.tests2.EasyMockSupportTest.testVerify":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":381,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":361,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":83,"org.easymock.tests.UsageVarargTest.varargCharAccepted":208,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":137,"org.easymock.tests2.UsageTest.openCallCountByLastCall":331,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":410,"org.easymock.tests.DefaultClassInstantiatorTest.object":54,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":270,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":281,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":382,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":345,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":400,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":180,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":275,"org.easymock.tests2.UsageTest.resumeIfFailure":121,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":314,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":224,"org.easymock.tests2.StubTest.stubWithReturnValue":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":172,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":82,"org.easymock.tests2.SerializationTest.testAllMockedMethod":142,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":296,"org.easymock.samples.SupportTest.voteForRemovals":250,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":242,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":155,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":276,"org.easymock.tests.UsageExpectAndThrowTest.object":153,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":80,"org.easymock.tests2.DelegateToTest.testWrongClass":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":51,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":52,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.UsageStrictMockTest.range":288,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":154,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":251,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":218,"org.easymock.tests2.CaptureTest.testCaptureNone":97,"org.easymock.tests.UsageUnorderedTest.message":286,"org.easymock.tests.UsageVerifyTest.twoReturns":229,"org.easymock.tests.UsageVarargTest.varargByteAccepted":212,"org.easymock.tests2.ThreadingTest.testThreadSafe":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":384,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":235,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":246,"org.easymock.tests2.CaptureTest.testCapture_2617107":92,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":353,"org.easymock.tests2.UsageConstraintsTest.any":75,"org.easymock.tests2.StubTest.stub":127,"org.easymock.tests.UsageExpectAndThrowTest.longType":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":223,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":359,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":335,"org.easymock.tests2.SerializationTest.testClass":140,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":253,"org.easymock.tests.LimitationsTest.mockNativeMethod":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":182,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":7,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":139,"org.easymock.tests2.NameTest.nameForMocksControl":68,"org.easymock.tests2.MockedExceptionTest.testMockedException":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":374,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":341,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":185,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":147,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":252,"org.easymock.tests.MockingTest.testNicePartialClassMocking":184,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":105,"org.easymock.tests2.CaptureTest.testCaptureLast":96,"org.easymock.tests2.CompareToTest.testCompareEqual":321,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":132,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":73,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":81,"org.easymock.tests.MockingTest.testTwoMocks":393,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":301,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":151,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":278,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":9,"org.easymock.tests.UsageStrictMockTest.differentMethods":237,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":1,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":395,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":328,"org.easymock.tests2.MockBuilderTest.testCreateMockString":310,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":362,"org.easymock.tests.UsageExpectAndThrowTest.floatType":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":375,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":134,"org.easymock.tests.UsageVerifyTest.twoThrows":228,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":274,"org.easymock.samples.ExampleTest.voteAgainstRemoval":60,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":108,"org.easymock.tests.LimitationsTest.privateConstructor":405,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":300,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":349,"org.easymock.tests2.UsageTest.defaultResetToNice":120,"org.easymock.samples.ExampleTest.voteAgainstRemovals":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":178,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":6,"org.easymock.tests.UsageVarargTest.differentLength":351,"org.easymock.tests2.CallbackTest.callback":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":297,"org.easymock.tests.UsageTest.openCallCountByLastCall":340,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":352,"org.easymock.tests.UsageCallCountTest.tooFewCalls":233,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":220,"org.easymock.tests.UsageThrowableTest.throwCheckedException":346,"org.easymock.tests.MockingTest.testStrictClassMocking":391,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":343,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":130,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":258,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":17,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":111,"org.easymock.tests2.NameTest.nameForNiceMock":67,"org.easymock.tests2.DependencyTest.testInterfaceMocking":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":16,"org.easymock.samples.ExampleTest.addDocument":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.DelegateToTest.testStubDelegate":125,"org.easymock.tests2.AnswerTest.stubAnswer":135,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":53,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":307,"org.easymock.tests.UsageVarargTest.varargLongAccepted":211,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":238,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":181,"org.easymock.tests.UsageExpectAndReturnTest.floatType":165,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":64,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":31,"org.easymock.tests.UsageThrowableTest.noUpperLimit":199,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":366,"org.easymock.tests2.SerializationTest.test":141,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":94,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":241,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":164,"org.easymock.tests2.UsageConstraintsTest.testSame":25,"org.easymock.samples.SupportTest.addDocument":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":376,"org.easymock.tests.GenericTest.testPackageScope":201,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":4,"org.easymock.tests2.NameTest.nameForMock":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":175,"org.easymock.tests2.UsageStrictMockTest.differentMethods":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":293,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":319,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":167,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":157,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":191,"org.easymock.tests2.MockedExceptionTest.testRealException":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":295,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":44,"org.easymock.tests2.NameTest.nameForStrictMock":66,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":306,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":411,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":104,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":369,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":408,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":396,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":79,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":304,"org.easymock.tests2.UsageStrictMockTest.range":280,"org.easymock.tests2.UsageConstraintsTest.lessThan":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":2,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":260,"org.easymock.tests2.CaptureTest.testCaptureRightOne":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":380,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":326,"org.easymock.tests.UsageTest.wrongArguments":283,"org.easymock.tests2.MockBuilderTest.testWithConstructor":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":377,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":168,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":176,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":56,"org.easymock.tests.UsageVarargTest.varargShortAccepted":210,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":354,"org.easymock.tests2.UsageConstraintsTest.cmpTo":76,"org.easymock.tests2.CompareToTest.testLessThan":320,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":332,"org.easymock.tests2.CaptureTest.testCaptureFromStub":35,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":305,"org.easymock.tests.UsageTest.unexpectedCallWithArray":282,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":287,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":234,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":292,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":177,"org.easymock.tests2.UsageConstraintsTest.constraints":71,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":358,"org.easymock.samples.ExampleTest.addAndChangeDocument":63,"org.easymock.tests.UsageStrictMockTest.testVerify":239,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":248,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":195,"org.easymock.tests2.CompareToTest.testGreateThan":302,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":48,"org.easymock.tests.LimitationsTest.abstractClass":404,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":169,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":49,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":409,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":265}}]
