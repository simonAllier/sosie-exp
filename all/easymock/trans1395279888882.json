[{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[0,1,2,3],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this","key":"key"}},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[51,52,53,54],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[55],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[138,138,139,139,140,141,142,143,137,144],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"shouldFillInStackTrace"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[145,110,146],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[4,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:353","sourceCode":"return this","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[161,162,163,164],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[165],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[166,167],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[141,168,169],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"position":"org.easymock.internal.MockBuilder:80","failures":[56,170,171,172,173,141,174,175,127,176,128,177,129,130,178,131,179,180],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[181,182,183,170,184],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[185,186,187,188,189,190,191,192,193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[181,184],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[181,182,183,170,184],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[194,195,196,197,198,199,200,201,161,163,202,203,204,205,206,207,208],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[141,209,210,211,212,213,214,215,216,143,217,218,137,144],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[181],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[113,219,220],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[57,185,58,59,221,60,222,223,61,224,225,226,227,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,182,183,184,228,64,65,66,67,68,69,229,230,70,71,231,72,73,74,232,75,76,77,78,79,80,82,83,233,28,234,235,236,237,238,239,240,29,241,242,243,30,31,85,244,32,33,245,246,247,248,34,197,249,35,200,250,36,37,38,39,40,41,186,251,42,252,86,253,87,88,254,255,256,257,258,259,260,261,262,43,92,93,94,95,263,0,1,96,97,98,99,100,264,265,266,267,268,269,270,271,272,162,101,102,103,104,105,106,107,108,109,110,147,148,149,150,151,152,153,154,155,156,157,158,159,160,273,274,275,114,276,115,187,44,45,46,47,188,190,277,191,168,169,278,279,2,280,281,282,283,284,3,285,286,287,288,119,122,123,289,126,290,291,48,292,205,293,294,295,49,207,296,297,298,132,299,133,134,300,135,136,301,50,302,303,304,305,306,307,308,309,310,311,312,313,146,314,164,315,316,317,318,319,320,321,322,323,324,325,326,327,192,193],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[293],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:244","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[328,147,149,150,151,152,153,154,156,329,157,158,160],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[55],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":306,"org.easymock.tests2.UsageTest.argumentsOrdered":208,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":39,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":294,"org.easymock.tests2.StubTest.stubWithReturnValue":50,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":216,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":324,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":227,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":71,"org.easymock.tests2.SerializationTest.testAllMockedMethod":169,"org.easymock.tests2.DelegateToTest.testReturnException":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":37,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":218,"org.easymock.tests.MockingTest.testPartialClassMocking":89,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":203,"org.easymock.samples.SupportTest.voteForRemovals":61,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":181,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":63,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":219,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":8,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":116,"org.easymock.tests.UsageExpectAndThrowTest.object":18,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":321,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":136,"org.easymock.tests2.DelegateToTest.testWrongClass":290,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":210,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":101,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":102,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":312,"org.easymock.tests2.UsageTest.wrongArguments":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":85,"org.easymock.tests.UsageStrictMockTest.range":87,"org.easymock.samples.ConstructorCalledMockTest.testTax":138,"org.easymock.samples.ExampleTest.answerVsDelegate":185,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":119,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":172,"org.easymock.tests2.UsageConstraintsTest.testNull":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":107,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":238,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":3,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":129,"org.easymock.tests2.CaptureTest.testPrimitive":150,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":245,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":200,"org.easymock.tests.UsageTest.moreThanOneArgument":197,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":27,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":106,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":94,"org.easymock.tests2.CaptureTest.testCaptureNone":155,"org.easymock.tests.UsageUnorderedTest.message":228,"org.easymock.tests.UsageVerifyTest.twoReturns":248,"org.easymock.tests.UsageVarargTest.varargByteAccepted":271,"org.easymock.tests2.ThreadingTest.testThreadSafe":273,"org.easymock.tests.UsageTest.argumentsOrdered":201,"org.easymock.tests.UsageVarargTest.varargIntAccepted":266,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":258,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":96,"org.easymock.tests2.CaptureTest.testCapture_2617107":149,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":214,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":33,"org.easymock.tests2.UsageConstraintsTest.any":313,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":177,"org.easymock.tests2.StubTest.stub":301,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":100,"org.easymock.tests.UsageExpectAndThrowTest.longType":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":38,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":299,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":302,"org.easymock.tests2.SerializationTest.testClass":141,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests.LimitationsTest.mockNativeMethod":103,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":79,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":170,"org.easymock.tests2.AnswerTest.answer":188,"org.easymock.tests2.CaptureTest.testAnd":147,"org.easymock.tests2.UsageTest.strictResetToDefault":292,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":300,"org.easymock.tests2.MockedExceptionTest.testMockedException":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":281,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":82,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":35,"org.easymock.tests2.DelegateToTest.testDelegate":291,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":91,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":12,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":130,"org.easymock.tests.MockingTest.testNicePartialClassMocking":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":23,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":209,"org.easymock.tests2.CompareToTest.testCompareEqual":145,"org.easymock.tests2.CaptureTest.testCaptureLast":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":40,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":54,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":311,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":125,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":322,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":53,"org.easymock.tests2.CaptureTest.testCapture1_2446744":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":16,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":207,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":326,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":5,"org.easymock.tests.UsageThrowableTest.throwError":239,"org.easymock.tests.UsageStrictMockTest.differentMethods":88,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":275,"org.easymock.tests2.MockBuilderTest.testCreateMockString":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":263,"org.easymock.tests.UsageExpectAndThrowTest.floatType":10,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":317,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":190,"org.easymock.tests.UsageVerifyTest.twoThrows":247,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":117,"org.easymock.samples.PartialClassMockTest.testGetArea":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":97,"org.easymock.samples.ExampleTest.voteAgainstRemoval":59,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":62,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":112,"org.easymock.tests2.UsageTest.niceToStrict":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":9,"org.easymock.tests2.ThreadingTest.testChangeDefault":6,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":166,"org.easymock.tests2.UsageConstraintsTest.testNotNull":325,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":31,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":44,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":167,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":128,"org.easymock.tests2.MockBuilderTest.testCreateMock":178,"org.easymock.samples.ExampleTest.voteAgainstRemovals":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":75,"org.easymock.tests2.CallbackTest.callback":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":140,"org.easymock.tests.UsageTest.openCallCountByLastCall":249,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":17,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":163,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":282,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":32,"org.easymock.tests.UsageCallCountTest.tooFewCalls":256,"org.easymock.tests.UsageOverloadedMethodTest.overloading":262,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":315,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":42,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":72,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":122,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":164,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":156,"org.easymock.tests.UsageThrowableTest.throwCheckedException":242,"org.easymock.tests.MockClassControlTest.testEquals":237,"org.easymock.tests2.EasyMockSupportClassTest.testAll":115,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":183,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":202,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":195,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":25,"org.easymock.tests2.CaptureTest.testCaptureAll":148,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":28,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":121,"org.easymock.tests2.UsageConstraintsTest.testMatches":316,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":123,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":95,"org.easymock.samples.ExampleTest.voteForRemovals":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":213,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":55,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":276,"org.easymock.tests.UsageVarargTest.allKinds":162,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":246,"org.easymock.tests2.DependencyTest.testInterfaceMocking":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":212,"org.easymock.samples.BasicClassMockTest.testPrintContent":226,"org.easymock.samples.ExampleTest.addDocument":221,"org.easymock.tests2.DelegateToTest.testStubDelegate":126,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":30,"org.easymock.tests2.AnswerTest.stubAnswer":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":41,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":86,"org.easymock.tests2.UsageConstraintsTest.greaterThan":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":215,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":142,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":81,"org.easymock.tests.UsageVarargTest.varargLongAccepted":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":113,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":254,"org.easymock.samples.ExampleTest.voteForRemoval":58,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":78,"org.easymock.tests.UsageExpectAndReturnTest.floatType":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":173,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":139,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":319,"org.easymock.tests.UsageThrowableTest.noUpperLimit":240,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":52,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":304,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":236,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":48,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":152,"org.easymock.tests2.SerializationTest.test":168,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":143,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":2,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":29,"org.easymock.tests2.UsageConstraintsTest.testSame":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":65,"org.easymock.samples.SupportTest.addDocument":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":36,"org.easymock.tests2.CaptureTest.testCaptureFirst":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":280,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":297,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":230,"org.easymock.tests.GenericTest.testPackageScope":182,"org.easymock.tests2.UsageTest.moreThanOneArgument":205,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":114,"org.easymock.tests2.CaptureTest.testCapture2_2446744":159,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":131,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":272,"org.easymock.tests.GenericTest.testBridgedEquals":184,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":259,"org.easymock.tests.UsageExpectAndReturnTest.longType":67,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":73,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":26,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":179,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":323,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":84,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":24,"org.easymock.tests2.UsageStrictMockTest.differentMethods":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":92,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":68,"org.easymock.tests.UsageCallCountTest.tooManyCalls":260,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":22,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":0,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":83,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":255,"org.easymock.tests2.MockedExceptionTest.testRealException":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":70,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":13,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":244,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":243,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":120,"org.easymock.tests2.UsageConstraintsTest.testContains":314,"org.easymock.tests2.NameTest.nameForStrictMock":220,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":175,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":46,"org.easymock.tests2.UsageConstraintsTest.testFind":307,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":43,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":192,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":108,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":193,"org.easymock.tests.UsageExpectAndReturnTest.object":231,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":320,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":110,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":127,"org.easymock.tests2.UsageStrictMockTest.range":133,"org.easymock.tests2.UsageConstraintsTest.lessThan":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":284,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":211,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":1,"org.easymock.tests.UsageTest.exactCallCountByLastCall":250,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":7,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":233,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":279,"org.easymock.tests2.CaptureTest.testCaptureRightOne":157,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":234,"org.easymock.tests2.UsageConstraintsTest.testOr":310,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":196,"org.easymock.tests.UsageRangeTest.combination":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":144,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":105,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":251,"org.easymock.tests.UsageTest.wrongArguments":199,"org.easymock.tests2.EasyMockSupportTest.testVerify":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":69,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":74,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":235,"org.easymock.tests.UsageVarargTest.varargShortAccepted":269,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":186,"org.easymock.tests2.UsageConstraintsTest.cmpTo":146,"org.easymock.tests.UsageVarargTest.varargCharAccepted":267,"org.easymock.tests2.CaptureTest.testCaptureMultiple":328,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":189,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests2.UsageTest.openCallCountByLastCall":295,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":49,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":286,"org.easymock.tests2.CaptureTest.testCaptureFromStub":158,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":176,"org.easymock.tests.UsageTest.unexpectedCallWithArray":198,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":165,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":241,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":161,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":232,"org.easymock.tests2.CaptureTest.testCapture":329,"org.easymock.tests2.UsageConstraintsTest.constraints":305,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":253,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":111,"org.easymock.samples.ExampleTest.addAndChangeDocument":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":14,"org.easymock.tests.CapturesMatcherTest.test":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":77,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":224,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":118,"org.easymock.tests2.UsageTest.resumeIfFailure":296,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":229,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":283,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":265}}]
