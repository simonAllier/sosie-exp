[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[27,28,29,30,31,32,33,34,4,5,6,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,16,17,18,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[100,101,15,102,103,104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[27,105,28,29,106,30,107,108,108,109,109,110,31,111,112,32,113,114,33,34,115,116,117,118,4,119,5,6,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,35,36,37,38,39,40,41,170,43,45,171,172,173,46,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,48,189,49,50,51,190,191,192,7,8,193,194,195,196,197,9,10,198,199,200,201,202,203,204,52,53,54,55,56,57,58,0,1,2,59,60,61,62,11,12,13,14,205,63,206,207,208,209,210,211,212,213,214,215,216,64,65,66,67,217,218,219,15,16,220,17,18,221,222,68,69,70,71,72,73,223,224,74,75,225,76,77,78,226,79,80,81,82,83,227,228,229,230,231,232,84,85,86,87,19,20,21,233,234,88,89,90,235,236,91,237,238,239,240,241,242,243,244,245,246,247,248,249,250,22,104,23,251,252,24,25,253,254,255,256,257,258,259,260,261,262,263,92,93,94,95,96,264,97,265,266,267,268,98,99,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[304,305,306,307,308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"key"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[309,310,311],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[173],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[134],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[100,101,15,102,103,104],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[27,105,28,29,106,30,107,108,109,110,31,111,112,32,113,114,33,34,115,116,118,4,6,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,165,166,167,168,169,35,37,38,39,40,41,170,43,45,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,48,189,49,50,192,7,193,194,197,198,200,201,202,203,204,52,53,54,55,56,57,58,0,1,2,59,60,61,62,11,12,13,14,205,63,207,208,209,210,211,212,213,214,215,216,64,65,66,67,217,219,16,18,221,222,68,69,70,71,72,73,223,224,74,75,225,76,77,78,226,79,80,81,82,83,227,228,229,230,231,232,84,85,86,87,19,20,21,233,312,88,89,90,235,236,91,237,238,239,240,241,242,249,22,254,255,256,257,258,259,260,261,262,263,92,93,94,95,96,264,97,265,268,98,99,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,296,297,303],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[100,101,15,102,103,104],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[313],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[134,135],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[314,315,188,189,200],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","name":"name","paramTypes":"paramTypes","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":129,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":250,"org.easymock.tests2.UsageTest.argumentsOrdered":10,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":230,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":194,"org.easymock.tests2.StubTest.stubWithReturnValue":210,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":75,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":111,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":148,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":228,"org.easymock.tests.MockingTest.testPartialClassMocking":88,"org.easymock.samples.SupportTest.voteForRemovals":32,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":101,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":286,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":274,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":60,"org.easymock.tests.UsageExpectAndThrowTest.object":284,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":26,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":34,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":146,"org.easymock.tests2.DelegateToTest.testWrongClass":206,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":98,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":99,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":135,"org.easymock.tests2.UsageTest.wrongArguments":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":97,"org.easymock.tests.UsageStrictMockTest.range":17,"org.easymock.samples.ConstructorCalledMockTest.testTax":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":213,"org.easymock.samples.ExampleTest.answerVsDelegate":105,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":182,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":52,"org.easymock.tests2.UsageConstraintsTest.testNull":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":285,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":38,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":49,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":184,"org.easymock.tests2.CaptureTest.testPrimitive":155,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":293,"org.easymock.tests.UsageTest.moreThanOneArgument":22,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":212,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":66,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":102,"org.easymock.tests2.CaptureTest.testCaptureNone":160,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":306,"org.easymock.tests.UsageUnorderedTest.message":294,"org.easymock.tests.UsageVerifyTest.twoReturns":21,"org.easymock.tests.UsageVarargTest.varargByteAccepted":261,"org.easymock.tests2.ThreadingTest.testThreadSafe":171,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.UsageVarargTest.varargIntAccepted":256,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":242,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":92,"org.easymock.tests2.CaptureTest.testCapture_2617107":154,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":188,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":312,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":267,"org.easymock.tests2.UsageConstraintsTest.any":136,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":189,"org.easymock.tests2.StubTest.stub":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":96,"org.easymock.tests.UsageExpectAndThrowTest.longType":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":229,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":310,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":246,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":119,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":204,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":91,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":83,"org.easymock.tests2.AnswerTest.answer":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":124,"org.easymock.tests2.CaptureTest.testAnd":152,"org.easymock.tests2.UsageTest.strictResetToDefault":192,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":120,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":170,"org.easymock.tests2.NameTest.nameForMocksControl":14,"org.easymock.tests2.MockedExceptionTest.testMockedException":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":65,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":179,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":252,"org.easymock.tests2.DelegateToTest.testDelegate":207,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":278,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":90,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":35,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":50,"org.easymock.tests.MockingTest.testNicePartialClassMocking":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":289,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":40,"org.easymock.tests2.CaptureTest.testCaptureLast":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":231,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":58,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":273,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":147,"org.easymock.tests2.CaptureTest.testCapture1_2446744":156,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":68,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":287,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":122,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":150,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":308,"org.easymock.tests.UsageThrowableTest.throwError":295,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":245,"org.easymock.tests.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":307,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":173,"org.easymock.tests2.MockBuilderTest.testCreateMockString":190,"org.easymock.tests.UsageExpectAndThrowTest.floatType":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":217,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":142,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":167,"org.easymock.tests.UsageVerifyTest.twoThrows":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":61,"org.easymock.samples.PartialClassMockTest.testGetArea":31,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":93,"org.easymock.samples.ExampleTest.voteAgainstRemoval":29,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":275,"org.easymock.tests2.UsageTest.niceToStrict":193,"org.easymock.tests2.ThreadingTest.testChangeDefault":305,"org.easymock.tests2.UsageConstraintsTest.testNotNull":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":302,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":200,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":48,"org.easymock.tests2.UsageTest.defaultResetToNice":197,"org.easymock.samples.ExampleTest.voteAgainstRemovals":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":79,"org.easymock.tests2.CallbackTest.callback":208,"org.easymock.tests.UsageTest.openCallCountByLastCall":251,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":283,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":100,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":180,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":126,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":211,"org.easymock.tests.UsageCallCountTest.tooFewCalls":240,"org.easymock.tests.UsageOverloadedMethodTest.overloading":235,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":76,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":55,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":139,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":161,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":214,"org.easymock.tests.UsageThrowableTest.throwCheckedException":299,"org.easymock.tests2.EasyMockSupportClassTest.testAll":59,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":216,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":291,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":123,"org.easymock.tests2.CaptureTest.testCaptureAll":153,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":234,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":57,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":54,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":247,"org.easymock.tests2.UsageConstraintsTest.testMatches":141,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":56,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":67,"org.easymock.samples.ExampleTest.voteForRemovals":30,"org.easymock.tests2.NameTest.nameForNiceMock":13,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":174,"org.easymock.tests.UsageVarargTest.allKinds":263,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":19,"org.easymock.tests2.DependencyTest.testInterfaceMocking":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":272,"org.easymock.samples.BasicClassMockTest.testPrintContent":114,"org.easymock.samples.ExampleTest.addDocument":106,"org.easymock.tests2.DelegateToTest.testStubDelegate":63,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":301,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":117,"org.easymock.tests2.AnswerTest.stubAnswer":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":232,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":16,"org.easymock.tests2.UsageConstraintsTest.greaterThan":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":85,"org.easymock.tests.UsageVarargTest.varargLongAccepted":260,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":44,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":221,"org.easymock.samples.ExampleTest.voteForRemoval":28,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":82,"org.easymock.tests.UsageExpectAndReturnTest.floatType":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":314,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":45,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":109,"org.easymock.tests.UsageThrowableTest.noUpperLimit":296,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":144,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":264,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":127,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":191,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":177,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":297,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":69,"org.easymock.tests2.UsageConstraintsTest.testSame":132,"org.easymock.samples.SupportTest.addDocument":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":227,"org.easymock.tests2.CaptureTest.testCaptureFirst":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":178,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests.GenericTest.testPackageScope":215,"org.easymock.tests2.UsageTest.moreThanOneArgument":7,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":46,"org.easymock.tests2.CaptureTest.testCapture2_2446744":164,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":51,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":262,"org.easymock.tests2.NameTest.nameForMock":11,"org.easymock.tests.UsageExpectAndReturnTest.longType":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":269,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":292,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":77,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":290,"org.easymock.tests2.UsageStrictMockTest.differentMethods":6,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":64,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":72,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":311,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":87,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":239,"org.easymock.tests2.MockedExceptionTest.testRealException":203,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":279,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":265,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":248,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":53,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":238,"org.easymock.tests2.NameTest.nameForStrictMock":12,"org.easymock.tests2.UsageConstraintsTest.testContains":138,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":202,"org.easymock.tests2.UsageConstraintsTest.testFind":130,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":236,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":115,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":39,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":218,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":116,"org.easymock.tests.UsageExpectAndReturnTest.object":225,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":41,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":47,"org.easymock.tests2.UsageStrictMockTest.range":5,"org.easymock.tests2.UsageConstraintsTest.lessThan":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":183,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":258,"org.easymock.tests.UsageTest.exactCallCountByLastCall":253,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":233,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":176,"org.easymock.tests2.CaptureTest.testCaptureRightOne":162,"org.easymock.tests2.UsageConstraintsTest.testOr":133,"org.easymock.tests.UsageRangeTest.combination":84,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":36,"org.easymock.tests.UsageTest.wrongArguments":23,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":73,"org.easymock.tests2.EasyMockSupportTest.testVerify":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":78,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":309,"org.easymock.tests.UsageVarargTest.varargShortAccepted":259,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":121,"org.easymock.tests2.UsageConstraintsTest.cmpTo":137,"org.easymock.tests.UsageVarargTest.varargCharAccepted":257,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":118,"org.easymock.tests2.UsageTest.openCallCountByLastCall":195,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":196,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":186,"org.easymock.tests2.CaptureTest.testCaptureFromStub":163,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":243,"org.easymock.tests.UsageTest.unexpectedCallWithArray":104,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":281,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":298,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":226,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":220,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":42,"org.easymock.tests2.UsageConstraintsTest.constraints":128,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":280,"org.easymock.samples.ExampleTest.addAndChangeDocument":107,"org.easymock.tests.UsageStrictMockTest.testVerify":222,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":81,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":110,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":270,"org.easymock.tests2.UsageTest.resumeIfFailure":198,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":94,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":223,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":95,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":181}}]
