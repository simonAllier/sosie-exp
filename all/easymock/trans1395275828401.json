[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[59,60,61,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[65,66],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","shouldBeUsedInOneThread":"threadSafe","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[81,82],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[0,1,1,2,2,3,4,65,5,6,7,66,8,83,84,85,86,87,88,89,90,91,92,9,93,94,95,96,97,98,10,11,99,100,12,13,14,15,101,102,103,16,104,17,18,19,20,21,22,23,105,106,24,25,26,27,107,108,109,110,111,28,112,113,29,114,115,116,117,118,119,120,121,122,30,123,124,125,126,127,31,128,129,130,131,32,33,34,39,40,41,42,43,44,46,132,48,49,133,134,50,51,52,135,53,136,54,55,137,57,138,139,140,141,58,142,143],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"classMockingDisabled"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[73,78,144],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[67,145,146,147,148,68,69,70,149,71,72,73,74,150,151,75,152,76,153,154,155,156,157,18,25,27,158,159,160,161,162,48,54,55,57,163,77,164,165,78,79,166,167,168,169,80,170,171,172],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[173,174,71,75,175,176],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[177],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[67,178,179,180,181,182,183,184,185,75,186,187,188,189,190,191,192,193,194,23,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,171,212,213,214,215,216,217,218,219,220,221,222,223,224,225,172,226,227,228,229,230,231,232,233,234,235,236,237,238],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[239,240,241,242,243],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[244,245,246,158,247,248,249,250,237,238],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.Range:40","failures":[0,251,244,252,253,254,255,256,257,258,259,260,1,2,3,4,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,65,5,6,7,66,288,67,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,145,309,310,311,178,179,312,313,314,315,316,317,8,83,84,85,86,87,88,89,90,91,147,318,319,320,321,322,323,324,325,326,327,328,329,92,9,93,94,95,96,97,98,330,331,332,333,334,335,336,337,180,181,182,183,184,338,69,70,10,339,340,341,342,11,343,344,149,345,71,72,346,347,73,74,150,348,349,350,351,185,352,245,353,354,355,356,357,358,151,359,75,186,152,76,153,360,361,99,100,12,13,14,362,15,363,364,101,365,366,367,368,369,370,371,372,373,374,375,376,377,246,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,154,155,156,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,81,409,410,411,412,413,414,415,416,417,82,187,188,189,190,191,418,419,420,421,422,423,424,425,426,157,427,428,429,430,192,193,194,102,103,16,104,431,432,433,17,18,434,19,20,21,22,62,23,105,106,24,25,26,27,107,108,195,196,197,198,199,200,201,202,203,204,205,206,207,208,435,436,437,438,439,109,110,111,28,112,113,29,114,115,116,117,118,119,120,121,122,30,123,124,125,126,127,31,128,129,158,130,131,32,440,247,441,248,249,442,250,33,443,34,444,159,445,446,447,160,161,448,449,162,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,39,40,41,42,465,466,43,44,467,468,469,470,471,472,473,474,475,476,477,478,46,132,48,49,133,134,50,51,52,135,53,479,136,54,55,137,57,138,139,140,480,141,481,482,163,483,484,77,164,165,485,486,487,78,79,166,167,168,488,209,169,80,170,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,210,211,171,212,144,213,214,215,216,217,218,219,220,221,222,223,224,225,172,226,227,228,229,230,231,232,233,234,235,236,237,512,238,58,142,143],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[379],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[379,386,409],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[173,174,71,75,175,176],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[173,174,71,75,175,176],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[0,251,244,252,253,255,257,259,1,1,2,2,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,5,7,67,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,145,309,310,311,178,179,312,313,314,315,316,317,8,327,328,329,330,331,332,333,334,335,336,337,180,181,182,183,184,338,69,70,149,345,346,347,150,348,349,350,351,185,352,245,354,355,357,186,76,153,13,14,15,380,386,390,394,395,396,397,398,399,400,401,187,188,189,190,191,418,419,420,193,194,16,432,17,18,434,19,20,21,23,25,26,27,195,196,198,199,202,203,204,205,206,207,208,435,436,437,438,439,28,29,30,31,158,130,131,32,440,247,441,248,249,442,250,33,443,444,159,445,446,447,160,161,448,449,162,450,451,458,39,40,41,42,466,43,44,473,474,475,476,477,478,48,50,52,53,55,163,483,484,164,485,486,487,166,167,209,80,170,496,497,498,499,505,210,211,171,212,213,214,215,216,217,218,220,221,222,223,224,225,172,226,227,228,229,230,232,233,234,235,237,238,58],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[67,68,69,70,71,72,73,74,358,75,76,77,78,79,80],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[513,195,196,197,198,199,200,201,202,204,205,206,207,208],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[84,318],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"position":"org.easymock.internal.LastControl:61","failures":[181,182,183,192,195,196,197,202,203,205,208,171,212,214,216,217,233],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[67,145,146,147,148,68,69,70,149,71,72,73,74,150,151,75,152,76,153,154,155,156,157,18,25,27,158,159,160,161,162,48,54,55,57,163,77,164,165,78,79,166,167,168,169,80,170,171,172],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[411,432],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[371,441],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[0,1,1,2,2,3,4,65,5,6,7,66,8,84,85,86,87,88,89,91,92,93,94,95,96,97,98,10,11,99,100,12,13,14,15,101,407,102,103,16,104,17,18,19,20,21,22,23,105,106,24,25,26,27,107,108,109,110,111,28,112,113,29,114,115,116,117,118,119,120,121,122,30,123,124,125,126,127,31,128,129,130,131,32,33,34,514,38,39,40,41,42,43,44,46,48,49,134,50,51,52,53,136,54,55,57,138,141,58,142],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[456,503],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[67,68,69,70,71,72,73,74,358,75,76,77,78,79,80],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":212,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":149,"org.easymock.tests2.UsageTest.argumentsOrdered":79,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":450,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":375,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":165,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":261,"org.easymock.tests2.DelegateToTest.testReturnException":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":349,"org.easymock.tests.MockingTest.testPartialClassMocking":13,"org.easymock.tests.MockClassControlTest.testToString":93,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":468,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":117,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":262,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":180,"org.easymock.tests2.UsageTest.wrongArguments":77,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":464,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":320,"org.easymock.samples.ExampleTest.answerVsDelegate":244,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":11,"org.easymock.tests2.UsageConstraintsTest.testNull":214,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":364,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":19,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":162,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":98,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":514,"org.easymock.tests2.CaptureTest.testPrimitive":198,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":281,"org.easymock.tests.UsageTest.moreThanOneArgument":345,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":434,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":399,"org.easymock.tests.UsageTest.argumentsOrdered":74,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":313,"org.easymock.tests.UsageVarargTest.varargIntAccepted":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":187,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":510,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":140,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":191,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":458,"org.easymock.tests.ReplayStateInvalidUsageTest.times":415,"org.easymock.tests2.DependencyTest.testClassMocking":494,"org.easymock.tests2.AnswerTest.answer":247,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":381,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":493,"org.easymock.tests2.CaptureTest.testAnd":195,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":340,"org.easymock.tests2.UsageTest.strictResetToDefault":483,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":447,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":310,"org.easymock.tests2.DelegateToTest.testDelegate":478,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":277,"org.easymock.tests.LimitationsTest.mockFinalMethod":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":326,"org.easymock.tests2.DependencyTest.testClassMockingSupport":495,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":431,"org.easymock.tests2.CaptureTest.testCapture1_2446744":199,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":491,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":409,"org.easymock.tests.UsageThrowableTest.throwError":330,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":342,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":511,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":129,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":410,"org.easymock.tests.MockingTest.testInterfaceMocking":362,"org.easymock.tests2.CompareToTest.testLessOrEqual":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":188,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":283,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":407,"org.easymock.tests2.UsageTest.niceToStrict":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":263,"org.easymock.tests2.ThreadingTest.testChangeDefault":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":50,"org.easymock.tests2.MockBuilderTest.testCreateMock":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":125,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":461,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":175,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":271,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":160,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":420,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":388,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":318,"org.easymock.tests.UsageOverloadedMethodTest.overloading":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":122,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":224,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":355,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":394,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":300,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":223,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":204,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":424,"org.easymock.tests.MockClassControlTest.testEquals":97,"org.easymock.tests2.EasyMockSupportClassTest.testAll":28,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":6,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":279,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":35,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":492,"org.easymock.tests2.CaptureTest.testCaptureAll":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":324,"org.easymock.tests.MockNameTest.defaultName":288,"org.easymock.tests2.UsageConstraintsTest.testMatches":225,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":408,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":400,"org.easymock.samples.ExampleTest.voteForRemovals":255,"org.easymock.tests.UsageVarargTest.allKinds":192,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":338,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":325,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":336,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":507,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":352,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":90,"org.easymock.tests2.UsageConstraintsTest.greaterThan":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":112,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":27,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":91,"org.easymock.samples.ExampleTest.voteForRemoval":252,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":436,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":107,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":343,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":480,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":22,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":163,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":8,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":445,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":348,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":473,"org.easymock.tests2.CaptureTest.testCaptureFirst":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":446,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":167,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":296,"org.easymock.tests2.UsageTest.moreThanOneArgument":484,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":438,"org.easymock.tests2.CaptureTest.testCapture2_2446744":207,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":382,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":430,"org.easymock.tests.GenericTest.testBridgedEquals":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":155,"org.easymock.tests.UsageExpectAndReturnTest.longType":292,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":444,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":322,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":280,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":231,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":312,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":397,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":328,"org.easymock.tests.UsageCallCountTest.tooManyCalls":156,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":335,"org.easymock.tests.MockingTest.testNiceClassMocking":101,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":40,"org.easymock.tests.MockingTest.testClassMocking":100,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":389,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":47,"org.easymock.tests2.UsageConstraintsTest.testContains":222,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":32,"org.easymock.tests2.UsageConstraintsTest.testFind":213,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":396,"org.easymock.tests.MockTypeTest.fromEasyMockClass":341,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":151,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":238,"org.easymock.tests.UsageExpectAndReturnTest.object":299,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":449,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":426,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":405,"org.easymock.tests.UsageTest.exactCallCountByLastCall":150,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":285,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":314,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":142,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":421,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":305,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":501,"org.easymock.tests.MockClassControlTest.testHashCode":96,"org.easymock.tests2.EasyMockSupportTest.testVerify":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":120,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":315,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":419,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":490,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":148,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":236,"org.easymock.tests.UsageVarargTest.varargCharAccepted":425,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":83,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":387,"org.easymock.tests2.UsageTest.openCallCountByLastCall":485,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":451,"org.easymock.tests.DefaultClassInstantiatorTest.object":84,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":418,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":403,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":121,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":269,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":333,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":500,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":25,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":95,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":268,"org.easymock.tests.CapturesMatcherTest.test":513,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":306,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":31,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":94,"org.easymock.tests2.UsageTest.resumeIfFailure":166,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":10,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":351,"org.easymock.tests2.StubTest.stubWithReturnValue":499,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":135,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":232,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":298,"org.easymock.tests2.SerializationTest.testAllMockedMethod":34,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":380,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":176,"org.easymock.samples.SupportTest.voteForRemovals":259,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":503,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":274,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":386,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":441,"org.easymock.tests.UsageExpectAndThrowTest.object":272,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":287,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":229,"org.easymock.tests2.DelegateToTest.testWrongClass":476,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":194,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":76,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":481,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":448,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":39,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":273,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":52,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":109,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":73,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":319,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":173,"org.easymock.tests2.CaptureTest.testCaptureNone":203,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":284,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":59,"org.easymock.tests.UsageUnorderedTest.message":67,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":146,"org.easymock.tests.UsageVerifyTest.twoReturns":70,"org.easymock.tests.UsageVarargTest.varargByteAccepted":429,"org.easymock.tests2.ThreadingTest.testThreadSafe":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":123,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":393,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":406,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":183,"org.easymock.tests2.UsageConstraintsTest.any":220,"org.easymock.tests2.StubTest.stub":498,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":414,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndThrowTest.longType":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":350,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":88,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":413,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":169,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":505,"org.easymock.tests2.SerializationTest.testClass":33,"org.easymock.tests.LimitationsTest.mockNativeMethod":16,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":308,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":455,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":37,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":489,"org.easymock.tests2.NameTest.nameForMocksControl":472,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":457,"org.easymock.tests2.MockedExceptionTest.testMockedException":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":113,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":347,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":512,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":266,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":53,"org.easymock.tests.MockingTest.testNicePartialClassMocking":14,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":21,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":453,"org.easymock.tests2.CaptureTest.testCaptureLast":202,"org.easymock.tests2.CompareToTest.testCompareEqual":241,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":432,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":44,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":217,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":230,"org.easymock.tests.MockingTest.testTwoMocks":12,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":467,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":289,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":270,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":78,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":234,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":61,"org.easymock.samples.ExampleTest.removeNonExistingDocument":256,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":460,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":411,"org.easymock.tests.UsageStrictMockTest.differentMethods":153,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":502,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":60,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":86,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":437,"org.easymock.tests2.MockBuilderTest.testCreateMockString":57,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":114,"org.easymock.tests.UsageExpectAndThrowTest.floatType":264,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":111,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":249,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":143,"org.easymock.tests.UsageVerifyTest.twoThrows":69,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":30,"org.easymock.samples.ExampleTest.voteAgainstRemoval":253,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":376,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":26,"org.easymock.tests.LimitationsTest.privateConstructor":103,"org.easymock.tests2.UsageConstraintsTest.testNotNull":233,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":130,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":337,"org.easymock.tests2.UsageTest.defaultResetToNice":487,"org.easymock.samples.ExampleTest.voteAgainstRemovals":251,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":377,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":454,"org.easymock.tests.UsageVarargTest.differentLength":157,"org.easymock.tests2.CallbackTest.callback":158,"org.easymock.tests2.UsageConstraintsTest.equals":144,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":105,"org.easymock.tests.UsageTest.openCallCountByLastCall":346,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":210,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":182,"org.easymock.tests.UsageCallCountTest.tooFewCalls":391,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":42,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":321,"org.easymock.tests.UsageThrowableTest.throwCheckedException":334,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":174,"org.easymock.tests.MockingTest.testStrictClassMocking":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":179,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":459,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":41,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":466,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":250,"org.easymock.tests.ObjectMethodsTest.testHashCode":404,"org.easymock.tests2.CompareToTest.testGreateOrEqual":242,"org.easymock.tests2.NameTest.nameForNiceMock":471,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":439,"org.easymock.tests2.DependencyTest.testInterfaceMocking":496,"org.easymock.samples.ExampleTest.addDocument":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":124,"org.easymock.tests2.DelegateToTest.testStubDelegate":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":128,"org.easymock.tests2.AnswerTest.stubAnswer":442,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":186,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":479,"org.easymock.tests.UsageVarargTest.varargLongAccepted":428,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":374,"org.easymock.tests.UsageExpectAndReturnTest.floatType":291,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":307,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":58,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":509,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":227,"org.easymock.tests.UsageThrowableTest.noUpperLimit":331,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":211,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":138,"org.easymock.tests2.SerializationTest.test":443,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":200,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":85,"org.easymock.tests2.UsageConstraintsTest.testSame":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":290,"org.easymock.samples.SupportTest.addDocument":258,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":465,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":115,"org.easymock.tests.GenericTest.testPackageScope":5,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":508,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":363,"org.easymock.tests2.NameTest.nameForMock":469,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":301,"org.easymock.tests2.UsageStrictMockTest.differentMethods":170,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":137,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":106,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":293,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":276,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":402,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":311,"org.easymock.tests2.MockedExceptionTest.testRealException":440,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":344,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":378,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":246,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":181,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":82,"org.easymock.tests2.NameTest.nameForStrictMock":470,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":134,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":141,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":87,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":228,"org.easymock.tests.ErrorMessageTest.testGetters":64,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":48,"org.easymock.tests2.UsageStrictMockTest.range":80,"org.easymock.tests2.UsageConstraintsTest.lessThan":235,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":504,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":45,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":119,"org.easymock.tests2.CaptureTest.testCaptureRightOne":205,"org.easymock.tests2.UsageConstraintsTest.testOr":216,"org.easymock.tests.UsageRangeTest.combination":145,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.UsageTest.wrongArguments":72,"org.easymock.tests2.MockBuilderTest.testWithConstructor":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":116,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":9,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":366,"org.easymock.tests.UsageVarargTest.varargShortAccepted":427,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":89,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":154,"org.easymock.tests2.UsageConstraintsTest.cmpTo":221,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":248,"org.easymock.tests2.CompareToTest.testLessThan":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":368,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":486,"org.easymock.tests2.CaptureTest.testCaptureFromStub":206,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":81,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":49,"org.easymock.tests.UsageTest.unexpectedCallWithArray":71,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":75,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":303,"org.easymock.tests2.UsageConstraintsTest.constraints":171,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":152,"org.easymock.samples.ExampleTest.addAndChangeDocument":257,"org.easymock.tests.UsageStrictMockTest.testVerify":361,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":260,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":359,"org.easymock.tests2.CompareToTest.testGreateThan":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":323,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":189,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":36,"org.easymock.tests.LimitationsTest.abstractClass":102,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":190,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":161}}]
