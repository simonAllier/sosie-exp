[{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:327","failures":[6,7,8,9],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[30],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[32,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,1,126,127,128,129,130,2,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,16,158,159,160,161,162,163,164,165,166,167,168,169,170,31,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,18,195,196,197,198,199,200,201,202,203,204,205,206,207,19,22,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,4,225,226,227,228,229,230,231,232,233,234,235,236,237,238],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[165,166,239,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:101","sourceCode":"this.java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>(java.util.Arrays.java.util.Arrays.asList(java.lang.reflect.Method[]))","type":"CtAssignmentImpl"},"failures":[241,241,242,242,10,60,61,62,243,11,12,13,244,14,245,157,15,16,246,17,158,159,160,161,187,247,188,18,19,20,21,248,22,208,23,24,249,250,25,26,251,252,253,27,254,255,256,257,258,28,259,260,29,261,262],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:37","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (java.util.regex.Pattern.java.util.regex.Pattern.compile(java.lang.String).matcher(((java.lang.String)(java.lang.Object))).find())","type":"CtReturnImpl"},"failures":[166],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:315","failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,263,264,103,265,117,266,267,127,128,129,130,2,131,3,268,269,188,189,190,191,4,5,270],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[271,272,273,1,126,274,275,276,277,278,279,280,281,282,283],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[273,1,126,284,280],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[285,286,287,288,289,290,271,291,292,272,121,273,122,125,1,126,274,149,275,276,277,278,177,293,294,295,296,297,298,299,300,301,302,303,221,280,222,234,281,282,283],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,263,264,103,265,304,117,305,306,307,266,267,1,127,128,129,130,2,131,3,268,269,188,189,190,191,4,5,270],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[308,309,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[312,313,314,33,34,35,36,37,38,315,39,241,242,316,317,318,10,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,319,320,321,0,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,60,61,354,62,355,356,357,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,358,86,87,359,88,89,90,91,92,360,6,7,361,32,8,9,93,94,263,264,95,362,363,364,365,366,243,96,97,11,367,98,99,100,101,368,369,370,371,102,103,372,104,105,106,107,291,292,373,108,109,110,265,111,112,113,114,115,304,116,117,305,306,307,266,267,118,374,119,375,376,377,378,379,380,381,120,272,121,382,273,122,123,124,125,1,126,383,384,385,386,387,388,389,390,391,392,127,128,129,130,2,131,393,394,132,395,133,134,135,136,137,274,396,397,398,399,400,401,402,403,404,405,406,407,138,139,140,141,142,143,408,409,410,12,411,412,413,414,13,415,416,144,145,146,147,148,3,149,275,276,417,268,277,278,418,419,420,421,269,422,150,279,151,244,152,153,154,155,14,423,156,245,424,157,15,16,246,425,17,426,158,159,427,428,429,160,161,430,162,163,164,165,431,166,167,168,169,170,31,239,171,172,173,174,175,176,177,178,179,180,181,182,432,183,184,185,186,187,247,433,434,308,309,310,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,188,189,190,191,192,311,193,194,18,195,196,197,198,199,200,451,201,202,203,204,205,206,452,453,207,19,454,20,21,455,248,22,208,23,456,24,457,249,250,25,458,26,209,459,460,210,211,212,213,214,215,216,217,218,240,461,219,462,463,464,465,466,467,468,469,470,471,472,473,474,220,221,475,280,222,223,476,224,4,477,225,226,478,479,227,480,251,252,481,253,482,27,483,484,254,255,485,256,257,486,258,28,487,488,259,260,489,29,261,262,30,228,229,230,231,490,491,492,493,494,495,496,497,498,499,500,501,502,503,232,504,5,233,234,281,235,236,505,270,237,282,283,238,506],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:327","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[507,508,509],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:201","failures":[241,241,242,242,10,243,11,12,13,14,245,15,16,17,187,247,188,18,19,20,21,248,22,23,24,457,249,25,26,27,28,29],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,263,264,103,265,304,117,305,306,307,266,267,1,127,128,129,130,2,131,3,268,269,188,189,190,191,4,5,270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[510,18,195,196],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[511,512,513,514,515,516,517,247,456,518],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[165],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[519],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[312,313,314,33,35,36,37,38,39,316,317,318,320,326,330,335,336,83,84,85,86,87,359,88,89,90,91,92,360,263,264,363,364,97,116,118,381,120,272,121,382,273,122,123,124,274,138,140,141,142,143,409,410,276,277,278,239,171,432,183,441,447,448,449,450,192,193,194,196,198,199,201,202,203,204,207,19,20,22,25,210,474,220,221,475,280,222,223,224,228,229,230,231,281,236,282,283],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[287,289,271,291,292,121,273,122,125,1,126,274,149,293,294,295,298,300,302,221,280,222,234],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[369,372,385],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"position":"org.easymock.internal.Range:83","failures":[92,94,95,103,117,272,121,382,273,122,125,1,126,2,274,3,149,276,417,268,277,278,418,167,171,177,184,194,198,199,451,201,202,203,204,207,209,211,221,475,280,222,4,226,228,229,230,231,5,234,281,505,270,282,283,506],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[402],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[331],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[312,318,462,463,464,465,466,467,468,469,470,471,472,473,490,491,492,493,494,495,496,497,498,499,500,501],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[167,168,239,171,180,181,184,185],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:315","failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,263,264,103,265,117,266,267,127,128,129,130,2,131,3,268,269,188,189,190,191,4,5,270],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[520,511,512,513,515,516,517,187],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":165,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":3,"org.easymock.tests2.UsageTest.argumentsOrdered":283,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":448,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":328,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":236,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":318,"org.easymock.tests2.DelegateToTest.testReturnException":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":128,"org.easymock.tests.MockingTest.testPartialClassMocking":60,"org.easymock.tests.MockClassControlTest.testToString":375,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":30,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":40,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":27,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":504,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":511,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":93,"org.easymock.tests2.UsageTest.wrongArguments":281,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":473,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":106,"org.easymock.samples.ExampleTest.answerVsDelegate":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":13,"org.easymock.tests2.UsageConstraintsTest.testNull":167,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":356,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":153,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":447,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":380,"org.easymock.tests2.CaptureTest.testPrimitive":200,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":95,"org.easymock.tests.UsageTest.moreThanOneArgument":149,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":59,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":113,"org.easymock.tests.UsageTest.argumentsOrdered":278,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":362,"org.easymock.tests.UsageVarargTest.varargIntAccepted":85,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":144,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":516,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":500,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":309,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":148,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":297,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":467,"org.easymock.tests.ReplayStateInvalidUsageTest.times":404,"org.easymock.tests2.DependencyTest.testClassMocking":502,"org.easymock.tests2.AnswerTest.answer":209,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":216,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":412,"org.easymock.tests2.CaptureTest.testAnd":197,"org.easymock.tests2.UsageTest.strictResetToDefault":233,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":455,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":442,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":100,"org.easymock.tests2.DelegateToTest.testDelegate":227,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":366,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":55,"org.easymock.tests.LimitationsTest.mockFinalMethod":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":137,"org.easymock.tests2.DependencyTest.testClassMockingSupport":503,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":291,"org.easymock.tests2.CaptureTest.testCapture1_2446744":451,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":423,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":53,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":214,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":398,"org.easymock.tests.UsageThrowableTest.throwError":304,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":414,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":501,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":262,"org.easymock.samples.PartialClassMockTest.testGetArea":10,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":399,"org.easymock.tests.MockingTest.testInterfaceMocking":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":145,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":485,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":392,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":41,"org.easymock.tests2.UsageTest.niceToStrict":235,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":22,"org.easymock.tests2.MockBuilderTest.testCreateMock":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":259,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":470,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":49,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":294,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":443,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":411,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":104,"org.easymock.tests.UsageOverloadedMethodTest.overloading":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":258,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":175,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":74,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":371,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":174,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":205,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":358,"org.easymock.tests2.EasyMockSupportClassTest.testAll":481,"org.easymock.tests.MockClassControlTest.testEquals":379,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":97,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":57,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":135,"org.easymock.tests2.CaptureTest.testCaptureAll":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":215,"org.easymock.tests.MockNameTest.defaultName":383,"org.easymock.tests2.UsageConstraintsTest.testMatches":176,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":114,"org.easymock.samples.ExampleTest.voteForRemovals":38,"org.easymock.tests.UsageVarargTest.allKinds":92,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":136,"org.easymock.samples.BasicClassMockTest.testPrintContent":317,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":266,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":474,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":497,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":517,"org.easymock.tests2.UsageConstraintsTest.greaterThan":178,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":253,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":99,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":246,"org.easymock.samples.ExampleTest.voteForRemoval":35,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":350,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":425,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":218,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":415,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":310,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":14,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":118,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":440,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":127,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":477,"org.easymock.tests2.CaptureTest.testCaptureFirst":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":441,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":506,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":279,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":70,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":461,"org.easymock.tests2.CaptureTest.testCapture2_2446744":453,"org.easymock.tests2.UsageTest.moreThanOneArgument":234,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":336,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":91,"org.easymock.tests.GenericTest.testBridgedEquals":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":409,"org.easymock.tests.UsageExpectAndReturnTest.longType":66,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":438,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":58,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":432,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":372,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":111,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":6,"org.easymock.tests.UsageCallCountTest.tooManyCalls":410,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":286,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":307,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":158,"org.easymock.tests.MockingTest.testNiceClassMocking":357,"org.easymock.tests.MockingTest.testClassMocking":352,"org.easymock.tests2.UsageConstraintsTest.testContains":173,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":139,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":190,"org.easymock.tests2.UsageConstraintsTest.testFind":166,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":103,"org.easymock.tests.MockTypeTest.fromEasyMockClass":413,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":193,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":381,"org.easymock.tests.UsageExpectAndReturnTest.object":73,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":446,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":512,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":87,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":390,"org.easymock.tests.UsageTest.exactCallCountByLastCall":418,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":384,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":363,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":79,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":83,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":421,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":491,"org.easymock.tests.MockClassControlTest.testHashCode":378,"org.easymock.tests2.EasyMockSupportTest.testVerify":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":257,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":296,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":364,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":419,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":213,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":476,"org.easymock.tests.UsageVarargTest.varargCharAccepted":86,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":342,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":341,"org.easymock.tests2.UsageTest.openCallCountByLastCall":505,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":507,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":449,"org.easymock.tests.DefaultClassInstantiatorTest.object":343,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":32,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":388,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":486,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":47,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":305,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":490,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":15,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":377,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":46,"org.easymock.tests.CapturesMatcherTest.test":519,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":80,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":29,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":298,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":376,"org.easymock.tests2.UsageTest.resumeIfFailure":238,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":12,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":130,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":456,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":72,"org.easymock.tests2.SerializationTest.testAllMockedMethod":196,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":334,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":301,"org.easymock.samples.SupportTest.voteForRemovals":314,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":493,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":52,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":510,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":340,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":459,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":386,"org.easymock.tests.UsageExpectAndThrowTest.object":50,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":181,"org.easymock.tests2.DelegateToTest.testWrongClass":478,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":108,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":109,"org.easymock.samples.ConstructorCalledMockTest.testTax":241,"org.easymock.tests.UsageStrictMockTest.range":273,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":436,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":445,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":51,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":480,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":406,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":277,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":105,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":285,"org.easymock.tests2.CaptureTest.testCaptureNone":204,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":370,"org.easymock.tests.UsageUnorderedTest.message":274,"org.easymock.tests.UsageVerifyTest.twoReturns":126,"org.easymock.tests.UsageVarargTest.varargByteAccepted":90,"org.easymock.tests2.ThreadingTest.testThreadSafe":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":487,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":143,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":391,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":316,"org.easymock.tests2.CaptureTest.testCapture_2617107":199,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":303,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":373,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":338,"org.easymock.tests2.UsageConstraintsTest.any":171,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":403,"org.easymock.tests2.StubTest.stub":224,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":129,"org.easymock.tests.UsageExpectAndThrowTest.longType":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":339,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":347,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":402,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":475,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":495,"org.easymock.tests2.SerializationTest.testClass":18,"org.easymock.tests.LimitationsTest.mockNativeMethod":132,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":11,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":82,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":464,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":223,"org.easymock.tests2.NameTest.nameForMocksControl":231,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":466,"org.easymock.tests2.MockedExceptionTest.testMockedException":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":482,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":44,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":62,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":311,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":151,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":24,"org.easymock.tests.MockingTest.testNicePartialClassMocking":61,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":520,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":462,"org.easymock.tests2.CaptureTest.testCaptureLast":203,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":292,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":170,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":161,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":182,"org.easymock.tests.MockingTest.testTwoMocks":353,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":430,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":63,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":48,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":282,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":185,"org.easymock.samples.ExampleTest.removeNonExistingDocument":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":469,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":400,"org.easymock.tests.UsageStrictMockTest.differentMethods":122,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":492,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":345,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":240,"org.easymock.tests2.ConstraintsToStringTest.andToString":300,"org.easymock.tests2.MockBuilderTest.testCreateMockString":26,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":483,"org.easymock.tests.UsageExpectAndThrowTest.floatType":42,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":252,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":433,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":28,"org.easymock.samples.ExampleTest.voteAgainstRemoval":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":329,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":368,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":16,"org.easymock.tests.LimitationsTest.privateConstructor":394,"org.easymock.tests2.UsageConstraintsTest.testNotNull":184,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":267,"org.easymock.tests2.UsageTest.defaultResetToNice":237,"org.easymock.samples.ExampleTest.voteAgainstRemovals":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":330,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":463,"org.easymock.tests.UsageVarargTest.differentLength":359,"org.easymock.tests2.CallbackTest.callback":194,"org.easymock.tests2.UsageConstraintsTest.equals":431,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":245,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":288,"org.easymock.tests.UsageTest.openCallCountByLastCall":417,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":263,"org.easymock.tests.UsageCallCountTest.tooFewCalls":141,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":427,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":107,"org.easymock.tests.UsageThrowableTest.throwCheckedException":306,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":287,"org.easymock.tests.MockingTest.testStrictClassMocking":351,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":160,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":468,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":159,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":405,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":429,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":212,"org.easymock.tests.ObjectMethodsTest.testHashCode":389,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":515,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":219,"org.easymock.tests2.NameTest.nameForNiceMock":230,"org.easymock.tests2.DependencyTest.testInterfaceMocking":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":513,"org.easymock.samples.ExampleTest.addDocument":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":488,"org.easymock.tests2.DelegateToTest.testStubDelegate":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":261,"org.easymock.tests2.AnswerTest.stubAnswer":211,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":121,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":457,"org.easymock.tests.UsageVarargTest.varargLongAccepted":89,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":327,"org.easymock.tests.UsageExpectAndReturnTest.floatType":65,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":81,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":187,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":242,"org.easymock.tests2.ConstraintsToStringTest.orToString":293,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":499,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":422,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":179,"org.easymock.tests.UsageThrowableTest.noUpperLimit":116,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":163,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":434,"org.easymock.tests2.SerializationTest.test":195,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":201,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":344,"org.easymock.tests2.UsageConstraintsTest.testSame":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":64,"org.easymock.samples.SupportTest.addDocument":313,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":428,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":484,"org.easymock.tests.GenericTest.testPackageScope":96,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":498,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":355,"org.easymock.tests2.NameTest.nameForMock":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":75,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":458,"org.easymock.tests2.UsageStrictMockTest.differentMethods":222,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":424,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":67,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":54,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":387,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":101,"org.easymock.tests2.MockedExceptionTest.testRealException":191,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":416,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":289,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":518,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":331,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":407,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":94,"org.easymock.tests2.NameTest.nameForStrictMock":229,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":248,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":508,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":192,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":154,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":435,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":180,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":346,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":20,"org.easymock.tests2.UsageStrictMockTest.range":280,"org.easymock.tests2.UsageConstraintsTest.lessThan":186,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":494,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":514,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":326,"org.easymock.tests2.CaptureTest.testCaptureRightOne":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":256,"org.easymock.tests2.UsageConstraintsTest.testOr":169,"org.easymock.tests.UsageRangeTest.combination":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":244,"org.easymock.tests.UsageTest.wrongArguments":276,"org.easymock.tests2.MockBuilderTest.testWithConstructor":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":254,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":68,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":320,"org.easymock.tests.UsageVarargTest.varargShortAccepted":88,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":348,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":408,"org.easymock.tests2.UsageConstraintsTest.cmpTo":172,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":0,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":270,"org.easymock.tests2.CaptureTest.testCaptureFromStub":452,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":397,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":21,"org.easymock.tests.UsageTest.unexpectedCallWithArray":275,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":77,"org.easymock.tests2.UsageConstraintsTest.constraints":164,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":382,"org.easymock.samples.ExampleTest.addAndChangeDocument":39,"org.easymock.tests2.ConstraintsToStringTest.notToString":295,"org.easymock.tests.UsageStrictMockTest.testVerify":124,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":312,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":134,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":146,"org.easymock.tests.LimitationsTest.abstractClass":393,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":69,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":444,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":84,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":284}}]
