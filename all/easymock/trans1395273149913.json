[{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[57,58,29,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[60,61,62,63],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[109,110,111,112,113,114,115,116,117,118,119],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[120],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[121,122,123,124,125,126,127,3,9,10,12,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,17,152,153,154,22,24,26,155,156,157],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[158],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[159,160,160,161,161,162,109,163,164,165,166,167,168,110,111,169,170,171,172,173,174,175,176,177,61,178,179,180,181,182,62,183,75,184,185,186,187,188,189,190,191,192,63,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,2,3,221,4,5,6,222,7,9,223,224,10,12,225,226,227,228,229,230,13,14,231,133,134,232,233,76,77,234,235,236,237,238,78,79,239,240,241,242,112,145,146,243,244,245,246,247,248,249,250,17,251,252,18,253,254,255,256,257,258,152,259,260,153,261,154,262,263,264,20,265,266,267,113,114,115,116,117,118,268,80,269,81,82,270,57,58,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,32,314,315,316,317,318,319,320,321,322,323,156,324,157,325,119,83,326,327,84,85,86,87,88,158,328,329,330,331,332,96,97,98,333,334,99,100,335,34,336,337,338,339,340,341,342,343,344,345,101,346,347,348,349,350,351,352,353,354,355,356,357,358,359,42,360,361,362,363,364,365,366,45,47,48,49,50,55,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,102,103,104,392,393,394,395,105,106,396,107,108,397,398,399,400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[210],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[207,209,210,211,212,213,214,216,401,217,218,220],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[356,357,103],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[57,58,29,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[36,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[75],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[77,78,79,81,86,402,95,97,98,99,100,101,103,104,105,107],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[160,161,169,170,173,174,175,176,181,62,183,184,185,191,192,63,218,250,80,317,318,319,320,321,349,367,368,371,376,377,378,379,380,393,394,106],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[403],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[162,109,163,164,404,165,166,121,0,1,122,405,167,110,111,169,170,171,172,173,174,175,176,177,61,179,180,181,182,62,183,75,184,185,186,187,188,189,190,191,192,63,207,208,209,210,211,212,213,214,215,216,217,218,219,220,2,3,221,4,5,6,7,225,226,227,228,229,230,13,14,231,133,232,233,76,234,235,236,237,78,239,240,241,242,112,145,244,245,246,248,249,250,17,18,253,256,257,258,152,259,260,153,154,262,263,264,406,20,113,116,117,118,407,80,269,81,82,270,58,29,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,317,318,319,320,321,119,326,327,328,330,331,332,96,333,334,99,335,34,337,338,101,349,350,352,353,354,355,356,357,358,359,42,43,44,361,362,363,408,409,410,411,412,413,414,415,416,366,51,52,55,367,368,369,370,371,376,377,378,379,380,417,418,386,387,388,389,390,391,102,103,104,392,419,420,421,422,423,393,394,424,106,396,107,108,397],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[177],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[162,163,164,404,165,166,121,0,1,122,405,167,189,200,208,209,212,213,214,215,220,77,235,78,79,152,262,263,264,406,407,269,81,82,270,29,87,88,98,99,100,34,101,353,43,408,409,410,411,412,413,414,415,416,366,369,419,420,421,422,423,424,105,396,107,108,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[425],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[426,427,428,429,430,431,432],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[172,177,61,179,182,186,187,188,190,205,217,3,224,234,235,79,112,257,152,260,153,262,263,264,268,81,82,328,100,101,352,353,355,356,357,358,359,362,103,395,107,108],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[159,160,160,161,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,61,179,180,181,182,62,183,75,184,185,186,187,188,190,191,192,63,198,200,202,203,205,207,208,210,211,214,215,216,217,218,219,220,2,3,221,4,5,6,7,223,224,10,225,226,227,228,229,14,133,232,233,76,234,236,237,238,239,240,241,242,145,245,250,17,251,252,18,253,254,255,256,257,258,152,259,260,153,261,154,262,263,264,20,265,266,267,117,80,81,82,57,58,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,85,158,328,329,330,331,332,96,333,334,335,349,352,354,355,356,357,358,359,42,360,361,362,363,55,367,368,371,376,377,378,379,380,381,102,104,393,394,106,107,108,398,399,400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[57,58,29,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[64,65,66,67,68,69,70,71,72,73,74,171,75,3,223,10,232,76,77,234,235,78,79,240,112,257,260,153,262,268,80,269,81,82,270,83,84,85,86,87,88,89,90,91,92,93,94,95,332,96,97,98,99,100,335,101,433,102,103,104,395,105,106,396,107,108,397],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[182],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":172,"org.easymock.tests2.UsageTest.argumentsOrdered":79,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":332,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":263,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":134,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":235,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":121,"org.easymock.tests2.DelegateToTest.testReturnException":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":387,"org.easymock.tests.MockingTest.testPartialClassMocking":314,"org.easymock.tests.MockClassControlTest.testToString":47,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":123,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":381,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":12,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":265,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":271,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":428,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":61,"org.easymock.tests2.UsageTest.wrongArguments":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":367,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":151,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":374,"org.easymock.samples.ExampleTest.answerVsDelegate":109,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":324,"org.easymock.tests2.UsageConstraintsTest.testNull":174,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":4,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":52,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":262,"org.easymock.tests2.CaptureTest.testPrimitive":210,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":371,"org.easymock.tests.UsageTest.moreThanOneArgument":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":290,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":221,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":319,"org.easymock.tests.UsageTest.argumentsOrdered":100,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":336,"org.easymock.tests.UsageVarargTest.varargIntAccepted":410,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":376,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":432,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":138,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":380,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":68,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":145,"org.easymock.tests2.AnswerTest.answer":113,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":178,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":196,"org.easymock.tests2.CaptureTest.testAnd":207,"org.easymock.tests2.UsageTest.strictResetToDefault":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":9,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":259,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":330,"org.easymock.tests2.DelegateToTest.testDelegate":248,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":286,"org.easymock.tests.LimitationsTest.mockFinalMethod":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":390,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":345,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":87,"org.easymock.tests2.CaptureTest.testCapture1_2446744":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":194,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":120,"org.easymock.tests.UsageThrowableTest.throwError":352,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":156,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":321,"org.easymock.samples.PartialClassMockTest.testGetArea":159,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":377,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":399,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":24,"org.easymock.tests2.UsageTest.niceToStrict":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":272,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":200,"org.easymock.tests2.MockBuilderTest.testCreateMock":204,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":148,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":280,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":372,"org.easymock.tests.UsageOverloadedMethodTest.overloading":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":28,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":62,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":327,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":305,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":361,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":182,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":216,"org.easymock.tests2.EasyMockSupportClassTest.testAll":20,"org.easymock.tests.MockClassControlTest.testEquals":51,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":43,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":288,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":195,"org.easymock.tests2.CaptureTest.testCaptureAll":208,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":343,"org.easymock.tests.MockNameTest.defaultName":351,"org.easymock.tests2.UsageConstraintsTest.testMatches":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":320,"org.easymock.samples.ExampleTest.voteForRemovals":165,"org.easymock.tests.UsageVarargTest.allKinds":366,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":102,"org.easymock.samples.BasicClassMockTest.testPrintContent":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":344,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":358,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":391,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":135,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":247,"org.easymock.tests2.UsageConstraintsTest.greaterThan":184,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":329,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":10,"org.easymock.samples.ExampleTest.voteForRemoval":163,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":41,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":11,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":226,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":157,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":222,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":34,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":258,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":386,"org.easymock.tests2.CaptureTest.testCaptureFirst":220,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":152,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":240,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":86,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":301,"org.easymock.tests2.UsageTest.moreThanOneArgument":76,"org.easymock.tests2.CaptureTest.testCapture2_2446744":219,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":228,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":205,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":416,"org.easymock.tests.GenericTest.testBridgedEquals":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":422,"org.easymock.tests.UsageExpectAndReturnTest.longType":297,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":341,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":289,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":189,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":317,"org.easymock.tests.UsageCallCountTest.tooManyCalls":423,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":90,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":302,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":357,"org.easymock.tests.MockingTest.testNiceClassMocking":33,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":251,"org.easymock.tests.MockingTest.testClassMocking":31,"org.easymock.tests2.UsageConstraintsTest.testContains":181,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":14,"org.easymock.tests2.UsageConstraintsTest.testFind":173,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":363,"org.easymock.tests.MockTypeTest.fromEasyMockClass":323,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":395,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":111,"org.easymock.tests.UsageExpectAndReturnTest.object":304,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":429,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":412,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":418,"org.easymock.tests.UsageTest.exactCallCountByLastCall":335,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":349,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":337,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":94,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":426,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":408,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":310,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":326,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":129,"org.easymock.tests.MockClassControlTest.testHashCode":50,"org.easymock.tests2.EasyMockSupportTest.testVerify":406,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":67,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":338,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":119,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":347,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":402,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":193,"org.easymock.tests.UsageVarargTest.varargCharAccepted":411,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":407,"org.easymock.tests2.UsageTest.openCallCountByLastCall":236,"org.easymock.tests.DefaultClassInstantiatorTest.object":35,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":346,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":382,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":25,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":278,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":355,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":143,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":128,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":49,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":277,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":311,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":291,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":48,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":267,"org.easymock.tests2.UsageTest.resumeIfFailure":239,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":389,"org.easymock.tests2.StubTest.stubWithReturnValue":250,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":427,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":190,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":303,"org.easymock.tests2.SerializationTest.testAllMockedMethod":29,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":364,"org.easymock.samples.SupportTest.voteForRemovals":167,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":283,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":59,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":365,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":114,"org.easymock.tests.UsageExpectAndThrowTest.object":281,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":187,"org.easymock.tests2.DelegateToTest.testWrongClass":246,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":393,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":394,"org.easymock.samples.ConstructorCalledMockTest.testTax":160,"org.easymock.tests.UsageStrictMockTest.range":107,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":261,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":17,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":282,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":202,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":373,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":89,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":400,"org.easymock.tests2.CaptureTest.testCaptureNone":215,"org.easymock.tests.UsageUnorderedTest.message":101,"org.easymock.tests.UsageVerifyTest.twoReturns":104,"org.easymock.tests.UsageVarargTest.varargByteAccepted":415,"org.easymock.tests2.ThreadingTest.testThreadSafe":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":26,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":421,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":384,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":0,"org.easymock.tests2.CaptureTest.testCapture_2617107":209,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":370,"org.easymock.tests2.UsageConstraintsTest.any":179,"org.easymock.tests2.StubTest.stub":249,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":388,"org.easymock.tests.UsageExpectAndThrowTest.longType":274,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":39,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":269,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":133,"org.easymock.tests2.SerializationTest.testClass":57,"org.easymock.tests.LimitationsTest.mockNativeMethod":55,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":313,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":360,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":142,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":270,"org.easymock.tests2.NameTest.nameForMocksControl":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":144,"org.easymock.tests2.MockedExceptionTest.testMockedException":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":21,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":275,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":316,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":2,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":203,"org.easymock.tests.MockingTest.testNicePartialClassMocking":315,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":6,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":140,"org.easymock.tests2.CaptureTest.testCaptureLast":214,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":88,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":255,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":188,"org.easymock.tests.MockingTest.testTwoMocks":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":279,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":78,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":147,"org.easymock.tests.UsageStrictMockTest.differentMethods":108,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":130,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":37,"org.easymock.tests2.ConstraintsToStringTest.andToString":71,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":227,"org.easymock.tests2.MockBuilderTest.testCreateMockString":206,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":22,"org.easymock.tests.UsageExpectAndThrowTest.floatType":273,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":75,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":116,"org.easymock.tests.UsageVerifyTest.twoThrows":103,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":266,"org.easymock.samples.ExampleTest.voteAgainstRemoval":164,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":398,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":224,"org.easymock.tests.LimitationsTest.privateConstructor":54,"org.easymock.tests2.UsageConstraintsTest.testNotNull":191,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":230,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":359,"org.easymock.tests2.UsageTest.defaultResetToNice":238,"org.easymock.samples.ExampleTest.voteAgainstRemovals":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":309,"org.easymock.tests.UsageVarargTest.differentLength":433,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":141,"org.easymock.tests2.CallbackTest.callback":112,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":92,"org.easymock.tests.UsageTest.openCallCountByLastCall":333,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":369,"org.easymock.tests.UsageCallCountTest.tooFewCalls":419,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":375,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":425,"org.easymock.tests.UsageThrowableTest.throwCheckedException":356,"org.easymock.tests.MockingTest.testStrictClassMocking":30,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":91,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":254,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":350,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":146,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":253,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":118,"org.easymock.tests2.CompareToTest.testGreateOrEqual":60,"org.easymock.tests.ObjectMethodsTest.testHashCode":383,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":431,"org.easymock.tests2.NameTest.nameForNiceMock":126,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":229,"org.easymock.tests2.DependencyTest.testInterfaceMocking":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":430,"org.easymock.samples.ExampleTest.addDocument":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":27,"org.easymock.tests2.DelegateToTest.testStubDelegate":245,"org.easymock.tests2.AnswerTest.stubAnswer":117,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":106,"org.easymock.tests.UsageVarargTest.varargLongAccepted":414,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":397,"org.easymock.tests.UsageExpectAndReturnTest.floatType":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":168,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":161,"org.easymock.tests2.ConstraintsToStringTest.orToString":64,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":185,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":137,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":84,"org.easymock.tests.UsageThrowableTest.noUpperLimit":353,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":170,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":15,"org.easymock.tests2.SerializationTest.test":58,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":212,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":36,"org.easymock.tests2.UsageConstraintsTest.testSame":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":295,"org.easymock.samples.SupportTest.addDocument":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":23,"org.easymock.tests.GenericTest.testPackageScope":42,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":136,"org.easymock.tests2.NameTest.nameForMock":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":306,"org.easymock.tests2.UsageStrictMockTest.differentMethods":82,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":8,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":298,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":285,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":331,"org.easymock.tests2.MockedExceptionTest.testRealException":231,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":325,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":93,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":368,"org.easymock.tests2.NameTest.nameForStrictMock":125,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":110,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":5,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":16,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":186,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":38,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":198,"org.easymock.tests2.UsageStrictMockTest.range":81,"org.easymock.tests2.UsageConstraintsTest.lessThan":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":132,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":257,"org.easymock.tests2.CaptureTest.testCaptureRightOne":217,"org.easymock.tests2.UsageConstraintsTest.testOr":176,"org.easymock.tests.UsageRangeTest.combination":328,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":3,"org.easymock.tests.UsageTest.wrongArguments":98,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":307,"org.easymock.tests.UsageVarargTest.varargShortAccepted":413,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":40,"org.easymock.tests2.UsageConstraintsTest.cmpTo":180,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":115,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":237,"org.easymock.tests2.CaptureTest.testCaptureFromStub":218,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":155,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":199,"org.easymock.tests.UsageTest.unexpectedCallWithArray":97,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":105,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":420,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":308,"org.easymock.tests2.CaptureTest.testCapture":401,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":396,"org.easymock.tests2.UsageConstraintsTest.constraints":171,"org.easymock.samples.ExampleTest.addAndChangeDocument":166,"org.easymock.tests2.ConstraintsToStringTest.notToString":66,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":122,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":424,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":342,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":378,"org.easymock.tests.LimitationsTest.abstractClass":53,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":300,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":379,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":153}}]
