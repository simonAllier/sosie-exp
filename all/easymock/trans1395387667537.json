[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[4,5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[7,8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[7],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,3,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,26,169,170,171,172,27,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,320],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:116","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[321,322,323,324,325,326,327,328,147,151,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"field"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[82,85,160,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[321,322,323,324,325,326,327,328,147,151,329],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[58,63,91,93,101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[29,30,31,32,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,53,54,55,56,57,58,3,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,133,135,136,137,138,140,142,143,145,148,149,152,153,154,155,156,157,158,159,161,166,167,26,171,172,27,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,199,200,201,202,203,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,235,236,0,237,238,239,240,241,243,244,245,246,247,332,333,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,293,294,295,297,334,335,298,299,300,301,302,303,304,305,306,307,308,309,313,314,315,316,318,319,336,337],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[329],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[133,134,140,141,338,339,340,341,198,342,343,344,290,291,292,295,296],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[35,37,38,43,105,345,133,134,140,141,198,199,201,202,346,347,348,222,223,224,349,350,268,290,291,292,295,296,8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[71],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:280","sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n            org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        } \n    } else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[351],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterfaces":"actualTypeArguments","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[29,352,353,30,31,32,33,34,35,36,37,38,39,40,41,42,10,11,12,354,13,43,14,15,16,355,356,17,44,357,45,46,47,48,358,359,360,49,361,362,50,363,364,365,366,367,368,369,370,371,51,372,373,374,375,376,52,377,378,53,330,54,55,379,380,381,382,383,56,57,58,3,384,59,60,61,62,63,64,385,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,386,387,84,85,86,87,388,389,88,89,90,390,91,92,93,94,95,96,97,98,99,100,101,102,103,104,18,19,20,391,21,105,22,23,24,392,393,25,106,107,108,109,110,111,112,113,114,115,116,117,118,394,395,396,397,398,399,119,120,121,122,400,123,124,125,401,126,402,403,404,405,345,406,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,328,145,146,147,148,407,149,150,151,329,152,153,154,155,156,157,158,159,160,2,161,408,409,162,163,164,165,410,331,411,412,166,167,168,26,169,170,171,172,27,173,174,175,176,177,178,413,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,414,415,416,417,418,419,28,420,421,422,423,424,425,426,427,428,7,429,430,431,432,433,434,435,196,197,198,199,200,201,202,203,436,204,205,206,207,346,208,437,209,438,210,211,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,212,466,213,467,214,215,468,469,216,470,471,472,473,474,475,347,476,477,478,348,479,480,481,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,351,235,236,482,0,237,238,239,483,240,241,242,243,244,245,246,247,332,349,484,333,350,485,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,289,290,291,292,293,294,295,296,297,508,334,335,509,510,8,9,511,298,299,300,301,302,303,304,305,306,307,308,309,512,513,514,310,311,515,312,516,517,518,519,520,313,314,315,316,317,318,319,521,522,523,524,525,526,336,337],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[527,268],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageTest.argumentsOrdered":141,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":289,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":423,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":136,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":26,"org.easymock.tests2.DelegateToTest.testReturnException":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":188,"org.easymock.tests.MockingTest.testPartialClassMocking":310,"org.easymock.tests.MockClassControlTest.testToString":523,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":379,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":269,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":167,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":507,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":64,"org.easymock.tests2.UsageTest.wrongArguments":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":217,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":206,"org.easymock.samples.ExampleTest.answerVsDelegate":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":477,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":517,"org.easymock.tests2.UsageConstraintsTest.testNull":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":157,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":115,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":337,"org.easymock.tests2.CaptureTest.testPrimitive":94,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":221,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":288,"org.easymock.tests.UsageTest.moreThanOneArgument":290,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":227,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":508,"org.easymock.tests.UsageTest.argumentsOrdered":296,"org.easymock.tests.UsageVarargTest.varargIntAccepted":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":182,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":82,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":404,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":393,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":186,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":491,"org.easymock.tests.ReplayStateInvalidUsageTest.times":457,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":43,"org.easymock.tests2.DependencyTest.testClassMocking":411,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":1,"org.easymock.tests2.AnswerTest.answer":29,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":429,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":130,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":475,"org.easymock.tests2.CaptureTest.testAnd":91,"org.easymock.tests2.UsageTest.strictResetToDefault":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":210,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":510,"org.easymock.tests2.DelegateToTest.testDelegate":126,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":490,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":284,"org.easymock.tests.LimitationsTest.mockFinalMethod":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":234,"org.easymock.tests2.DependencyTest.testClassMockingSupport":412,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":8,"org.easymock.tests2.CaptureTest.testCapture1_2446744":95,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":128,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":451,"org.easymock.tests.UsageThrowableTest.throwError":300,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":476,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":229,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":494,"org.easymock.samples.PartialClassMockTest.testGetArea":168,"org.easymock.tests.MockingTest.testInterfaceMocking":515,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":183,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":480,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":485,"org.easymock.tests2.UsageTest.niceToStrict":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":367,"org.easymock.tests2.ThreadingTest.testChangeDefault":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":84,"org.easymock.tests2.MockBuilderTest.testCreateMock":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":374,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":16,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":278,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":338,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":111,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":474,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":441,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":519,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":204,"org.easymock.tests.UsageOverloadedMethodTest.overloading":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":376,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":69,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":215,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":259,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":68,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":100,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":483,"org.easymock.tests2.EasyMockSupportClassTest.testAll":49,"org.easymock.tests.MockClassControlTest.testEquals":336,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":286,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":129,"org.easymock.tests2.CaptureTest.testCaptureAll":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":232,"org.easymock.tests.MockNameTest.defaultName":346,"org.easymock.tests2.UsageConstraintsTest.testMatches":70,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":449,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":228,"org.easymock.samples.ExampleTest.voteForRemovals":178,"org.easymock.tests.UsageVarargTest.allKinds":247,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":222,"org.easymock.samples.BasicClassMockTest.testPrintContent":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":233,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":306,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":33,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":192,"org.easymock.tests2.UsageConstraintsTest.greaterThan":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":361,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":438,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":165,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":495,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":448,"org.easymock.samples.ExampleTest.voteForRemoval":175,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":410,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":45,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":160,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":487,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":131,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":208,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":108,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":187,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":400,"org.easymock.tests2.CaptureTest.testCaptureFirst":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":28,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":109,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":216,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":255,"org.easymock.tests2.UsageTest.moreThanOneArgument":133,"org.easymock.tests2.CaptureTest.testCapture2_2446744":103,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":430,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":89,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":246,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":318,"org.easymock.tests.UsageExpectAndReturnTest.longType":251,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":287,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":437,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":77,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":462,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":225,"org.easymock.tests.UsageCallCountTest.tooManyCalls":319,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":256,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":305,"org.easymock.tests.MockingTest.testNiceClassMocking":518,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":146,"org.easymock.tests.MockingTest.testClassMocking":513,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":520,"org.easymock.tests2.UsageConstraintsTest.testContains":67,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":121,"org.easymock.tests2.UsageConstraintsTest.testFind":59,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":195,"org.easymock.tests.MockTypeTest.fromEasyMockClass":347,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":54,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":196,"org.easymock.tests.UsageExpectAndReturnTest.object":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":355,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":114,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":241,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":333,"org.easymock.tests.UsageTest.exactCallCountByLastCall":297,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":334,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":344,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":328,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":237,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":264,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":214,"org.easymock.tests.ResultTest.createThrowResultToString":6,"org.easymock.tests.MockClassControlTest.testHashCode":526,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":19,"org.easymock.tests2.EasyMockSupportTest.testVerify":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":369,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":440,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":213,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":127,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":390,"org.easymock.tests.UsageVarargTest.varargCharAccepted":240,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":435,"org.easymock.tests2.UsageTest.openCallCountByLastCall":137,"org.easymock.tests.DefaultClassInstantiatorTest.object":442,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":117,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":439,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":349,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":370,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":18,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":525,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":493,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":163,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":275,"org.easymock.tests.CapturesMatcherTest.test":320,"org.easymock.tests.ReplayStateInvalidCallsTest.times":499,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":461,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":500,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":524,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":52,"org.easymock.tests2.UsageTest.resumeIfFailure":142,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":190,"org.easymock.tests2.StubTest.stubWithReturnValue":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":325,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":78,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":257,"org.easymock.tests2.SerializationTest.testAllMockedMethod":42,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":7,"org.easymock.samples.SupportTest.voteForRemovals":172,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":340,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":351,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":281,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":434,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":352,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":472,"org.easymock.tests.UsageExpectAndThrowTest.object":279,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":75,"org.easymock.tests2.DelegateToTest.testWrongClass":125,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":497,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":298,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":299,"org.easymock.samples.ConstructorCalledMockTest.testTax":169,"org.easymock.tests.UsageStrictMockTest.range":201,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":345,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":280,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":86,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":459,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":205,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":342,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":489,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":481,"org.easymock.tests2.CaptureTest.testCaptureNone":99,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":395,"org.easymock.tests.UsageUnorderedTest.message":268,"org.easymock.tests.UsageVerifyTest.twoReturns":224,"org.easymock.tests.UsageVarargTest.varargByteAccepted":245,"org.easymock.tests2.ThreadingTest.testThreadSafe":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":372,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":316,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":180,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":350,"org.easymock.tests2.CaptureTest.testCapture_2617107":93,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":341,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":220,"org.easymock.tests2.UsageConstraintsTest.any":65,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":456,"org.easymock.tests2.StubTest.stub":152,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":189,"org.easymock.tests.UsageExpectAndThrowTest.longType":272,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":446,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":455,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests2.SerializationTest.testClass":40,"org.easymock.tests.LimitationsTest.mockNativeMethod":212,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":482,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":267,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":12,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":505,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":39,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":396,"org.easymock.tests2.NameTest.nameForMocksControl":383,"org.easymock.tests2.MockedExceptionTest.testMockedException":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":362,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":294,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":273,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":312,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":154,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":87,"org.easymock.tests.MockingTest.testNicePartialClassMocking":311,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":159,"org.easymock.tests2.CaptureTest.testCaptureLast":98,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":10,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":9,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":504,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":151,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":63,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":76,"org.easymock.tests.MockingTest.testTwoMocks":514,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":501,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":329,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":277,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":140,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":80,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":399,"org.easymock.samples.ExampleTest.removeNonExistingDocument":413,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":453,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":15,"org.easymock.tests.UsageStrictMockTest.differentMethods":202,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":20,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":444,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":398,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":46,"org.easymock.tests2.MockBuilderTest.testCreateMockString":90,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":521,"org.easymock.tests.UsageExpectAndThrowTest.floatType":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":363,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":30,"org.easymock.tests.ResultTest.createReturnResultToString":5,"org.easymock.tests.UsageVerifyTest.twoThrows":223,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.tests.ResultTest.createDelegateResultToString":4,"org.easymock.samples.ExampleTest.voteAgainstRemoval":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":424,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":164,"org.easymock.tests.LimitationsTest.privateConstructor":465,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":322,"org.easymock.tests2.UsageConstraintsTest.testNotNull":79,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":119,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":307,"org.easymock.tests2.UsageTest.defaultResetToNice":139,"org.easymock.samples.ExampleTest.voteAgainstRemovals":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":11,"org.easymock.tests.UsageVarargTest.differentLength":242,"org.easymock.tests2.CallbackTest.callback":55,"org.easymock.tests2.UsageConstraintsTest.equals":384,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":408,"org.easymock.tests.UsageTest.openCallCountByLastCall":293,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":219,"org.easymock.tests.UsageCallCountTest.tooFewCalls":314,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":148,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":207,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":397,"org.easymock.tests.UsageThrowableTest.throwCheckedException":304,"org.easymock.tests.MockingTest.testStrictClassMocking":512,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":343,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":150,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":309,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":14,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":458,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":149,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":32,"org.easymock.tests.ObjectMethodsTest.testHashCode":484,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":503,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":48,"org.easymock.tests2.NameTest.nameForNiceMock":382,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":498,"org.easymock.tests2.DependencyTest.testInterfaceMocking":166,"org.easymock.samples.ExampleTest.addDocument":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":373,"org.easymock.tests2.DelegateToTest.testStubDelegate":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.AnswerTest.stubAnswer":31,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":199,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":388,"org.easymock.tests.UsageVarargTest.varargLongAccepted":244,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.floatType":250,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":266,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":144,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":170,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":392,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":73,"org.easymock.tests.UsageThrowableTest.noUpperLimit":301,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":57,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":402,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":96,"org.easymock.tests2.SerializationTest.test":41,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":443,"org.easymock.tests2.UsageConstraintsTest.testSame":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":249,"org.easymock.samples.SupportTest.addDocument":171,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":407,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":488,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":364,"org.easymock.tests.GenericTest.testPackageScope":235,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":24,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":516,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":486,"org.easymock.tests2.NameTest.nameForMock":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":260,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":327,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":409,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":252,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":283,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":211,"org.easymock.tests2.MockedExceptionTest.testRealException":122,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":426,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":460,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":218,"org.easymock.tests2.NameTest.nameForStrictMock":381,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":387,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":158,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":405,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":527,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":445,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":74,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":83,"org.easymock.tests2.UsageStrictMockTest.range":37,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":492,"org.easymock.tests2.UsageConstraintsTest.lessThan":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":107,"org.easymock.tests2.CaptureTest.testCaptureRightOne":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":368,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":394,"org.easymock.tests2.UsageConstraintsTest.testOr":62,"org.easymock.tests.UsageRangeTest.combination":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":155,"org.easymock.tests.UsageTest.wrongArguments":292,"org.easymock.tests2.MockBuilderTest.testWithConstructor":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":365,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":522,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":261,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":447,"org.easymock.tests.UsageVarargTest.varargShortAccepted":243,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":317,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":506,"org.easymock.tests2.UsageConstraintsTest.cmpTo":66,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":353,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":417,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":138,"org.easymock.tests2.CaptureTest.testCaptureFromStub":102,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":450,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":386,"org.easymock.tests.UsageTest.unexpectedCallWithArray":291,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":502,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":198,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":315,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":262,"org.easymock.tests2.UsageConstraintsTest.constraints":58,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":200,"org.easymock.samples.ExampleTest.addAndChangeDocument":179,"org.easymock.tests.UsageStrictMockTest.testVerify":436,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":27,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":231,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":184,"org.easymock.tests.LimitationsTest.abstractClass":464,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":254,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":112,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":238}}]
