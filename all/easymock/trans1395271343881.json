[{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[20,21,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[23,24],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[25,26,27,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[30,31,32,33,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.ConstructorArgs:54","failures":[20,21,36,37,38,39,40,22,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,25],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.LastControl.NO_MATCHERS_FOUND"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","typeParameterMap":"typeParameterMap","candidateMethod":"bridgeMethod","this":"this"}},{"position":"org.easymock.internal.RecordState:274","failures":[67,68,69,70,71,72,73,74,75,76,77],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[78,79,79,80,80,81,82,83,84,85,86,87,88,89,23,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,45,48,58,64,25,27,119,120,121,122,123,124,125,126,24,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[141],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[142,143,144,145,146,147,148,149,150,151,152,153,154,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[156,157,158,159],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[160],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[78,79,79,80,80,81,82,83,84,163,85,86,88,89,23,90,91,92,164,93,94,95,96,97,98,99,100,102,103,104,105,111,113,114,115,116,117,118,165,166,167,45,48,58,64,25,27,121,122,123,124,126,24,127,129,130,131,133,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[145,169,152,153,155],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[78,79,80,83,0,170,84,171,85,86,172,87,88,89,23,1,90,173,41,91,92,174,93,99,175,103,104,107,109,48,58,64,25,126,24,176,131],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[25,26,27,28],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[177,178,179,180,147,154],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[85,92,103,107,48],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[78,79,80,181,67,182,183,184,185,186,187,188,81,82,189,190,191,83,0,192,193,194,195,196,68,197,69,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,141,157,213,160,214,215,216,217,158,218,219,220,221,159,222,223,224,225,84,85,86,87,88,89,23,90,173,41,91,92,93,8,226,9,10,11,12,13,14,227,15,17,18,228,19,229,94,95,230,96,97,98,99,231,100,175,101,102,103,104,105,106,107,108,232,233,234,235,236,109,110,111,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,142,253,254,255,256,257,143,144,258,259,260,261,262,263,70,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,112,286,287,288,289,113,114,115,116,290,291,117,118,292,293,294,295,296,297,298,299,300,301,302,303,304,305,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,71,72,73,74,75,76,306,307,308,309,145,310,311,25,26,27,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,30,337,31,338,339,340,341,342,343,344,345,346,347,348,349,350,32,33,119,120,121,122,123,351,124,352,353,125,354,355,356,357,358,359,360,361,362,363,364,365,34,366,367,368,369,126,370,371,372,373,24,374,375,77,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,147,148,392,393,149,150,394,127,395,396,397,398,399,400,401,402,403,404,128,405,406,407,408,409,410,151,411,412,413,414,415,416,417,418,419,420,421,422,423,424,176,129,130,131,425,426,427,428,429,430,431,432,433,434,161,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,132,133,134,135,136,137,138,139,464,465,140,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,152,153,519,520,521,522,523,524,525,526,527,35,528,529,530,154,531,532,155,533,534,535,536,537,538],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[201,206,209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[288,450],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[332,411],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[83,0,1,41,2,3,4,539,168,25],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[405,409],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[88,164],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[540,231,232],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":201,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":390,"org.easymock.tests2.UsageTest.argumentsOrdered":144,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":303,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":438,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":254,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":188,"org.easymock.tests2.DelegateToTest.testReturnException":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":513,"org.easymock.tests.MockingTest.testPartialClassMocking":122,"org.easymock.tests.MockClassControlTest.testToString":134,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":192,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":52,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":312,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":263,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":511,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":208,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":467,"org.easymock.tests2.UsageTest.wrongArguments":142,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":474,"org.easymock.samples.ExampleTest.answerVsDelegate":67,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":24,"org.easymock.tests2.UsageConstraintsTest.testNull":204,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":353,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":96,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":139,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":302,"org.easymock.tests2.CaptureTest.testPrimitive":10,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":471,"org.easymock.tests.UsageTest.moreThanOneArgument":391,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":331,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":367,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":395,"org.easymock.tests.UsageTest.argumentsOrdered":150,"org.easymock.tests.UsageVarargTest.varargIntAccepted":454,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":476,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":248,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":285,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":480,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":495,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":270,"org.easymock.tests.ReplayStateInvalidUsageTest.times":362,"org.easymock.tests2.DependencyTest.testClassMocking":260,"org.easymock.tests2.AnswerTest.answer":71,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":445,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":225,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":371,"org.easymock.tests2.UsageTest.strictResetToDefault":251,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":172,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":366,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":297,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":399,"org.easymock.tests2.DelegateToTest.testDelegate":282,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":494,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":327,"org.easymock.tests.LimitationsTest.mockFinalMethod":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":516,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":404,"org.easymock.tests2.DependencyTest.testClassMockingSupport":261,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":382,"org.easymock.tests2.CaptureTest.testCapture1_2446744":11,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":223,"org.easymock.tests.UsageThrowableTest.throwError":417,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":356,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":373,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":66,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":498,"org.easymock.samples.PartialClassMockTest.testGetArea":78,"org.easymock.tests.MockingTest.testInterfaceMocking":351,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":477,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":537,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":53,"org.easymock.tests2.UsageTest.niceToStrict":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":313,"org.easymock.tests2.ThreadingTest.testChangeDefault":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":22,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":88,"org.easymock.tests2.MockBuilderTest.testCreateMock":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":61,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":273,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":177,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":321,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":298,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":370,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":413,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":519,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":472,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":38,"org.easymock.tests.UsageOverloadedMethodTest.overloading":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":63,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":157,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":378,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":426,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":344,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":141,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":15,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":455,"org.easymock.tests.MockClassControlTest.testEquals":138,"org.easymock.tests2.EasyMockSupportClassTest.testAll":45,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":130,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":329,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":402,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":224,"org.easymock.tests2.CaptureTest.testCaptureAll":226,"org.easymock.tests.MockNameTest.defaultName":416,"org.easymock.tests2.UsageConstraintsTest.testMatches":213,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":368,"org.easymock.samples.ExampleTest.voteForRemovals":185,"org.easymock.tests.UsageVarargTest.allKinds":463,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":518,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":403,"org.easymock.samples.BasicClassMockTest.testPrintContent":82,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":423,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":517,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":245,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":168,"org.easymock.tests2.UsageConstraintsTest.greaterThan":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":46,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":387,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":105,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":499,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":410,"org.easymock.samples.ExampleTest.voteForRemoval":182,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":106,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":233,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":374,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":99,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":491,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":127,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":250,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":295,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":512,"org.easymock.tests2.CaptureTest.testCaptureFirst":19,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":296,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":259,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":340,"org.easymock.tests2.CaptureTest.testCapture2_2446744":228,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":235,"org.easymock.tests2.UsageTest.moreThanOneArgument":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":446,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":92,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":462,"org.easymock.tests.GenericTest.testBridgedEquals":425,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":39,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":526,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":36,"org.easymock.tests.UsageExpectAndReturnTest.longType":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":400,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":293,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":330,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":385,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":218,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":34,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":333,"org.easymock.tests.UsageCallCountTest.tooManyCalls":527,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":341,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":275,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":422,"org.easymock.tests.MockingTest.testNiceClassMocking":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":114,"org.easymock.tests.MockingTest.testClassMocking":120,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":520,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":163,"org.easymock.tests2.UsageConstraintsTest.testContains":212,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":111,"org.easymock.tests2.UsageConstraintsTest.testFind":203,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":428,"org.easymock.tests.MockTypeTest.fromEasyMockClass":372,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":529,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":69,"org.easymock.tests.UsageExpectAndReturnTest.object":343,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":301,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":457,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":487,"org.easymock.tests.UsageTest.exactCallCountByLastCall":394,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":481,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":396,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":0,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":452,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":349,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":377,"org.easymock.tests.MockClassControlTest.testHashCode":137,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":239,"org.easymock.tests2.EasyMockSupportTest.testVerify":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":55,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":397,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":412,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":222,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":264,"org.easymock.tests.UsageVarargTest.varargCharAccepted":456,"org.easymock.tests2.CaptureTest.testCaptureMultiple":7,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":451,"org.easymock.tests2.UsageTest.openCallCountByLastCall":255,"org.easymock.tests.DefaultClassInstantiatorTest.object":128,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":20,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":304,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":411,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":485,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":319,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":420,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":268,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":238,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":497,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":136,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":318,"org.easymock.tests.ReplayStateInvalidCallsTest.times":503,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":332,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":504,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":64,"org.easymock.tests2.UsageTest.resumeIfFailure":258,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":126,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":515,"org.easymock.tests2.StubTest.stubWithReturnValue":289,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":1,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":219,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":342,"org.easymock.tests2.SerializationTest.testAllMockedMethod":27,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":444,"org.easymock.samples.SupportTest.voteForRemovals":191,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":178,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":241,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":324,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":28,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":450,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":72,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":483,"org.easymock.tests.UsageExpectAndThrowTest.object":322,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":217,"org.easymock.tests2.DelegateToTest.testWrongClass":280,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":501,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":35,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":528,"org.easymock.tests.UsageStrictMockTest.range":155,"org.easymock.samples.ConstructorCalledMockTest.testTax":79,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":286,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":300,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":113,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":323,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":23,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":42,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":473,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":179,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":493,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":538,"org.easymock.tests2.CaptureTest.testCaptureNone":227,"org.easymock.tests.UsageUnorderedTest.message":151,"org.easymock.tests.UsageVerifyTest.twoReturns":153,"org.easymock.tests.UsageVarargTest.varargByteAccepted":461,"org.easymock.tests2.ThreadingTest.testThreadSafe":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":59,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":524,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":488,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":81,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":448,"org.easymock.tests2.UsageConstraintsTest.any":210,"org.easymock.tests2.StubTest.stub":288,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":361,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndThrowTest.longType":315,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":408,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":360,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":309,"org.easymock.tests2.SerializationTest.testClass":25,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":243,"org.easymock.tests.LimitationsTest.mockNativeMethod":140,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":33,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":167,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":267,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":509,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests2.NameTest.nameForMocksControl":196,"org.easymock.tests2.MockedExceptionTest.testMockedException":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":47,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":393,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":124,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":197,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":316,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":94,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":90,"org.easymock.tests.MockingTest.testNicePartialClassMocking":123,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":98,"org.easymock.tests2.CompareToTest.testNotComparable":29,"org.easymock.tests2.CaptureTest.testCaptureLast":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":265,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":383,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":508,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":118,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":207,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":158,"org.easymock.tests.MockingTest.testTwoMocks":121,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":505,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":335,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":320,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":143,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":221,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":540,"org.easymock.samples.ExampleTest.removeNonExistingDocument":186,"org.easymock.tests.UsageStrictMockTest.differentMethods":533,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":272,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":240,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":406,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":229,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":234,"org.easymock.tests2.MockBuilderTest.testCreateMockString":93,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":49,"org.easymock.tests.UsageExpectAndThrowTest.floatType":314,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":44,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":170,"org.easymock.tests.UsageVerifyTest.twoThrows":152,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":58,"org.easymock.samples.ExampleTest.voteAgainstRemoval":183,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":536,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":104,"org.easymock.tests.LimitationsTest.privateConstructor":465,"org.easymock.tests2.UsageConstraintsTest.testNotNull":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":424,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":109,"org.easymock.tests2.UsageTest.defaultResetToNice":257,"org.easymock.samples.ExampleTest.voteAgainstRemovals":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":348,"org.easymock.tests.UsageVarargTest.differentLength":458,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":266,"org.easymock.tests2.CallbackTest.callback":70,"org.easymock.tests2.UsageConstraintsTest.equals":202,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":175,"org.easymock.tests.UsageTest.openCallCountByLastCall":392,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":469,"org.easymock.tests.UsageCallCountTest.tooFewCalls":522,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":475,"org.easymock.tests.UsageThrowableTest.throwCheckedException":421,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":180,"org.easymock.tests.MockingTest.testStrictClassMocking":119,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":415,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":117,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":271,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":291,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":76,"org.easymock.tests.ObjectMethodsTest.testHashCode":486,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":5,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":507,"org.easymock.tests2.NameTest.nameForNiceMock":195,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":236,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":502,"org.easymock.tests2.DependencyTest.testInterfaceMocking":262,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.samples.ExampleTest.addDocument":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":65,"org.easymock.tests2.DelegateToTest.testStubDelegate":279,"org.easymock.tests2.AnswerTest.stubAnswer":75,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":531,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":173,"org.easymock.tests.UsageVarargTest.varargLongAccepted":460,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":534,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":32,"org.easymock.tests.UsageExpectAndReturnTest.floatType":30,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":83,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":80,"org.easymock.tests.UsageThrowableTest.noUpperLimit":418,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":215,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":247,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":199,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":283,"org.easymock.tests2.SerializationTest.test":26,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":12,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":405,"org.easymock.tests2.UsageConstraintsTest.testSame":205,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":336,"org.easymock.samples.SupportTest.addDocument":190,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":290,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":492,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":50,"org.easymock.tests.GenericTest.testPackageScope":129,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":246,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":352,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":490,"org.easymock.tests2.NameTest.nameForMock":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":345,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":174,"org.easymock.tests2.UsageStrictMockTest.differentMethods":310,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":101,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":31,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":326,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":484,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":389,"org.easymock.tests2.MockedExceptionTest.testRealException":237,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":441,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":308,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":468,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":365,"org.easymock.tests2.NameTest.nameForStrictMock":194,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":87,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":21,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":68,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":112,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":407,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":216,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":85,"org.easymock.tests2.UsageStrictMockTest.range":145,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":496,"org.easymock.tests2.UsageConstraintsTest.lessThan":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":539,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":436,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":294,"org.easymock.tests2.CaptureTest.testCaptureRightOne":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":54,"org.easymock.tests2.UsageConstraintsTest.testOr":206,"org.easymock.tests.UsageRangeTest.combination":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":95,"org.easymock.tests.UsageTest.wrongArguments":148,"org.easymock.tests2.MockBuilderTest.testWithConstructor":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":51,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":346,"org.easymock.tests.UsageVarargTest.varargShortAccepted":459,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":409,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":525,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":510,"org.easymock.tests2.UsageConstraintsTest.cmpTo":211,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":73,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":500,"org.easymock.tests2.CompareToTest.testLessThan":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":432,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests2.CaptureTest.testCaptureFromStub":18,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":355,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":86,"org.easymock.tests.UsageTest.unexpectedCallWithArray":147,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":506,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":523,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":347,"org.easymock.tests2.CaptureTest.testCapture":16,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":532,"org.easymock.tests2.UsageConstraintsTest.constraints":200,"org.easymock.samples.ExampleTest.addAndChangeDocument":187,"org.easymock.tests.UsageStrictMockTest.testVerify":535,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":189,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":530,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":401,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":13,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":478,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":166,"org.easymock.tests.LimitationsTest.abstractClass":464,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":479,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":453,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":299}}]
