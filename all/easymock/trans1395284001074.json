[{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[14,15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:105","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,14,38,39,15,16,40,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,1,2,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,3,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,234,235,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,4,5,286,287,6,7,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,8,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,17,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,9,10,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,12,453,454,13,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[8,473],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[206,208,210,226,434],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[239,240,241,387],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[47,0,50,51,1,2,55,56,62,66,67,70,74,117,125,126,127,144,155,157,162,178,216,219,3,220,284,4,5,6,7,288,298,299,300,8,407,9,10,474,475,476,11,447,451,12,454,13,455],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[477,478,479],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[480,160,162,179,185],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:81","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[18,19,20,22,24,25,26,29,193,194,195,197,199,200,201,204,224,233],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[129,130,131,136,137,139,142,162,163,166,168,169,186,253,254,255,412],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,14,38,39,15,16,40,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,1,2,55,56,57,481,482,483,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,484,79,80,81,485,82,83,486,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,487,117,118,488,119,120,121,122,489,123,490,124,125,126,491,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,3,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,492,493,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,4,5,286,287,6,7,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,8,494,306,307,308,309,310,311,495,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,17,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,9,10,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,475,442,443,444,445,446,447,448,449,450,451,452,12,453,454,13,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[19,20,22,25,26,29,194,195,197,200,201,204],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[496,497,498,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[47,53,115,246,284,287,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,353,355,356,357,358,359,360,399,9,435],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[23,30,31,37,14,38,39,15,16,42,43,44,46,47,48,49,50,52,53,54,55,56,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,87,90,100,106,114,115,117,120,122,123,126,129,130,132,133,136,137,138,139,140,141,142,143,144,145,146,147,148,151,155,156,157,160,161,162,163,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,198,205,206,207,208,209,210,211,212,213,214,215,218,3,220,223,225,226,227,228,230,232,234,234,235,235,236,239,240,241,242,243,244,245,246,251,252,253,254,255,256,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,301,302,303,304,305,8,319,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,353,354,355,356,357,358,359,360,361,362,378,384,386,387,388,395,396,397,398,399,400,414,416,426,9,10,427,428,429,430,431,432,434,435,437,439,440,441,447,448,449,450,453,13,455,461,462,464,468,469,470,471,472],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,14,38,39,15,16,40,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,1,2,55,56,57,481,482,483,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,484,79,80,81,485,82,83,486,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,487,117,118,488,119,120,121,122,489,123,490,124,125,126,491,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,3,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,492,493,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,4,5,286,287,6,7,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,8,494,306,307,308,309,310,311,495,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,17,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,9,10,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,475,442,443,444,445,446,447,448,449,450,451,452,12,453,454,13,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,14,38,39,15,16,40,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,1,2,55,56,57,481,482,483,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,484,79,80,81,485,82,83,486,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,487,117,118,488,119,120,121,122,489,123,490,124,125,126,491,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,3,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,492,493,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,4,5,286,287,6,7,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,8,494,306,307,308,309,310,311,495,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,17,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,9,10,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,475,442,443,444,445,446,447,448,449,450,451,452,12,453,454,13,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[23,30,31,32,33,34,35,36,37,39,15,16,42,43,44,46,47,48,49,0,50,51,52,53,54,1,2,55,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,90,100,106,114,115,116,117,120,121,122,123,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,154,155,156,157,160,161,162,163,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,198,206,207,208,210,211,212,213,214,215,216,217,218,219,3,220,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,242,243,244,245,246,247,248,249,250,252,253,254,255,256,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,4,5,286,287,6,7,288,294,295,296,297,298,299,300,301,302,303,304,305,8,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,353,354,355,356,357,358,359,360,361,362,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,412,414,415,426,9,10,427,428,429,430,431,432,434,435,438,442,443,444,445,446,447,449,450,451,452,12,453,454,13,455,456,461,462,464],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[500,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[480,160,162,179,185],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,14,38,39,15,16,40,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,1,2,55,56,57,481,482,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,484,79,80,81,485,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,490,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,496,497,498,502,499,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,503,212,213,214,215,216,217,218,219,3,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,492,493,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,4,5,286,287,6,7,288,289,290,291,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,292,293,294,295,296,297,298,299,300,301,302,303,304,305,8,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,17,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,9,10,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,12,453,454,13,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[30,32,75,76,77,78,80,81,82,87,90,100,106,116,500,117,118,120,121,122,123,125,126,501,127,526,527,528,143,144,146,147,148,149,151,154,155,156,157,191,234,234,235,235,236,237,238,257,260,283,328,414,415,416,419,460,461,462,464],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:422","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[417],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[129,131,139,162,163,166,168,169,171,181,186],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[23,30,31,37,15,42,43,47,48,49,50,52,53,54,55,56,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,81,82,87,90,100,106,115,117,120,122,123,126,129,130,132,133,136,137,138,139,141,142,143,144,145,146,147,148,151,155,156,157,160,161,162,163,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,191,198,207,211,212,213,214,215,218,3,220,223,225,227,228,230,236,242,244,245,246,252,253,256,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,301,302,303,304,305,328,353,355,356,357,358,359,360,361,362,414,418,426,10,437,447,448,449,450,453,13,455,461,462,464],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[30,31,32,529],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[23,47,49,0,50,51,1,2,55,56,62,66,70,74,77,80,117,122,125,144,157,162,178,198,216,218,219,3,220,221,258,260,262,284,285,4,5,6,7,288,292,294,295,298,299,300,8,313,350,351,390,393,394,407,420,421,422,426,9,10,433,436,437,438,447,451,12,453,454,13,455,456],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[530,531,4,532,533,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[129,131,139,169],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[500,501],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[47,53,115,246,255,284,287,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,353,355,356,357,358,359,360,399,9,435],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":163,"org.easymock.tests2.UsageTest.argumentsOrdered":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":284,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":372,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":51,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":224,"org.easymock.tests2.DelegateToTest.testReturnException":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":396,"org.easymock.tests.MockingTest.testPartialClassMocking":461,"org.easymock.tests.MockClassControlTest.testToString":420,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":109,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":94,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":330,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":43,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":525,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":170,"org.easymock.tests2.UsageTest.wrongArguments":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":252,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":29,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":249,"org.easymock.samples.ExampleTest.answerVsDelegate":226,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":260,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":466,"org.easymock.tests2.UsageConstraintsTest.testNull":166,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":146,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":425,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":70,"org.easymock.tests2.CaptureTest.testPrimitive":132,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":256,"org.easymock.tests.UsageTest.moreThanOneArgument":285,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":349,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":429,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":468,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.UsageVarargTest.varargIntAccepted":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":301,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":116,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":482,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":203,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":305,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":509,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":23,"org.easymock.tests.ReplayStateInvalidUsageTest.times":322,"org.easymock.tests2.DependencyTest.testClassMocking":40,"org.easymock.tests2.AnswerTest.answer":37,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":36,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":493,"org.easymock.tests2.CaptureTest.testAnd":129,"org.easymock.tests2.UsageTest.strictResetToDefault":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":428,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":65,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":472,"org.easymock.tests2.DelegateToTest.testDelegate":210,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":508,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":345,"org.easymock.tests.LimitationsTest.mockFinalMethod":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":446,"org.easymock.tests2.DependencyTest.testClassMockingSupport":41,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":350,"org.easymock.tests2.CaptureTest.testCapture1_2446744":133,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":343,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":34,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":316,"org.easymock.tests.UsageThrowableTest.throwError":353,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":259,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":475,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":108,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":512,"org.easymock.samples.PartialClassMockTest.testGetArea":236,"org.easymock.tests.MockingTest.testInterfaceMocking":463,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":317,"org.easymock.tests2.CompareToTest.testLessOrEqual":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":302,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":240,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":394,"org.easymock.tests2.UsageTest.niceToStrict":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":331,"org.easymock.tests2.ThreadingTest.testChangeDefault":503,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":363,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":120,"org.easymock.tests2.MockBuilderTest.testCreateMock":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":103,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":26,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":530,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":339,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":66,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":492,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":441,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":247,"org.easymock.tests.UsageOverloadedMethodTest.overloading":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":99,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":435,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":176,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":274,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":175,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":138,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":404,"org.easymock.tests.MockClassControlTest.testEquals":424,"org.easymock.tests2.EasyMockSupportClassTest.testAll":87,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":415,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":347,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":526,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":444,"org.easymock.tests2.CaptureTest.testCaptureAll":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":35,"org.easymock.tests.MockNameTest.defaultName":313,"org.easymock.tests2.UsageConstraintsTest.testMatches":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":430,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":314,"org.easymock.samples.ExampleTest.voteForRemovals":230,"org.easymock.tests.UsageVarargTest.allKinds":412,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":426,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":445,"org.easymock.samples.BasicClassMockTest.testPrintContent":238,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":359,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":400,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":200,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":209,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":495,"org.easymock.tests2.UsageConstraintsTest.greaterThan":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":88,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":448,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":157,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":513,"org.easymock.samples.ExampleTest.voteForRemoval":227,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":312,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":158,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":212,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":261,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":149,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":505,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":47,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":283,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":63,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":395,"org.easymock.tests2.CaptureTest.testCaptureFirst":142,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":17,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":64,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":56,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":438,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":270,"org.easymock.tests2.CaptureTest.testCapture2_2446744":141,"org.easymock.tests2.UsageTest.moreThanOneArgument":49,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":214,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":380,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":411,"org.easymock.tests.GenericTest.testBridgedEquals":417,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":299,"org.easymock.tests.UsageExpectAndReturnTest.longType":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":442,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":61,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":501,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":348,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":184,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":251,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":427,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":290,"org.easymock.tests.UsageCallCountTest.tooManyCalls":300,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":104,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":335,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":358,"org.easymock.tests.MockingTest.testNiceClassMocking":467,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":76,"org.easymock.tests.MockingTest.testClassMocking":459,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":500,"org.easymock.tests2.UsageConstraintsTest.testContains":174,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":293,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":191,"org.easymock.tests2.UsageConstraintsTest.testFind":165,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":246,"org.easymock.tests.MockTypeTest.fromEasyMockClass":258,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":451,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":46,"org.easymock.tests.UsageExpectAndReturnTest.object":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":27,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":69,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":406,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":392,"org.easymock.tests.UsageTest.exactCallCountByLastCall":288,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":469,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":386,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":83,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":401,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":279,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":434,"org.easymock.tests.MockClassControlTest.testHashCode":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":194,"org.easymock.tests2.EasyMockSupportTest.testVerify":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":97,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":470,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":440,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":432,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":33,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":128,"org.easymock.tests.UsageVarargTest.varargCharAccepted":405,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":494,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":385,"org.easymock.tests2.UsageTest.openCallCountByLastCall":52,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":477,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":72,"org.easymock.tests.DefaultClassInstantiatorTest.object":306,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":439,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":390,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":98,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":337,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":356,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":21,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":193,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":511,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":422,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":155,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":336,"org.easymock.tests.ReplayStateInvalidCallsTest.times":517,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":289,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":518,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":106,"org.easymock.tests2.UsageTest.resumeIfFailure":55,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":257,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":398,"org.easymock.tests2.StubTest.stubWithReturnValue":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":489,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":185,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":272,"org.easymock.tests2.SerializationTest.testAllMockedMethod":32,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":378,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":531,"org.easymock.samples.SupportTest.voteForRemovals":223,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":196,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":342,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":529,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":384,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":14,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":388,"org.easymock.tests.UsageExpectAndThrowTest.object":340,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":182,"org.easymock.tests2.DelegateToTest.testWrongClass":208,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":515,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":361,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":362,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.samples.ConstructorCalledMockTest.testTax":234,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":59,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":68,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":341,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":122,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":84,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":248,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":532,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":507,"org.easymock.tests2.CaptureTest.testCaptureNone":137,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":241,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":497,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":474,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":410,"org.easymock.tests2.ThreadingTest.testThreadSafe":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":101,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":297,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":393,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":237,"org.easymock.tests2.CaptureTest.testCapture_2617107":131,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":352,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageConstraintsTest.any":172,"org.easymock.tests2.StubTest.stub":114,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":321,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":397,"org.easymock.tests.UsageExpectAndThrowTest.longType":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":383,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":310,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":320,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":219,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests.LimitationsTest.mockNativeMethod":328,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":416,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":282,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":528,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":20,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":523,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":221,"org.easymock.tests2.NameTest.nameForMocksControl":113,"org.easymock.tests2.MockedExceptionTest.testMockedException":190,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":89,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":287,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":464,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":334,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":123,"org.easymock.tests.MockingTest.testNicePartialClassMocking":462,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":148,"org.easymock.tests2.CaptureTest.testCaptureLast":136,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":18,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":351,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":522,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":169,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":81,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":183,"org.easymock.tests.MockingTest.testTwoMocks":460,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":519,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":338,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":1,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":187,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":499,"org.easymock.samples.ExampleTest.removeNonExistingDocument":231,"org.easymock.tests.UsageStrictMockTest.differentMethods":455,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":25,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":318,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":195,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":502,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":308,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":213,"org.easymock.tests2.MockBuilderTest.testCreateMockString":127,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":91,"org.easymock.tests.UsageExpectAndThrowTest.floatType":332,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":86,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":39,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":486,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":100,"org.easymock.samples.ExampleTest.voteAgainstRemoval":228,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":373,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":156,"org.easymock.tests.LimitationsTest.privateConstructor":327,"org.easymock.tests2.UsageConstraintsTest.testNotNull":186,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":360,"org.easymock.tests2.UsageTest.defaultResetToNice":54,"org.easymock.samples.ExampleTest.voteAgainstRemovals":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":374,"org.easymock.tests.UsageVarargTest.differentLength":407,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":19,"org.easymock.tests2.CallbackTest.callback":74,"org.easymock.tests2.UsageConstraintsTest.equals":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":152,"org.easymock.tests.UsageTest.openCallCountByLastCall":286,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":254,"org.easymock.tests.UsageCallCountTest.tooFewCalls":295,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":250,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":498,"org.easymock.tests.UsageThrowableTest.throwCheckedException":357,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":533,"org.easymock.tests.MockingTest.testStrictClassMocking":458,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":80,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":243,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":24,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":77,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":323,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":79,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":16,"org.easymock.tests.ObjectMethodsTest.testHashCode":391,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":521,"org.easymock.tests2.NameTest.nameForNiceMock":112,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":215,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":516,"org.easymock.tests2.DependencyTest.testInterfaceMocking":42,"org.easymock.samples.ExampleTest.addDocument":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":107,"org.easymock.tests2.DelegateToTest.testStubDelegate":207,"org.easymock.tests2.AnswerTest.stubAnswer":15,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":453,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":490,"org.easymock.tests.UsageVarargTest.varargLongAccepted":409,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":371,"org.easymock.tests.UsageExpectAndReturnTest.floatType":265,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":281,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":82,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":235,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":436,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":202,"org.easymock.tests.UsageThrowableTest.noUpperLimit":354,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":161,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":57,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":134,"org.easymock.tests2.SerializationTest.test":31,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":307,"org.easymock.tests2.UsageConstraintsTest.testSame":167,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":264,"org.easymock.samples.SupportTest.addDocument":222,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":484,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":506,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":92,"org.easymock.tests.GenericTest.testPackageScope":414,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":201,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":465,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":504,"org.easymock.tests2.NameTest.nameForMock":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":275,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":491,"org.easymock.tests2.UsageStrictMockTest.differentMethods":220,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":153,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":267,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":344,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":389,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":450,"org.easymock.tests2.MockedExceptionTest.testRealException":192,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":262,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":375,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":253,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":325,"org.easymock.tests2.NameTest.nameForStrictMock":111,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":119,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":478,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":147,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":58,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":473,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":181,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":309,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":117,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":510,"org.easymock.tests2.UsageConstraintsTest.lessThan":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":197,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":370,"org.easymock.tests2.CaptureTest.testCaptureRightOne":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":96,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":496,"org.easymock.tests2.UsageConstraintsTest.testOr":168,"org.easymock.tests.UsageRangeTest.combination":447,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":144,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests2.MockBuilderTest.testWithConstructor":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":93,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":419,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":268,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":364,"org.easymock.tests.UsageVarargTest.varargShortAccepted":408,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":311,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":298,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":524,"org.easymock.tests2.UsageConstraintsTest.cmpTo":173,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":38,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":366,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests2.CaptureTest.testCaptureFromStub":140,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":315,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":118,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":520,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":296,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":277,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":454,"org.easymock.tests2.UsageConstraintsTest.constraints":162,"org.easymock.samples.ExampleTest.addAndChangeDocument":232,"org.easymock.tests.UsageStrictMockTest.testVerify":457,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":233,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":452,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":443,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":135,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":527,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":303,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":269,"org.easymock.tests.LimitationsTest.abstractClass":326,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":304,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":67}}]
