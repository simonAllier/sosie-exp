[{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[14,15,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[17,18,19,20,21,22,0,23,24,25,26],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[27,3,28,4,5,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,6,7,8,9,10,11,54,12,13,55,56],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[57],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,17,18,96,97,19,98,20,21,99,22,100,101,102,14,103,104,105,106,107,0,108,109,110,111,23,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,1,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,24,160,25,161,162,163,164,165,166,167,26,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,15,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,57,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,2,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,16,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[27,3,28,4,5,407,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,6,7,8,9,10,11,54,12,13,55,56],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[19,110,135,16],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[353],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.RecordState:222","failures":[229,230,330,333],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[229,230,353],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[28,77,408,409],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[82,252,294,295,410],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[82,150,156,157,15,252,411,412,294,295,322,323,326,327,335,336],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[105],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[135,137,285,287,307],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[27,3,28,413,414,415,416,417,11,54],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[138,344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[418,419],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,27,3,28,77,408,78,79,80,81,82,83,84,85,86,87,88,89,90,420,421,91,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,92,93,94,95,17,18,96,97,19,98,20,21,99,22,100,101,102,14,103,104,105,106,107,0,108,109,110,111,23,112,113,440,441,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,442,133,134,135,136,137,138,1,139,140,141,142,143,144,145,146,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,147,148,149,150,151,152,153,154,155,156,157,158,159,443,444,445,446,447,448,24,160,25,161,162,163,164,165,166,167,26,168,169,170,449,450,6,451,452,171,453,7,8,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,454,455,456,457,458,459,460,461,462,54,463,464,465,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,466,467,468,469,470,209,210,211,212,213,214,215,216,217,218,219,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,220,221,493,494,495,222,223,496,224,225,226,227,228,497,498,499,500,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,501,502,503,504,505,245,506,246,247,507,248,249,15,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,57,269,270,271,272,273,274,275,508,509,510,511,512,513,514,515,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,516,418,517,518,519,419,520,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,2,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,16,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,521,395,396,397,522,523,524,398,399,400,401,402,403,404,405,406,55,56],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[66,67,69,72,73,76,177,178,180,183,184,187],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[525],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[27,526,413,414,415,527,528,417],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[28,77,408,409],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[89],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[62,63,64,70,28,77,79,80,81,82,83,84,86,87,88,90,421,423,432,18,19,20,21,23,114,115,116,117,118,119,120,121,122,124,125,126,127,132,133,134,136,137,139,140,147,148,149,151,152,153,154,158,159,24,160,165,166,26,170,181,458,460,461,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,468,209,210,211,212,213,214,215,216,217,218,219,220,232,233,234,235,236,240,241,242,243,244,249,250,251,252,253,254,266,267,268,57,269,270,271,293,294,295,296,297,298,299,300,301,320,321,324,325,328,329,331,332,336,364,365,366,368,369,371,372,373,374,16,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,523,524,398,399,400,401,402,403,405,406],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[443],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":18,"org.easymock.tests2.UsageTest.argumentsOrdered":157,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":320,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":348,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":152,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":397,"org.easymock.tests2.DelegateToTest.testReturnException":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":297,"org.easymock.tests.MockingTest.testPartialClassMocking":504,"org.easymock.tests.MockClassControlTest.testToString":510,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":142,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":39,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":375,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":115,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":492,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":413,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":99,"org.easymock.tests2.UsageTest.wrongArguments":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":240,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":274,"org.easymock.samples.ExampleTest.answerVsDelegate":399,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":496,"org.easymock.tests2.UsageConstraintsTest.testNull":19,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":247,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":422,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":515,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":125,"org.easymock.tests2.CaptureTest.testPrimitive":161,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":394,"org.easymock.tests.UsageTest.moreThanOneArgument":321,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":234,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":256,"org.easymock.tests.UsageTest.argumentsOrdered":327,"org.easymock.tests.UsageVarargTest.varargIntAccepted":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":266,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":528,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":438,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":75,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":269,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":476,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":181,"org.easymock.tests.ReplayStateInvalidUsageTest.times":310,"org.easymock.tests2.DependencyTest.testClassMocking":440,"org.easymock.tests2.AnswerTest.answer":137,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":61,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":495,"org.easymock.tests2.CaptureTest.testAnd":24,"org.easymock.tests2.UsageTest.strictResetToDefault":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":430,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":233,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":290,"org.easymock.tests2.DelegateToTest.testDelegate":90,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":260,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":475,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":390,"org.easymock.tests.LimitationsTest.mockFinalMethod":500,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":300,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":265,"org.easymock.tests2.DependencyTest.testClassMockingSupport":441,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":229,"org.easymock.tests2.CaptureTest.testCapture1_2446744":162,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":388,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":59,"org.easymock.tests.UsageThrowableTest.throwError":212,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":304,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":223,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":236,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":53,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":479,"org.easymock.samples.PartialClassMockTest.testGetArea":522,"org.easymock.tests.MockingTest.testInterfaceMocking":245,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":362,"org.easymock.tests2.UsageTest.niceToStrict":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":40,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":376,"org.easymock.tests2.ThreadingTest.testChangeDefault":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":458,"org.easymock.tests2.MockBuilderTest.testCreateMock":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":184,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":384,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":121,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":494,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":228,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":272,"org.easymock.tests.UsageOverloadedMethodTest.overloading":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":50,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":103,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":200,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":209,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":14,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":167,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":367,"org.easymock.tests.MockClassControlTest.testEquals":514,"org.easymock.tests2.EasyMockSupportClassTest.testAll":32,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":468,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":392,"org.easymock.tests2.CaptureTest.testCaptureAll":160,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":263,"org.easymock.tests.MockNameTest.defaultName":337,"org.easymock.tests2.UsageConstraintsTest.testMatches":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":235,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":302,"org.easymock.samples.ExampleTest.voteForRemovals":403,"org.easymock.tests.UsageVarargTest.allKinds":16,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":293,"org.easymock.samples.BasicClassMockTest.testPrintContent":524,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":264,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":218,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":72,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":301,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":417,"org.easymock.tests2.UsageConstraintsTest.greaterThan":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":33,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":289,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":433,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":480,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":520,"org.easymock.samples.ExampleTest.voteForRemoval":400,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":434,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":133,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":425,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":472,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":521,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":147,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":118,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":296,"org.easymock.tests2.CaptureTest.testCaptureFirst":170,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":119,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":159,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":196,"org.easymock.tests2.CaptureTest.testCapture2_2446744":169,"org.easymock.tests2.UsageTest.moreThanOneArgument":149,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":135,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":355,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":374,"org.easymock.tests.GenericTest.testBridgedEquals":470,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":283,"org.easymock.tests.UsageExpectAndReturnTest.longType":192,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":393,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":110,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":292,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":232,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":238,"org.easymock.tests.UsageCallCountTest.tooManyCalls":284,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":186,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":380,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":217,"org.easymock.tests.MockingTest.testNiceClassMocking":507,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":450,"org.easymock.tests.MockingTest.testClassMocking":502,"org.easymock.tests2.UsageConstraintsTest.testContains":102,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":277,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":174,"org.easymock.tests2.UsageConstraintsTest.testFind":97,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":211,"org.easymock.tests.MockTypeTest.fromEasyMockClass":222,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":131,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":248,"org.easymock.tests.UsageExpectAndReturnTest.object":199,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":427,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":414,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":369,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":317,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":407,"org.easymock.tests.UsageTest.exactCallCountByLastCall":328,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":257,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":285,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":3,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":205,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":364,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":331,"org.easymock.tests.MockClassControlTest.testHashCode":513,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":66,"org.easymock.tests2.EasyMockSupportTest.testVerify":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":42,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":258,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":227,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":329,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":411,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":58,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":188,"org.easymock.tests.UsageVarargTest.varargCharAccepted":368,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":360,"org.easymock.tests2.UsageTest.openCallCountByLastCall":153,"org.easymock.tests.DefaultClassInstantiatorTest.object":516,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":127,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":226,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":315,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":43,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":382,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":215,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":179,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":65,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":512,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":478,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":431,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":381,"org.easymock.tests.ReplayStateInvalidCallsTest.times":484,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":206,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":237,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":485,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":51,"org.easymock.tests2.UsageTest.resumeIfFailure":158,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":493,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":299,"org.easymock.tests2.StubTest.stubWithReturnValue":63,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":11,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":111,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":198,"org.easymock.tests2.SerializationTest.testAllMockedMethod":408,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":353,"org.easymock.samples.SupportTest.voteForRemovals":396,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":68,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":387,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":409,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":359,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":138,"org.easymock.tests.UsageExpectAndThrowTest.object":385,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":287,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":108,"org.easymock.tests2.DelegateToTest.testWrongClass":88,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":482,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":270,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":271,"org.easymock.samples.ConstructorCalledMockTest.testTax":55,"org.easymock.tests.UsageStrictMockTest.range":252,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":92,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":449,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":525,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":386,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":29,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":312,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":273,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":474,"org.easymock.tests2.CaptureTest.testCaptureNone":166,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":363,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":444,"org.easymock.tests.UsageUnorderedTest.message":336,"org.easymock.tests.UsageVerifyTest.twoReturns":295,"org.easymock.tests.UsageVarargTest.varargByteAccepted":373,"org.easymock.tests2.ThreadingTest.testThreadSafe":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":46,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":281,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":523,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":318,"org.easymock.tests2.CaptureTest.testCapture_2617107":25,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":357,"org.easymock.tests2.UsageConstraintsTest.any":100,"org.easymock.tests2.StubTest.stub":62,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":358,"org.easymock.tests.UsageExpectAndThrowTest.longType":378,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":519,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":308,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":81,"org.easymock.tests2.SerializationTest.testClass":28,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":70,"org.easymock.tests.LimitationsTest.mockNativeMethod":499,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":469,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":208,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":178,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":490,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":84,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":445,"org.easymock.tests2.NameTest.nameForMocksControl":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":180,"org.easymock.tests2.MockedExceptionTest.testMockedException":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":34,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":325,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":506,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":379,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":420,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":461,"org.easymock.tests.MockingTest.testNicePartialClassMocking":505,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":424,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":526,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":176,"org.easymock.tests2.CaptureTest.testCaptureLast":165,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":230,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":489,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":7,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":21,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":109,"org.easymock.tests.MockingTest.testTwoMocks":503,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":486,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":383,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":156,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":112,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":448,"org.easymock.samples.ExampleTest.removeNonExistingDocument":404,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":183,"org.easymock.tests.UsageStrictMockTest.differentMethods":253,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":306,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":67,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":517,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":447,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":134,"org.easymock.tests2.MockBuilderTest.testCreateMockString":465,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":36,"org.easymock.tests.UsageExpectAndThrowTest.floatType":377,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":31,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":139,"org.easymock.tests.UsageVerifyTest.twoThrows":294,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":45,"org.easymock.samples.ExampleTest.voteAgainstRemoval":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":349,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":361,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":432,"org.easymock.tests.LimitationsTest.privateConstructor":498,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":5,"org.easymock.tests2.UsageConstraintsTest.testNotNull":23,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":172,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":219,"org.easymock.tests2.UsageTest.defaultResetToNice":155,"org.easymock.samples.ExampleTest.voteAgainstRemovals":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":350,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":177,"org.easymock.tests.UsageVarargTest.differentLength":370,"org.easymock.tests2.CallbackTest.callback":64,"org.easymock.tests2.UsageConstraintsTest.equals":96,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":428,"org.easymock.tests.UsageTest.openCallCountByLastCall":324,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":242,"org.easymock.tests.UsageCallCountTest.tooFewCalls":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":451,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":275,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":446,"org.easymock.tests.UsageThrowableTest.throwCheckedException":216,"org.easymock.tests.MockingTest.testStrictClassMocking":501,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":453,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":221,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":182,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":6,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":311,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":171,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":141,"org.easymock.tests.ObjectMethodsTest.testHashCode":316,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":527,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":488,"org.easymock.tests2.NameTest.nameForNiceMock":145,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":136,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":483,"org.easymock.tests2.DependencyTest.testInterfaceMocking":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":415,"org.easymock.samples.ExampleTest.addDocument":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":52,"org.easymock.tests2.DelegateToTest.testStubDelegate":87,"org.easymock.tests2.AnswerTest.stubAnswer":140,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":250,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":462,"org.easymock.tests.UsageVarargTest.varargLongAccepted":372,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":347,"org.easymock.tests.UsageExpectAndReturnTest.floatType":191,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":207,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":27,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":56,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":74,"org.easymock.tests.UsageThrowableTest.noUpperLimit":213,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":333,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":95,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":436,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":163,"org.easymock.tests2.SerializationTest.test":77,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":418,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":190,"org.easymock.tests2.UsageConstraintsTest.testSame":98,"org.easymock.samples.SupportTest.addDocument":395,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":452,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":473,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":37,"org.easymock.tests.GenericTest.testPackageScope":467,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":73,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":246,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":471,"org.easymock.tests2.NameTest.nameForMock":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":201,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":13,"org.easymock.tests2.UsageStrictMockTest.differentMethods":83,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":429,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":193,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":389,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":314,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":291,"org.easymock.tests2.MockedExceptionTest.testRealException":175,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":225,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":2,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":241,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":313,"org.easymock.tests2.NameTest.nameForStrictMock":144,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":457,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":129,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":439,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":518,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":455,"org.easymock.tests2.UsageStrictMockTest.range":82,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":477,"org.easymock.tests2.UsageConstraintsTest.lessThan":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":69,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":416,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":41,"org.easymock.tests2.CaptureTest.testCaptureRightOne":26,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":443,"org.easymock.tests2.UsageConstraintsTest.testOr":20,"org.easymock.tests.UsageRangeTest.combination":288,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":421,"org.easymock.tests.UsageTest.wrongArguments":323,"org.easymock.tests2.MockBuilderTest.testWithConstructor":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":38,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":509,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":194,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":339,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":419,"org.easymock.tests.UsageVarargTest.varargShortAccepted":371,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":282,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":491,"org.easymock.tests2.UsageConstraintsTest.cmpTo":101,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":1,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":341,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":154,"org.easymock.tests2.CaptureTest.testCaptureFromStub":168,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":303,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":456,"org.easymock.tests.UsageTest.unexpectedCallWithArray":322,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":487,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":280,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":12,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":203,"org.easymock.tests2.UsageConstraintsTest.constraints":17,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":251,"org.easymock.samples.ExampleTest.addAndChangeDocument":405,"org.easymock.tests.UsageStrictMockTest.testVerify":255,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":406,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":262,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":268,"org.easymock.tests.LimitationsTest.abstractClass":497,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":195,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":57,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":122,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":365}}]
