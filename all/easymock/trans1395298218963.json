[{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[36,37,38,39],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[40,41,42,43,44,45,46],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[47],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[48,49,50,51,52,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,6,7,10,11,12,68,34,69,70,71,72,73,74],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[75,54,76,77,78,55,79,56,80,57,58,59,81,60,82,83,84,85,61,86,62,63,64,87,88,89,90,91,92,93,94,95,96,97,98,99,65,66,100,101,102,103,104,105,106,107,108,109,110,111,112,113,67,114,6,7,10,11,12,68,34,35,69,70,71,115,116,117,118,119,120,121,122,123,124,125,72,126,127,128,129,130,131,132,133,73,74,134,135,136,137,138,139],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[55,140,141,142,143,67,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,144,145,146,147,148,149,150,151,152,73],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[153,82,83,154,84,85,155,156,157,158,36,38,94,95,96,159,160,97,98,99,65,66,161,162,100,163,164,165,166,167,101,168,169,102,103,170,171,112,172,173,174,175,176,116,117,118,177,178,179,180,126,129,181,181,182,182,183,184,185],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[186,187],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[55,140,188,189,170,190,141,142,5,191,192,193,143,194,67,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,195,144,196,145,146,147,148,149,150,151,152,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[40,41,42,197,198,36,45,199,161,46],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[55,140,188,189,170,190,141,142,5,191,192,193,143,194,67,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,200,201,202,195,144,196,145,146,147,148,149,150,151,152,73,203,204,205],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.RecordState:274","failures":[75,206,207,208,186,209,210,211,212,213,214],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[54,215,216,217,218,219,220,221,222,223,224],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[225,226,227,228,229,230,231,232,233,234,235,236],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[237,238,239,240,75,206,207,241,242,54,215,243,216,244,217,218,245,246,247,248,249,250,251,76,252,253,220,254,255,256,221,257,258,55,259,79,56,80,57,260,140,261,58,59,81,60,82,83,84,85,262,61,263,86,62,63,64,87,264,88,208,210,211,212,90,91,92,93,36,37,38,94,159,160,65,66,265,266,267,268,161,269,270,271,272,273,162,100,274,163,164,165,167,101,169,188,189,170,190,2,141,222,275,223,276,277,278,279,280,281,282,224,283,284,47,171,285,142,173,174,175,286,287,288,289,290,291,292,293,294,5,191,192,193,143,194,67,114,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,295,296,297,298,68,299,34,35,69,70,71,115,300,176,48,301,302,303,304,49,305,306,195,177,178,120,121,307,308,309,124,180,310,311,312,196,145,313,72,146,314,147,148,149,150,151,152,315,316,317,318,319,320,321,322,323,324,133,73,74,325,326,50,327,51,328,329,330,331,332,333,334,335,336,337,338,339,340,52,53,134,341,135,136,342,343,344,214,345,346,347,348,349],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,3,4,6,34],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[56,58,59,63,350,6,7,10,11,34,70,125,72,73,74],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[54,215,216,217,218,219,220,221,222,223,224],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[56,58,59,63,350,6,7,10,11,34,70,125,72,73,74],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[225,226,227,228,229,230,231,232,233,234,235,236],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:190","sourceCode":"if ((java.lang.reflect.Type[].int) != (java.lang.Class<?>[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:193","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isArray()) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            if (!(java.lang.Class<?>.getComponentType().equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n                return false;\n            } \n            break;\n        } \n    } \n    if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[351,352,353],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[354],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[356,36,94,357,95,96,159,160,97,98,99,65,358,66,166,179,126,129,183],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[241,252,256,359],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[222,275,223,276,277,278,279,280,282,224,283,284,47,360],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[361],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[362],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[249],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"suffix"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"failures":[266,292,5,15,17,31,32,48,49,50,51,52,53],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[245,246,249,76,253,220,254,255,256,65,364,109,306,121],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":215,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests2.UsageTest.argumentsOrdered":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":78,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":57,"org.easymock.tests2.StubTest.stubWithReturnValue":141,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":45,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":332,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":256,"org.easymock.tests2.SerializationTest.testAllMockedMethod":38,"org.easymock.tests2.DelegateToTest.testReturnException":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":191,"org.easymock.tests.MockingTest.testPartialClassMocking":173,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.tests.MockClassControlTest.testToString":116,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":352,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":25,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":103,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":13,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":156,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":186,"org.easymock.tests.UsageExpectAndThrowTest.object":23,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":254,"org.easymock.tests2.DelegateToTest.testWrongClass":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":40,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":49,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":305,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":311,"org.easymock.tests2.UsageTest.wrongArguments":56,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":236,"org.easymock.tests.UsageStrictMockTest.range":70,"org.easymock.samples.ConstructorCalledMockTest.testTax":181,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":293,"org.easymock.samples.ExampleTest.answerVsDelegate":214,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":129,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":153,"org.easymock.tests2.UsageConstraintsTest.testNull":216,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":97,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":109,"org.easymock.tests2.CaptureTest.testPrimitive":276,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":313,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":32,"org.easymock.tests.UsageTest.moreThanOneArgument":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":292,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":302,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests2.CaptureTest.testCaptureNone":281,"org.easymock.tests.UsageUnorderedTest.message":72,"org.easymock.tests.UsageVerifyTest.twoReturns":74,"org.easymock.tests.UsageVarargTest.varargByteAccepted":322,"org.easymock.tests2.ThreadingTest.testThreadSafe":269,"org.easymock.tests.UsageTest.argumentsOrdered":11,"org.easymock.tests.UsageVarargTest.varargIntAccepted":317,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":343,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":111,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":286,"org.easymock.tests2.CaptureTest.testCapture_2617107":223,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":94,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":145,"org.easymock.tests2.UsageConstraintsTest.any":246,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":160,"org.easymock.tests2.StubTest.stub":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":290,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":192,"org.easymock.tests.UsageExpectAndThrowTest.longType":16,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":62,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":77,"org.easymock.tests2.SerializationTest.testClass":36,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":88,"org.easymock.tests.LimitationsTest.mockNativeMethod":171,"org.easymock.tests2.AnswerTest.answer":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":53,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":179,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":268,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":232,"org.easymock.tests2.CaptureTest.testAnd":222,"org.easymock.tests2.UsageTest.strictResetToDefault":259,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":101,"org.easymock.tests2.NameTest.nameForMocksControl":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":233,"org.easymock.tests2.MockedExceptionTest.testMockedException":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":301,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":308,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":9,"org.easymock.tests2.DelegateToTest.testDelegate":240,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":17,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":175,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":98,"org.easymock.tests.MockingTest.testNicePartialClassMocking":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":28,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":165,"org.easymock.tests2.CompareToTest.testNotComparable":355,"org.easymock.tests2.CaptureTest.testCaptureLast":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":143,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":120,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":218,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":298,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":255,"org.easymock.tests.MockingTest.testTwoMocks":172,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":119,"org.easymock.tests2.CaptureTest.testCapture1_2446744":277,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":21,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":58,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":257,"org.easymock.tests.UsageThrowableTest.throwError":146,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":234,"org.easymock.tests.UsageStrictMockTest.differentMethods":71,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":226,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":128,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":271,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":230,"org.easymock.tests2.MockBuilderTest.testCreateMockString":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":304,"org.easymock.tests.UsageExpectAndThrowTest.floatType":15,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":76,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":210,"org.easymock.tests.UsageVerifyTest.twoThrows":73,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":157,"org.easymock.samples.PartialClassMockTest.testGetArea":183,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":363,"org.easymock.tests2.CompareToTest.testLessOrEqual":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":287,"org.easymock.samples.ExampleTest.voteAgainstRemoval":346,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":351,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":169,"org.easymock.tests2.UsageTest.niceToStrict":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":14,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":112,"org.easymock.tests2.UsageConstraintsTest.testNotNull":221,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":152,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":188,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":159,"org.easymock.tests2.UsageTest.defaultResetToNice":261,"org.easymock.tests2.MockBuilderTest.testCreateMock":99,"org.easymock.samples.ExampleTest.voteAgainstRemovals":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":338,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":231,"org.easymock.tests.UsageVarargTest.differentLength":132,"org.easymock.tests2.CallbackTest.callback":75,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":235,"org.easymock.tests.UsageTest.openCallCountByLastCall":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":22,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":106,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":241,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":205,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":196,"org.easymock.tests.UsageCallCountTest.tooFewCalls":136,"org.easymock.tests.UsageOverloadedMethodTest.overloading":285,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":250,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":334,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":154,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":249,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":294,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":354,"org.easymock.tests.UsageThrowableTest.throwCheckedException":149,"org.easymock.tests2.EasyMockSupportClassTest.testAll":155,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":178,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":30,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":296,"org.easymock.tests2.CaptureTest.testCaptureAll":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":267,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":195,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":84,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":89,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":83,"org.easymock.tests.MockNameTest.defaultName":113,"org.easymock.tests2.UsageConstraintsTest.testMatches":251,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":303,"org.easymock.samples.ExampleTest.voteForRemovals":348,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":43,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":273,"org.easymock.tests2.NameTest.nameForNiceMock":92,"org.easymock.tests.UsageVarargTest.allKinds":324,"org.easymock.tests2.DependencyTest.testInterfaceMocking":262,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":297,"org.easymock.samples.BasicClassMockTest.testPrintContent":185,"org.easymock.samples.ExampleTest.addDocument":347,"org.easymock.tests2.DelegateToTest.testStubDelegate":238,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":151,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":61,"org.easymock.tests2.AnswerTest.stubAnswer":211,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":194,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":35,"org.easymock.tests2.UsageConstraintsTest.greaterThan":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":307,"org.easymock.tests.UsageVarargTest.varargLongAccepted":321,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":102,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":115,"org.easymock.samples.ExampleTest.voteForRemoval":345,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":270,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":52,"org.easymock.tests.UsageExpectAndReturnTest.floatType":50,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":161,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":166,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":182,"org.easymock.tests.UsageThrowableTest.noUpperLimit":314,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":253,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":123,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":242,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":180,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":278,"org.easymock.tests2.SerializationTest.test":37,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":199,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":361,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":364,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":326,"org.easymock.tests2.UsageConstraintsTest.testSame":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":5,"org.easymock.tests2.CaptureTest.testCaptureFirst":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":105,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":125,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":330,"org.easymock.tests.GenericTest.testPackageScope":177,"org.easymock.tests2.CaptureTest.testCapture2_2446744":284,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":272,"org.easymock.tests2.UsageTest.moreThanOneArgument":79,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":65,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":229,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":323,"org.easymock.tests.GenericTest.testBridgedEquals":362,"org.easymock.tests2.NameTest.nameForMock":90,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":138,"org.easymock.tests.UsageExpectAndReturnTest.longType":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":33,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":358,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":335,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":31,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":353,"org.easymock.tests2.UsageStrictMockTest.differentMethods":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":29,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":51,"org.easymock.tests.UsageCallCountTest.tooManyCalls":139,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":27,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":309,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":135,"org.easymock.tests2.MockedExceptionTest.testRealException":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":331,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":131,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":312,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":82,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":357,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":341,"org.easymock.tests2.UsageConstraintsTest.testContains":248,"org.easymock.tests2.NameTest.nameForStrictMock":91,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":170,"org.easymock.tests2.UsageConstraintsTest.testFind":243,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":142,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":206,"org.easymock.tests.MockTypeTest.fromEasyMockClass":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":207,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":68,"org.easymock.tests.UsageExpectAndReturnTest.object":333,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":220,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":167,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":95,"org.easymock.tests2.UsageStrictMockTest.range":63,"org.easymock.tests2.UsageConstraintsTest.lessThan":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":108,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":319,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":227,"org.easymock.tests.UsageTest.exactCallCountByLastCall":12,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":306,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":197,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":104,"org.easymock.tests2.CaptureTest.testCaptureRightOne":224,"org.easymock.tests2.UsageConstraintsTest.testOr":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":46,"org.easymock.tests.UsageRangeTest.combination":121,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":339,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":315,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":100,"org.easymock.tests.UsageTest.wrongArguments":7,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":225,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":336,"org.easymock.tests.UsageVarargTest.varargShortAccepted":320,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":265,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":137,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":264,"org.easymock.tests2.UsageConstraintsTest.cmpTo":247,"org.easymock.tests.UsageVarargTest.varargCharAccepted":318,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":209,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":263,"org.easymock.tests2.UsageTest.openCallCountByLastCall":260,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":140,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":203,"org.easymock.tests2.CaptureTest.testCaptureFromStub":283,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":96,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":110,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":350,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":20,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":34,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":148,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":342,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":337,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.tests2.UsageConstraintsTest.constraints":54,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":118,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":168,"org.easymock.samples.ExampleTest.addAndChangeDocument":349,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":19,"org.easymock.tests.CapturesMatcherTest.test":360,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":340,"org.easymock.tests.UsageStrictMockTest.testVerify":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":200,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":299,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":295,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":279,"org.easymock.tests2.UsageTest.resumeIfFailure":81,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":329,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":289,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":124,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":107}}]
