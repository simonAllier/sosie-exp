[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,33,34,34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[36,37,38,0,1,2,39,40,41,42,43,44,45,46,47,3,48,4,49,5,50,51,52,53,54,6,55,56,57,58,59,60,61,62,7,11,12,63,13,64,65,66,67,68,69,70,15,16,17,71,18,72,19,20,73,74,21,23,75,76,77,78,79,80,24,81,82,25,83,84,85,86,87,88,89,90,91,26,92,93,94,95,96,27,97,98,99,28,100,101,102,29,103,104,105,106,30,31,32,107,108,109,110,111,112,33,33,34,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.LastControl:95","failures":[114,115,116,117,118,119,120,121,122,123,124],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.internal.RecordState:117","failures":[126,127,128,129,130,131,132,133],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[134],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[135,114,136,137,138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.LastControl:92","failures":[114,115,117,118,119,120,122,123,124],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[140],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"position":"org.easymock.internal.matchers.Any:36","failures":[141,142,143,144,113,145,146,147,148,149,150,151,152,153,154,155,156,157,117,158,159,160,161,140],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[162],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[115],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[163],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[44,164,165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[166,13,167,64],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[50],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[19,20,25,26,33,34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,168,169,170,171,144,172,173,113,145,146,147,148,174,175,176,177,149,154,155,6,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,12,157,195,196,65,66,67,68,197,69,70,16,18,19,20,21,198,24,25,26,27,99,28,199,100,101,102,103,30,31,32,200,201,202,35,203,204,205,206],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[207,208,209,210,211,12,63,13,212,73],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[213],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[214,215,216,217,218,219,134,220,168,169,170,171,221,222,223,224,225,226,227,141,142,228,229,230,143,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,144,252,172,173,253,254,113,145,146,147,148,174,175,176,177,255,256,257,258,259,260,261,262,263,149,150,151,152,153,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,154,155,315,316,317,318,156,319,320,321,322,323,126,324,325,326,327,328,329,178,179,180,181,182,183,330,331,184,185,332,186,187,188,333,189,190,191,192,193,334,335,336,337,194,338,339,340,127,341,342,343,344,157,345,195,196,346,167,347,348,114,115,349,116,163,117,118,136,119,158,350,351,352,137,353,354,355,356,120,357,358,359,360,121,361,138,362,363,364,365,366,367,368,369,370,371,372,373,374,65,197,375,376,377,378,75,76,77,379,128,129,380,139,381,382,383,384,385,386,162,387,388,389,390,130,391,392,131,393,132,394,395,396,397,122,159,123,398,399,400,401,160,161,213,124,402,403,140,404,405,406,407,408,198,409,24,199,200,201,410,202,411,203,133,204,205,412,206,413,414],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[116,119,120,121],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[214,172,173,195,196],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[63,67,70,415,416,417,212,418,419,420,421],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg","i":"i"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[12,63,13,422,73,104,33,33,34,34],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[423,424,251,292,425,426],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":115,"org.easymock.tests2.UsageTest.argumentsOrdered":388,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":290,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":372,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":335,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":384,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":411,"org.easymock.tests2.DelegateToTest.testReturnException":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":316,"org.easymock.tests.MockingTest.testPartialClassMocking":0,"org.easymock.tests.MockClassControlTest.testToString":57,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":86,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":270,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":207,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":149,"org.easymock.tests2.UsageTest.wrongArguments":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":313,"org.easymock.samples.ExampleTest.answerVsDelegate":133,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":52,"org.easymock.tests2.UsageConstraintsTest.testNull":116,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":100,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":62,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":371,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":7,"org.easymock.tests2.CaptureTest.testPrimitive":398,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":153,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":289,"org.easymock.tests.UsageTest.moreThanOneArgument":291,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":176,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":217,"org.easymock.tests.UsageTest.argumentsOrdered":297,"org.easymock.tests.UsageVarargTest.varargIntAccepted":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":113,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":15,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":148,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":341,"org.easymock.tests2.AnswerTest.answer":130,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":119,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":378,"org.easymock.tests2.CaptureTest.testAnd":122,"org.easymock.tests2.UsageTest.strictResetToDefault":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":175,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":170,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":366,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":220,"org.easymock.tests2.DelegateToTest.testDelegate":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":285,"org.easymock.tests.LimitationsTest.mockFinalMethod":55,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":225,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":268,"org.easymock.tests2.CaptureTest.testCapture1_2446744":399,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":283,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":376,"org.easymock.tests.UsageThrowableTest.throwError":256,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":255,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":98,"org.easymock.samples.PartialClassMockTest.testGetArea":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":145,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":229,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":271,"org.easymock.tests2.UsageTest.niceToStrict":383,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":18,"org.easymock.tests2.MockBuilderTest.testCreateMock":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":94,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":425,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":279,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":322,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":299,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":311,"org.easymock.tests.UsageOverloadedMethodTest.overloading":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":91,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":137,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":186,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":242,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":164,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":352,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":213,"org.easymock.tests2.EasyMockSupportClassTest.testAll":24,"org.easymock.tests.MockClassControlTest.testEquals":61,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":287,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":8,"org.easymock.tests2.CaptureTest.testCaptureAll":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":223,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":377,"org.easymock.tests.MockNameTest.defaultName":264,"org.easymock.tests2.UsageConstraintsTest.testMatches":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":177,"org.easymock.samples.ExampleTest.voteForRemovals":206,"org.easymock.tests.UsageVarargTest.allKinds":241,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":214,"org.easymock.samples.BasicClassMockTest.testPrintContent":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":224,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":262,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":319,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":339,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":211,"org.easymock.tests2.UsageConstraintsTest.greaterThan":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":81,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":169,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":32,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":46,"org.easymock.samples.ExampleTest.voteForRemoval":204,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":407,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":107,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":22,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":29,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":3,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":380,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":364,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":315,"org.easymock.tests2.CaptureTest.testCaptureFirst":140,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":365,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":390,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":331,"org.easymock.tests2.CaptureTest.testCapture2_2446744":403,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":198,"org.easymock.tests2.UsageTest.moreThanOneArgument":381,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":21,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":240,"org.easymock.tests.GenericTest.testBridgedEquals":50,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":125,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":305,"org.easymock.tests.UsageExpectAndReturnTest.longType":181,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":221,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":362,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":288,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":245,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":286,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":266,"org.easymock.tests.UsageCallCountTest.tooManyCalls":306,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":95,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":275,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":261,"org.easymock.tests.MockingTest.testNiceClassMocking":39,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":66,"org.easymock.tests.MockingTest.testClassMocking":37,"org.easymock.tests2.UsageConstraintsTest.testContains":351,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":77,"org.easymock.tests2.UsageConstraintsTest.testFind":349,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":244,"org.easymock.tests.MockTypeTest.fromEasyMockClass":307,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":129,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":249,"org.easymock.tests.UsageExpectAndReturnTest.object":332,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":370,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":208,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":235,"org.easymock.tests.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":141,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":218,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":63,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":190,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":231,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":325,"org.easymock.tests.MockClassControlTest.testHashCode":60,"org.easymock.tests2.EasyMockSupportTest.testVerify":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":89,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":219,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":126,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":375,"org.easymock.tests.UsageVarargTest.varargCharAccepted":234,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":344,"org.easymock.tests2.UsageTest.openCallCountByLastCall":385,"org.easymock.tests.DefaultClassInstantiatorTest.object":40,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":373,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":320,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":277,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":259,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":30,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":59,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":276,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":27,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":58,"org.easymock.tests2.UsageTest.resumeIfFailure":389,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":318,"org.easymock.tests2.StubTest.stubWithReturnValue":405,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":212,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":185,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":360,"org.easymock.tests2.SerializationTest.testAllMockedMethod":64,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":226,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":426,"org.easymock.samples.SupportTest.voteForRemovals":202,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":282,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":166,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":227,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":391,"org.easymock.tests.UsageExpectAndThrowTest.object":280,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":357,"org.easymock.tests2.DelegateToTest.testWrongClass":338,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":154,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":155,"org.easymock.tests.UsageStrictMockTest.range":172,"org.easymock.samples.ConstructorCalledMockTest.testTax":33,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":369,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":281,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":78,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":312,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":423,"org.easymock.tests2.CaptureTest.testCaptureNone":161,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":230,"org.easymock.tests.UsageUnorderedTest.message":143,"org.easymock.tests.UsageVerifyTest.twoReturns":216,"org.easymock.tests.UsageVarargTest.varargByteAccepted":239,"org.easymock.tests2.ThreadingTest.testThreadSafe":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":92,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":303,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":111,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":248,"org.easymock.tests2.CaptureTest.testCapture_2617107":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":152,"org.easymock.tests2.UsageConstraintsTest.any":158,"org.easymock.tests2.StubTest.stub":404,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":267,"org.easymock.tests.UsageExpectAndThrowTest.longType":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":317,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":44,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":345,"org.easymock.tests2.SerializationTest.testClass":13,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":334,"org.easymock.tests.LimitationsTest.mockNativeMethod":6,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":5,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":193,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":10,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":346,"org.easymock.tests2.NameTest.nameForMocksControl":397,"org.easymock.tests2.MockedExceptionTest.testMockedException":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":82,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":295,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":2,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":274,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":99,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":20,"org.easymock.tests.MockingTest.testNicePartialClassMocking":1,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":102,"org.easymock.tests2.CaptureTest.testCaptureLast":160,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":269,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":118,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":70,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":358,"org.easymock.tests.MockingTest.testTwoMocks":38,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":415,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":278,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":387,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":361,"org.easymock.tests.UsageStrictMockTest.differentMethods":173,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":42,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":408,"org.easymock.tests2.MockBuilderTest.testCreateMockString":23,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":83,"org.easymock.tests.UsageExpectAndThrowTest.floatType":272,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":131,"org.easymock.tests.UsageVerifyTest.twoThrows":215,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":26,"org.easymock.samples.ExampleTest.voteAgainstRemoval":205,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":228,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":31,"org.easymock.tests.LimitationsTest.privateConstructor":54,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":421,"org.easymock.tests2.UsageConstraintsTest.testNotNull":121,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":263,"org.easymock.tests2.UsageTest.defaultResetToNice":162,"org.easymock.samples.ExampleTest.voteAgainstRemovals":203,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":189,"org.easymock.tests.UsageVarargTest.differentLength":236,"org.easymock.tests2.CallbackTest.callback":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":104,"org.easymock.tests.UsageTest.openCallCountByLastCall":294,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":151,"org.easymock.tests.UsageCallCountTest.tooFewCalls":301,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":314,"org.easymock.tests.UsageThrowableTest.throwCheckedException":260,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":424,"org.easymock.tests.MockingTest.testStrictClassMocking":36,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":142,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":69,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":197,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":132,"org.easymock.tests2.CompareToTest.testGreateOrEqual":135,"org.easymock.tests.ObjectMethodsTest.testHashCode":247,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":409,"org.easymock.tests2.NameTest.nameForNiceMock":396,"org.easymock.tests2.DependencyTest.testInterfaceMocking":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":209,"org.easymock.samples.ExampleTest.addDocument":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":97,"org.easymock.tests2.DelegateToTest.testStubDelegate":194,"org.easymock.tests2.AnswerTest.stubAnswer":393,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":144,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":422,"org.easymock.tests.UsageVarargTest.varargLongAccepted":238,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":253,"org.easymock.tests.UsageExpectAndReturnTest.floatType":180,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":34,"org.easymock.tests.UsageThrowableTest.noUpperLimit":257,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":348,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":109,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":400,"org.easymock.tests2.SerializationTest.test":167,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":165,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":41,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":179,"org.easymock.tests2.UsageConstraintsTest.testSame":163,"org.easymock.samples.SupportTest.addDocument":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":84,"org.easymock.tests.GenericTest.testPackageScope":4,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":134,"org.easymock.tests2.NameTest.nameForMock":394,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":419,"org.easymock.tests2.UsageStrictMockTest.differentMethods":196,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":105,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":182,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":284,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":171,"org.easymock.tests2.MockedExceptionTest.testRealException":379,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":310,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":150,"org.easymock.tests2.NameTest.nameForStrictMock":395,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":71,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":128,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":101,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":110,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":120,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":43,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":16,"org.easymock.tests2.UsageStrictMockTest.range":195,"org.easymock.tests2.UsageConstraintsTest.lessThan":138,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":210,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":363,"org.easymock.tests2.CaptureTest.testCaptureRightOne":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":88,"org.easymock.tests2.UsageConstraintsTest.testOr":117,"org.easymock.tests.UsageRangeTest.combination":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":28,"org.easymock.tests.UsageTest.wrongArguments":293,"org.easymock.tests2.MockBuilderTest.testWithConstructor":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":188,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":45,"org.easymock.tests.UsageVarargTest.varargShortAccepted":237,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":304,"org.easymock.tests2.UsageConstraintsTest.cmpTo":350,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":392,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":386,"org.easymock.tests2.CaptureTest.testCaptureFromStub":402,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":17,"org.easymock.tests.UsageTest.unexpectedCallWithArray":292,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":251,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":302,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":418,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":333,"org.easymock.tests2.UsageConstraintsTest.constraints":114,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":252,"org.easymock.samples.ExampleTest.addAndChangeDocument":413,"org.easymock.tests.UsageStrictMockTest.testVerify":254,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":414,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":222,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":146,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":9,"org.easymock.tests.LimitationsTest.abstractClass":53,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":147,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":368}}]
