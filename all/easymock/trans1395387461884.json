[{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[19,20,10,21,22,23],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[25,26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[27,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[30,31,32,33,34,35,36,0,1,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,24,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,29,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,19,115,116,117,118,20,119,120,121,122,123,124,125,126,127,128,129,130,131,132,25,133,134,135,136,137,138,139,140,141,142,143,144,144,145,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,6,7,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,10,11,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,12,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,21,247,248,22,249,250,251,252,253,254,255,256,257,258,259,23,260,261,262,263,264,265,266,26,267,268,269],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[270,271,272,273,274,275,276],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[36,0,1,116,2,3,4,277,278,279,280,281,282,283,169,6,7,284,285,187,199,10,11,12,247,16,17,18,286,255],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[117,287],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[24,58,288],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[30,33,34,35,289,290,36,291,0,1,292,37,38,293,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,24,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,294,73,74,75,76,295,77,78,296,79,80,297,81,298,82,83,299,84,85,300,301,86,87,88,89,90,91,29,92,93,94,95,96,97,98,99,100,101,102,103,104,302,105,106,107,108,110,111,112,114,303,304,305,306,19,115,116,2,117,307,118,20,119,3,4,120,121,122,123,124,125,126,127,128,129,130,131,132,25,133,134,135,136,308,137,309,138,139,140,141,142,143,310,144,145,311,146,312,147,148,149,150,313,151,152,314,315,153,154,155,156,157,158,159,160,161,162,163,164,165,166,316,317,5,169,318,6,7,319,320,321,322,323,170,172,174,175,183,184,185,186,324,194,195,196,197,198,199,10,11,200,201,202,203,204,325,326,327,328,329,205,330,331,332,333,334,335,336,337,338,339,340,341,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,12,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,21,247,15,16,248,22,17,18,249,256,257,258,259,23,260,261,262,263,264,265,266,26,267,268,269,342,343,344,345,346,347,348,348],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[349,350,351],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[34,144,144,145,145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[36,0,1,352,353,354,355,116,2,3,4,5,169,6,7,187,199,10,11,12,247,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[0,1,6,7,199],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[46,77,81,138,356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[357,82,83,299,84,85,300,301,86,88,358,89,90,91,29,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:244","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[30,33,34,35,289,290,36,291,0,1,292,37,38,293,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,24,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,294,73,74,75,76,295,77,78,296,79,80,297,81,298,82,83,299,84,85,300,301,86,87,88,89,90,91,29,92,93,94,95,96,97,98,99,100,101,102,103,104,302,105,106,107,108,110,111,112,114,303,304,305,306,19,115,116,2,117,307,118,20,119,3,4,120,121,122,123,124,125,126,127,128,129,130,131,132,25,133,134,135,136,308,137,309,138,139,140,141,142,143,310,144,145,311,146,312,147,148,149,150,313,151,152,314,315,153,154,155,156,157,158,159,160,161,162,163,164,165,166,316,317,5,169,318,6,7,319,320,321,322,323,170,172,174,175,183,184,185,186,324,194,195,196,197,198,199,10,11,200,201,202,203,204,325,326,327,328,329,205,330,331,332,333,334,335,336,337,338,339,340,341,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,12,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,21,247,15,16,248,22,17,18,249,256,257,258,259,23,260,261,262,263,264,265,266,26,267,268,269,342,343,344,345,346,347,348,348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:131","failures":[359],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[46,47,139,143,144,145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[360,196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:127","sourceCode":"for (int int = int ; int <= int ; int++) {\n    final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = java.util.List<org.easymock.internal.UnorderedBehavior>.get(int).getMessages(org.easymock.internal.Invocation);\n    java.util.List<org.easymock.internal.ErrorMessage>.addAll(java.util.List<org.easymock.internal.ErrorMessage>);\n    for (final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage : java.util.List<org.easymock.internal.ErrorMessage>) {\n        if (org.easymock.internal.ErrorMessage.isMatching()) {\n            int++;\n        } \n    }\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[0,361,6,10,11],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[30,33,34,35,289,290,36,291,0,1,292,37,38,293,40,41,42,43,44,49,50,51,352,353,354,355,52,53,54,24,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,295,78,296,81,298,362,82,83,299,84,85,300,301,86,87,88,89,90,91,29,105,106,107,108,110,111,112,114,303,304,305,306,19,115,116,2,117,307,118,20,119,3,4,120,121,122,124,125,128,129,130,131,132,25,133,134,135,136,137,309,139,141,147,148,149,150,313,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,316,317,5,169,318,6,7,319,363,320,321,322,323,170,172,173,174,175,364,183,187,194,195,196,197,198,199,10,11,200,201,202,203,204,325,326,327,328,329,205,330,331,332,333,334,335,337,338,339,340,341,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,12,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,21,247,15,16,248,22,17,18,249,255,256,257,258,259,23,260,261,262,263,264,265,266,26,267,268,365,366,269,342,343,344,367],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[59,60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:243","failures":[36,0,1,43,45,46,47,48,77,78,79,80,81,111,122,123,124,125,126,127,128,129,132,25,133,134,135,136,137,138,139,140,141,142,143,146,147,149,150,151,153,154,155,156,157,164,169,6,7,171,172,173,174,175,183,189,192,193,194,200,201,202,203,205,206,207,208,209,210,211,212,215,216,218,219,220,222,223,224,225,226,256,257,26,267,268],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[349,350,351],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[110,112,113,114,148,368,185],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":24,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":21,"org.easymock.tests2.UsageTest.argumentsOrdered":4,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":161,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":307,"org.easymock.tests2.StubTest.stubWithReturnValue":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":275,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":310,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":216,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":73,"org.easymock.tests2.SerializationTest.testAllMockedMethod":293,"org.easymock.tests2.DelegateToTest.testReturnException":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":159,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":167,"org.easymock.tests.MockingTest.testPartialClassMocking":26,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":281,"org.easymock.samples.SupportTest.voteForRemovals":146,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":189,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":227,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":46,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":168,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":31,"org.easymock.tests.UsageExpectAndThrowTest.object":237,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":190,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":71,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":270,"org.easymock.tests2.DelegateToTest.testWrongClass":112,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":256,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":257,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":194,"org.easymock.tests2.UsageTest.wrongArguments":2,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.samples.ConstructorCalledMockTest.testTax":144,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":322,"org.easymock.samples.ExampleTest.answerVsDelegate":148,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":100,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":123,"org.easymock.tests2.UsageConstraintsTest.testNull":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":238,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":79,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":102,"org.easymock.tests2.CaptureTest.testPrimitive":84,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":198,"org.easymock.tests.UsageTest.moreThanOneArgument":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":246,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":321,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":202,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":193,"org.easymock.tests2.CaptureTest.testCaptureNone":87,"org.easymock.tests.UsageUnorderedTest.message":12,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":13,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageVarargTest.varargByteAccepted":339,"org.easymock.tests2.ThreadingTest.testThreadSafe":40,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":250,"org.easymock.tests.UsageTest.argumentsOrdered":18,"org.easymock.tests.UsageVarargTest.varargIntAccepted":333,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":344,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":314,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":282,"org.easymock.tests2.CaptureTest.testCapture_2617107":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":153,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":283,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":274,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":197,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":296,"org.easymock.tests2.UsageConstraintsTest.any":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":368,"org.easymock.tests2.StubTest.stub":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":157,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":182,"org.easymock.tests.UsageExpectAndThrowTest.longType":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":160,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":349,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":279,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":291,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":92,"org.easymock.tests2.SerializationTest.testClass":37,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":39,"org.easymock.tests.LimitationsTest.mockNativeMethod":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":226,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":206,"org.easymock.tests2.AnswerTest.answer":30,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":288,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":306,"org.easymock.tests2.CaptureTest.testAnd":82,"org.easymock.tests2.UsageTest.strictResetToDefault":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":309,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":292,"org.easymock.tests2.NameTest.nameForMocksControl":355,"org.easymock.tests2.MockedExceptionTest.testMockedException":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":97,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":174,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":22,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":254,"org.easymock.tests2.DelegateToTest.testDelegate":114,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":231,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":80,"org.easymock.tests.MockingTest.testNicePartialClassMocking":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":242,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":136,"org.easymock.tests2.CaptureTest.testCaptureLast":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":162,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":255,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":59,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":329,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":72,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":286,"org.easymock.tests2.CaptureTest.testCapture1_2446744":85,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":304,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":235,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":75,"org.easymock.tests.UsageThrowableTest.throwError":258,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":364,"org.easymock.tests.UsageStrictMockTest.differentMethods":7,"org.easymock.tests2.ConstraintsToStringTest.andToString":280,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":42,"org.easymock.tests2.MockBuilderTest.testCreateMockString":298,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":14,"org.easymock.tests.UsageExpectAndThrowTest.floatType":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":204,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":67,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":33,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":47,"org.easymock.samples.PartialClassMockTest.testGetArea":143,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":154,"org.easymock.samples.ExampleTest.voteAgainstRemoval":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":191,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":228,"org.easymock.tests2.UsageTest.niceToStrict":117,"org.easymock.tests2.UsageConstraintsTest.testNotNull":74,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":264,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":105,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":78,"org.easymock.tests2.MockBuilderTest.testCreateMock":297,"org.easymock.tests2.UsageTest.defaultResetToNice":119,"org.easymock.samples.ExampleTest.voteAgainstRemovals":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":222,"org.easymock.tests.UsageVarargTest.differentLength":336,"org.easymock.tests2.CallbackTest.callback":51,"org.easymock.tests.UsageTest.openCallCountByLastCall":248,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":236,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":98,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":52,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":320,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":196,"org.easymock.tests.UsageCallCountTest.tooFewCalls":342,"org.easymock.tests.UsageOverloadedMethodTest.overloading":165,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":65,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":186,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":218,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":126,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":164,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":350,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":64,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":323,"org.easymock.tests.UsageThrowableTest.throwCheckedException":261,"org.easymock.tests2.EasyMockSupportClassTest.testAll":45,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":330,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":244,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":305,"org.easymock.tests2.CaptureTest.testCaptureAll":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":266,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":128,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":125,"org.easymock.tests2.UsageConstraintsTest.testMatches":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":127,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":203,"org.easymock.samples.ExampleTest.voteForRemovals":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":273,"org.easymock.tests2.NameTest.nameForNiceMock":354,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":44,"org.easymock.tests.UsageVarargTest.allKinds":341,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":199,"org.easymock.tests2.DependencyTest.testInterfaceMocking":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":328,"org.easymock.samples.BasicClassMockTest.testPrintContent":315,"org.easymock.samples.ExampleTest.addDocument":313,"org.easymock.tests2.DelegateToTest.testStubDelegate":111,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":263,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":289,"org.easymock.tests2.AnswerTest.stubAnswer":34,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":163,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":169,"org.easymock.tests2.UsageConstraintsTest.greaterThan":68,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":173,"org.easymock.tests.UsageVarargTest.varargLongAccepted":338,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":140,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":319,"org.easymock.samples.ExampleTest.voteForRemoval":149,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":41,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":225,"org.easymock.tests.UsageExpectAndReturnTest.floatType":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":308,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":122,"org.easymock.tests2.ConstraintsToStringTest.orToString":277,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":145,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests.UsageThrowableTest.noUpperLimit":259,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":69,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":53,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":19,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":170,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":300,"org.easymock.tests2.SerializationTest.test":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":360,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":95,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":27,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":208,"org.easymock.tests2.UsageConstraintsTest.testSame":57,"org.easymock.samples.SupportTest.addDocument":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":158,"org.easymock.tests2.CaptureTest.testCaptureFirst":29,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":96,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":214,"org.easymock.tests.GenericTest.testPackageScope":205,"org.easymock.tests2.CaptureTest.testCapture2_2446744":91,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":43,"org.easymock.tests2.UsageTest.moreThanOneArgument":116,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":253,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":81,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":340,"org.easymock.tests2.NameTest.nameForMock":352,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":346,"org.easymock.tests.UsageExpectAndReturnTest.longType":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":325,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":219,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":294,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":171,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":243,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":200,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":181,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":287,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":211,"org.easymock.tests.UsageCallCountTest.tooManyCalls":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":241,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":175,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":269,"org.easymock.tests2.MockedExceptionTest.testRealException":108,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":232,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":262,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":195,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":124,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":366,"org.easymock.tests2.NameTest.nameForStrictMock":353,"org.easymock.tests2.UsageConstraintsTest.testContains":63,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":107,"org.easymock.tests2.UsageConstraintsTest.testFind":55,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":166,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":135,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":316,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":50,"org.easymock.tests.UsageExpectAndReturnTest.object":217,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":70,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":137,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":77,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":101,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":335,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":271,"org.easymock.tests.UsageTest.exactCallCountByLastCall":249,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":265,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":94,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":251,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":188,"org.easymock.tests2.UsageConstraintsTest.testOr":58,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":276,"org.easymock.tests.UsageRangeTest.combination":172,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":331,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":25,"org.easymock.tests.UsageTest.wrongArguments":16,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":185,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":367,"org.easymock.tests2.EasyMockSupportTest.testVerify":302,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":212,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":220,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":252,"org.easymock.tests.UsageVarargTest.varargShortAccepted":337,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":177,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":184,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":345,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":303,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":8,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":362,"org.easymock.tests2.UsageConstraintsTest.cmpTo":62,"org.easymock.tests.UsageVarargTest.varargCharAccepted":334,"org.easymock.tests2.CaptureTest.testCaptureMultiple":357,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":32,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":290,"org.easymock.tests2.UsageTest.openCallCountByLastCall":118,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":20,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":104,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":176,"org.easymock.tests2.CaptureTest.testCaptureFromStub":90,"org.easymock.tests.UsageTest.unexpectedCallWithArray":15,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":9,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":260,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":343,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":221,"org.easymock.tests2.CaptureTest.testCapture":358,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":318,"org.easymock.tests2.UsageConstraintsTest.constraints":54,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":233,"org.easymock.samples.ExampleTest.addAndChangeDocument":152,"org.easymock.tests2.ConstraintsToStringTest.notToString":278,"org.easymock.tests.CapturesMatcherTest.test":348,"org.easymock.tests.UsageStrictMockTest.testVerify":363,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":224,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":180,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":312,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":326,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":301,"org.easymock.tests2.UsageTest.resumeIfFailure":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":156,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":361,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":99}}]
