[{"position":"org.easymock.internal.RecordState:274","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[52,53,54,11,11,12,12,13,55,56,57,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,58,59,60,61,62,63,64,65,44,66,67,68,69,70,71,72,73,47,74,75,48,50,51,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[126,127,128,129],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:50","failures":[11,12,13,14,15,130,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[92,97,131],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[132,133,134,135],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[54,13,136,58,137,59,60,62,63,64,65,66,67,138,68,81,110,112,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[69,70,71,139,140,141,142,143,144,145,146,147,148,149],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[150,151,152,153,154,155],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[156,0,157,158,159,160,161,52,53,54,162,163,164,11,11,12,12,165,166,167,168,169,170,171,13,172,55,173,174,175,176,177,1,2,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,126,212,127,213,214,132,215,216,217,218,219,220,221,222,223,224,225,226,128,227,228,229,230,133,129,231,232,233,19,22,32,38,59,62,64,65,67,234,69,70,71,139,235,236,237,238,72,73,47,74,239,75,48,3,4,5,6,7,8,50,9,240,241,242,134,243,244,245,246,247,248,249,250,251,252,253,254,255,256,76,77,257,78,79,80,82,86,87,88,10,258,259,260,140,141,142,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,150,280,281,282,283,91,143,144,145,146,147,148,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,135,314,315,316,108,109,110,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,151,376,152,377,378,379,380,381,382,383,384,385,386,387,388,389,153,154,390,391,392,393,394,117,395,396,397,398,149,122,123,124,155,399,400],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[266,269],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[213,216],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"position":"org.easymock.internal.LastControl:92","failures":[198,200,208,127,213,216,217,219,228],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[156,0,157,158,159,160,401,161,52,53,54,162,163,164,11,11,12,12,165,166,167,168,169,170,171,13,172,55,402,403,173,174,404,405,406,407,408,175,409,410,411,412,413,414,56,57,415,416,176,177,1,417,2,418,419,420,421,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,126,212,127,213,422,214,132,215,216,217,218,219,220,221,222,223,224,225,226,128,227,228,229,230,133,129,231,232,233,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,423,58,59,60,61,62,63,64,65,44,66,67,68,424,425,426,427,428,234,429,430,431,432,433,434,69,70,71,139,435,235,236,237,238,72,73,47,74,239,75,48,3,4,5,6,7,8,50,51,9,240,241,242,134,243,244,245,246,247,248,249,250,251,252,253,254,255,256,76,77,257,78,79,80,81,436,82,83,84,85,86,87,88,89,90,10,437,258,259,438,260,439,140,141,142,261,262,263,264,265,440,441,442,443,266,267,268,269,270,271,272,273,274,275,276,444,445,446,277,278,279,150,280,281,282,283,91,143,144,145,146,147,148,447,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,448,307,308,309,310,311,312,313,135,314,315,316,449,450,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,317,318,319,320,321,322,323,324,325,451,452,453,454,455,456,457,458,459,460,461,462,326,112,463,464,113,465,466,327,328,467,329,330,331,332,333,334,335,468,336,337,338,339,469,340,341,342,470,471,131,472,473,114,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,151,376,152,377,378,379,380,381,382,383,384,385,386,387,388,389,153,154,390,391,392,393,394,115,116,117,118,395,396,397,474,475,476,477,478,398,149,119,120,121,122,123,479,124,480,481,125,155,399,482,400,483],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MockBuilder:163","failures":[11,12,41,46,83],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[156,0,157,158,159,160,161,52,53,162,163,164,165,166,167,168,169,170,171,13,172,173,174,175,176,177,1,2,418,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,126,212,127,213,214,132,215,216,217,218,219,220,221,222,223,224,225,226,128,227,228,229,230,133,129,231,232,233,19,62,64,65,234,3,4,5,6,7,9,240,241,242,134,243,244,245,246,247,248,249,250,251,252,253,254,255,256,77,79,82,85,86,87,88,10,437,258,259,438,260,140,141,142,261,262,263,264,265,440,266,267,268,269,270,271,272,273,274,275,276,444,445,278,279,150,280,281,282,283,143,144,145,146,147,148,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,135,92,109,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,342,471,343,344,345,362,368,374,375,151,376,152,377,378,379,380,381,382,383,384,385,386,387,388,389,153,154,390,391,392,393,394,395,396,397,398,149,122,155,399,400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[13,484,485,486,487,488,43,44,50,51],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:266","sourceCode":"return ","type":"CtReturnImpl"},"failures":[177,185,192,69,70,71,139,259,263,264,266,268,269,270,271,272,273,143,144,145,146,147,148,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,327,331,345,396,149],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":213,"org.easymock.tests2.UsageTest.argumentsOrdered":195,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":327,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":356,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":190,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":165,"org.easymock.tests2.DelegateToTest.testReturnException":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":144,"org.easymock.tests.MockingTest.testPartialClassMocking":122,"org.easymock.tests.MockClassControlTest.testToString":94,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":435,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":26,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":284,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":484,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":218,"org.easymock.tests2.UsageTest.wrongArguments":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":261,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":414,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":442,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":113,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":481,"org.easymock.tests2.UsageConstraintsTest.testNull":132,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":78,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":99,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":253,"org.easymock.tests2.CaptureTest.testPrimitive":201,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":303,"org.easymock.tests.UsageTest.moreThanOneArgument":328,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":281,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":314,"org.easymock.tests.UsageTest.argumentsOrdered":333,"org.easymock.tests.UsageVarargTest.varargIntAccepted":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":390,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":433,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":394,"org.easymock.tests.ReplayStateInvalidUsageTest.times":459,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests2.DependencyTest.testClassMocking":402,"org.easymock.tests2.AnswerTest.answer":3,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":363,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":421,"org.easymock.tests2.CaptureTest.testAnd":198,"org.easymock.tests2.UsageTest.strictResetToDefault":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":248,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":372,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":450,"org.easymock.tests2.DelegateToTest.testDelegate":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":299,"org.easymock.tests.LimitationsTest.mockFinalMethod":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":478,"org.easymock.tests2.DependencyTest.testClassMockingSupport":403,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":444,"org.easymock.tests2.CaptureTest.testCapture1_2446744":202,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":436,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":419,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":453,"org.easymock.tests.UsageThrowableTest.throwError":266,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":464,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":434,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":283,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":40,"org.easymock.samples.PartialClassMockTest.testGetArea":54,"org.easymock.tests.MockingTest.testInterfaceMocking":479,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":391,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":278,"org.easymock.tests2.UsageTest.niceToStrict":189,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":62,"org.easymock.tests2.MockBuilderTest.testCreateMock":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":35,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":411,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":293,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":249,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":276,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":440,"org.easymock.tests.UsageOverloadedMethodTest.overloading":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":31,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":224,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":259,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":343,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":383,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":223,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":207,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":448,"org.easymock.tests.MockClassControlTest.testEquals":98,"org.easymock.tests2.EasyMockSupportClassTest.testAll":19,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":109,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":420,"org.easymock.tests2.CaptureTest.testCaptureAll":199,"org.easymock.tests.MockNameTest.defaultName":447,"org.easymock.tests2.UsageConstraintsTest.testMatches":225,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":451,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":282,"org.easymock.samples.ExampleTest.voteForRemovals":160,"org.easymock.tests.UsageVarargTest.allKinds":135,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":395,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":477,"org.easymock.samples.BasicClassMockTest.testPrintContent":53,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":272,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":178,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":430,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":488,"org.easymock.tests2.UsageConstraintsTest.greaterThan":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":371,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":88,"org.easymock.samples.ExampleTest.voteForRemoval":157,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":106,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":89,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":81,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":185,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":91,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":246,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":143,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":166,"org.easymock.tests2.CaptureTest.testCaptureFirst":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":352,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":247,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":439,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":379,"org.easymock.tests2.UsageTest.moreThanOneArgument":187,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":134,"org.easymock.tests2.CaptureTest.testCapture2_2446744":210,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":364,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":313,"org.easymock.tests.GenericTest.testBridgedEquals":111,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":340,"org.easymock.tests.UsageExpectAndReturnTest.longType":376,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":474,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":244,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":138,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":302,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":133,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":141,"org.easymock.tests.UsageCallCountTest.tooManyCalls":341,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":380,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":413,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":271,"org.easymock.tests.MockingTest.testNiceClassMocking":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":73,"org.easymock.tests.MockingTest.testClassMocking":120,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":468,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":137,"org.easymock.tests2.UsageConstraintsTest.testContains":222,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":71,"org.easymock.tests2.UsageConstraintsTest.testFind":214,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":345,"org.easymock.tests.MockTypeTest.fromEasyMockClass":463,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":2,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":317,"org.easymock.tests.UsageExpectAndReturnTest.object":382,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":82,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":485,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":308,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":472,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":130,"org.easymock.tests.UsageTest.exactCallCountByLastCall":334,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":482,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":315,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":51,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":388,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":304,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":258,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":425,"org.easymock.tests.MockClassControlTest.testHashCode":97,"org.easymock.tests2.EasyMockSupportTest.testVerify":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":29,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":316,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":10,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":418,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":423,"org.easymock.tests.UsageVarargTest.varargCharAccepted":307,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":369,"org.easymock.tests2.UsageTest.openCallCountByLastCall":191,"org.easymock.tests.DefaultClassInstantiatorTest.object":100,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":255,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":274,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":30,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":407,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":424,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":96,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":86,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":290,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":389,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":38,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":95,"org.easymock.tests2.UsageTest.resumeIfFailure":196,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":146,"org.easymock.tests2.StubTest.stubWithReturnValue":177,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":43,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":129,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":381,"org.easymock.tests2.SerializationTest.testAllMockedMethod":55,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":362,"org.easymock.samples.SupportTest.voteForRemovals":163,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":427,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":296,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":368,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":4,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":483,"org.easymock.tests.UsageExpectAndThrowTest.object":294,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":229,"org.easymock.tests2.DelegateToTest.testWrongClass":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":399,"org.easymock.samples.ConstructorCalledMockTest.testTax":11,"org.easymock.tests.UsageStrictMockTest.range":322,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":415,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":251,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":72,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":295,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":16,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":441,"org.easymock.tests2.CaptureTest.testCaptureNone":206,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":279,"org.easymock.tests.UsageUnorderedTest.message":342,"org.easymock.tests.UsageVerifyTest.twoReturns":397,"org.easymock.tests.UsageVarargTest.varargByteAccepted":312,"org.easymock.tests2.ThreadingTest.testThreadSafe":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":33,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":339,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":473,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":52,"org.easymock.tests2.CaptureTest.testCapture_2617107":200,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":446,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":366,"org.easymock.tests2.UsageConstraintsTest.any":220,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":458,"org.easymock.tests2.StubTest.stub":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":145,"org.easymock.tests.UsageExpectAndThrowTest.longType":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":367,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":104,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":457,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":181,"org.easymock.tests2.SerializationTest.testClass":13,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":234,"org.easymock.tests.LimitationsTest.mockNativeMethod":117,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":154,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":110,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":406,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":184,"org.easymock.tests2.NameTest.nameForMocksControl":238,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":408,"org.easymock.tests2.MockedExceptionTest.testMockedException":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":21,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":331,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":417,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":288,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":76,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":65,"org.easymock.tests.MockingTest.testNicePartialClassMocking":123,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":80,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":404,"org.easymock.tests2.CaptureTest.testCaptureLast":205,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":445,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":48,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":217,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":230,"org.easymock.tests.MockingTest.testTwoMocks":121,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":292,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":194,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":232,"org.easymock.samples.ExampleTest.removeNonExistingDocument":401,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":455,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":410,"org.easymock.tests.UsageStrictMockTest.differentMethods":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":426,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":102,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":242,"org.easymock.tests2.MockBuilderTest.testCreateMockString":68,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":23,"org.easymock.tests.UsageExpectAndThrowTest.floatType":286,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":18,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":6,"org.easymock.tests.UsageVerifyTest.twoThrows":396,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":32,"org.easymock.samples.ExampleTest.voteAgainstRemoval":158,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":357,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":87,"org.easymock.tests.LimitationsTest.privateConstructor":116,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":15,"org.easymock.tests2.UsageConstraintsTest.testNotNull":231,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":69,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":273,"org.easymock.tests2.UsageTest.defaultResetToNice":193,"org.easymock.samples.ExampleTest.voteAgainstRemovals":156,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":405,"org.easymock.tests.UsageVarargTest.differentLength":309,"org.easymock.tests2.CallbackTest.callback":9,"org.easymock.tests2.UsageConstraintsTest.equals":422,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":83,"org.easymock.tests.UsageTest.openCallCountByLastCall":330,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":263,"org.easymock.tests.UsageCallCountTest.tooFewCalls":337,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":74,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":443,"org.easymock.tests.UsageThrowableTest.throwCheckedException":270,"org.easymock.tests.MockingTest.testStrictClassMocking":119,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":149,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":409,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":47,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":460,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":239,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":8,"org.easymock.tests.ObjectMethodsTest.testHashCode":131,"org.easymock.tests2.NameTest.nameForNiceMock":237,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":243,"org.easymock.tests2.DependencyTest.testInterfaceMocking":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":486,"org.easymock.samples.ExampleTest.addDocument":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":34,"org.easymock.tests2.DelegateToTest.testStubDelegate":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":39,"org.easymock.tests2.AnswerTest.stubAnswer":7,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":320,"org.easymock.tests.UsageVarargTest.varargLongAccepted":311,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":355,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":153,"org.easymock.tests.UsageExpectAndReturnTest.floatType":151,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":50,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":12,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":438,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":432,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":227,"org.easymock.tests.UsageThrowableTest.noUpperLimit":267,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":212,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":56,"org.easymock.tests2.SerializationTest.test":172,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":203,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":101,"org.easymock.tests2.UsageConstraintsTest.testSame":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":375,"org.easymock.samples.SupportTest.addDocument":162,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":24,"org.easymock.tests.GenericTest.testPackageScope":108,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":431,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":480,"org.easymock.tests2.NameTest.nameForMock":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":384,"org.easymock.tests2.UsageStrictMockTest.differentMethods":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":152,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":298,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":470,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":373,"org.easymock.tests2.MockedExceptionTest.testRealException":139,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":466,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":359,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":462,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":262,"org.easymock.tests2.NameTest.nameForStrictMock":236,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":61,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":79,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":57,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":103,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":228,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":59,"org.easymock.tests2.UsageStrictMockTest.range":182,"org.easymock.tests2.UsageConstraintsTest.lessThan":233,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":428,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":487,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":28,"org.easymock.tests2.CaptureTest.testCaptureRightOne":208,"org.easymock.tests2.UsageConstraintsTest.testOr":216,"org.easymock.tests.UsageRangeTest.combination":370,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":77,"org.easymock.tests.UsageTest.wrongArguments":329,"org.easymock.tests2.MockBuilderTest.testWithConstructor":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":25,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":377,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":347,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":105,"org.easymock.tests.UsageVarargTest.varargShortAccepted":310,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":469,"org.easymock.tests2.UsageConstraintsTest.cmpTo":221,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":349,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.CaptureTest.testCaptureFromStub":209,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":452,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":60,"org.easymock.tests.UsageTest.unexpectedCallWithArray":467,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":338,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":45,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":386,"org.easymock.tests2.UsageConstraintsTest.constraints":127,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":321,"org.easymock.samples.ExampleTest.addAndChangeDocument":161,"org.easymock.tests.UsageStrictMockTest.testVerify":325,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":164,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":475,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":392,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":136,"org.easymock.tests.LimitationsTest.abstractClass":115,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":393,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":250,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":305}}]
