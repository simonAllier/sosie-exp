[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,1,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,0,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[34,35,36,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[4,17,98,99,100,101,102,103,104,105,106,107,108,109,205,206,207,208,209,210,211,212,213,214,215,216],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[34,35,36,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[490,491,492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[164,168,445],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[265,266,424],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[67,493],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[34,35,36,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[3,45,83,84,85,86,88,89,90,113,116,126,132,149,151,152,154,169,223,227,229,231,235,289,363,364,366,379],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[229,275],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[381],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[494,495,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[54,71,169,302],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[497,493,498,499,500],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[84,85,89,90,103,104,137,138,144,145,150,160,163,165,173,175,176,185,188,190,196,197,198,199,210,211,221,224,229,231,235,237,269,270,273,274,275,276,277,311,312,313,347,348,349,352,353,394,395,397,398,423,424,425,439,440,483,486,487,488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[168],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[57],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[501,502,503,504,348,394],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[89,91,363,364,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[66],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[401],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[139,160,169,201,202,203,204,218,219,279,355,356,357,358,359,368,369,374,375,376,377],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[20,22,30,50,51,54,56,57,59,1,73],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"this"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[4,17,98,99,100,101,102,103,104,105,106,107,108,109,205,206,207,208,209,210,211,212,213,214,215,216],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,18,19,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,1,69,70,71,72,73,74,75,76,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,226,227,228,229,231,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,273,274,275,276,277,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,0,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[239],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[280,281,282,284,286],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[34,35,36,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[280,284],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[505,506,507,508],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:173","failures":[39],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[162,165,237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[138,144,145,175,269,509,348,349,352,353,394,397,424,425,432],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[6,92,93,94,95,96,97,200,238,240,426],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[3,34,116,126,132,155,161,162,165,221,223,224,227,228,229,231,234,235,237,270,275,404],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":51,"org.easymock.tests2.UsageTest.argumentsOrdered":145,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":346,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":332,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":140,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":4,"org.easymock.tests2.DelegateToTest.testReturnException":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":304,"org.easymock.tests.MockingTest.testPartialClassMocking":363,"org.easymock.tests.MockClassControlTest.testToString":311,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":195,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":388,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":459,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":116,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":181,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":454,"org.easymock.tests2.UsageTest.wrongArguments":138,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":109,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":376,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":275,"org.easymock.tests2.UsageConstraintsTest.testNull":54,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":368,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":152,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":191,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":316,"org.easymock.tests2.CaptureTest.testPrimitive":23,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":458,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":478,"org.easymock.tests.UsageTest.moreThanOneArgument":347,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":319,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":409,"org.easymock.tests.UsageTest.argumentsOrdered":353,"org.easymock.tests.UsageVarargTest.varargIntAccepted":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":378,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":221,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":215,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":382,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":491,"org.easymock.tests.ReplayStateInvalidUsageTest.times":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":103,"org.easymock.tests2.DependencyTest.testClassMocking":178,"org.easymock.tests2.AnswerTest.answer":92,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":204,"org.easymock.tests2.CaptureTest.testAnd":20,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":272,"org.easymock.tests2.UsageTest.strictResetToDefault":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":225,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":186,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":372,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":413,"org.easymock.tests2.DelegateToTest.testDelegate":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":474,"org.easymock.tests.LimitationsTest.mockFinalMethod":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":359,"org.easymock.tests2.DependencyTest.testClassMockingSupport":179,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":439,"org.easymock.tests2.CaptureTest.testCapture1_2446744":24,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":156,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":472,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":202,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":444,"org.easymock.tests.UsageThrowableTest.throwError":261,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":274,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":386,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":134,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":445,"org.easymock.tests.MockingTest.testInterfaceMocking":365,"org.easymock.tests2.CompareToTest.testLessOrEqual":500,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":379,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":434,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":487,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":460,"org.easymock.tests2.UsageTest.niceToStrict":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":121,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":227,"org.easymock.tests2.MockBuilderTest.testCreateMock":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":129,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":106,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":468,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":187,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":271,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":438,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":414,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":374,"org.easymock.tests.UsageOverloadedMethodTest.overloading":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":125,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":429,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":64,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":252,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":2,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":63,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":29,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":294,"org.easymock.tests2.EasyMockSupportClassTest.testAll":113,"org.easymock.tests.MockClassControlTest.testEquals":315,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":403,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":476,"org.easymock.tests2.CaptureTest.testCaptureAll":21,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":357,"org.easymock.tests.MockNameTest.defaultName":488,"org.easymock.tests2.UsageConstraintsTest.testMatches":65,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":442,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":320,"org.easymock.samples.ExampleTest.voteForRemovals":10,"org.easymock.tests.UsageVarargTest.allKinds":302,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":423,"org.easymock.samples.BasicClassMockTest.testPrintContent":16,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":358,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":267,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":212,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":308,"org.easymock.tests2.UsageConstraintsTest.greaterThan":67,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":114,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":371,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":163,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":286,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":167,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":164,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":276,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":155,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":405,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":184,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":111,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":303,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":37,"org.easymock.tests2.CaptureTest.testCaptureFirst":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":185,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":147,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":432,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":248,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":169,"org.easymock.tests2.UsageTest.moreThanOneArgument":137,"org.easymock.tests2.CaptureTest.testCapture2_2446744":32,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":340,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":301,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":421,"org.easymock.tests.UsageExpectAndReturnTest.longType":244,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":355,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":477,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":481,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":71,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":475,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":317,"org.easymock.tests.UsageCallCountTest.tooManyCalls":422,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":492,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":249,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":464,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":266,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":84,"org.easymock.tests.MockingTest.testNiceClassMocking":369,"org.easymock.tests.MockingTest.testClassMocking":361,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":415,"org.easymock.tests2.UsageConstraintsTest.testContains":62,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":219,"org.easymock.tests2.UsageConstraintsTest.testFind":53,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":408,"org.easymock.tests.MockTypeTest.fromEasyMockClass":273,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":392,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":240,"org.easymock.tests.UsageExpectAndReturnTest.object":251,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":190,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":296,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":485,"org.easymock.tests.UsageTest.exactCallCountByLastCall":354,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":410,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":387,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":257,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":291,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":428,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":206,"org.easymock.tests.MockClassControlTest.testHashCode":314,"org.easymock.tests2.EasyMockSupportTest.testVerify":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":123,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":490,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":411,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":437,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":426,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":201,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":148,"org.easymock.tests.UsageVarargTest.varargCharAccepted":295,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":278,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":345,"org.easymock.tests2.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":494,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":193,"org.easymock.tests.DefaultClassInstantiatorTest.object":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":436,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":483,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":509,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":124,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":101,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":205,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":161,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":313,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":465,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":258,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":132,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":312,"org.easymock.tests2.UsageTest.resumeIfFailure":146,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":270,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":306,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":230,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":72,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":250,"org.easymock.tests2.SerializationTest.testAllMockedMethod":36,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":338,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":502,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":208,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":471,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":489,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":344,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":93,"org.easymock.tests.UsageExpectAndThrowTest.object":469,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":389,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":69,"org.easymock.tests2.DelegateToTest.testWrongClass":40,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":479,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":480,"org.easymock.tests.UsageStrictMockTest.range":397,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":81,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":189,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":470,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":229,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":110,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":375,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":503,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":435,"org.easymock.tests2.CaptureTest.testCaptureNone":28,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":506,"org.easymock.tests.UsageUnorderedTest.message":269,"org.easymock.tests.UsageVerifyTest.twoReturns":425,"org.easymock.tests.UsageVarargTest.varargByteAccepted":300,"org.easymock.tests2.ThreadingTest.testThreadSafe":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":127,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":419,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":486,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":15,"org.easymock.tests2.CaptureTest.testCapture_2617107":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":441,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":342,"org.easymock.tests2.UsageConstraintsTest.any":60,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":449,"org.easymock.tests2.StubTest.stub":43,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":385,"org.easymock.tests.UsageExpectAndThrowTest.longType":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":343,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":283,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":448,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":174,"org.easymock.tests2.SerializationTest.testClass":34,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":210,"org.easymock.tests.LimitationsTest.mockNativeMethod":289,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":260,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":100,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":177,"org.easymock.tests2.NameTest.nameForMocksControl":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":102,"org.easymock.tests2.MockedExceptionTest.testMockedException":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":115,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":351,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":463,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":239,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":366,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":149,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":231,"org.easymock.tests.MockingTest.testNicePartialClassMocking":364,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":154,"org.easymock.tests2.CompareToTest.testCompareEqual":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":98,"org.easymock.tests2.CaptureTest.testCaptureLast":27,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":440,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":57,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":90,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":70,"org.easymock.tests.MockingTest.testTwoMocks":362,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":467,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":144,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":74,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":508,"org.easymock.samples.ExampleTest.removeNonExistingDocument":11,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":446,"org.easymock.tests.UsageStrictMockTest.differentMethods":398,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":105,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":207,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":281,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":168,"org.easymock.tests2.MockBuilderTest.testCreateMockString":237,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":309,"org.easymock.tests.UsageExpectAndThrowTest.floatType":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":117,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":112,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":95,"org.easymock.tests.UsageVerifyTest.twoThrows":424,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":47,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":126,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":333,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":162,"org.easymock.tests.LimitationsTest.privateConstructor":288,"org.easymock.tests2.UsageConstraintsTest.testNotNull":73,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":217,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":268,"org.easymock.tests2.UsageTest.defaultResetToNice":143,"org.easymock.samples.ExampleTest.voteAgainstRemovals":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":334,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":99,"org.easymock.tests.UsageVarargTest.differentLength":297,"org.easymock.tests2.CallbackTest.callback":200,"org.easymock.tests2.UsageConstraintsTest.equals":52,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":158,"org.easymock.tests.UsageTest.openCallCountByLastCall":350,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":456,"org.easymock.tests.UsageCallCountTest.tooFewCalls":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":86,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":377,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":507,"org.easymock.tests.UsageThrowableTest.throwCheckedException":265,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":504,"org.easymock.tests.MockingTest.testStrictClassMocking":360,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":391,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":89,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":104,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":85,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":88,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":97,"org.easymock.tests2.CompareToTest.testGreateOrEqual":499,"org.easymock.tests.ObjectMethodsTest.testHashCode":484,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":170,"org.easymock.tests2.NameTest.nameForNiceMock":198,"org.easymock.tests2.DependencyTest.testInterfaceMocking":180,"org.easymock.samples.ExampleTest.addDocument":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":133,"org.easymock.tests2.DelegateToTest.testStubDelegate":39,"org.easymock.tests2.AnswerTest.stubAnswer":96,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":395,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":232,"org.easymock.tests.UsageVarargTest.varargLongAccepted":299,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":331,"org.easymock.tests.UsageExpectAndReturnTest.floatType":243,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":259,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":45,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":214,"org.easymock.tests.UsageThrowableTest.noUpperLimit":262,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":49,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":76,"org.easymock.tests2.SerializationTest.test":35,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":25,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":280,"org.easymock.tests2.UsageConstraintsTest.testSame":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":242,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":87,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":118,"org.easymock.tests.GenericTest.testPackageScope":402,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":213,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":367,"org.easymock.tests2.NameTest.nameForMock":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":253,"org.easymock.tests2.UsageStrictMockTest.differentMethods":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":236,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":159,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":245,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":473,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":482,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":373,"org.easymock.tests2.MockedExceptionTest.testRealException":220,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":277,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":335,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":455,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":453,"org.easymock.tests2.NameTest.nameForStrictMock":197,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":226,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":495,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":238,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":153,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":80,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":282,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":223,"org.easymock.tests2.UsageStrictMockTest.range":175,"org.easymock.tests2.UsageConstraintsTest.lessThan":75,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":209,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":122,"org.easymock.tests2.CaptureTest.testCaptureRightOne":30,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":505,"org.easymock.tests2.UsageConstraintsTest.testOr":56,"org.easymock.tests.UsageRangeTest.combination":370,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":150,"org.easymock.tests.UsageTest.wrongArguments":349,"org.easymock.tests2.MockBuilderTest.testWithConstructor":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":119,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":323,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":284,"org.easymock.tests.UsageVarargTest.varargShortAccepted":298,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":420,"org.easymock.tests2.UsageConstraintsTest.cmpTo":61,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":94,"org.easymock.tests2.CompareToTest.testLessThan":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":325,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests2.CaptureTest.testCaptureFromStub":31,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":443,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":224,"org.easymock.tests.UsageTest.unexpectedCallWithArray":348,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":394,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":418,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":255,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":396,"org.easymock.tests2.UsageConstraintsTest.constraints":50,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests.UsageStrictMockTest.testVerify":400,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":17,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":393,"org.easymock.tests2.CompareToTest.testGreateThan":493,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":356,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":380,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":247,"org.easymock.tests.LimitationsTest.abstractClass":287,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":188,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":292}}]
