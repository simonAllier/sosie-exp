[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:169","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","m":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[22,23,24,25],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[48,49,50],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[51,52,53,46,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[79,80,81,82,83,84,85,86,87,88,89,90,6,91,92,93,94,95,7,8,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,9,130,131,132,133,134,135,10,136,137,138,139,140,28,52,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,14,15,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,16,17,221,222,223,224,18,225,226,227,228,229,230,231,232,233,234,235,19,236,237,238,63,239,64,66,67,68,240,241,242,47,243,244,245,246,247,248,249,250,251,252,253,254,78,255,256,257,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,23,280,281,282,283,284,24,285,20,286,287,288,289,290,291,292,293,294,25,1,2,3,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[295,296],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[297,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[300,253,78],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[301,301,302,302,26,303],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[304,305,5,6,94,95,8,96,101,9,130,131,132,133,134,135,10,150,160,306,307,308,175,196,14,15,203,220,17,221,18,226,227,230,231,233,234,19,309,310,311,312,246,257,276,277,281,282,293,294],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[146,203,253,254,78,255,256,257],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[274,275],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[313,314,315,55,316,317,65,318,66,319,67,68,320,69,321,322,323,324,1],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksBehavior:200","failures":[238],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[325,326,327,328],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[30,32,41,273,274,276,278,279,280,288,293],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[329],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[79,80,81,82,83,84,330,331,304,332,305,333,4,5,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,295,356,85,313,296,86,87,88,89,90,6,91,357,358,359,360,361,362,363,364,365,366,367,368,369,51,370,92,93,94,95,7,8,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,371,372,129,373,9,130,374,131,132,133,134,135,10,375,376,377,378,379,380,381,382,383,384,300,385,386,387,388,389,136,390,391,392,393,394,137,395,138,139,140,396,28,52,141,142,143,397,398,399,400,401,144,145,146,147,148,149,402,150,151,152,403,153,154,155,156,157,158,159,160,306,161,162,404,163,405,406,407,408,164,409,410,411,53,46,412,54,413,414,415,165,166,167,168,169,170,416,307,308,417,418,314,419,420,421,422,315,423,424,171,172,425,426,427,428,429,430,431,432,433,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,13,434,435,436,196,14,15,437,438,439,440,48,49,441,442,297,50,443,197,198,199,200,201,202,203,204,205,206,207,444,208,301,302,55,209,210,211,212,213,214,445,446,447,448,449,215,450,451,452,453,454,455,456,457,216,217,218,219,220,16,17,221,222,223,224,458,459,460,461,462,463,56,57,58,59,464,60,61,62,465,18,225,226,227,228,229,230,231,232,233,234,235,19,466,467,468,469,236,470,237,238,63,239,64,471,472,309,310,311,312,316,65,318,473,66,319,67,68,474,475,320,69,323,476,477,478,70,479,480,71,481,482,483,484,485,486,487,488,489,72,490,491,492,493,494,73,495,496,74,240,75,76,241,77,324,497,242,303,498,47,243,244,245,499,500,246,247,248,249,250,501,251,502,252,503,504,505,506,507,508,253,254,78,255,256,257,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,258,259,260,261,262,263,264,265,266,267,268,269,509,510,511,512,513,514,270,515,516,517,518,519,520,521,522,523,524,271,272,273,274,525,275,276,277,278,279,23,280,281,282,283,284,24,285,20,286,287,288,289,290,291,292,293,294,25,1,2,3,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[240],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[80,88,89,99,101,102,103,104,105,106,9,133,147,165,166,167,168,169,170,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,14,224,18,231,466,467,468,469],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[314,315,427,55,526,527,317,65,66,67,68,69,322,323,324,243,244,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[79,80,81,82,83,84,330,331,304,332,305,333,4,5,295,356,85,313,296,86,87,88,89,90,6,91,357,358,359,360,361,362,363,364,365,366,367,368,369,51,370,92,93,94,95,7,8,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,371,372,129,373,9,130,374,131,132,133,134,135,10,375,376,377,378,379,380,381,382,383,384,300,385,386,387,388,389,136,390,391,392,393,394,137,395,138,139,140,396,28,52,141,142,143,397,398,399,400,401,144,145,146,147,148,149,402,150,151,152,403,153,154,155,156,157,158,159,160,306,161,162,404,163,405,406,407,408,164,409,410,411,53,46,412,54,413,414,415,165,166,167,168,169,170,416,307,308,417,418,314,421,422,315,423,424,171,172,425,426,427,428,429,430,431,432,433,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,13,434,435,436,196,14,15,437,438,439,440,48,49,441,442,297,50,443,197,198,199,200,201,202,203,204,205,206,207,444,208,301,301,302,302,55,209,210,211,212,213,214,445,446,447,448,449,215,450,451,452,453,454,455,456,457,216,217,218,219,220,16,17,221,222,223,224,458,461,462,463,56,57,58,59,60,61,62,18,225,226,227,228,229,230,231,232,233,234,235,19,466,467,468,469,236,237,238,63,239,64,471,472,309,310,311,312,316,65,318,473,66,319,67,68,475,320,69,323,476,477,478,70,479,480,71,481,482,483,484,485,486,487,488,489,72,490,491,492,493,494,73,495,496,74,240,75,76,241,77,324,497,242,303,498,47,243,244,245,499,500,246,247,248,249,250,501,251,502,252,253,254,78,255,256,257,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,258,259,260,261,262,263,264,265,266,267,268,269,509,510,511,512,513,514,270,515,516,517,518,519,520,521,522,523,524,271,272,273,274,525,275,276,277,278,279,23,280,281,282,283,284,24,285,20,286,287,288,289,290,291,292,293,294,25,1,2,3,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[317,66,243,244],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[79,80,81,82,83,84,330,331,304,332,305,333,4,5,295,356,85,313,296,86,87,88,89,90,6,91,357,358,359,360,361,362,363,364,365,366,367,368,369,51,370,92,93,94,95,7,8,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,371,372,129,373,9,130,374,131,132,133,134,135,10,375,376,377,378,379,380,381,382,383,384,300,385,386,387,388,389,136,390,391,392,393,394,137,395,138,139,140,396,28,52,141,142,143,397,398,399,400,401,144,145,146,147,148,149,402,150,151,152,403,153,154,155,156,157,158,159,160,306,161,162,404,163,405,406,407,408,164,409,410,411,53,46,412,54,413,414,415,165,166,167,168,169,170,416,307,308,417,418,314,421,422,315,423,424,171,172,425,426,427,428,429,430,431,432,433,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,13,434,435,436,196,14,15,437,438,439,440,48,49,441,442,297,50,443,197,198,199,200,201,202,203,204,205,206,207,444,208,301,301,302,302,55,209,210,211,212,213,214,445,446,447,448,449,215,450,451,452,453,454,455,456,457,216,217,218,219,220,16,17,221,222,223,224,458,461,462,463,56,57,58,59,60,61,62,18,225,226,227,228,229,230,231,232,233,234,235,19,466,467,468,469,236,237,238,63,239,64,471,472,309,310,311,312,316,65,318,473,66,319,67,68,475,320,69,323,476,477,478,70,479,480,71,481,482,483,484,485,486,487,488,489,72,490,491,492,493,494,73,495,496,74,240,75,76,241,77,324,497,242,303,498,47,243,244,245,499,500,246,247,248,249,250,501,251,502,252,253,254,78,255,256,257,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,258,259,260,261,262,263,264,265,266,267,268,269,509,510,511,512,513,514,270,515,516,517,518,519,520,521,522,523,524,271,272,273,274,525,275,276,277,278,279,23,280,281,282,283,284,24,285,20,286,287,288,289,290,291,292,293,294,25,1,2,3,21],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[333,4,5,528,529,6,92,94,7,8,96,530,329,9,374,131,134,135,10,155,13,14,15,218,16,17,221,18,227,228,229,233,234,235,19,65,320,69,323,240,243,245,258,262,263,266,273,20,21],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[295,356,85,313,296,368,369,51,370,396,408,409,410,411,53,46,54,415,314,315,426,427,428,429,430,431,432,433,48,49,441,442,297,50,443,301,301,302,302,55,211,212,531,526,458,461,56,57,58,59,61,62,466,467,468,64,471,316,317,65,318,473,66,319,67,68,475,320,69,322,323,476,477,478,70,479,480,71,481,482,483,484,485,486,487,488,489,72,490,491,492,493,494,73,495,496,74,240,76,241,77,324,242,303,498,47,243,244,245,499,500,1,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","bridgeMethod":"result"}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[295,296],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[532,533,534,535,536,537,538,539],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":274,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests2.UsageTest.argumentsOrdered":234,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":300,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":229,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":209,"org.easymock.tests2.DelegateToTest.testReturnException":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":166,"org.easymock.tests.MockingTest.testPartialClassMocking":53,"org.easymock.tests.MockClassControlTest.testToString":428,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":472,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":484,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":176,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":71,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":217,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":355,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":86,"org.easymock.tests2.UsageTest.wrongArguments":227,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":520,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":439,"org.easymock.samples.ExampleTest.answerVsDelegate":203,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":315,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":414,"org.easymock.tests2.UsageConstraintsTest.testNull":276,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":76,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":433,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":266,"org.easymock.tests2.CaptureTest.testPrimitive":33,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":90,"org.easymock.tests.UsageTest.moreThanOneArgument":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":195,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":199,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":416,"org.easymock.tests.UsageTest.argumentsOrdered":135,"org.easymock.tests.UsageVarargTest.varargIntAccepted":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":28,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":316,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":460,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":454,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":143,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":339,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":270,"org.easymock.tests.ReplayStateInvalidUsageTest.times":364,"org.easymock.tests2.DependencyTest.testClassMocking":456,"org.easymock.tests2.AnswerTest.answer":246,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":390,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":524,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":420,"org.easymock.tests2.CaptureTest.testAnd":30,"org.easymock.tests2.UsageTest.strictResetToDefault":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":47,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":261,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":418,"org.easymock.tests2.DelegateToTest.testDelegate":257,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":191,"org.easymock.tests.LimitationsTest.mockFinalMethod":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":401,"org.easymock.tests2.DependencyTest.testClassMockingSupport":457,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":127,"org.easymock.tests2.CaptureTest.testCapture1_2446744":34,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":497,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":189,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":522,"org.easymock.tests.UsageThrowableTest.throwError":99,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":358,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":422,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":529,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":455,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":496,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":342,"org.easymock.samples.PartialClassMockTest.testGetArea":55,"org.easymock.tests.MockingTest.testInterfaceMocking":412,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":52,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":485,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":408,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":177,"org.easymock.tests2.UsageTest.niceToStrict":228,"org.easymock.tests2.ThreadingTest.testChangeDefault":470,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":539,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":66,"org.easymock.tests2.MockBuilderTest.testCreateMock":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":492,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":517,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":185,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":327,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":262,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":419,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":83,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":437,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":536,"org.easymock.tests.UsageOverloadedMethodTest.overloading":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":489,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":147,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":24,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":118,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":284,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":298,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":39,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":403,"org.easymock.tests.MockClassControlTest.testEquals":432,"org.easymock.tests2.EasyMockSupportClassTest.testAll":70,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":85,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":523,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":399,"org.easymock.tests2.CaptureTest.testCaptureAll":31,"org.easymock.tests.MockNameTest.defaultName":425,"org.easymock.tests2.UsageConstraintsTest.testMatches":285,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":200,"org.easymock.samples.ExampleTest.voteForRemovals":207,"org.easymock.tests.UsageVarargTest.allKinds":160,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":400,"org.easymock.samples.BasicClassMockTest.testPrintContent":212,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":105,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":218,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":170,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":256,"org.easymock.tests2.UsageConstraintsTest.greaterThan":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":479,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":245,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":343,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":443,"org.easymock.samples.ExampleTest.voteForRemoval":204,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":499,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":237,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":321,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":423,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":324,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":335,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":396,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":259,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":165,"org.easymock.tests2.CaptureTest.testCaptureFirst":44,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":260,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":19,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":402,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":114,"org.easymock.tests2.CaptureTest.testCapture2_2446744":43,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":63,"org.easymock.tests2.UsageTest.moreThanOneArgument":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":391,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":69,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":159,"org.easymock.tests.GenericTest.testBridgedEquals":296,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":537,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":534,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":4,"org.easymock.tests.UsageExpectAndReturnTest.longType":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":397,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":194,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":322,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":164,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":197,"org.easymock.tests.UsageCallCountTest.tooManyCalls":5,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":493,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":519,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":104,"org.easymock.tests.MockingTest.testNiceClassMocking":415,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":57,"org.easymock.tests.MockingTest.testClassMocking":410,"org.easymock.tests2.UsageConstraintsTest.testContains":283,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":317,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":330,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":468,"org.easymock.tests2.UsageConstraintsTest.testFind":275,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":175,"org.easymock.tests.MockTypeTest.fromEasyMockClass":421,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":92,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":252,"org.easymock.tests.UsageExpectAndReturnTest.object":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":518,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":265,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":154,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":406,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":538,"org.easymock.tests.UsageTest.exactCallCountByLastCall":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":307,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":372,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":471,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":123,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":146,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":446,"org.easymock.tests.MockClassControlTest.testHashCode":431,"org.easymock.tests2.EasyMockSupportTest.testVerify":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":487,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":82,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":530,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":521,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":509,"org.easymock.tests.UsageVarargTest.varargCharAccepted":153,"org.easymock.tests2.CaptureTest.testCaptureMultiple":29,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":395,"org.easymock.tests2.UsageTest.openCallCountByLastCall":230,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":532,"org.easymock.tests.DefaultClassInstantiatorTest.object":48,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":268,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":81,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":163,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":488,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":513,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":445,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":430,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":243,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":341,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":182,"org.easymock.tests.CapturesMatcherTest.test":27,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":124,"org.easymock.tests.ReplayStateInvalidCallsTest.times":347,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":138,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":348,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":73,"org.easymock.tests2.UsageTest.resumeIfFailure":235,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":314,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":168,"org.easymock.tests2.StubTest.stubWithReturnValue":224,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":116,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":292,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":136,"org.easymock.samples.SupportTest.voteForRemovals":214,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":328,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":295,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":188,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":137,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":247,"org.easymock.tests.UsageExpectAndThrowTest.object":186,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":373,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":289,"org.easymock.tests2.DelegateToTest.testWrongClass":255,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":171,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":345,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":172,"org.easymock.tests.UsageStrictMockTest.range":8,"org.easymock.samples.ConstructorCalledMockTest.testTax":301,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":462,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":56,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":535,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":187,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":476,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":134,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":438,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":337,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":162,"org.easymock.tests2.CaptureTest.testCaptureNone":38,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":504,"org.easymock.tests.UsageUnorderedTest.message":6,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":528,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests.UsageVarargTest.varargByteAccepted":158,"org.easymock.tests2.ThreadingTest.testThreadSafe":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":490,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":305,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":407,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":211,"org.easymock.tests2.CaptureTest.testCapture_2617107":32,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":89,"org.easymock.tests2.UsageConstraintsTest.any":281,"org.easymock.tests2.StubTest.stub":223,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":363,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndThrowTest.longType":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":167,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":297,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":362,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":16,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":215,"org.easymock.tests.LimitationsTest.mockNativeMethod":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":126,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":313,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":527,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":512,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":353,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":222,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":505,"org.easymock.tests2.NameTest.nameForMocksControl":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":514,"org.easymock.tests2.MockedExceptionTest.testMockedException":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":480,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":133,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":502,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":180,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":54,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":74,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":68,"org.easymock.tests.MockingTest.testNicePartialClassMocking":46,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":510,"org.easymock.tests2.CaptureTest.testCaptureLast":37,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":128,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":62,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":279,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":352,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":290,"org.easymock.tests.MockingTest.testTwoMocks":411,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":349,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":465,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":184,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":233,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":294,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":508,"org.easymock.samples.ExampleTest.removeNonExistingDocument":444,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":516,"org.easymock.tests.UsageStrictMockTest.differentMethods":96,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":447,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":507,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":441,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":238,"org.easymock.tests2.MockBuilderTest.testCreateMockString":323,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":481,"org.easymock.tests.UsageExpectAndThrowTest.floatType":178,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":478,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":249,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":72,"org.easymock.samples.ExampleTest.voteAgainstRemoval":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":385,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":306,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":244,"org.easymock.tests.LimitationsTest.privateConstructor":369,"org.easymock.tests2.UsageConstraintsTest.testNotNull":293,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":466,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":106,"org.easymock.tests2.UsageTest.defaultResetToNice":232,"org.easymock.samples.ExampleTest.voteAgainstRemovals":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":122,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":511,"org.easymock.tests.UsageVarargTest.differentLength":155,"org.easymock.tests2.CallbackTest.callback":21,"org.easymock.tests2.UsageConstraintsTest.equals":525,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":303,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":326,"org.easymock.tests.UsageTest.openCallCountByLastCall":132,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":88,"org.easymock.tests.UsageCallCountTest.tooFewCalls":304,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":59,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":440,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":506,"org.easymock.tests.UsageThrowableTest.throwCheckedException":103,"org.easymock.tests.MockingTest.testStrictClassMocking":409,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":325,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":61,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":515,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":58,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":365,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":60,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":501,"org.easymock.tests.ObjectMethodsTest.testHashCode":405,"org.easymock.tests2.CompareToTest.testGreateOrEqual":22,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":239,"org.easymock.tests2.NameTest.nameForNiceMock":311,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":351,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":346,"org.easymock.tests2.DependencyTest.testInterfaceMocking":216,"org.easymock.samples.ExampleTest.addDocument":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":495,"org.easymock.tests2.DelegateToTest.testStubDelegate":78,"org.easymock.tests2.AnswerTest.stubAnswer":250,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":95,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":474,"org.easymock.tests.UsageVarargTest.varargLongAccepted":157,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":384,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":125,"org.easymock.tests.UsageExpectAndReturnTest.floatType":109,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":64,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":453,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests.UsageThrowableTest.noUpperLimit":100,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":287,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":272,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":458,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":35,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":299,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":108,"org.easymock.tests2.UsageConstraintsTest.testSame":277,"org.easymock.samples.SupportTest.addDocument":213,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":464,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":336,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":482,"org.easymock.tests.GenericTest.testPackageScope":356,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":452,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":413,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":334,"org.easymock.tests2.NameTest.nameForMock":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":119,"org.easymock.tests2.UsageStrictMockTest.differentMethods":221,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":498,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":111,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":190,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":404,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":436,"org.easymock.tests2.MockedExceptionTest.testRealException":469,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":424,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":387,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":87,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":367,"org.easymock.tests2.NameTest.nameForStrictMock":310,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":473,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":533,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":251,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":241,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":461,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":442,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":11,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":288,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":65,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":340,"org.easymock.tests2.UsageConstraintsTest.lessThan":25,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":531,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":486,"org.easymock.tests2.CaptureTest.testCaptureRightOne":41,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":503,"org.easymock.tests2.UsageConstraintsTest.testOr":278,"org.easymock.tests.UsageRangeTest.combination":13,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":240,"org.easymock.tests.UsageTest.wrongArguments":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":483,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":376,"org.easymock.tests.UsageVarargTest.varargShortAccepted":156,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":50,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":333,"org.easymock.tests2.UsageConstraintsTest.cmpTo":282,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":354,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":248,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":378,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":231,"org.easymock.tests2.CaptureTest.testCaptureFromStub":42,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":357,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":318,"org.easymock.tests.UsageTest.unexpectedCallWithArray":374,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":350,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":332,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":121,"org.easymock.tests2.CaptureTest.testCapture":40,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":7,"org.easymock.tests2.UsageConstraintsTest.constraints":273,"org.easymock.samples.ExampleTest.addAndChangeDocument":208,"org.easymock.tests.UsageStrictMockTest.testVerify":98,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":210,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":398,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":36,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":526,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":141,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":113,"org.easymock.tests.LimitationsTest.abstractClass":368,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":142,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":151,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":263}}]
