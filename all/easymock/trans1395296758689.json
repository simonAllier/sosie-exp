[{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[19,79,80,81,82,83,84,85,41,86,87,88,89,90,91,92,93],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[94],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[96,97,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[99,100],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[102,103],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"shouldBeUsedInOneThread"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[104],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[105,106,107],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[108],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,102,122,123,124,125,126,103,127,128,129,130,131,101,132,133,134,135,136,137,138,139,36,140,141,142,143,144,145,146,147,148,149,150,150,151,151,152,153,154],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[33,155,156,157,158,159,160,161,162,163,164,165],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[119,166,167,168,169,170,101,171,172,173],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[174,175,176,177,178],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:47","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[22,179,49,50,51,180,181],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,102,122,123,124,125,126,103,127,128,129,130,182,183,131,101,132,184,133,134,135,136,137,138,139,36,185,140,141,142,143,144,145,146,147,148,149,186,187,188,150,150,151,151,152,153,154],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[189,190,174,0,175,191,176,192,96,97,98,193,194,195,196,197,198,109,199,200,110,201,202,203,204,205,206,207,208,209,111,210,211,212,213,214,112,215,216,1,2,3,217,218,4,5,6,7,219,220,221,8,222,9,223,10,11,12,13,14,108,224,225,226,227,15,16,17,18,228,19,79,229,230,20,21,231,80,81,22,23,232,24,233,234,25,235,236,26,27,237,238,239,28,29,30,31,32,240,241,242,243,244,245,246,247,248,249,179,33,113,114,115,116,250,251,117,118,252,119,253,120,121,102,254,122,123,124,125,255,126,256,257,103,127,128,129,258,259,34,260,261,262,35,263,264,265,131,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,101,171,296,132,297,133,134,298,299,135,136,137,172,138,300,173,139,36,301,140,302,303,37,304,38,39,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,141,142,143,349,144,350,351,352,155,156,157,40,41,86,87,42,43,88,89,44,353,354,45,355,356,357,358,359,145,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,146,46,396,47,48,49,50,51,158,159,160,161,162,163,397,398,399,400,401,402,403,180,404,405,164,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,165,426,52,427,53,428,429,430,431,432,181,433,434,54,55,435,56,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,90,57,463,58,59,464,465,466,467,60,468,469,470,471,472,99,147,148,149,100,473,474,186,475,476,477,478,479,480,187,481,482,483,484,188,485,486,487,488,177,489,490,61,491,62,63,492,493,64,494,65,66,67,68,495,69,70,71,72,496,73,74,75,76,497,77,498,499,78,500,501,150,151,502,503,152,153,504,178,505,506,507,508,509,510,154],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[189,190,174,0,175,191,176,192,96,97,98,193,194,195,196,197,198,109,199,200,110,201,202,203,204,205,206,207,208,209,111,210,211,212,213,214,112,215,216,1,2,3,217,218,4,5,6,7,219,220,221,8,222,9,223,10,11,12,13,14,108,224,225,226,227,15,16,17,18,228,19,79,229,230,20,21,231,80,81,22,23,232,24,233,234,25,235,236,26,27,237,238,239,28,29,30,31,32,240,241,242,243,244,245,246,247,248,249,179,33,113,114,115,116,250,251,117,118,252,119,253,120,121,102,254,122,123,124,125,255,126,256,257,103,127,128,129,258,259,34,260,261,262,35,263,264,265,131,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,101,171,296,132,297,133,134,298,299,135,136,137,172,138,300,173,139,36,301,140,302,303,37,304,38,39,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,141,142,143,349,144,350,351,352,155,156,157,40,41,86,87,42,43,88,89,44,353,354,45,355,356,357,358,359,145,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,146,46,396,47,48,49,50,51,158,159,160,161,162,163,397,398,399,400,401,402,403,180,404,405,164,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,165,426,52,427,53,428,429,430,431,432,181,433,434,54,55,435,56,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,90,57,463,58,59,464,465,466,467,60,468,469,470,471,472,99,147,148,149,100,473,474,186,475,476,477,478,479,480,187,481,482,483,484,188,485,486,487,488,177,489,490,61,491,62,63,492,493,64,494,65,66,67,68,495,69,70,71,72,496,73,74,75,76,497,77,498,499,78,500,501,150,151,502,503,152,153,504,178,505,506,507,508,509,510,154],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[228],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[5,221,108,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[189,247,249,34,261,262,263,487,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[82,84,86,90,91,92],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[82,84,86,90,91,92],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[511],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:106","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : java.lang.reflect.Field[]) {\n    final org.easymock.TestSubject org.easymock.TestSubject = java.lang.reflect.Field.getAnnotation(org.easymock.TestSubject.org.easymock.TestSubject);\n    if (org.easymock.TestSubject != null) {\n        org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field);\n        continue;\n    } \n    final org.easymock.Mock org.easymock.Mock = java.lang.reflect.Field.getAnnotation(org.easymock.Mock.org.easymock.Mock);\n    if (org.easymock.Mock == null) {\n        continue;\n    } \n    final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType();\n    java.lang.String java.lang.String = org.easymock.Mock.java.lang.String();\n    java.lang.String = (java.lang.String.length()) == 0 ? null : java.lang.String;\n    final org.easymock.MockType org.easymock.MockType = org.easymock.Mock.org.easymock.MockType();\n    java.lang.Object java.lang.Object;\n    if (java.lang.Object instanceof org.easymock.EasyMockSupport) {\n        java.lang.Object = ((org.easymock.EasyMockSupport)(java.lang.Object)).createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    } else {\n        java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    }\n    java.lang.reflect.Field.setAccessible(true);\n    try {\n        java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n    }\n    org.easymock.internal.InjectionPlan.addInjection(new org.easymock.internal.Injection(java.lang.Object , org.easymock.Mock));\n}","type":"CtForEachImpl"},"failures":[270,271,272,273,274,276,277,309,310,311,312,313,315,316,500,501],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[189,221,8,226,227,79,230,80,81,24,233,235,236,26,27,29,30,243,244,245,246,247,249,179,120,262,282,288,289,290,291,133,135,36,302,303,37,304,38,39,305,87,88,89,387,389,390,391,392,394,395,146,407,408,409,411,412,413,414,415,416,417,418,420,426,428,432,181,433,451,452,461,462,90,57,463,58,59,464,465,467,148,473,498,499,500,501,502,503,152,153,504,505,506,507,508,510],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[82,84,86,90,91,92],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[512,513,196,197,198,109,199,200,110,201,202,203,204,205,206,207,208,209,111,210,211,212,213,214,112,215,216,115,118,252,119,101,171,297,298,172,173,514,301,150,151],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":217,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":40,"org.easymock.tests2.UsageTest.argumentsOrdered":81,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":289,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":427,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":230,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":500,"org.easymock.tests2.DelegateToTest.testReturnException":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":159,"org.easymock.tests.MockingTest.testPartialClassMocking":142,"org.easymock.tests.MockClassControlTest.testToString":475,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":242,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":204,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":110,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":367,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":166,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":497,"org.easymock.tests2.UsageTest.wrongArguments":79,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":278,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":365,"org.easymock.samples.ExampleTest.answerVsDelegate":178,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":188,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":351,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":122,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":288,"org.easymock.tests2.CaptureTest.testPrimitive":234,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":78,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":386,"org.easymock.tests.UsageTest.moreThanOneArgument":41,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":447,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":450,"org.easymock.tests.UsageTest.argumentsOrdered":89,"org.easymock.tests.UsageVarargTest.varargIntAccepted":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":342,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":132,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":316,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":346,"org.easymock.tests.ReplayStateInvalidUsageTest.times":404,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":272,"org.easymock.tests2.DependencyTest.testClassMocking":292,"org.easymock.tests2.AnswerTest.answer":34,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":181,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":321,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":482,"org.easymock.tests2.CaptureTest.testAnd":232,"org.easymock.tests2.UsageTest.strictResetToDefault":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":103,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":446,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":50,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":283,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":454,"org.easymock.tests2.DelegateToTest.testDelegate":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":382,"org.easymock.tests.LimitationsTest.mockFinalMethod":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":341,"org.easymock.tests2.DependencyTest.testClassMockingSupport":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":455,"org.easymock.tests2.CaptureTest.testCapture1_2446744":25,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":319,"org.easymock.tests.UsageThrowableTest.throwError":466,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":399,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":484,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":317,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":449,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":512,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":216,"org.easymock.samples.PartialClassMockTest.testGetArea":154,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":400,"org.easymock.tests.MockingTest.testInterfaceMocking":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":343,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":205,"org.easymock.tests2.UsageTest.niceToStrict":229,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":105,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":135,"org.easymock.tests2.MockBuilderTest.testCreateMock":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":212,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":275,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":82,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":376,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":284,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":481,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":460,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":363,"org.easymock.tests.UsageOverloadedMethodTest.overloading":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":214,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":10,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":69,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":353,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":223,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":237,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":410,"org.easymock.tests.MockClassControlTest.testEquals":479,"org.easymock.tests2.EasyMockSupportClassTest.testAll":109,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":148,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":384,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":83,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":130,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":104,"org.easymock.tests2.CaptureTest.testCaptureAll":24,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":339,"org.easymock.tests.MockNameTest.defaultName":331,"org.easymock.tests2.UsageConstraintsTest.testMatches":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":448,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":397,"org.easymock.samples.ExampleTest.voteForRemovals":508,"org.easymock.tests.UsageVarargTest.allKinds":418,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":46,"org.easymock.samples.BasicClassMockTest.testPrintContent":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":340,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":471,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":302,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":313,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":443,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":170,"org.easymock.tests2.UsageConstraintsTest.greaterThan":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":49,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":129,"org.easymock.samples.ExampleTest.voteForRemoval":505,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":444,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":31,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":258,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":485,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":125,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":146,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":18,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":281,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":158,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":190,"org.easymock.tests2.CaptureTest.testCaptureFirst":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":282,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":23,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":491,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":66,"org.easymock.tests2.CaptureTest.testCapture2_2446744":28,"org.easymock.tests2.UsageTest.moreThanOneArgument":19,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":433,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":36,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":417,"org.easymock.tests.GenericTest.testBridgedEquals":100,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":394,"org.easymock.tests.UsageExpectAndReturnTest.longType":493,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":337,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":385,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":185,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":226,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":330,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":383,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":445,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":156,"org.easymock.tests.UsageCallCountTest.tooManyCalls":395,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":213,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":372,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":470,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":114,"org.easymock.tests.MockingTest.testNiceClassMocking":352,"org.easymock.tests.MockingTest.testClassMocking":348,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":388,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":184,"org.easymock.tests2.UsageConstraintsTest.testContains":9,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":131,"org.easymock.tests2.UsageConstraintsTest.testFind":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":45,"org.easymock.tests.MockTypeTest.fromEasyMockClass":483,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":461,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":249,"org.easymock.tests.UsageExpectAndReturnTest.object":495,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":287,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":412,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":167,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":326,"org.easymock.tests.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":451,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":334,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":171,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":407,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":73,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":177,"org.easymock.tests.MockClassControlTest.testHashCode":478,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":307,"org.easymock.tests2.EasyMockSupportTest.testVerify":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":207,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":452,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":487,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":459,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":318,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":322,"org.easymock.tests.UsageVarargTest.varargCharAccepted":411,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":436,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":56,"org.easymock.tests2.UsageTest.openCallCountByLastCall":20,"org.easymock.tests.DefaultClassInstantiatorTest.object":437,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":106,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":458,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":324,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":208,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":374,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":468,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":270,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":306,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":477,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":127,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":373,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":74,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":155,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":112,"org.easymock.tests2.UsageTest.resumeIfFailure":22,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":187,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":161,"org.easymock.tests2.StubTest.stubWithReturnValue":33,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":172,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":68,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":227,"org.easymock.tests2.SerializationTest.testAllMockedMethod":120,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":432,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":95,"org.easymock.samples.SupportTest.voteForRemovals":503,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":84,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":99,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":379,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":435,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":260,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":336,"org.easymock.tests.UsageExpectAndThrowTest.object":377,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":224,"org.easymock.tests2.DelegateToTest.testWrongClass":175,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":332,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":333,"org.easymock.samples.ConstructorCalledMockTest.testTax":150,"org.easymock.tests.UsageStrictMockTest.range":58,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":194,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":286,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":113,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":378,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":137,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":164,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":364,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":91,"org.easymock.tests2.CaptureTest.testCaptureNone":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":357,"org.easymock.tests.UsageUnorderedTest.message":473,"org.easymock.tests.UsageVerifyTest.twoReturns":47,"org.easymock.tests.UsageVarargTest.varargByteAccepted":416,"org.easymock.tests2.ThreadingTest.testThreadSafe":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":210,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":392,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":152,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":327,"org.easymock.tests2.CaptureTest.testCapture_2617107":233,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":85,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":457,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":54,"org.easymock.tests2.UsageConstraintsTest.any":8,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":180,"org.easymock.tests2.StubTest.stub":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":55,"org.easymock.tests.UsageExpectAndThrowTest.longType":370,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":441,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":403,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":304,"org.easymock.tests2.SerializationTest.testClass":119,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":311,"org.easymock.tests.LimitationsTest.mockNativeMethod":145,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":76,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":183,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":269,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":305,"org.easymock.tests2.NameTest.nameForMocksControl":246,"org.easymock.tests2.MockedExceptionTest.testMockedException":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":200,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":43,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":144,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":371,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":121,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":138,"org.easymock.tests.MockingTest.testNicePartialClassMocking":143,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":124,"org.easymock.tests2.CompareToTest.testNotComparable":94,"org.easymock.tests2.CaptureTest.testCaptureLast":26,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":267,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":456,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":118,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":219,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":225,"org.easymock.tests.MockingTest.testTwoMocks":141,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":375,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":80,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":16,"org.easymock.samples.ExampleTest.removeNonExistingDocument":509,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":401,"org.easymock.tests.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":274,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":308,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":439,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":32,"org.easymock.tests2.MockBuilderTest.testCreateMockString":140,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":201,"org.easymock.tests.UsageExpectAndThrowTest.floatType":369,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":198,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":262,"org.easymock.tests.UsageVerifyTest.twoThrows":396,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":296,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":111,"org.easymock.samples.ExampleTest.voteAgainstRemoval":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":355,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":128,"org.easymock.tests.LimitationsTest.privateConstructor":359,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":513,"org.easymock.tests2.UsageConstraintsTest.testNotNull":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":472,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":264,"org.easymock.tests2.UsageTest.defaultResetToNice":231,"org.easymock.samples.ExampleTest.voteAgainstRemovals":504,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":428,"org.easymock.tests.UsageVarargTest.differentLength":413,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":268,"org.easymock.tests2.CallbackTest.callback":189,"org.easymock.tests2.UsageConstraintsTest.equals":218,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":256,"org.easymock.tests.UsageTest.openCallCountByLastCall":42,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":498,"org.easymock.tests.UsageCallCountTest.tooFewCalls":390,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":366,"org.easymock.tests.UsageThrowableTest.throwCheckedException":469,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":92,"org.easymock.tests.MockingTest.testStrictClassMocking":347,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":117,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":362,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":273,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":405,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":251,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":263,"org.easymock.tests.ObjectMethodsTest.testHashCode":325,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":241,"org.easymock.tests2.NameTest.nameForNiceMock":245,"org.easymock.tests2.DependencyTest.testInterfaceMocking":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":168,"org.easymock.samples.ExampleTest.addDocument":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":211,"org.easymock.tests2.DelegateToTest.testStubDelegate":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":215,"org.easymock.tests2.AnswerTest.stubAnswer":35,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":57,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":300,"org.easymock.tests.UsageVarargTest.varargLongAccepted":415,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":52,"org.easymock.tests.UsageExpectAndReturnTest.floatType":492,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":101,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":151,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":490,"org.easymock.tests.UsageThrowableTest.noUpperLimit":467,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":315,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":2,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":192,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":235,"org.easymock.tests2.SerializationTest.test":253,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":438,"org.easymock.tests2.UsageConstraintsTest.testSame":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":63,"org.easymock.samples.SupportTest.addDocument":502,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":250,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":202,"org.easymock.tests.GenericTest.testPackageScope":147,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":314,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":350,"org.easymock.tests2.NameTest.nameForMock":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":70,"org.easymock.tests2.UsageStrictMockTest.differentMethods":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":301,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":381,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":323,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":51,"org.easymock.tests2.MockedExceptionTest.testRealException":266,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":429,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":406,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":77,"org.easymock.tests2.NameTest.nameForStrictMock":244,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":107,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":247,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":123,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":193,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":440,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":108,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":133,"org.easymock.tests2.UsageStrictMockTest.range":38,"org.easymock.tests2.UsageConstraintsTest.lessThan":17,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":426,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":169,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":206,"org.easymock.tests2.CaptureTest.testCaptureRightOne":238,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":102,"org.easymock.tests.UsageTest.wrongArguments":87,"org.easymock.tests2.MockBuilderTest.testWithConstructor":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":203,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":186,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":71,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":442,"org.easymock.tests.UsageVarargTest.varargShortAccepted":414,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":393,"org.easymock.tests2.UsageConstraintsTest.cmpTo":222,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":422,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":21,"org.easymock.tests2.CaptureTest.testCaptureFromStub":239,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":398,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":134,"org.easymock.tests.UsageTest.unexpectedCallWithArray":86,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":90,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":391,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":514,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":72,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":463,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.samples.ExampleTest.addAndChangeDocument":510,"org.easymock.tests.UsageStrictMockTest.testVerify":465,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":501,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":462,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":338,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":236,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":344,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":65,"org.easymock.tests.LimitationsTest.abstractClass":358,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":61,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":345,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":285}}]
