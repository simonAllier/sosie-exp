[{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[43,44],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[45],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[47,48,45],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,2,3,83,4,84,85,52,86,87,88,89,90,91,92,93,94,95,96,97,9,12,22,28,98,99,100,101,102,103,33,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,53,152,153,54,55,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,34,180,181,182,35,183,184,185,186,187,188,189,190,191,192,193,194,49,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,60,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,62,63,300,301,302,303,304,305,306,307,64,308,309,65,66,310,311,312,313,67,68,69,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[84,90,97,98,99,100,101,223,224,228,234,235,267,271,272,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,312,314,315,316,317,318,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[80,81,82,2,2,3,3,4,5,339,340,341,342,343,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,98,99,100,33,105,178,179,34,180,182,35,183,344,184,345,346,185,186,187,188,40,189,190,347,191,348,349,194,49,196,197,198,199,200,350,351,201,202,203,204,352,353,210,354,355,211,356,357,358,359,238,239,240,360,361,243,244,362,363,364,365,366,0,367,368,369,1,370,371,372,373,374,375,376,377,378,379],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:287","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:109","sourceCode":"final java.lang.Object[] java.lang.Object[] = new java.lang.Object[java.lang.Class<?>[].int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[140,380],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","name":"name","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[207,382],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[383,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:131","failures":[384],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[33,104,105,385],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.RecordState:173","failures":[120],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"position":"org.easymock.internal.Range:52","failures":[71,84,52,86,89,90,92,93,95,122,128,129,133,134,147,148,53,153,54,56,57,58,59,154,223,224,60,226,227,228,229,230,231,237,267,63,301,304,307,64,309,65,67,68,69,386,387,328,338,388],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[389,390,50,391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[392,102,103,123,124,125,126,127,128,129,130,131,132,393,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,53,158,159,160,161,162,163,164,165,166,167,168,169,170,171,200,208,232,233,234,235,236,237,241,242,278,279,307,64,318,320,321,322,323,324,338],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":126,"org.easymock.tests2.UsageTest.argumentsOrdered":93,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":224,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":116,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":88,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":79,"org.easymock.tests2.DelegateToTest.testReturnException":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":315,"org.easymock.tests.MockingTest.testPartialClassMocking":238,"org.easymock.tests.MockClassControlTest.testToString":374,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":16,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":280,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":193,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":132,"org.easymock.tests2.UsageTest.wrongArguments":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":214,"org.easymock.samples.ExampleTest.answerVsDelegate":71,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":365,"org.easymock.tests2.UsageConstraintsTest.testNull":128,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":196,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":115,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":379,"org.easymock.tests2.CaptureTest.testPrimitive":161,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":236,"org.easymock.tests.UsageTest.moreThanOneArgument":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":299,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":275,"org.easymock.tests.UsageTest.argumentsOrdered":230,"org.easymock.tests.UsageVarargTest.varargIntAccepted":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":320,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":183,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":324,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":205,"org.easymock.tests2.AnswerTest.answer":154,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":393,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":175,"org.easymock.tests2.CaptureTest.testAnd":158,"org.easymock.tests2.UsageTest.strictResetToDefault":85,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":326,"org.easymock.tests2.DelegateToTest.testDelegate":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":295,"org.easymock.tests.LimitationsTest.mockFinalMethod":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":220,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":47,"org.easymock.tests2.CaptureTest.testCapture1_2446744":162,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":293,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":173,"org.easymock.tests.UsageThrowableTest.throwError":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":277,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":30,"org.easymock.samples.PartialClassMockTest.testGetArea":82,"org.easymock.tests2.CompareToTest.testLessOrEqual":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":17,"org.easymock.tests2.UsageTest.niceToStrict":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":281,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":371,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":185,"org.easymock.tests2.MockBuilderTest.testCreateMock":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":289,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":111,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":391,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":61,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":212,"org.easymock.tests.UsageOverloadedMethodTest.overloading":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":21,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":137,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":312,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":256,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":136,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":167,"org.easymock.tests2.EasyMockSupportClassTest.testAll":9,"org.easymock.tests.MockClassControlTest.testEquals":378,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":297,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":174,"org.easymock.tests2.CaptureTest.testCaptureAll":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":218,"org.easymock.tests2.UsageConstraintsTest.testMatches":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":276,"org.easymock.samples.ExampleTest.voteForRemovals":75,"org.easymock.tests.UsageVarargTest.allKinds":338,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":67,"org.easymock.samples.BasicClassMockTest.testPrintContent":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":219,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":271,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":319,"org.easymock.tests2.UsageConstraintsTest.greaterThan":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":10,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":204,"org.easymock.samples.ExampleTest.voteForRemoval":72,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":370,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":207,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":352,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":199,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":210,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":108,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":314,"org.easymock.tests2.CaptureTest.testCaptureFirst":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":109,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":95,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":252,"org.easymock.tests2.CaptureTest.testCapture2_2446744":170,"org.easymock.tests2.UsageTest.moreThanOneArgument":52,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":208,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":190,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":337,"org.easymock.tests.GenericTest.testBridgedEquals":363,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":303,"org.easymock.tests.UsageExpectAndReturnTest.longType":248,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":216,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":298,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":347,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":145,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":296,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":273,"org.easymock.tests.UsageCallCountTest.tooManyCalls":304,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":26,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":285,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":270,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":179,"org.easymock.tests.MockingTest.testNiceClassMocking":360,"org.easymock.tests.MockingTest.testClassMocking":358,"org.easymock.tests2.UsageConstraintsTest.testContains":135,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":344,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":100,"org.easymock.tests2.UsageConstraintsTest.testFind":127,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":223,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":103,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":305,"org.easymock.tests.UsageExpectAndReturnTest.object":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":114,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":332,"org.easymock.tests.UsageTest.exactCallCountByLastCall":231,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":278,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":386,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":261,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":328,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":311,"org.easymock.tests.MockClassControlTest.testHashCode":377,"org.easymock.tests2.EasyMockSupportTest.testVerify":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":19,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":387,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":50,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":310,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":172,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":392,"org.easymock.tests.UsageVarargTest.varargCharAccepted":331,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":151,"org.easymock.tests2.UsageTest.openCallCountByLastCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":117,"org.easymock.tests.DefaultClassInstantiatorTest.object":366,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":390,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":20,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":287,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":268,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":343,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":202,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":376,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":286,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":28,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":375,"org.easymock.tests2.UsageTest.resumeIfFailure":94,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":317,"org.easymock.tests2.StubTest.stubWithReturnValue":97,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":39,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":254,"org.easymock.tests2.SerializationTest.testAllMockedMethod":105,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":45,"org.easymock.samples.SupportTest.voteForRemovals":78,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":361,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":292,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":385,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":43,"org.easymock.tests.UsageExpectAndThrowTest.object":290,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":143,"org.easymock.tests2.DelegateToTest.testWrongClass":121,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":242,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests.UsageStrictMockTest.range":309,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":178,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":291,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":6,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":229,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":213,"org.easymock.tests2.CaptureTest.testCaptureNone":166,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":381,"org.easymock.tests.UsageUnorderedTest.message":237,"org.easymock.tests.UsageVerifyTest.twoReturns":69,"org.easymock.tests.UsageVarargTest.varargByteAccepted":336,"org.easymock.tests2.ThreadingTest.testThreadSafe":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":23,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":301,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":80,"org.easymock.tests2.CaptureTest.testCapture_2617107":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":235,"org.easymock.tests2.UsageConstraintsTest.any":133,"org.easymock.tests2.StubTest.stub":96,"org.easymock.tests.UsageExpectAndThrowTest.longType":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":316,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":369,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":152,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":177,"org.easymock.tests2.SerializationTest.testClass":33,"org.easymock.tests.LimitationsTest.mockNativeMethod":211,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":264,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":362,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":342,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":55,"org.easymock.tests2.NameTest.nameForMocksControl":59,"org.easymock.tests2.MockedExceptionTest.testMockedException":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":11,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":228,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":240,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":284,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":194,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":188,"org.easymock.tests.MockingTest.testNicePartialClassMocking":239,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":198,"org.easymock.tests2.CaptureTest.testCaptureLast":165,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":48,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":131,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":35,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":144,"org.easymock.tests.MockingTest.testTwoMocks":359,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":288,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":92,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":148,"org.easymock.tests.UsageStrictMockTest.differentMethods":65,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":367,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":382,"org.easymock.tests2.MockBuilderTest.testCreateMockString":191,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":13,"org.easymock.tests.UsageExpectAndThrowTest.floatType":282,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":8,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":155,"org.easymock.tests.UsageVerifyTest.twoThrows":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":22,"org.easymock.samples.ExampleTest.voteAgainstRemoval":73,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":203,"org.easymock.tests.LimitationsTest.privateConstructor":355,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":32,"org.easymock.tests2.UsageConstraintsTest.testNotNull":147,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":272,"org.easymock.tests2.UsageTest.defaultResetToNice":91,"org.easymock.samples.ExampleTest.voteAgainstRemovals":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":383,"org.easymock.tests.UsageVarargTest.differentLength":333,"org.easymock.tests2.CallbackTest.callback":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":350,"org.easymock.tests.UsageTest.openCallCountByLastCall":227,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":234,"org.easymock.tests.UsageCallCountTest.tooFewCalls":63,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":180,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":215,"org.easymock.tests.UsageThrowableTest.throwCheckedException":269,"org.easymock.tests.MockingTest.testStrictClassMocking":357,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":279,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":34,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":181,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":157,"org.easymock.tests2.NameTest.nameForNiceMock":58,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":209,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.samples.ExampleTest.addDocument":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":24,"org.easymock.tests2.DelegateToTest.testStubDelegate":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":29,"org.easymock.tests2.AnswerTest.stubAnswer":156,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":64,"org.easymock.tests.UsageVarargTest.varargLongAccepted":335,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":66,"org.easymock.tests.UsageExpectAndReturnTest.floatType":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":141,"org.easymock.tests.UsageThrowableTest.noUpperLimit":266,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":124,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":348,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":163,"org.easymock.tests2.SerializationTest.test":104,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests2.UsageConstraintsTest.testSame":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":246,"org.easymock.samples.SupportTest.addDocument":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":14,"org.easymock.tests.GenericTest.testPackageScope":243,"org.easymock.tests2.NameTest.nameForMock":56,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":257,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":42,"org.easymock.tests2.UsageStrictMockTest.differentMethods":54,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":351,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":294,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":327,"org.easymock.tests2.MockedExceptionTest.testRealException":101,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":233,"org.easymock.tests2.NameTest.nameForStrictMock":57,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":346,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":102,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":197,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":349,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":142,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":368,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":184,"org.easymock.tests2.UsageStrictMockTest.range":153,"org.easymock.tests2.UsageConstraintsTest.lessThan":149,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":340,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":107,"org.easymock.tests2.CaptureTest.testCaptureRightOne":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":18,"org.easymock.tests2.UsageConstraintsTest.testOr":130,"org.easymock.tests.UsageRangeTest.combination":325,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":49,"org.easymock.tests.UsageTest.wrongArguments":226,"org.easymock.tests2.MockBuilderTest.testWithConstructor":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":15,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":373,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":258,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":334,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":302,"org.easymock.tests2.UsageConstraintsTest.cmpTo":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":389,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":90,"org.easymock.tests2.CaptureTest.testCaptureFromStub":169,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":345,"org.easymock.tests.UsageTest.unexpectedCallWithArray":225,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":307,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":300,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":41,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":259,"org.easymock.tests2.UsageConstraintsTest.constraints":125,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":308,"org.easymock.samples.ExampleTest.addAndChangeDocument":76,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":83,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":217,"org.easymock.tests2.CompareToTest.testGreateThan":380,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":322,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":341,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":251,"org.easymock.tests.LimitationsTest.abstractClass":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":112,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":329}}]
