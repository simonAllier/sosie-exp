[{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[1,1,2,2,3,4,5,6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1976","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[21,10,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,21,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,10,11,60,12,13,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,15,120,16,17,121,3,122,123,5,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,20,148,149,150,151,152,153,154,155,156,157,18,158,19,159,160,161,162,163,164,9,165,166,167,168,169,170,171,172,173,174,175,176],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[1,1,2,2,25,34,35,177,178,179,51,52,53,70,76,77,0,85,180,3,5,125,126,127,128,129,181,182,183,184,130,185,131,132,186,187,188,189,133,134,135,136,138,139,155,156,18,158,19,190,159,191,192,160,193,194,176],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[195,196,159,8,197,191,192,160,193,198,199,200,201,202],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[24,25,27,29,30,32,203,46,204,205,206,207,50,51,52,53,208,209,54,55,210,56,211,212,213,214,57,215,216,217,218,58,219,220,221,222,11,12,13,223,62,63,224,69,225,226,227,228,229,76,78,79,230,85,231,232,87,89,90,91,92,93,94,95,233,234,235,236,96,97,98,99,100,101,102,237,103,104,105,106,108,109,111,112,238,114,239,240,241,242,118,15,16,17,3,122,243,5,124,126,127,128,129,183,130,131,132,187,133,134,135,136,137,138,139,244,245,246,140,141,247,248,249,142,250,143,251,252,144,145,146,147,253,20,254,255,148,256,257,149,150,151,153,154,258,259,155,156,157,18,158,19,159,192,160,193,161,162,163,9,260,167,168,169,170,261,171,172,262,176],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","bridgeMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.Invocation:195","failures":[263,177,264,265,99,102,103,266,267,268,269,270,271,272,273,274,275,276,277,278,181,184,132,187,189,133,134,139,156,191,193,199,279,280,281,282,283,161,284,285,286,287,288,289,290,291,292,293,294,172,295,296,297,298,299,300],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[65,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[302,303,304],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[5,124,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + java.lang.String) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[282,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.EasyMock.DISABLE_CLASS_MOCKING":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[45,91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[305],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[3,4,5,306,7,307,308,309,310,311],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[312,313,314,10,315,316],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[264,284,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":142,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":204,"org.easymock.tests2.UsageTest.argumentsOrdered":117,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":284,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":115,"org.easymock.tests2.StubTest.stubWithReturnValue":236,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":306,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":214,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":26,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":153,"org.easymock.tests2.SerializationTest.testAllMockedMethod":125,"org.easymock.tests2.DelegateToTest.testReturnException":173,"org.easymock.tests.MockingTest.testPartialClassMocking":51,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":316,"org.easymock.samples.SupportTest.voteForRemovals":24,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":282,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":274,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":127,"org.easymock.tests.UsageExpectAndThrowTest.object":83,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":109,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":307,"org.easymock.tests2.DelegateToTest.testWrongClass":174,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":231,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":232,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":62,"org.easymock.tests2.UsageTest.wrongArguments":113,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":300,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.samples.ExampleTest.answerVsDelegate":28,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":237,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":133,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":178,"org.easymock.tests2.UsageConstraintsTest.testNull":143,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":18,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":131,"org.easymock.tests2.CaptureTest.testPrimitive":9,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":224,"org.easymock.tests.UsageTest.moreThanOneArgument":205,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":157,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":312,"org.easymock.tests2.CaptureTest.testCaptureNone":168,"org.easymock.tests.UsageUnorderedTest.message":86,"org.easymock.tests.UsageVerifyTest.twoReturns":46,"org.easymock.tests.UsageVarargTest.varargByteAccepted":43,"org.easymock.tests2.ThreadingTest.testThreadSafe":244,"org.easymock.tests.UsageTest.argumentsOrdered":49,"org.easymock.tests.UsageVarargTest.varargIntAccepted":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":276,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":73,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":225,"org.easymock.tests2.CaptureTest.testCapture_2617107":164,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":65,"org.easymock.tests2.UsageConstraintsTest.any":146,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":229,"org.easymock.tests.UsageExpectAndThrowTest.longType":81,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":120,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":161,"org.easymock.tests.LimitationsTest.mockNativeMethod":85,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":222,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":0,"org.easymock.tests2.AnswerTest.answer":122,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":292,"org.easymock.tests2.CaptureTest.testAnd":162,"org.easymock.tests2.UsageTest.strictResetToDefault":112,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":191,"org.easymock.tests2.NameTest.nameForMocksControl":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":294,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":100,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":207,"org.easymock.tests2.DelegateToTest.testDelegate":175,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":53,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":155,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":132,"org.easymock.tests.MockingTest.testNicePartialClassMocking":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":84,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":19,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":290,"org.easymock.tests2.CaptureTest.testCaptureLast":167,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":139,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":144,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":151,"org.easymock.tests.MockingTest.testTwoMocks":179,"org.easymock.tests2.CaptureTest.testCapture1_2446744":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":208,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":196,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":116,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":258,"org.easymock.tests.UsageThrowableTest.throwError":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":296,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":281,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":264,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":246,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":289,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":263,"org.easymock.tests2.MockBuilderTest.testCreateMockString":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":273,"org.easymock.tests.UsageExpectAndThrowTest.floatType":80,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":271,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":123,"org.easymock.tests.UsageVerifyTest.twoThrows":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":128,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":226,"org.easymock.samples.ExampleTest.voteAgainstRemoval":30,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":303,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":275,"org.easymock.tests2.UsageTest.niceToStrict":114,"org.easymock.tests2.ThreadingTest.testChangeDefault":195,"org.easymock.tests2.UsageConstraintsTest.testNotNull":154,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":94,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":130,"org.easymock.tests2.UsageTest.defaultResetToNice":241,"org.easymock.tests2.MockBuilderTest.testCreateMock":186,"org.easymock.samples.ExampleTest.voteAgainstRemovals":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":58,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":277,"org.easymock.tests2.CallbackTest.callback":110,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":8,"org.easymock.tests.UsageTest.openCallCountByLastCall":206,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":315,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":101,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":64,"org.easymock.tests.UsageCallCountTest.tooFewCalls":71,"org.easymock.tests.UsageOverloadedMethodTest.overloading":79,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":254,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":68,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":215,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":78,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":136,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":20,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":169,"org.easymock.tests.UsageThrowableTest.throwCheckedException":91,"org.easymock.tests2.EasyMockSupportClassTest.testAll":126,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":77,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":313,"org.easymock.tests2.CaptureTest.testCaptureAll":163,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":295,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":135,"org.easymock.tests2.UsageConstraintsTest.testMatches":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":137,"org.easymock.samples.ExampleTest.voteForRemovals":32,"org.easymock.tests2.NameTest.nameForNiceMock":268,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":141,"org.easymock.tests.UsageVarargTest.allKinds":21,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":203,"org.easymock.tests2.DependencyTest.testInterfaceMocking":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":309,"org.easymock.samples.BasicClassMockTest.testPrintContent":35,"org.easymock.samples.ExampleTest.addDocument":31,"org.easymock.tests2.DelegateToTest.testStubDelegate":262,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":93,"org.easymock.tests2.AnswerTest.stubAnswer":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":285,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":311,"org.easymock.tests2.UsageConstraintsTest.greaterThan":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":272,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":6,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":233,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":193,"org.easymock.tests.UsageVarargTest.varargLongAccepted":42,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":61,"org.easymock.samples.ExampleTest.voteForRemoval":29,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":245,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":221,"org.easymock.tests.UsageExpectAndReturnTest.floatType":54,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":265,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":3,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":190,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":287,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":257,"org.easymock.tests.UsageThrowableTest.noUpperLimit":88,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":248,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":70,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":111,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":200,"org.easymock.tests2.SerializationTest.test":124,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":165,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":98,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":89,"org.easymock.tests2.UsageConstraintsTest.testSame":251,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":270,"org.easymock.samples.SupportTest.addDocument":23,"org.easymock.tests2.CaptureTest.testCaptureFirst":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":99,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":118,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":212,"org.easymock.tests.GenericTest.testPackageScope":76,"org.easymock.tests2.CaptureTest.testCapture2_2446744":261,"org.easymock.tests2.UsageTest.moreThanOneArgument":238,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":140,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":187,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":286,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":44,"org.easymock.tests2.NameTest.nameForMock":266,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":74,"org.easymock.tests.UsageExpectAndReturnTest.longType":55,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":216,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":188,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":302,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":152,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":210,"org.easymock.tests.UsageCallCountTest.tooManyCalls":75,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":278,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":299,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":82,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":63,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":134,"org.easymock.tests2.NameTest.nameForStrictMock":267,"org.easymock.tests2.UsageConstraintsTest.testContains":253,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":182,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":176,"org.easymock.tests2.UsageConstraintsTest.testFind":250,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":158,"org.easymock.tests.UsageExpectAndReturnTest.object":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":202,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":149,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":159,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":298,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.UsageConstraintsTest.lessThan":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":308,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":283,"org.easymock.tests.UsageTest.exactCallCountByLastCall":50,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":310,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":97,"org.easymock.tests2.CaptureTest.testCaptureRightOne":170,"org.easymock.tests2.UsageConstraintsTest.testOr":252,"org.easymock.tests.UsageRangeTest.combination":95,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":219,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":36,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":156,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":67,"org.easymock.tests.UsageTest.wrongArguments":47,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":280,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":56,"org.easymock.tests2.EasyMockSupportTest.testVerify":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":217,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":66,"org.easymock.tests.UsageVarargTest.varargShortAccepted":41,"org.easymock.tests2.UsageConstraintsTest.cmpTo":147,"org.easymock.tests.UsageVarargTest.varargCharAccepted":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":301,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":119,"org.easymock.tests2.UsageTest.openCallCountByLastCall":239,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":240,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":106,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":184,"org.easymock.tests.UsageTest.unexpectedCallWithArray":314,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":90,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":293,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":279,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":218,"org.easymock.tests2.UsageConstraintsTest.constraints":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":192,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":60,"org.easymock.samples.ExampleTest.addAndChangeDocument":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":220,"org.easymock.tests.UsageStrictMockTest.testVerify":14,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":22,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":129,"org.easymock.tests2.UsageTest.resumeIfFailure":242,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":227,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":194,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":211,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":228,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":69,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":102,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":201}}]
