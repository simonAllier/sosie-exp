[{"transplant":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[16,17],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[18,19,20,21,22],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[23,24,25,26,27,28,0,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,5,125,126,127,128,129,6,7,8,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,16,179,180,181,182,183,184,185,186,187,17,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,9,234,10,11,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,12,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,13,469,14,15,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[273,274,292,295,300,303,497,306,498,499,399,402,403,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,476,481,482],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[357,500],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[300,501,502,503,21,22,403],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[20,501,502,503,21,22,504,402],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[331,332,335,337,338,340,350,355,483,485,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[183,283,316,347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[23,24,25,26,27,28,0,31,32,33,35,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,80,81,82,83,84,85,88,89,90,91,93,94,96,97,108,110,111,112,114,115,119,120,121,5,125,126,127,128,129,6,7,8,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,164,165,167,168,169,170,171,172,173,176,225,228,232,9,234,10,11,235,237,238,244,245,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,272,275,276,277,278,279,280,12,282,283,284,285,287,289,290,310,311,312,313,314,315,316,317,320,329,330,331,332,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,368,369,370,371,372,374,375,376,377,378,379,380,386,394,395,396,398,400,401,405,406,407,408,409,410,411,413,414,415,416,417,433,460,468,13,469,14,15,470,471,472,474,477,479,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[23,24,25,26,27,0,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,80,81,82,83,84,85,86,87,88,89,90,91,96,101,102,104,108,109,110,111,117,120,121,124,125,126,129,6,7,8,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,158,159,160,161,162,164,165,168,169,170,171,172,173,176,221,222,223,224,232,9,11,235,236,237,238,250,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,280,12,282,283,286,289,291,297,298,299,301,310,311,312,314,315,316,317,320,323,325,329,330,331,332,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,379,380,386,394,395,398,399,400,401,402,405,406,407,408,409,410,411,412,413,414,415,416,417,419,420,421,422,433,436,446,452,460,468,13,15,470,471,472,474,475,476,477,479,480,481,483,484,485,486,488,489,490,491,492,493,496],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.ConstructorArgs:54","failures":[303,505,506,507,508,509,510,399,511,512,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[513],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[84,96,97,5,125,126,127,128,129,172,233,9,237,238,257,258,259,260,261,320,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,372,374,378,13,473,483,484,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[351],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[128,219,471],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[372],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[326,328,420],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.RecordState:117","failures":[112,266,358,361,363,372,374,380],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[514],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[6,10,11,244,245,14,15],"status":-1,"binaryOperator":"(int) == (int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[29,30,33,34,515,118,5,7,8,233,10,281,287,288,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[499,510],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[84,335],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[190,194],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[319,516,517],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[104],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:116","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[189,190,191,192,194,196],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[393,397],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":332,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":28,"org.easymock.tests2.UsageTest.argumentsOrdered":288,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":415,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":207,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":283,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":264,"org.easymock.tests2.DelegateToTest.testReturnException":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":169,"org.easymock.tests.MockingTest.testPartialClassMocking":101,"org.easymock.tests.MockClassControlTest.testToString":251,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":418,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":440,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":436,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":53,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":1,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":311,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":501,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":339,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":125,"org.easymock.tests2.UsageTest.wrongArguments":281,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":466,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":223,"org.easymock.samples.ExampleTest.answerVsDelegate":266,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":44,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":106,"org.easymock.tests2.UsageConstraintsTest.testNull":335,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":315,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":414,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":256,"org.easymock.tests2.CaptureTest.testPrimitive":486,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":129,"org.easymock.tests.UsageTest.moreThanOneArgument":0,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":72,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":25,"org.easymock.tests.UsageTest.argumentsOrdered":34,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":243,"org.easymock.tests.UsageVarargTest.varargIntAccepted":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":22,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":291,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":425,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":391,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":261,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":460,"org.easymock.tests.ReplayStateInvalidUsageTest.times":185,"org.easymock.tests2.DependencyTest.testClassMocking":308,"org.easymock.tests2.AnswerTest.answer":358,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":367,"org.easymock.tests2.CaptureTest.testAnd":483,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":41,"org.easymock.tests2.UsageTest.strictResetToDefault":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":295,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":24,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":409,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":110,"org.easymock.tests2.DelegateToTest.testDelegate":398,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":247,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":68,"org.easymock.tests.LimitationsTest.mockFinalMethod":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":162,"org.easymock.tests2.DependencyTest.testClassMockingSupport":309,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":122,"org.easymock.tests2.CaptureTest.testCapture1_2446744":487,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":365,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":179,"org.easymock.tests.UsageThrowableTest.throwError":150,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":43,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":392,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":27,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":454,"org.easymock.samples.PartialClassMockTest.testGetArea":263,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":180,"org.easymock.tests.MockingTest.testInterfaceMocking":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":258,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":441,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":54,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":230,"org.easymock.tests2.UsageTest.niceToStrict":282,"org.easymock.tests2.ThreadingTest.testChangeDefault":517,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":197,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":297,"org.easymock.tests2.MockBuilderTest.testCreateMock":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":449,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":463,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":62,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":410,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":40,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":52,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":86,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":221,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":507,"org.easymock.tests.UsageOverloadedMethodTest.overloading":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":445,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":115,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":345,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":141,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":119,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":344,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":492,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":76,"org.easymock.tests2.EasyMockSupportClassTest.testAll":433,"org.easymock.tests.MockClassControlTest.testEquals":255,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":165,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":70,"org.easymock.tests2.CaptureTest.testCaptureAll":484,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":160,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":366,"org.easymock.tests.MockNameTest.defaultName":95,"org.easymock.tests2.UsageConstraintsTest.testMatches":346,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":26,"org.easymock.samples.ExampleTest.voteForRemovals":270,"org.easymock.tests.UsageVarargTest.allKinds":84,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":161,"org.easymock.samples.BasicClassMockTest.testPrintContent":276,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":156,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":467,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":397,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":504,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":195,"org.easymock.tests2.UsageConstraintsTest.greaterThan":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":109,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":326,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":196,"org.easymock.samples.ExampleTest.voteForRemoval":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":327,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":376,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":318,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":85,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":279,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":407,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":168,"org.easymock.tests2.CaptureTest.testCaptureFirst":496,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":408,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":290,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":118,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":137,"org.easymock.tests2.CaptureTest.testCapture2_2446744":495,"org.easymock.tests2.UsageTest.moreThanOneArgument":12,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":215,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":305,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":83,"org.easymock.tests.GenericTest.testBridgedEquals":167,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":508,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":505,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":93,"org.easymock.tests.UsageExpectAndReturnTest.longType":133,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":405,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":158,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":71,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":242,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":353,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":69,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":23,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":48,"org.easymock.tests.UsageCallCountTest.tooManyCalls":94,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":450,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":465,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":155,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":475,"org.easymock.tests.MockingTest.testNiceClassMocking":107,"org.easymock.tests.MockingTest.testClassMocking":99,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":87,"org.easymock.tests2.UsageConstraintsTest.testContains":343,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":370,"org.easymock.tests2.UsageConstraintsTest.testFind":334,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":121,"org.easymock.tests.MockTypeTest.fromEasyMockClass":42,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":231,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":374,"org.easymock.tests.UsageExpectAndReturnTest.object":140,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":413,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":502,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":78,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":228,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":509,"org.easymock.tests.UsageTest.exactCallCountByLastCall":35,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":202,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":36,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":244,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":403,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":146,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":73,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":114,"org.easymock.tests.MockClassControlTest.testHashCode":254,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":382,"org.easymock.tests2.EasyMockSupportTest.testVerify":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":443,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":245,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":112,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":51,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":364,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":473,"org.easymock.tests.UsageVarargTest.varargCharAccepted":77,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":188,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":220,"org.easymock.tests2.UsageTest.openCallCountByLastCall":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":511,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":416,"org.easymock.tests.DefaultClassInstantiatorTest.object":189,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":50,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":226,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":444,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":458,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":381,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":253,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":59,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":147,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":452,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":252,"org.easymock.tests2.UsageTest.resumeIfFailure":289,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":39,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":171,"org.easymock.tests2.StubTest.stubWithReturnValue":472,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":300,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":139,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":354,"org.easymock.tests2.SerializationTest.testAllMockedMethod":401,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":213,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":19,"org.easymock.samples.SupportTest.voteForRemovals":278,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":384,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":65,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":219,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":359,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":38,"org.easymock.tests.UsageExpectAndThrowTest.object":63,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":351,"org.easymock.tests2.DelegateToTest.testWrongClass":396,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":237,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":238,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.samples.ConstructorCalledMockTest.testTax":273,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":428,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":412,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":474,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":506,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":430,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":187,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":222,"org.easymock.tests2.CaptureTest.testCaptureNone":491,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":241,"org.easymock.tests.UsageUnorderedTest.message":5,"org.easymock.tests.UsageVerifyTest.twoReturns":8,"org.easymock.tests.UsageVarargTest.varargByteAccepted":82,"org.easymock.tests2.ThreadingTest.testThreadSafe":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":447,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":91,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":229,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":275,"org.easymock.tests2.CaptureTest.testCapture_2617107":485,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":124,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":217,"org.easymock.tests2.UsageConstraintsTest.any":341,"org.easymock.tests2.StubTest.stub":471,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":184,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":170,"org.easymock.tests.UsageExpectAndThrowTest.longType":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":218,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":193,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":183,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":469,"org.easymock.tests2.SerializationTest.testClass":399,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":386,"org.easymock.tests.LimitationsTest.mockNativeMethod":176,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":166,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":149,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":457,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":470,"org.easymock.tests2.NameTest.nameForMocksControl":422,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":459,"org.easymock.tests2.MockedExceptionTest.testMockedException":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":435,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":32,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":104,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":57,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":373,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":312,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":301,"org.easymock.tests.MockingTest.testNicePartialClassMocking":102,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":317,"org.easymock.tests2.CompareToTest.testNotComparable":513,"org.easymock.tests2.CaptureTest.testCaptureLast":490,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":455,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":123,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":481,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":338,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":352,"org.easymock.tests.MockingTest.testTwoMocks":100,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":61,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":287,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":356,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":516,"org.easymock.samples.ExampleTest.removeNonExistingDocument":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":462,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":181,"org.easymock.tests.UsageStrictMockTest.differentMethods":11,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":383,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":191,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":377,"org.easymock.tests2.MockBuilderTest.testCreateMockString":307,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":437,"org.easymock.tests.UsageExpectAndThrowTest.floatType":55,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":432,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":361,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":404,"org.easymock.tests.UsageVerifyTest.twoThrows":7,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":446,"org.easymock.samples.ExampleTest.voteAgainstRemoval":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":208,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":239,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":325,"org.easymock.tests.LimitationsTest.privateConstructor":175,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":499,"org.easymock.tests2.UsageConstraintsTest.testNotNull":355,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":157,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":368,"org.easymock.tests2.UsageTest.defaultResetToNice":286,"org.easymock.samples.ExampleTest.voteAgainstRemovals":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":209,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":456,"org.easymock.tests.UsageVarargTest.differentLength":79,"org.easymock.tests2.CallbackTest.callback":380,"org.easymock.tests2.UsageConstraintsTest.equals":333,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":321,"org.easymock.tests.UsageTest.openCallCountByLastCall":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":329,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":127,"org.easymock.tests.UsageCallCountTest.tooFewCalls":89,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":477,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":224,"org.easymock.tests.UsageThrowableTest.throwCheckedException":154,"org.easymock.tests.MockingTest.testStrictClassMocking":98,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":480,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":97,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":476,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":461,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":186,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":479,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":363,"org.easymock.tests.ObjectMethodsTest.testHashCode":227,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":21,"org.easymock.tests2.NameTest.nameForNiceMock":421,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":379,"org.easymock.tests2.DependencyTest.testInterfaceMocking":310,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":503,"org.easymock.samples.ExampleTest.addDocument":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":453,"org.easymock.tests2.DelegateToTest.testStubDelegate":395,"org.easymock.tests2.AnswerTest.stubAnswer":362,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":9,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":302,"org.easymock.tests.UsageVarargTest.varargLongAccepted":81,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":148,"org.easymock.tests.UsageExpectAndReturnTest.floatType":132,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":402,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":274,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":390,"org.easymock.tests.UsageThrowableTest.noUpperLimit":151,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":116,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":330,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":423,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":488,"org.easymock.tests2.SerializationTest.test":400,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":131,"org.easymock.tests2.UsageConstraintsTest.testSame":336,"org.easymock.samples.SupportTest.addDocument":277,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":478,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":438,"org.easymock.tests.GenericTest.testPackageScope":164,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":201,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":389,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":105,"org.easymock.tests2.NameTest.nameForMock":419,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":142,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":306,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":134,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":67,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":225,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":111,"org.easymock.tests2.MockedExceptionTest.testRealException":371,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":46,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":211,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":18,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":210,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":126,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":17,"org.easymock.tests2.NameTest.nameForStrictMock":420,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":296,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":512,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":316,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":427,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":192,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":350,"org.easymock.tests.ErrorMessageTest.testGetters":3,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":293,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":357,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":385,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":514,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":205,"org.easymock.tests2.CaptureTest.testCaptureRightOne":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":442,"org.easymock.tests2.UsageConstraintsTest.testOr":337,"org.easymock.tests.UsageRangeTest.combination":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":313,"org.easymock.tests.UsageTest.wrongArguments":30,"org.easymock.tests2.MockBuilderTest.testWithConstructor":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":439,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":198,"org.easymock.tests.UsageVarargTest.varargShortAccepted":80,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":194,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":92,"org.easymock.tests2.UsageConstraintsTest.cmpTo":342,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":360,"org.easymock.tests2.CompareToTest.testLessThan":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":200,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":285,"org.easymock.tests2.CaptureTest.testCaptureFromStub":494,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":16,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":294,"org.easymock.tests.UsageTest.unexpectedCallWithArray":29,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":233,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":90,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":497,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":144,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":234,"org.easymock.tests2.UsageConstraintsTest.constraints":331,"org.easymock.samples.ExampleTest.addAndChangeDocument":272,"org.easymock.tests.UsageStrictMockTest.testVerify":236,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":262,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":159,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":489,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":259,"org.easymock.tests.LimitationsTest.abstractClass":174,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":136,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":411,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":4,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":74}}]
