[{"position":"org.easymock.internal.matchers.LessThan:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,27,28,28,29,30,31,32,33,34,35,36,37,38,0,39,40,41,42,43,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:342","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int));\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:344","sourceCode":"return this","type":"CtReturnImpl"},"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[58],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[59],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[60,61,62,63,64,65,66,67,68,69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[70,0,2,71],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[72,73,74],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[75],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,27,27,28,28,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[27,28,133,116,134,135,136,137,138,139,140,141,142,132,143],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[144,145,146],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[147,148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:280","failures":[149,62,150,151,152,153,154,155],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[140],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[156,157,158,159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[160,161,162,163,164,165,166,167,168,169,29,170],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[171,172,173,174,175,17,44,45,176,177,178,179,180,181,182,183,184,31,56,57,185,186,187,188,189,190,191],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[77,78,79,80,81,82,84,89,90,91,92,93,94,95,27,27,28,28,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,192,119,120,121,122,123,124,125,126,193,127,128,129,130,131,132,194],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[195,196,197],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[198,199,200,201,202,203,204,147,205,206,207,4,5,6,7,8,171,172,9,10,208,209,11,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,173,174,175,227,228,229,230,231,232,17,233,44,45,234,235,236,237,238,239,240,241,242,243,244,245,246,247,176,248,89,249,250,251,252,46,253,254,255,47,48,256,49,257,258,50,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,18,19,275,156,157,20,276,21,22,23,24,25,277,278,279,280,281,282,283,284,285,61,177,149,286,178,179,180,287,288,289,290,291,292,293,51,294,295,296,52,53,297,54,298,299,55,300,301,302,303,304,305,184,306,307,308,309,310,311,312,313,314,315,316,317,158,159,26,318,319,320,62,321,322,323,324,325,326,327,160,328,161,162,163,164,165,166,329,167,169,29,330,170,331,332,97,333,334,30,335,336,337,338,339,340,341,342,343,344,110,345,346,347,348,349,350,351,31,352,56,57,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,150,151,152,153,154,155,32,33,368,59,34,35,36,37,369,70,370,371,372,38,373,0,39,374,40,41,375,376,1,377,378,42,43,2,379,380,118,381,382,383,384,63,385,386,191,387,388,389,390,391,392,393,394,395,396,64,65,132,397,398,66,399,67,68,400,69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[401,150,152],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[174,175,232,44,176,180,183,306,307,310,311,56,387,393,394],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[20,371],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[104,372,402],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[203,4,5,6,7,8,9,10,11,173,175,227,228,229,17,44,45,236,237,238,239,80,82,240,242,243,244,245,246,247,89,18,19,20,179,91,92,93,288,289,290,291,292,293,51,294,295,296,52,53,297,54,298,299,55,300,301,302,303,304,305,184,308,309,312,96,320,321,322,324,327,160,328,162,163,166,329,167,169,330,170,97,30,98,99,335,100,101,102,104,106,107,108,340,341,342,343,344,110,111,112,113,345,114,115,31,56,57,116,354,355,356,357,358,359,360,361,362,363,364,365,366,152,32,33,368,59,34,35,36,37,369,70,371,372,38,373,0,39,374,40,41,375,376,1,378,42,43,2,379,119,121,123,124,126,381,128,129,130,131,383,384,385,386,191,388,390,391,392,395,396,132,400],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[171,9,10,208,174,228,230,231,17,233,44,45,234,236,240,243,244,245,246,247,176,264,265,266,267,268,270,271,272,273,274,280,282,285,310,311,96,320,321,322,324,325,327,328,161,162,164,165,166,329,167,169,170,99,101,107,350,351,31,352,56,57,353,355,356,357,358,360,361,364,365,366,155,59,35,369,70,371,373,374,375,376,1,377,378,42,121,126,63,386,388,389,393,394],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[78,123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[403,82,27,28,96,133,107,109,116,121,404,137,125,127,129,130,132,143],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[405,406],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[407,342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:140","sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Set<org.easymock.internal.MethodSerializationWrapper>)","type":"CtInvocationImpl"},"failures":[116],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[77,78,79,80,81,82,83,84,85,86,87,88,408,409,89,410,411,90,91,92,93,412,413,94,95,27,27,28,28,96,331,332,97,98,99,100,101,102,103,104,414,105,106,107,108,407,109,336,415,110,111,112,113,114,115,116,117,118,119,120,416,121,122,123,124,125,126,127,128,129,130,131,132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[199,200,201,203,204,147,205,206,207,4,5,6,7,8,171,172,9,10,208,209,11,210,211,212,213,214,215,220,221,222,223,224,225,226,173,174,175,79,227,228,229,230,231,232,17,233,44,45,234,235,236,237,238,239,80,81,82,83,84,85,86,87,88,408,409,417,405,418,419,420,421,422,423,424,425,426,406,240,241,242,243,244,245,246,247,176,89,249,250,251,252,46,253,254,255,47,48,256,49,257,258,50,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,18,19,275,156,157,20,276,21,22,23,24,25,277,278,279,280,281,282,283,284,285,61,177,149,286,178,179,180,90,91,92,93,287,288,289,413,290,291,292,293,51,294,295,296,52,53,297,54,298,299,55,300,301,302,303,304,305,184,306,307,308,309,310,311,312,313,314,315,316,317,158,159,26,318,94,95,27,27,28,28,96,319,320,62,321,322,323,324,427,325,326,327,160,328,161,162,163,164,165,166,329,167,169,29,330,170,331,332,97,333,334,30,98,99,335,100,101,102,103,104,105,106,107,108,336,337,338,339,340,341,342,343,344,110,111,112,113,345,114,115,346,347,348,349,350,351,31,352,56,57,353,116,354,117,355,356,357,358,359,360,361,362,363,364,365,366,367,150,151,152,153,154,155,32,33,368,59,34,35,36,37,369,70,370,371,372,38,373,0,39,374,40,41,375,376,1,377,378,42,43,2,379,118,119,121,122,123,124,125,126,127,381,128,129,130,131,383,384,428,63,385,386,191,387,388,389,390,391,392,393,394,395,396,64,65,132,66,399,67,68,400,69],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[375],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[174,175,232,44,176,180,183,306,307,310,311,56,387,393,394],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[418],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[373],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":59,"org.easymock.tests2.UsageTest.argumentsOrdered":394,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":305,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":365,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":401,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":389,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":319,"org.easymock.tests2.DelegateToTest.testReturnException":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":211,"org.easymock.tests.MockingTest.testPartialClassMocking":91,"org.easymock.tests.MockClassControlTest.testToString":85,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":203,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":16,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":249,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":384,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":70,"org.easymock.tests2.UsageTest.wrongArguments":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":9,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":315,"org.easymock.samples.ExampleTest.answerVsDelegate":62,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":78,"org.easymock.tests2.UsageConstraintsTest.testNull":35,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":100,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":409,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":364,"org.easymock.tests2.CaptureTest.testPrimitive":162,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":11,"org.easymock.tests.UsageTest.moreThanOneArgument":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":263,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":23,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":204,"org.easymock.tests.UsageTest.argumentsOrdered":311,"org.easymock.tests.UsageVarargTest.varargIntAccepted":266,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":398,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":190,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":4,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":118,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":8,"org.easymock.tests.ReplayStateInvalidUsageTest.times":424,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":381,"org.easymock.tests2.AnswerTest.answer":66,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":370,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":349,"org.easymock.tests2.CaptureTest.testAnd":160,"org.easymock.tests2.UsageTest.strictResetToDefault":386,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":22,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":359,"org.easymock.tests2.DelegateToTest.testDelegate":155,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":226,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":171,"org.easymock.tests2.CaptureTest.testCapture1_2446744":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":258,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":347,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":418,"org.easymock.tests.UsageThrowableTest.throwError":240,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":25,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":140,"org.easymock.samples.PartialClassMockTest.testGetArea":96,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":288,"org.easymock.tests2.UsageTest.niceToStrict":388,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":250,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":12,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":121,"org.easymock.tests2.MockBuilderTest.testCreateMock":125,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":186,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":48,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":360,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":159,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":277,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":313,"org.easymock.tests.UsageOverloadedMethodTest.overloading":228,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":0,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":54,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":227,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":196,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":373,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":167,"org.easymock.tests.MockClassControlTest.testEquals":408,"org.easymock.tests2.EasyMockSupportClassTest.testAll":128,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":224,"org.easymock.tests2.CaptureTest.testCaptureAll":328,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":348,"org.easymock.tests.MockNameTest.defaultName":248,"org.easymock.tests2.UsageConstraintsTest.testMatches":39,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":417,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":24,"org.easymock.samples.ExampleTest.voteForRemovals":324,"org.easymock.tests.UsageVarargTest.allKinds":274,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":173,"org.easymock.samples.BasicClassMockTest.testPrintContent":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":225,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":246,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":350,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":215,"org.easymock.tests2.UsageConstraintsTest.greaterThan":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":237,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":108,"org.easymock.samples.ExampleTest.voteForRemoval":321,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":407,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":341,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":103,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":385,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":79,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":357,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":210,"org.easymock.tests2.CaptureTest.testCaptureFirst":170,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":358,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":396,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":180,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":296,"org.easymock.tests2.UsageTest.moreThanOneArgument":191,"org.easymock.tests2.CaptureTest.testCapture2_2446744":330,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":343,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":126,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":284,"org.easymock.tests.UsageExpectAndReturnTest.longType":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":222,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":355,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":262,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":26,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":21,"org.easymock.tests.UsageCallCountTest.tooManyCalls":285,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":279,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":245,"org.easymock.tests.MockingTest.testNiceClassMocking":412,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":111,"org.easymock.tests.MockingTest.testClassMocking":411,"org.easymock.tests2.UsageConstraintsTest.testContains":38,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":192,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":278,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":97,"org.easymock.tests2.UsageConstraintsTest.testFind":34,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":229,"org.easymock.tests.MockTypeTest.fromEasyMockClass":216,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":65,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":230,"org.easymock.tests.UsageExpectAndReturnTest.object":297,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":363,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":268,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":201,"org.easymock.tests.UsageTest.exactCallCountByLastCall":312,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":14,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":147,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":143,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":301,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":149,"org.easymock.tests.MockClassControlTest.testHashCode":88,"org.easymock.tests2.EasyMockSupportTest.testVerify":367,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":205,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":158,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":61,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":346,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":428,"org.easymock.tests.UsageVarargTest.varargCharAccepted":267,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":397,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":351,"org.easymock.tests2.UsageTest.openCallCountByLastCall":390,"org.easymock.tests.DefaultClassInstantiatorTest.object":413,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":145,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":366,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":317,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":199,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":243,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":106,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":87,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":302,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":275,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":131,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":86,"org.easymock.tests2.UsageTest.resumeIfFailure":395,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":213,"org.easymock.tests2.StubTest.stubWithReturnValue":30,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":136,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":53,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":378,"org.easymock.tests2.SerializationTest.testAllMockedMethod":117,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":220,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":142,"org.easymock.samples.SupportTest.voteForRemovals":327,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":257,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":221,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":399,"org.easymock.tests.UsageExpectAndThrowTest.object":256,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":376,"org.easymock.tests2.DelegateToTest.testWrongClass":153,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":18,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":19,"org.easymock.tests.UsageStrictMockTest.range":44,"org.easymock.samples.ConstructorCalledMockTest.testTax":27,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":362,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":123,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":426,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":314,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":289,"org.easymock.tests2.CaptureTest.testCaptureNone":329,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":73,"org.easymock.tests.UsageUnorderedTest.message":176,"org.easymock.tests.UsageVerifyTest.twoReturns":175,"org.easymock.tests.UsageVarargTest.varargByteAccepted":272,"org.easymock.tests2.ThreadingTest.testThreadSafe":340,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":282,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":94,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":202,"org.easymock.tests2.CaptureTest.testCapture_2617107":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":209,"org.easymock.tests2.UsageConstraintsTest.any":371,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":423,"org.easymock.tests2.StubTest.stub":334,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":212,"org.easymock.tests.UsageExpectAndThrowTest.longType":252,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":195,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":422,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":352,"org.easymock.tests2.SerializationTest.testClass":116,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":379,"org.easymock.tests.LimitationsTest.mockNativeMethod":89,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":304,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":353,"org.easymock.tests2.NameTest.nameForMocksControl":339,"org.easymock.tests2.MockedExceptionTest.testMockedException":332,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":309,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":46,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":93,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":124,"org.easymock.tests.MockingTest.testNicePartialClassMocking":92,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":102,"org.easymock.tests2.CompareToTest.testCompareEqual":402,"org.easymock.tests2.CaptureTest.testCaptureLast":166,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":172,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":115,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":369,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":1,"org.easymock.tests.MockingTest.testTwoMocks":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":47,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":393,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":43,"org.easymock.samples.ExampleTest.removeNonExistingDocument":427,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":420,"org.easymock.tests.UsageStrictMockTest.differentMethods":45,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":74,"org.easymock.tests2.ConstraintsToStringTest.andToString":189,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":342,"org.easymock.tests2.MockBuilderTest.testCreateMockString":127,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":83,"org.easymock.tests.UsageExpectAndThrowTest.floatType":251,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":374,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":68,"org.easymock.tests.UsageVerifyTest.twoThrows":174,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":130,"org.easymock.samples.ExampleTest.voteAgainstRemoval":322,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":287,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":107,"org.easymock.tests2.UsageConstraintsTest.testNotNull":42,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":247,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":331,"org.easymock.tests2.UsageTest.defaultResetToNice":392,"org.easymock.samples.ExampleTest.voteAgainstRemovals":320,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":300,"org.easymock.tests.UsageVarargTest.differentLength":269,"org.easymock.tests2.CallbackTest.callback":63,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":133,"org.easymock.tests.UsageTest.openCallCountByLastCall":308,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":32,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":208,"org.easymock.tests.UsageCallCountTest.tooFewCalls":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":113,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":316,"org.easymock.tests.UsageThrowableTest.throwCheckedException":244,"org.easymock.tests.MockingTest.testStrictClassMocking":410,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":181,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":114,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":276,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":382,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":425,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":345,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":69,"org.easymock.tests2.CompareToTest.testGreateOrEqual":71,"org.easymock.tests.ObjectMethodsTest.testHashCode":200,"org.easymock.tests2.NameTest.nameForNiceMock":338,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":344,"org.easymock.tests2.DependencyTest.testInterfaceMocking":383,"org.easymock.samples.ExampleTest.addDocument":323,"org.easymock.tests2.DelegateToTest.testStubDelegate":152,"org.easymock.tests2.AnswerTest.stubAnswer":400,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":17,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":404,"org.easymock.tests.UsageVarargTest.varargLongAccepted":271,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":234,"org.easymock.tests.UsageExpectAndReturnTest.floatType":292,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":303,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":132,"org.easymock.tests2.ConstraintsToStringTest.orToString":185,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":28,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":41,"org.easymock.tests.UsageThrowableTest.noUpperLimit":241,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":33,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":164,"org.easymock.tests2.SerializationTest.test":354,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":197,"org.easymock.tests2.UsageConstraintsTest.testSame":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":291,"org.easymock.samples.SupportTest.addDocument":326,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":421,"org.easymock.tests.GenericTest.testPackageScope":80,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":13,"org.easymock.tests2.NameTest.nameForMock":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":298,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":139,"org.easymock.tests2.UsageStrictMockTest.differentMethods":57,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":414,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":51,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":50,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":239,"org.easymock.tests2.MockedExceptionTest.testRealException":333,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":15,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":141,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":60,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":406,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":10,"org.easymock.tests2.NameTest.nameForStrictMock":337,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":146,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":64,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":101,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":415,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":375,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":119,"org.easymock.tests2.UsageStrictMockTest.range":56,"org.easymock.tests2.UsageConstraintsTest.lessThan":2,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":75,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":356,"org.easymock.tests2.CaptureTest.testCaptureRightOne":169,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":72,"org.easymock.tests2.UsageConstraintsTest.testOr":37,"org.easymock.tests.UsageRangeTest.combination":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":99,"org.easymock.tests.UsageTest.wrongArguments":307,"org.easymock.tests2.MockBuilderTest.testWithConstructor":134,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":84,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":299,"org.easymock.tests.UsageVarargTest.varargShortAccepted":270,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":283,"org.easymock.tests2.UsageConstraintsTest.cmpTo":372,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":67,"org.easymock.tests2.CompareToTest.testLessThan":3,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":391,"org.easymock.tests2.CaptureTest.testCaptureFromStub":29,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":405,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":120,"org.easymock.tests.UsageTest.unexpectedCallWithArray":306,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":232,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":281,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":55,"org.easymock.tests2.CaptureTest.testCapture":168,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":233,"org.easymock.tests2.UsageConstraintsTest.constraints":368,"org.easymock.samples.ExampleTest.addAndChangeDocument":325,"org.easymock.tests2.ConstraintsToStringTest.notToString":187,"org.easymock.tests.UsageStrictMockTest.testVerify":235,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":318,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":231,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":223,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":6,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":194,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":295,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":7,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":361}}]
