[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,0,1,2,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,3,4,5,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[0,488,489,490,491,492,493,494,495,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,100,103,108,111,114,190,191,496,195,200,201,227,228],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[497],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[120],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[498,499,282,500,501,434],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[181,214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[73,78],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,502],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[113,220],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[274,443],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[201],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[24,136,226,231,344],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[265,267,276,277,279,336,346,347,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[14,17,66,67,68,69,179,180,186,187,282,283,286,355,356,410,433,435,438,439],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[6,9,10,11,12,13,14,15,16,17,18,0,1,2,24,31,32,34,35,39,42,52,58,61,63,64,70,71,72,73,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,105,106,107,109,112,113,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,165,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,193,194,195,196,198,199,200,202,203,204,205,206,207,208,209,210,212,215,216,217,218,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,280,281,282,283,284,285,286,287,289,290,291,292,294,296,298,299,326,328,330,331,334,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,372,373,374,376,377,378,379,380,381,382,383,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,432,433,434,435,436,437,438,439,440,449,450,451,452,453,454,455,456,457,458,459,460,464,465,467,473,474,475,476,477,478,479],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[6,9,12,13,14,15,16,17,18,0,1,2,24,34,35,39,42,52,58,61,63,64,66,67,68,69,73,79,80,82,83,85,88,91,92,93,94,95,99,101,105,106,107,109,112,113,115,116,117,118,119,120,122,123,124,125,126,127,130,136,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,161,163,173,174,175,176,177,178,180,181,182,185,186,187,189,190,193,194,195,196,198,199,200,202,204,205,206,207,208,209,210,212,215,217,223,224,225,226,229,230,231,232,233,234,235,236,237,238,239,240,241,253,254,280,281,282,283,284,285,286,287,288,289,290,291,292,294,304,312,313,314,315,316,317,318,319,320,321,322,323,326,328,330,331,333,334,351,352,355,356,362,363,364,365,366,368,369,372,373,374,376,377,378,379,380,381,382,383,385,386,387,392,393,395,400,405,410,413,414,416,421,426,434,435,438,439,440,447,451,452,453,454,455,456,457,458,464,465,467,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[70,72,89,95],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[256,260,261,270,275],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[190,191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":73,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":497,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":432,"org.easymock.tests2.UsageTest.argumentsOrdered":187,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":153,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":266,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":182,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":226,"org.easymock.tests2.DelegateToTest.testReturnException":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":248,"org.easymock.tests.MockingTest.testPartialClassMocking":464,"org.easymock.tests.MockClassControlTest.testToString":482,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":65,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":411,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":42,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":224,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":524,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":80,"org.easymock.tests2.UsageTest.wrongArguments":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":349,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":291,"org.easymock.samples.ExampleTest.answerVsDelegate":233,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":343,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":469,"org.easymock.tests2.UsageConstraintsTest.testNull":76,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":207,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":487,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":152,"org.easymock.tests2.CaptureTest.testPrimitive":120,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":353,"org.easymock.tests.UsageTest.moreThanOneArgument":433,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":430,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":359,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":441,"org.easymock.tests.UsageTest.argumentsOrdered":439,"org.easymock.tests.UsageVarargTest.varargIntAccepted":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":242,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":99,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":168,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":141,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":246,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":508,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":24,"org.easymock.tests.ReplayStateInvalidUsageTest.times":320,"org.easymock.tests2.DependencyTest.testClassMocking":221,"org.easymock.tests2.AnswerTest.answer":6,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":176,"org.easymock.tests2.CaptureTest.testAnd":117,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":340,"org.easymock.tests2.UsageTest.strictResetToDefault":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":103,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":298,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":445,"org.easymock.tests2.DelegateToTest.testDelegate":165,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":507,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":426,"org.easymock.tests.LimitationsTest.mockFinalMethod":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":251,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":366,"org.easymock.tests2.DependencyTest.testClassMockingSupport":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":446,"org.easymock.tests2.CaptureTest.testCapture1_2446744":121,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":424,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":174,"org.easymock.tests.UsageThrowableTest.throwError":451,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":314,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":342,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":431,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":361,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":60,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":511,"org.easymock.samples.PartialClassMockTest.testGetArea":225,"org.easymock.tests.MockingTest.testInterfaceMocking":466,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":243,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":412,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":389,"org.easymock.tests2.UsageTest.niceToStrict":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":47,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":256,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":105,"org.easymock.tests2.MockBuilderTest.testCreateMock":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":55,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":27,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":420,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":148,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":302,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":471,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":289,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":492,"org.easymock.tests.UsageOverloadedMethodTest.overloading":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":57,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":86,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":331,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":401,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":253,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":85,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":126,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":375,"org.easymock.tests.MockClassControlTest.testEquals":486,"org.easymock.tests2.EasyMockSupportClassTest.testAll":39,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":428,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":175,"org.easymock.tests2.CaptureTest.testCaptureAll":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":364,"org.easymock.tests.MockNameTest.defaultName":293,"org.easymock.tests2.UsageConstraintsTest.testMatches":87,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":360,"org.easymock.samples.ExampleTest.voteForRemovals":237,"org.easymock.tests.UsageVarargTest.allKinds":383,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":354,"org.easymock.samples.BasicClassMockTest.testPrintContent":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":365,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":457,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":12,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":252,"org.easymock.tests2.UsageConstraintsTest.greaterThan":89,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":297,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":218,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":512,"org.easymock.samples.ExampleTest.voteForRemoval":234,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":311,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":32,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":219,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":344,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":210,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":504,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":177,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":294,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":145,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":247,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":160,"org.easymock.tests2.CaptureTest.testCaptureFirst":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":146,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":189,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":397,"org.easymock.tests2.UsageTest.moreThanOneArgument":179,"org.easymock.tests2.CaptureTest.testCapture2_2446744":129,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":34,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":274,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":382,"org.easymock.tests.GenericTest.testBridgedEquals":371,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":493,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":490,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":478,"org.easymock.tests.UsageExpectAndReturnTest.longType":393,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":362,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":429,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":94,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":295,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":427,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":357,"org.easymock.tests.UsageCallCountTest.tooManyCalls":479,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":398,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":29,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":416,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":456,"org.easymock.tests.MockingTest.testNiceClassMocking":470,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":194,"org.easymock.tests.MockingTest.testClassMocking":462,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":472,"org.easymock.tests2.UsageConstraintsTest.testContains":84,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":158,"org.easymock.tests2.UsageConstraintsTest.testFind":75,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":255,"org.easymock.tests.MockTypeTest.fromEasyMockClass":341,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":63,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests.UsageExpectAndReturnTest.object":400,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":28,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":151,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":377,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":387,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":494,"org.easymock.tests.UsageTest.exactCallCountByLastCall":440,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":261,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":442,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":335,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":191,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":406,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":372,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":330,"org.easymock.tests.MockClassControlTest.testHashCode":485,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":132,"org.easymock.tests2.EasyMockSupportTest.testVerify":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":49,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":443,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":301,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":328,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":173,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":116,"org.easymock.tests.UsageVarargTest.varargCharAccepted":376,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":303,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":279,"org.easymock.tests2.UsageTest.openCallCountByLastCall":183,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":154,"org.easymock.tests.DefaultClassInstantiatorTest.object":304,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":300,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":385,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":50,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":454,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":22,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":131,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":510,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":484,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":216,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":417,"org.easymock.tests.ReplayStateInvalidCallsTest.times":516,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":407,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":3,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":517,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":58,"org.easymock.tests2.UsageTest.resumeIfFailure":188,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":338,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":250,"org.easymock.tests2.StubTest.stubWithReturnValue":203,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":399,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":95,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":272,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":499,"org.easymock.samples.SupportTest.voteForRemovals":230,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":367,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":134,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":423,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":502,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":278,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":7,"org.easymock.tests.UsageExpectAndThrowTest.object":421,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":337,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":92,"org.easymock.tests2.DelegateToTest.testWrongClass":163,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":514,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":449,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":450,"org.easymock.samples.ConstructorCalledMockTest.testTax":227,"org.easymock.tests.UsageStrictMockTest.range":285,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":171,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":150,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":193,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":491,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":422,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":107,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":36,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":290,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":500,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":506,"org.easymock.tests2.CaptureTest.testCaptureNone":125,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":348,"org.easymock.tests.UsageUnorderedTest.message":410,"org.easymock.tests.UsageVerifyTest.twoReturns":356,"org.easymock.tests.UsageVarargTest.varargByteAccepted":381,"org.easymock.tests2.ThreadingTest.testThreadSafe":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":53,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":476,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":388,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":240,"org.easymock.tests2.CaptureTest.testCapture_2617107":119,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":276,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":352,"org.easymock.tests2.UsageConstraintsTest.any":82,"org.easymock.tests2.StubTest.stub":202,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":319,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":5,"org.easymock.tests.UsageExpectAndThrowTest.longType":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":277,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":308,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":318,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":136,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":326,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":409,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":21,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":522,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":18,"org.easymock.tests2.NameTest.nameForMocksControl":69,"org.easymock.tests2.MockedExceptionTest.testMockedException":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":41,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":437,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":467,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":415,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":62,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":204,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":109,"org.easymock.tests.MockingTest.testNicePartialClassMocking":465,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":209,"org.easymock.tests2.CaptureTest.testCaptureLast":124,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":447,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":521,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":79,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":200,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":93,"org.easymock.tests.MockingTest.testTwoMocks":463,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":518,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":201,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":390,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":419,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":186,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":97,"org.easymock.samples.ExampleTest.removeNonExistingDocument":238,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":26,"org.easymock.tests.UsageStrictMockTest.differentMethods":286,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":133,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":306,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":33,"org.easymock.tests2.MockBuilderTest.testCreateMockString":115,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":480,"org.easymock.tests.UsageExpectAndThrowTest.floatType":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":43,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":38,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":9,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":192,"org.easymock.tests.UsageVerifyTest.twoThrows":355,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":52,"org.easymock.samples.ExampleTest.voteAgainstRemoval":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":346,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":217,"org.easymock.tests.LimitationsTest.privateConstructor":325,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":489,"org.easymock.tests2.UsageConstraintsTest.testNotNull":96,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":458,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":156,"org.easymock.tests2.UsageTest.defaultResetToNice":185,"org.easymock.samples.ExampleTest.voteAgainstRemovals":232,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":268,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":20,"org.easymock.tests.UsageVarargTest.differentLength":378,"org.easymock.tests2.CallbackTest.callback":64,"org.easymock.tests2.UsageConstraintsTest.equals":74,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":213,"org.easymock.tests.UsageTest.openCallCountByLastCall":436,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":351,"org.easymock.tests.UsageCallCountTest.tooFewCalls":474,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":196,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":292,"org.easymock.tests.UsageThrowableTest.throwCheckedException":455,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":501,"org.easymock.tests.MockingTest.testStrictClassMocking":461,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":460,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":25,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":195,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":321,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":198,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":11,"org.easymock.tests.ObjectMethodsTest.testHashCode":386,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":520,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":35,"org.easymock.tests2.NameTest.nameForNiceMock":68,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":515,"org.easymock.tests2.DependencyTest.testInterfaceMocking":223,"org.easymock.samples.ExampleTest.addDocument":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":54,"org.easymock.tests2.DelegateToTest.testStubDelegate":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":59,"org.easymock.tests2.AnswerTest.stubAnswer":10,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":283,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":110,"org.easymock.tests.UsageVarargTest.varargLongAccepted":380,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":265,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":408,"org.easymock.tests.UsageExpectAndReturnTest.floatType":392,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":190,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":228,"org.easymock.tests.UsageThrowableTest.noUpperLimit":452,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":140,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":90,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":332,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":71,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":166,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":122,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":305,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":391,"org.easymock.tests2.UsageConstraintsTest.testSame":77,"org.easymock.samples.SupportTest.addDocument":229,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":197,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":505,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":44,"org.easymock.tests.GenericTest.testPackageScope":368,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":260,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":139,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":468,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":503,"org.easymock.tests2.NameTest.nameForMock":66,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":402,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":114,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":394,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":425,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":299,"org.easymock.tests2.MockedExceptionTest.testRealException":159,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":345,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":270,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":269,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":323,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":350,"org.easymock.tests2.NameTest.nameForStrictMock":67,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":104,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":496,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":61,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":208,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":170,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":91,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":307,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":101,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":509,"org.easymock.tests2.UsageConstraintsTest.lessThan":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":135,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":264,"org.easymock.tests2.CaptureTest.testCaptureRightOne":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":48,"org.easymock.tests2.UsageConstraintsTest.testOr":78,"org.easymock.tests.UsageRangeTest.combination":296,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":205,"org.easymock.tests.UsageTest.wrongArguments":435,"org.easymock.tests2.MockBuilderTest.testWithConstructor":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":45,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":481,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":395,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":257,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":309,"org.easymock.tests.UsageVarargTest.varargShortAccepted":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":477,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":523,"org.easymock.tests2.UsageConstraintsTest.cmpTo":83,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":8,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":259,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":184,"org.easymock.tests2.CaptureTest.testCaptureFromStub":128,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":313,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":102,"org.easymock.tests.UsageTest.unexpectedCallWithArray":434,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":519,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":475,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":404,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.samples.ExampleTest.addAndChangeDocument":239,"org.easymock.tests.UsageStrictMockTest.testVerify":288,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":231,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":363,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":396,"org.easymock.tests.LimitationsTest.abstractClass":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":245,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":149,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":373}}]
