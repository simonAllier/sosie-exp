[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[65,66,67,37,68,69],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[70,71],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,10,88,89,90,91,92,93,94,95,96,11,97,98,99,100,101,102,103,16,104,105,106,107,108,109,110,111,17,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,4,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,18,177,178,179,180,181,182,19,183,184,185,186,20,0,1,2,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,5,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,67,222,223,224,225,226,36,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,10,88,89,90,91,92,93,94,95,96,11,98,99,100,101,102,103,16,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,18,177,178,179,180,181,182,183,184,185,186,20,0,1,2,187,188,189,192,193,194,196,197,198,199,200,201,202,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,221,67,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[325,326,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[137],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:98","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[329],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[331],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[332,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[334,335,336,337,338,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[130,132,135,137,152,164,174],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[340],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[72,80,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[81,82,85,357,357,358,358,86,87,90,91,92,93,95,96,118,119,120,121,0,2,21,191,359,192,22,193,194,23,195,24,196,197,199,200,201,25,202,26,203,204,5,6,212,213,360,361,362,363,235,237,364,365,315,316,317,56,57,58,59,60,61,62,63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[99,101,102,106,107,112,113,155,4,156,157,216,217,218,219,67,222,224,225,228,229,232,233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[101,107,112,113,216,218,219,67,224,37,229,232,233,366,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[367,368,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[357,357,358,358,99,117,127,128,131,132,133,134,140,142,143,145,146,152,153,154,369,214,215,222,242,243,246,247,248,249,250,251,274,370,371,372,373,374],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[375,129,136,142,154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[147],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[130,134],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[116,245],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[136],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":130,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":227,"org.easymock.tests2.UsageTest.argumentsOrdered":113,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":185,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":353,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":109,"org.easymock.tests2.StubTest.stubWithReturnValue":117,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":339,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":261,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":72,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":151,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":160,"org.easymock.tests.MockingTest.testPartialClassMocking":315,"org.easymock.samples.SupportTest.voteForRemovals":84,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":66,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":328,"org.easymock.tests.MockClassControlTest.testToString":58,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":307,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":6,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":295,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":119,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":340,"org.easymock.tests.UsageExpectAndThrowTest.object":305,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":89,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":335,"org.easymock.tests2.DelegateToTest.testWrongClass":162,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":214,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":215,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":242,"org.easymock.tests2.UsageTest.wrongArguments":107,"org.easymock.samples.ConstructorCalledMockTest.testTax":357,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":348,"org.easymock.tests.UsageStrictMockTest.range":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":29,"org.easymock.samples.ExampleTest.answerVsDelegate":74,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":19,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":90,"org.easymock.tests2.UsageConstraintsTest.testNull":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":306,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":199,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":193,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":63,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":184,"org.easymock.tests2.CaptureTest.testPrimitive":167,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":314,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":232,"org.easymock.tests.UsageTest.moreThanOneArgument":228,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":51,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":198,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":372,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":68,"org.easymock.tests2.CaptureTest.testCaptureNone":172,"org.easymock.tests.UsageUnorderedTest.message":216,"org.easymock.tests.UsageVerifyTest.twoReturns":219,"org.easymock.tests.UsageVarargTest.varargByteAccepted":284,"org.easymock.tests2.ThreadingTest.testThreadSafe":122,"org.easymock.tests.UsageTest.argumentsOrdered":233,"org.easymock.tests.UsageVarargTest.varargIntAccepted":278,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":322,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":247,"org.easymock.tests2.CaptureTest.testCapture_2617107":166,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":245,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":22,"org.easymock.tests2.UsageConstraintsTest.any":138,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":48,"org.easymock.tests2.StubTest.stub":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":251,"org.easymock.tests.UsageExpectAndThrowTest.longType":298,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":367,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":47,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":100,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":11,"org.easymock.tests.LimitationsTest.mockNativeMethod":235,"org.easymock.tests.ReplayStateInvalidUsageTest.times":49,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":10,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":271,"org.easymock.tests2.AnswerTest.answer":187,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":137,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":15,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":343,"org.easymock.tests2.CaptureTest.testAnd":164,"org.easymock.tests2.UsageTest.strictResetToDefault":105,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":26,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":103,"org.easymock.tests2.NameTest.nameForMocksControl":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":344,"org.easymock.tests2.MockedExceptionTest.testMockedException":9,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":371,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":180,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":231,"org.easymock.tests2.DelegateToTest.testDelegate":163,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":317,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":299,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":196,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":194,"org.easymock.tests.MockingTest.testNicePartialClassMocking":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":310,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":201,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":341,"org.easymock.tests2.CaptureTest.testCaptureLast":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":236,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":96,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":35,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":149,"org.easymock.tests.MockingTest.testTwoMocks":365,"org.easymock.tests2.CaptureTest.testCapture1_2446744":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":252,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":308,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":303,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":13,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":112,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":153,"org.easymock.tests.UsageThrowableTest.throwError":287,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":43,"org.easymock.samples.ExampleTest.removeNonExistingDocument":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":346,"org.easymock.tests.UsageStrictMockTest.differentMethods":225,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":45,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":351,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":124,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":356,"org.easymock.tests2.MockBuilderTest.testCreateMockString":24,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":374,"org.easymock.tests.UsageExpectAndThrowTest.floatType":297,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":144,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":188,"org.easymock.tests.UsageVerifyTest.twoThrows":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":120,"org.easymock.samples.PartialClassMockTest.testGetArea":85,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":248,"org.easymock.samples.ExampleTest.voteAgainstRemoval":76,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":204,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":296,"org.easymock.tests2.UsageTest.niceToStrict":108,"org.easymock.tests2.UsageConstraintsTest.testNotNull":152,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":294,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":8,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":327,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":192,"org.easymock.tests2.MockBuilderTest.testCreateMock":23,"org.easymock.tests2.UsageTest.defaultResetToNice":17,"org.easymock.samples.ExampleTest.voteAgainstRemovals":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":267,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":342,"org.easymock.tests.UsageVarargTest.differentLength":281,"org.easymock.tests2.CallbackTest.callback":16,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":347,"org.easymock.tests.UsageTest.openCallCountByLastCall":230,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":304,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":65,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":181,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":127,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":244,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":27,"org.easymock.tests.UsageCallCountTest.tooFewCalls":320,"org.easymock.tests.UsageOverloadedMethodTest.overloading":206,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":240,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":263,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":205,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":93,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":368,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":141,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":30,"org.easymock.tests.UsageThrowableTest.throwCheckedException":291,"org.easymock.tests.MockClassControlTest.testEquals":62,"org.easymock.tests2.EasyMockSupportClassTest.testAll":118,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":213,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":312,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":69,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":33,"org.easymock.tests2.CaptureTest.testCaptureAll":165,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":275,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":345,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":92,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":50,"org.easymock.tests2.UsageConstraintsTest.testMatches":143,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":94,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":373,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":41,"org.easymock.tests2.CompareToTest.testGreateOrEqual":375,"org.easymock.tests.ObjectMethodsTest.testHashCode":39,"org.easymock.samples.ExampleTest.voteForRemovals":78,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":126,"org.easymock.tests2.NameTest.nameForNiceMock":156,"org.easymock.tests.UsageVarargTest.allKinds":286,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":217,"org.easymock.tests2.DependencyTest.testInterfaceMocking":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":337,"org.easymock.samples.BasicClassMockTest.testPrintContent":82,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":34,"org.easymock.samples.ExampleTest.addDocument":77,"org.easymock.tests2.DelegateToTest.testStubDelegate":161,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":293,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":97,"org.easymock.tests2.AnswerTest.stubAnswer":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":354,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":338,"org.easymock.tests2.UsageConstraintsTest.greaterThan":145,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":209,"org.easymock.tests.UsageVarargTest.varargLongAccepted":283,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":5,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":226,"org.easymock.samples.ExampleTest.voteForRemoval":75,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":270,"org.easymock.tests.UsageExpectAndReturnTest.floatType":254,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":25,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":358,"org.easymock.tests.UsageThrowableTest.noUpperLimit":288,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":146,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":237,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":104,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":128,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":169,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":329,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":70,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":178,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":253,"org.easymock.tests2.UsageConstraintsTest.testSame":133,"org.easymock.samples.SupportTest.addDocument":83,"org.easymock.tests2.CaptureTest.testCaptureFirst":176,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":179,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":115,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":53,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":46,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":259,"org.easymock.tests.GenericTest.testPackageScope":212,"org.easymock.tests2.UsageTest.moreThanOneArgument":106,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":125,"org.easymock.tests2.CaptureTest.testCapture2_2446744":175,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":355,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":285,"org.easymock.tests.GenericTest.testBridgedEquals":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":323,"org.easymock.tests2.NameTest.nameForMock":155,"org.easymock.tests.UsageExpectAndReturnTest.longType":255,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":264,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":150,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":311,"org.easymock.tests2.UsageStrictMockTest.differentMethods":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":370,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":256,"org.easymock.tests.UsageCallCountTest.tooManyCalls":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":309,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":211,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":319,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":300,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":99,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":292,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":243,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":52,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":91,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":54,"org.easymock.tests2.NameTest.nameForStrictMock":4,"org.easymock.tests2.UsageConstraintsTest.testContains":140,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":86,"org.easymock.tests2.UsageConstraintsTest.testFind":131,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":207,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":326,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":158,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":200,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":220,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":159,"org.easymock.tests.UsageExpectAndReturnTest.object":262,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":147,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":202,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":191,"org.easymock.tests2.UsageStrictMockTest.range":101,"org.easymock.tests2.UsageConstraintsTest.lessThan":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":336,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":352,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":40,"org.easymock.tests.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":274,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":177,"org.easymock.tests2.CaptureTest.testCaptureRightOne":174,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":272,"org.easymock.tests2.UsageConstraintsTest.testOr":134,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":334,"org.easymock.tests.UsageRangeTest.combination":208,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":276,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":197,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":239,"org.easymock.tests.UsageTest.wrongArguments":229,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":350,"org.easymock.tests.MockClassControlTest.testHashCode":61,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":257,"org.easymock.tests2.EasyMockSupportTest.testVerify":20,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":265,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":273,"org.easymock.tests.UsageVarargTest.varargShortAccepted":282,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":238,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":71,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":55,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":12,"org.easymock.tests2.UsageConstraintsTest.cmpTo":139,"org.easymock.tests.UsageVarargTest.varargCharAccepted":279,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":98,"org.easymock.tests2.UsageTest.openCallCountByLastCall":110,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":111,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":325,"org.easymock.tests.DefaultClassInstantiatorTest.object":64,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":186,"org.easymock.tests2.CaptureTest.testCaptureFromStub":369,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":42,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":359,"org.easymock.tests.UsageTest.unexpectedCallWithArray":37,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":38,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":366,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":302,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":290,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":67,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":266,"org.easymock.tests2.CaptureTest.testCapture":332,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":223,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":203,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":60,"org.easymock.tests2.UsageConstraintsTest.constraints":129,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":301,"org.easymock.samples.ExampleTest.addAndChangeDocument":79,"org.easymock.tests.CapturesMatcherTest.test":333,"org.easymock.tests2.ConstraintsToStringTest.containsToString":331,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":269,"org.easymock.tests.UsageStrictMockTest.testVerify":36,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":80,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":221,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":32,"org.easymock.tests2.UsageTest.resumeIfFailure":114,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":249,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":362,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":250,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":182}}]
