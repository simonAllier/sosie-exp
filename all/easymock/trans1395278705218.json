[{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[5,6,7,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[21],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[23,24,25,26,27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.LastControl:85","failures":[42,43,44,45],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[46,47,48],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[49,50,51,36,11,52,53,54,55,56,57,58,59,14,40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[60,61],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[62,63,64,65,42,66,67,68,69,70,71,72,45,73,74,75,76,76,77,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[95,96],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[97,98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[55,99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[100],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[60,61],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[101,102,103,104,105,106,107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[95,96],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[108,15,16,17,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,49,28,126,127,128,129,50,51,130,131,132,29,133,134,135,30,31,136,137,32,138,139,140,33,141,142,0,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,6,160,161,162,163,34,164,19,165,166,167,168,169,170,171,172,173,174,175,62,176,177,178,2,179,180,181,182,183,47,3,7,8,4,63,64,184,185,65,42,66,67,186,187,43,188,48,68,189,69,70,190,71,72,44,191,192,193,194,45,73,74,195,196,197,198,199,200,23,201,24,202,25,203,204,205,206,207,35,208,75,209,36,37,210,211,212,213,214,26,215,216,217,218,219,220,221,76,76,77,77,222,223,224,225,226,20,78,227,228,229,230,231,232,233,234,101,79,80,235,236,81,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,11,52,260,261,53,54,262,263,264,265,266,267,268,269,270,271,272,273,274,82,83,84,85,86,55,275,102,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,95,310,311,96,312,313,314,315,87,88,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,56,57,89,90,91,92,93,351,352,27,353,354,355,58,356,357,358,359,360,361,362,363,38,364,365,366,39,367,14,94,368,40,41,369,370,371,372,373,374,375,376,377,378,379],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[165,167,175,184,185,42,67,186,43,44,45],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","value":"delegateTo","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:73","sourceCode":"return java.lang.reflect.Field","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[380,381,382,383,384,385,386],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:324","failures":[312,313,56],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[111,233,237,238,245,252,288,289,296,303,88,327,92],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[108,15,16,113,117,119,120,123,124,125,28,127,128,129,130,131,132,29,133,134,135,30,31,136,137,32,138,139,141,142,0,143,144,145,146,147,148,149,150,151,157,159,6,161,162,34,165,166,168,169,172,173,174,175,62,176,177,178,2,179,180,181,182,47,7,8,4,63,64,184,185,65,42,66,67,186,187,188,48,68,189,69,70,190,71,72,44,191,192,194,45,73,74,197,199,201,203,204,205,206,207,75,36,37,212,214,215,216,218,76,76,77,77,222,226,20,78,228,229,230,101,79,80,81,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,82,83,84,85,86,287,308,309,95,311,96,312,313,314,315,87,88,316,317,318,339,341,350,57,89,90,91,92,93,355,38,364,365,366,94,40,41,372,373,374],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":185,"org.easymock.tests2.UsageTest.argumentsOrdered":51,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":258,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":138,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":126,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":213,"org.easymock.tests2.DelegateToTest.testReturnException":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":323,"org.easymock.tests.MockingTest.testPartialClassMocking":372,"org.easymock.tests.MockClassControlTest.testToString":344,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":107,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":288,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":120,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":382,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":187,"org.easymock.tests2.UsageTest.wrongArguments":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":79,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":233,"org.easymock.samples.ExampleTest.answerVsDelegate":26,"org.easymock.tests2.UsageConstraintsTest.testNull":42,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":180,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":32,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":349,"org.easymock.tests2.CaptureTest.testPrimitive":168,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":81,"org.easymock.tests.UsageTest.moreThanOneArgument":259,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":307,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":91,"org.easymock.tests.UsageTest.argumentsOrdered":54,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":375,"org.easymock.tests.UsageVarargTest.varargIntAccepted":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":386,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":158,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":86,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests.ReplayStateInvalidUsageTest.times":283,"org.easymock.tests2.AnswerTest.answer":113,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":43,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":112,"org.easymock.tests2.CaptureTest.testAnd":165,"org.easymock.tests2.UsageTest.strictResetToDefault":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":135,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":365,"org.easymock.tests2.DelegateToTest.testDelegate":25,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":379,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":326,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":363,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":308,"org.easymock.tests2.CaptureTest.testCapture1_2446744":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":301,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":110,"org.easymock.tests.UsageThrowableTest.throwError":95,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":93,"org.easymock.samples.PartialClassMockTest.testGetArea":222,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":83,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":226,"org.easymock.tests2.UsageTest.niceToStrict":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":103,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":6,"org.easymock.tests2.MockBuilderTest.testCreateMock":163,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":9,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":297,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":30,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":358,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":231,"org.easymock.tests.UsageOverloadedMethodTest.overloading":229,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":69,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":353,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":248,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":189,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":174,"org.easymock.tests2.EasyMockSupportClassTest.testAll":148,"org.easymock.tests.MockClassControlTest.testEquals":348,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":340,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":305,"org.easymock.tests2.CaptureTest.testCaptureAll":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":361,"org.easymock.tests2.UsageConstraintsTest.testMatches":70,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":92,"org.easymock.samples.ExampleTest.voteForRemovals":218,"org.easymock.tests.UsageVarargTest.allKinds":338,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":350,"org.easymock.samples.BasicClassMockTest.testPrintContent":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":362,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":314,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":35,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":327,"org.easymock.tests2.UsageConstraintsTest.greaterThan":71,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":364,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":4,"org.easymock.samples.ExampleTest.voteForRemoval":215,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":204,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":183,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":133,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":322,"org.easymock.tests2.CaptureTest.testCaptureFirst":177,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":134,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":58,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":244,"org.easymock.tests2.CaptureTest.testCapture2_2446744":176,"org.easymock.tests2.UsageTest.moreThanOneArgument":125,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":206,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":34,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":337,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":273,"org.easymock.tests.UsageExpectAndReturnTest.longType":240,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":359,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":306,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":101,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":193,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":89,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":264,"org.easymock.tests.UsageCallCountTest.tooManyCalls":274,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":268,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":245,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":293,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":313,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":142,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":5,"org.easymock.tests2.UsageConstraintsTest.testContains":68,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":267,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":197,"org.easymock.tests2.UsageConstraintsTest.testFind":65,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":230,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":122,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":39,"org.easymock.tests.UsageExpectAndReturnTest.object":247,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":137,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":332,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":383,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":321,"org.easymock.tests.UsageTest.exactCallCountByLastCall":262,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":105,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":97,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":376,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":380,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":253,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":328,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":27,"org.easymock.tests.MockClassControlTest.testHashCode":347,"org.easymock.tests2.EasyMockSupportTest.testVerify":140,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":377,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":109,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":19,"org.easymock.tests.UsageVarargTest.varargCharAccepted":331,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":208,"org.easymock.tests2.UsageTest.openCallCountByLastCall":127,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":139,"org.easymock.tests.DefaultClassInstantiatorTest.object":275,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":356,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":319,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":59,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":295,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":96,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":7,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":294,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":254,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":151,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":345,"org.easymock.tests2.UsageTest.resumeIfFailure":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":325,"org.easymock.tests2.StubTest.stubWithReturnValue":157,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":381,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":194,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":246,"org.easymock.tests2.SerializationTest.testAllMockedMethod":17,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":316,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":10,"org.easymock.samples.SupportTest.voteForRemovals":212,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":300,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":317,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":114,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":98,"org.easymock.tests.UsageExpectAndThrowTest.object":298,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":191,"org.easymock.tests2.DelegateToTest.testWrongClass":24,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":87,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":88,"org.easymock.tests.UsageStrictMockTest.range":40,"org.easymock.samples.ConstructorCalledMockTest.testTax":76,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":141,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":299,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":161,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":53,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":232,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":12,"org.easymock.tests2.CaptureTest.testCaptureNone":173,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":20,"org.easymock.tests.UsageUnorderedTest.message":55,"org.easymock.tests.UsageVerifyTest.twoReturns":57,"org.easymock.tests.UsageVarargTest.varargByteAccepted":336,"org.easymock.tests2.ThreadingTest.testThreadSafe":203,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":271,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":223,"org.easymock.tests2.CaptureTest.testCapture_2617107":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":236,"org.easymock.tests2.UsageConstraintsTest.any":188,"org.easymock.tests2.StubTest.stub":156,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":265,"org.easymock.tests.UsageExpectAndThrowTest.longType":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":324,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":281,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":209,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":199,"org.easymock.tests.LimitationsTest.mockNativeMethod":287,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":256,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":341,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":210,"org.easymock.tests2.NameTest.nameForMocksControl":155,"org.easymock.tests2.MockedExceptionTest.testMockedException":196,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":292,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":374,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":178,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":162,"org.easymock.tests.MockingTest.testNicePartialClassMocking":373,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":182,"org.easymock.tests2.CaptureTest.testCaptureLast":172,"org.easymock.tests2.CompareToTest.testCompareEqual":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":309,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":186,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":146,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":192,"org.easymock.tests.MockingTest.testTwoMocks":371,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":237,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":296,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":50,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":73,"org.easymock.samples.ExampleTest.removeNonExistingDocument":219,"org.easymock.tests.UsageStrictMockTest.differentMethods":41,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":279,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":205,"org.easymock.tests2.MockBuilderTest.testCreateMockString":164,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":342,"org.easymock.tests.UsageExpectAndThrowTest.floatType":290,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":190,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":116,"org.easymock.tests.UsageVerifyTest.twoThrows":56,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":150,"org.easymock.samples.ExampleTest.voteAgainstRemoval":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":225,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":8,"org.easymock.tests2.UsageConstraintsTest.testNotNull":45,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":195,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":315,"org.easymock.tests2.UsageTest.defaultResetToNice":129,"org.easymock.samples.ExampleTest.voteAgainstRemovals":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":252,"org.easymock.tests.UsageVarargTest.differentLength":333,"org.easymock.tests2.CallbackTest.callback":33,"org.easymock.tests.UsageTest.openCallCountByLastCall":260,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":63,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":235,"org.easymock.tests.UsageCallCountTest.tooFewCalls":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":143,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":234,"org.easymock.tests.UsageThrowableTest.throwCheckedException":312,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":13,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":145,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":227,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":0,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":284,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":144,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":118,"org.easymock.tests.ObjectMethodsTest.testHashCode":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":385,"org.easymock.tests2.NameTest.nameForNiceMock":154,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":207,"org.easymock.tests2.DependencyTest.testInterfaceMocking":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":384,"org.easymock.samples.ExampleTest.addDocument":217,"org.easymock.tests2.DelegateToTest.testStubDelegate":201,"org.easymock.tests2.AnswerTest.stubAnswer":117,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":94,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":100,"org.easymock.tests.UsageVarargTest.varargLongAccepted":335,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":369,"org.easymock.tests.UsageExpectAndReturnTest.floatType":239,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":255,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":147,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":77,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":72,"org.easymock.tests.UsageThrowableTest.noUpperLimit":310,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":64,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":170,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":60,"org.easymock.tests2.UsageConstraintsTest.testSame":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":238,"org.easymock.samples.SupportTest.addDocument":211,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":280,"org.easymock.tests.GenericTest.testPackageScope":339,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":104,"org.easymock.tests2.NameTest.nameForMock":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":249,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":241,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":302,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":366,"org.easymock.tests2.MockedExceptionTest.testRealException":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":106,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":80,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":286,"org.easymock.tests2.NameTest.nameForStrictMock":153,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":121,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":181,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":99,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":44,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":159,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":74,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":29,"org.easymock.tests2.CaptureTest.testCaptureRightOne":175,"org.easymock.tests2.UsageConstraintsTest.testOr":67,"org.easymock.tests.UsageRangeTest.combination":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":2,"org.easymock.tests.UsageTest.wrongArguments":52,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":343,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":250,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":61,"org.easymock.tests.UsageVarargTest.varargShortAccepted":334,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":272,"org.easymock.tests2.UsageConstraintsTest.cmpTo":48,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":115,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":128,"org.easymock.tests2.CaptureTest.testCaptureFromStub":62,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":276,"org.easymock.tests.UsageTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":270,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":251,"org.easymock.tests2.UsageConstraintsTest.constraints":184,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":368,"org.easymock.samples.ExampleTest.addAndChangeDocument":220,"org.easymock.tests.UsageStrictMockTest.testVerify":370,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":221,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":367,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":360,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":84,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":85,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":31,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":329}}]
