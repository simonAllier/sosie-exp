[{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[7,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,7,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,8,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[270],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.ConstructorArgs:50","failures":[148,149,302,303,304,305,306,307,166,308,309,167,310,311,312,313,314,315,316,317,318,168,319,320,321,322,323,169,324,325,174,199,203,326,327,328,329,330,331,332,249,333],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[331],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[334,335,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[9,10,11,12,13,14,336,337,338,16,17,18,25,27,7,30,339,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,340,56,58,59,65,76,78,79,81,341,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,137,138,141,142,145,147,150,151,152,153,155,161,162,163,164,165,166,167,168,169,174,175,177,178,179,180,181,182,183,186,187,188,189,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,218,219,221,222,224,226,227,228,229,230,231,233,235,236,237,240,242,243,247,249,250,251,252,253,254,255,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,295,296,297,300,301],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[249,342,343,344,345,346,347,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:116","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[349,350],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[351,252],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[15,17,18,352,51,75,78,139,140,143,144,242,292,298,299],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:140","sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Set<org.easymock.internal.MethodSerializationWrapper>)","type":"CtInvocationImpl"},"failures":[174],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[353,354,355,356,357,358],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[359,360,75,139,361,362],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[13,363,151,162,164,364,165],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.RecordState:136","failures":[20,21,22,23,24,27,7,30,58,76,84,85,86,87,88,89,90,148,148,149,149,190,240,262,263,266,267,268,269,274,276,277,279,280,286,287,288],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[365,366,367],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[179,181,182,183,184,185,186,188,368,189,190,192],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[369],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[174,329,330,249,333,343,344,345,348],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[19,25,26,370,371,65,372,373,374,129,130,131,148,148,149,149,157,158,161,166,167,168,169,174,176,197,198,199,200,202,203,217,375,218,376,219,220,221,222,223,224,377,225,226,227,229,230,231,232,233,234,235,236,237,247,249,378],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[359,360,75,139,361,362],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[159,160,177,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[359,360,75,139,361,362],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,349,379,380,381,382,383,384,385,351,386,350,9,10,11,12,387,13,14,388,336,15,337,338,389,16,17,18,19,390,391,392,393,394,395,20,21,22,23,24,396,25,26,370,397,398,334,399,400,401,402,403,404,27,7,28,29,30,339,371,405,406,407,408,409,410,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,1,411,363,412,2,3,413,414,415,416,417,418,419,420,4,421,340,422,423,5,424,425,426,427,52,53,54,55,56,57,58,59,60,61,62,63,64,428,335,429,430,431,432,433,434,65,435,436,353,354,355,356,437,357,438,358,439,440,441,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,442,81,341,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,443,102,103,104,105,106,107,108,8,444,445,446,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,372,447,365,373,448,449,450,451,374,452,453,454,455,132,133,134,135,6,137,138,139,140,141,142,143,144,145,146,147,150,151,152,153,154,155,456,156,157,158,159,160,161,457,162,163,164,364,165,305,306,166,309,167,310,311,314,317,168,319,320,321,322,323,169,170,171,172,173,175,176,458,459,460,461,462,177,366,463,464,465,466,467,468,469,470,471,472,178,367,473,474,475,476,477,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,478,194,479,480,195,196,197,198,200,201,326,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,376,481,219,220,221,222,223,224,225,226,227,228,229,230,231,232,482,233,483,234,235,236,237,484,485,238,239,240,241,242,243,244,486,245,246,247,248,250,251,252,253,254,255,256,257,487,488,489,490,491,492,493,494,495,258,496,497,259,260,261,262,263,264,265,498,266,267,268,269,270,271,499,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[249,342,343,344,345,346,347,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[11,16,17,18,7,30,51,56,75,76,77,78,79,93,8,137,138,140,141,142,143,144,145,163,180,181,183,184,185,186,187,192,240,241,242,243,255,257,492,493,494,495,258,260,267,272,278,286,289,291,292,295,296,298,299,301],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,16,17,18,19,25,26,27,7,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,56,58,65,66,67,68,69,71,72,74,75,76,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,8,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,137,138,140,141,142,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,214,215,216,219,221,222,226,227,228,229,230,231,233,236,239,240,241,242,243,244,247,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,301],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[500,369,501,502,503,504,305,306,307,166,308,309,167,310,311,312,313,314,315,316,317,318,168,319,320,321,322,323,169,324,325,174,330,505,506],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":265,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":137,"org.easymock.tests2.UsageTest.argumentsOrdered":299,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":417,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":294,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":159,"org.easymock.tests2.DelegateToTest.testReturnException":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":53,"org.easymock.tests.MockingTest.testPartialClassMocking":129,"org.easymock.tests.MockClassControlTest.testToString":405,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":491,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":335,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":313,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":167,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":31,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":343,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":27,"org.easymock.tests2.UsageTest.wrongArguments":292,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":477,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":134,"org.easymock.samples.ExampleTest.answerVsDelegate":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":373,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":454,"org.easymock.tests2.UsageConstraintsTest.testNull":267,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":229,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":213,"org.easymock.tests2.CaptureTest.testPrimitive":182,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":30,"org.easymock.tests.UsageTest.moreThanOneArgument":138,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":50,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":22,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":400,"org.easymock.tests.UsageTest.argumentsOrdered":144,"org.easymock.tests.UsageVarargTest.varargIntAccepted":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":86,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":217,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":466,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":90,"org.easymock.tests.ReplayStateInvalidUsageTest.times":385,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":178,"org.easymock.tests2.DependencyTest.testClassMocking":479,"org.easymock.tests2.AnswerTest.answer":258,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":422,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":173,"org.easymock.tests2.CaptureTest.testAnd":179,"org.easymock.tests2.UsageTest.strictResetToDefault":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":234,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":21,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":208,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":404,"org.easymock.tests2.DelegateToTest.testDelegate":165,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":46,"org.easymock.tests.LimitationsTest.mockFinalMethod":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":64,"org.easymock.tests2.DependencyTest.testClassMockingSupport":480,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":337,"org.easymock.tests2.CaptureTest.testCapture1_2446744":183,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":482,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":44,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":171,"org.easymock.tests.UsageThrowableTest.throwError":91,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":379,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":365,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":467,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":24,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":325,"org.easymock.samples.PartialClassMockTest.testGetArea":161,"org.easymock.tests.MockingTest.testInterfaceMocking":452,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":334,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":395,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":32,"org.easymock.tests2.UsageTest.niceToStrict":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":314,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":1,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":219,"org.easymock.tests2.MockBuilderTest.testCreateMock":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":321,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":474,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":40,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":361,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":209,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":432,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":440,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":132,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":501,"org.easymock.tests.UsageOverloadedMethodTest.overloading":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":323,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":14,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":120,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":9,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":275,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":188,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":443,"org.easymock.tests.MockClassControlTest.testEquals":409,"org.easymock.tests2.EasyMockSupportClassTest.testAll":166,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":26,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":48,"org.easymock.tests2.CaptureTest.testCaptureAll":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":62,"org.easymock.tests.MockNameTest.defaultName":439,"org.easymock.tests2.UsageConstraintsTest.testMatches":277,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":0,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":23,"org.easymock.samples.ExampleTest.voteForRemovals":155,"org.easymock.tests.UsageVarargTest.allKinds":8,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":16,"org.easymock.samples.BasicClassMockTest.testPrintContent":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":63,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":97,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":57,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":364,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":438,"org.easymock.tests2.UsageConstraintsTest.greaterThan":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":308,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":341,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":237,"org.easymock.samples.ExampleTest.voteForRemoval":152,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":358,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":484,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":251,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":448,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":232,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":19,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":289,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":206,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":52,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":457,"org.easymock.tests2.CaptureTest.testCaptureFirst":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":207,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":301,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":116,"org.easymock.tests2.CaptureTest.testCapture2_2446744":191,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":253,"org.easymock.tests2.UsageTest.moreThanOneArgument":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":423,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":224,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":108,"org.easymock.tests.GenericTest.testBridgedEquals":397,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":502,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":500,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":71,"org.easymock.tests.UsageExpectAndReturnTest.longType":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":60,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":204,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":49,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":377,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":6,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":47,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":445,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":20,"org.easymock.tests.UsageCallCountTest.tooManyCalls":72,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":322,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":476,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":96,"org.easymock.tests.MockingTest.testNiceClassMocking":455,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":198,"org.easymock.tests.MockingTest.testClassMocking":451,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":441,"org.easymock.tests2.UsageConstraintsTest.testContains":274,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":375,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":247,"org.easymock.tests2.UsageConstraintsTest.testFind":266,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":11,"org.easymock.tests.MockTypeTest.fromEasyMockClass":447,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":73,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":194,"org.easymock.tests.UsageExpectAndReturnTest.object":119,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":212,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":344,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":393,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":503,"org.easymock.tests.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":304,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":3,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":428,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":401,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":333,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":125,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":99,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":13,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":459,"org.easymock.tests.MockClassControlTest.testHashCode":408,"org.easymock.tests2.EasyMockSupportTest.testVerify":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":316,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":402,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":431,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":12,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":170,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":486,"org.easymock.tests.UsageVarargTest.varargCharAccepted":102,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":436,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":427,"org.easymock.tests2.UsageTest.openCallCountByLastCall":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":505,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":215,"org.easymock.tests.DefaultClassInstantiatorTest.object":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":430,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":391,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":458,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":407,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":235,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":37,"org.easymock.tests.CapturesMatcherTest.test":136,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":444,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":169,"org.easymock.tests2.UsageTest.resumeIfFailure":300,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":55,"org.easymock.tests2.StubTest.stubWithReturnValue":257,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":329,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":118,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":285,"org.easymock.tests2.SerializationTest.testAllMockedMethod":176,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":340,"org.easymock.samples.SupportTest.voteForRemovals":147,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":362,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":396,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":43,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":426,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":496,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":429,"org.easymock.tests.UsageExpectAndThrowTest.object":41,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":282,"org.easymock.tests2.DelegateToTest.testWrongClass":164,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":84,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":85,"org.easymock.samples.ConstructorCalledMockTest.testTax":148,"org.easymock.tests.UsageStrictMockTest.range":78,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":489,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":197,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":42,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":221,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":386,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":305,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":133,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":359,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":399,"org.easymock.tests2.CaptureTest.testCaptureNone":187,"org.easymock.tests.UsageUnorderedTest.message":51,"org.easymock.tests.UsageVerifyTest.twoReturns":18,"org.easymock.tests.UsageVarargTest.varargByteAccepted":107,"org.easymock.tests2.ThreadingTest.testThreadSafe":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":319,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":69,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":394,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":157,"org.easymock.tests2.CaptureTest.testCapture_2617107":181,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":424,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":29,"org.easymock.tests2.UsageConstraintsTest.any":272,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":384,"org.easymock.tests2.StubTest.stub":256,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndThrowTest.longType":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":54,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":437,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":383,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":241,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":177,"org.easymock.tests2.SerializationTest.testClass":174,"org.easymock.tests.LimitationsTest.mockNativeMethod":65,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":128,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":470,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":244,"org.easymock.tests2.NameTest.nameForMocksControl":495,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":472,"org.easymock.tests2.MockedExceptionTest.testMockedException":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":309,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":478,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":131,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":35,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":226,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":222,"org.easymock.tests.MockingTest.testNicePartialClassMocking":130,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":231,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":468,"org.easymock.tests2.CaptureTest.testCaptureLast":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":342,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":338,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":203,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":270,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":283,"org.easymock.tests.MockingTest.testTwoMocks":374,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":326,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":39,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":298,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":287,"org.easymock.samples.ExampleTest.removeNonExistingDocument":456,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":473,"org.easymock.tests.UsageStrictMockTest.differentMethods":79,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":460,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":355,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":252,"org.easymock.tests2.MockBuilderTest.testCreateMockString":225,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":339,"org.easymock.tests.UsageExpectAndThrowTest.floatType":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":310,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":307,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":259,"org.easymock.tests.UsageVerifyTest.twoThrows":17,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":168,"org.easymock.samples.ExampleTest.voteAgainstRemoval":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":418,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":398,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":236,"org.easymock.tests.LimitationsTest.privateConstructor":434,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":303,"org.easymock.tests2.UsageConstraintsTest.testNotNull":286,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":98,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":245,"org.easymock.tests2.UsageTest.defaultResetToNice":297,"org.easymock.samples.ExampleTest.voteAgainstRemovals":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":124,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":469,"org.easymock.tests.UsageVarargTest.differentLength":104,"org.easymock.tests2.CallbackTest.callback":255,"org.easymock.tests2.UsageConstraintsTest.equals":498,"org.easymock.tests.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":262,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":28,"org.easymock.tests.UsageCallCountTest.tooFewCalls":67,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":135,"org.easymock.tests.UsageThrowableTest.throwCheckedException":95,"org.easymock.tests.MockingTest.testStrictClassMocking":450,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":360,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":59,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":202,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":367,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":261,"org.easymock.tests.ObjectMethodsTest.testHashCode":392,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":346,"org.easymock.tests2.NameTest.nameForNiceMock":494,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":254,"org.easymock.tests2.DependencyTest.testInterfaceMocking":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":345,"org.easymock.samples.ExampleTest.addDocument":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":320,"org.easymock.tests2.DelegateToTest.testStubDelegate":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":324,"org.easymock.tests2.AnswerTest.stubAnswer":260,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":76,"org.easymock.tests.UsageVarargTest.varargLongAccepted":106,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":127,"org.easymock.tests.UsageExpectAndReturnTest.floatType":111,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":249,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":149,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":465,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests.UsageThrowableTest.noUpperLimit":92,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":280,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":263,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":487,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":184,"org.easymock.tests2.SerializationTest.test":175,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":354,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":110,"org.easymock.tests2.UsageConstraintsTest.testSame":268,"org.easymock.samples.SupportTest.addDocument":146,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":311,"org.easymock.tests.GenericTest.testPackageScope":25,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":2,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":464,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":453,"org.easymock.tests2.NameTest.nameForMock":492,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":121,"org.easymock.tests2.UsageStrictMockTest.differentMethods":243,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":332,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":483,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":45,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":390,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":83,"org.easymock.tests2.MockedExceptionTest.testRealException":248,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":420,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":240,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":7,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":350,"org.easymock.tests2.NameTest.nameForStrictMock":493,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":481,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":506,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":193,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":230,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":488,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":281,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":356,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":218,"org.easymock.tests2.UsageStrictMockTest.range":242,"org.easymock.tests2.UsageConstraintsTest.lessThan":288,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":205,"org.easymock.tests2.CaptureTest.testCaptureRightOne":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":315,"org.easymock.tests2.UsageConstraintsTest.testOr":269,"org.easymock.tests.UsageRangeTest.combination":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":227,"org.easymock.tests.UsageTest.wrongArguments":140,"org.easymock.tests2.MockBuilderTest.testWithConstructor":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":312,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":371,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":122,"org.easymock.tests.UsageVarargTest.varargShortAccepted":105,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":357,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":70,"org.easymock.tests2.UsageConstraintsTest.cmpTo":273,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":412,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":296,"org.easymock.tests2.CaptureTest.testCaptureFromStub":190,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":349,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":376,"org.easymock.tests.UsageTest.unexpectedCallWithArray":139,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":75,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":68,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":331,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":123,"org.easymock.tests2.CaptureTest.testCapture":368,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":77,"org.easymock.tests2.UsageConstraintsTest.constraints":264,"org.easymock.samples.ExampleTest.addAndChangeDocument":156,"org.easymock.tests.UsageStrictMockTest.testVerify":442,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":160,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":61,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":88,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":378,"org.easymock.tests.LimitationsTest.abstractClass":433,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":89,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":210}}]
