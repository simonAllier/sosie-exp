[{"transplant":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Or:39","sourceCode":"if (org.easymock.IArgumentMatcher.matches(java.lang.Object)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[5],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[35,36,37,38,39,40],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,7,95,96,97,98,99,100,101,102,103,104,13,105,14,106,107,108,109,110,111,15,16,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[141,142,143],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[83,144],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","obj":"obj","targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[35,22,145,146,147,36,148,149,150,151,152,33,153,154,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,17,173,174,175,18,19,176,20,177,178,21,179,180,181,182,183,141,184,185,35,186,187,22,23,188,189,190,191,192,193,194,195,196,197,198,199,24,200,201,202,25,26,203,27,204,205,28,206,207,208,209,210,145,211,146,147,212,213,214,215,36,148,216,217,149,150,218,219,220,221,222,223,224,225,226,227,228,229,230,231,142,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,65,258,259,6,143,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,30,287,288,31,32,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,33,34,308,309,310,311,312,313,314,315,316,317,318,319,320,321,153,322,323,324,325,326,154,155,327,328,329,330,331,332,333,96,334,335,336,337,338,339,340,341,342,343,344,345,346,347,113,114,115,348,349,350,351,352,353,354,355,356,357,0,358,359,360,1,361,362,363,364,365,366,367,368,369,144,370,371,372,373,374,375,376,377,378,379,118,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,135,395,396,397,398,399,400,401],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:69","sourceCode":"continue","type":"CtContinueImpl"},"failures":[97,100,13,402,108,16,403,404,137,140,405],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[156,41,157,158,159,160,161,162,163,164,42,43,165,166,44,45,169,170,171,172,17,173,174,175,18,19,176,20,177,178,21,179,180,181,182,183,184,185,35,186,187,22,23,188,190,191,192,193,194,195,48,50,51,196,197,198,199,24,200,201,202,25,26,203,27,204,205,28,206,207,208,209,210,56,145,211,146,147,212,213,214,215,36,148,216,217,149,150,218,61,62,63,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,254,256,257,258,259,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,283,289,290,291,292,293,294,295,296,297,298,299,300,80,81,301,82,83,84,85,86,89,90,91,92,302,303,304,305,306,307,33,34,308,7,309,95,310,311,314,315,316,317,318,319,320,321,153,322,323,324,325,326,154,155,327,328,329,330,332,333,96,98,102,103,104,105,106,107,109,15,334,335,336,337,338,339,340,341,342,343,344,345,346,347,113,114,115,348,350,351,352,354,355,356,357,0,358,359,360,1,361,362,364,365,366,367,368,369,144,370,371,372,373,374,375,376,377,378,379,118,120,128,134,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,135,136,137,138,395,139,140,396,397],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[77,406,407],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[361,362],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[194,196,197,24,201,202,25,26,27,204,205,28,207,208,209,210,146,214,217,226,230,408,319,325,397],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[409,310,347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[35,215,36,148,149,150,37,38,410,321,153,154,155,39,411,40,412],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[35,186,36,148,216,217,149,150,218,60,37,38,254,39,40,398],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[156,41,157,158,159,160,161,162,163,413,164,42,43,165,166,44,45,167,168,414,415,416,417,418,419,420,421,422,423,424,425,426,169,170,171,172,17,173,174,175,18,19,176,20,177,178,21,179,180,181,182,183,46,427,428,429,430,47,409,431,432,141,433,184,185,35,186,187,22,23,188,189,434,435,436,437,438,439,190,191,192,193,194,195,48,49,50,51,52,53,196,197,198,199,24,200,201,202,25,26,203,27,204,205,28,206,207,208,209,210,54,55,56,57,145,211,146,147,212,213,214,215,36,148,216,217,149,150,218,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,58,59,60,61,62,462,63,463,464,64,219,220,221,222,223,224,225,226,227,228,229,230,231,142,232,233,234,235,236,237,238,239,240,241,242,243,465,244,245,246,247,248,249,250,251,466,467,468,408,469,470,471,472,29,473,474,475,476,477,478,479,252,480,481,482,483,484,253,485,254,255,256,257,65,66,67,68,69,70,71,72,486,258,259,73,74,75,76,77,78,79,6,143,260,261,262,263,264,487,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,30,287,288,31,32,289,290,291,292,293,294,295,296,297,298,299,300,80,81,301,82,83,84,85,5,86,87,88,89,90,91,92,93,94,302,488,303,304,305,306,307,33,34,308,7,309,95,489,490,491,492,493,310,494,495,496,497,498,499,311,312,313,314,315,316,500,501,317,318,502,319,320,321,153,322,323,324,325,326,154,155,327,328,329,503,330,331,332,333,96,98,99,101,102,103,104,105,504,14,106,107,109,110,505,506,111,507,508,15,16,334,335,336,337,338,339,340,341,342,343,344,345,346,509,510,511,512,513,347,514,515,516,517,518,519,113,114,115,348,349,350,351,352,353,354,355,356,357,0,520,358,359,360,1,361,362,363,364,365,366,367,368,369,144,370,371,372,373,374,375,376,377,378,379,521,522,523,524,525,116,117,526,118,527,119,120,121,122,123,528,124,125,126,127,529,128,129,130,131,132,133,134,530,531,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,135,136,137,138,532,395,139,140,405,396,397,533,398,399,400,401],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.internal.RecordState:217","failures":[156,41,157,158,159,160,161,162,163,164,42,43,165,166,167,168,171,172,173,176,179,185,35,186,187,22,23,188,48,50,51,198,199,200,203,206,56,145,146,147,148,149,150,218,61,62,63,224,225,227,228,229,230,241,242,243,244,245,247,248,249,250,251,254,266,267,268,270,271,277,279,280,282,289,290,291,292,293,294,295,296,80,81,301,82,83,84,86,91,305,306,307,33,34,308,7,309,95,310,311,314,317,318,319,320,153,322,323,154,155,328,332,333,102,104,105,15,334,335,336,337,338,339,340,342,343,344,345,346,347,115,350,352,354,0,359,361,362,364,365,367,144,372,373,374,375,376,377,118,120,128,134,380,381,382,383,384,386,387,388,389,390,391,394,135,136,137,138,395,139,140],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[53],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[47,104],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[141,142,143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0,358],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[77,406,407],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[44,44,45,45,186,212,227,228,231,142,236,237,238,239,240,258,259,272,273,274,275,276,306,355,356,358,359,360,1,366,368,369,370,371,377,378,379,392],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[7,309,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[190,191,192,193,194,195,213,229,284,285,286,113,114,115,348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[407],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[190,191,192,193,194,195,213,472,284,285,286,113,114,115,348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":155,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":214,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":474,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":323,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":156,"org.easymock.tests2.DelegateToTest.testReturnException":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":191,"org.easymock.tests.MockingTest.testPartialClassMocking":61,"org.easymock.tests.MockClassControlTest.testToString":67,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":533,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":528,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":196,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":318,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":461,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":362,"org.easymock.tests2.UsageTest.wrongArguments":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":227,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":519,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":234,"org.easymock.samples.ExampleTest.answerVsDelegate":159,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":47,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":464,"org.easymock.tests2.UsageConstraintsTest.testNull":359,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":82,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":72,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":343,"org.easymock.tests2.CaptureTest.testPrimitive":384,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":210,"org.easymock.tests.UsageTest.moreThanOneArgument":215,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":274,"org.easymock.tests.UsageTest.argumentsOrdered":150,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":30,"org.easymock.tests.UsageVarargTest.varargIntAccepted":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":236,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":96,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":506,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":468,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":240,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":445,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":4,"org.easymock.tests.ReplayStateInvalidUsageTest.times":423,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":347,"org.easymock.tests2.DependencyTest.testClassMocking":500,"org.easymock.tests2.AnswerTest.answer":311,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":480,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":300,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":428,"org.easymock.tests2.CaptureTest.testAnd":381,"org.easymock.tests2.UsageTest.strictResetToDefault":320,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":273,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":256,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":338,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":32,"org.easymock.tests2.DelegateToTest.testDelegate":354,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":444,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":206,"org.easymock.tests.LimitationsTest.mockFinalMethod":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":223,"org.easymock.tests2.DependencyTest.testClassMockingSupport":501,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":167,"org.easymock.tests2.CaptureTest.testCapture1_2446744":385,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":205,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":298,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":417,"org.easymock.tests.UsageThrowableTest.throwError":289,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":430,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":499,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":276,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":531,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":448,"org.easymock.samples.PartialClassMockTest.testGetArea":41,"org.easymock.tests.MockingTest.testInterfaceMocking":462,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":237,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":143,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":197,"org.easymock.tests2.UsageTest.niceToStrict":322,"org.easymock.tests2.ThreadingTest.testChangeDefault":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":102,"org.easymock.tests2.MockBuilderTest.testCreateMock":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":131,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":516,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":39,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":26,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":339,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":427,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":263,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":232,"org.easymock.tests.UsageOverloadedMethodTest.overloading":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":529,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":133,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":280,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":368,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":20,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":224,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":406,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":367,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":390,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":465,"org.easymock.tests2.EasyMockSupportClassTest.testAll":118,"org.easymock.tests.MockClassControlTest.testEquals":71,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":51,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":411,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":208,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":221,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":299,"org.easymock.tests2.CaptureTest.testCaptureAll":382,"org.easymock.tests.MockNameTest.defaultName":486,"org.easymock.tests2.UsageConstraintsTest.testMatches":369,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":275,"org.easymock.samples.ExampleTest.voteForRemovals":163,"org.easymock.tests.UsageVarargTest.allKinds":251,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":211,"org.easymock.samples.BasicClassMockTest.testPrintContent":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":222,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":295,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":495,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":195,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":353,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":12,"org.easymock.tests2.UsageConstraintsTest.greaterThan":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":527,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":255,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":449,"org.easymock.samples.ExampleTest.voteForRemoval":160,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":79,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":93,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":85,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":441,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":48,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":319,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":472,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":336,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":190,"org.easymock.tests2.CaptureTest.testCaptureFirst":394,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":337,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":328,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":175,"org.easymock.tests2.CaptureTest.testCapture2_2446744":393,"org.easymock.tests2.UsageTest.moreThanOneArgument":321,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":481,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":107,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":250,"org.easymock.tests.GenericTest.testBridgedEquals":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":270,"org.easymock.tests.UsageExpectAndReturnTest.longType":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":219,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":209,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":142,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":285,"org.easymock.tests.UsageCallCountTest.tooManyCalls":271,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":2,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":518,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":294,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":136,"org.easymock.tests.MockingTest.testNiceClassMocking":64,"org.easymock.tests.MockingTest.testClassMocking":59,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":487,"org.easymock.tests2.UsageConstraintsTest.testContains":366,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":115,"org.easymock.tests2.UsageConstraintsTest.testFind":358,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":226,"org.easymock.tests.MockTypeTest.fromEasyMockClass":429,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":184,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":303,"org.easymock.tests.UsageExpectAndReturnTest.object":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":86,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":517,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":342,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":9,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":245,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":437,"org.easymock.tests.UsageTest.exactCallCountByLastCall":218,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":287,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":410,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":180,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":241,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":279,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":490,"org.easymock.tests.MockClassControlTest.testHashCode":70,"org.easymock.tests2.EasyMockSupportTest.testVerify":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":126,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":3,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":288,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":262,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":297,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":502,"org.easymock.tests.UsageVarargTest.varargCharAccepted":244,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":485,"org.easymock.tests2.UsageTest.openCallCountByLastCall":324,"org.easymock.tests.DefaultClassInstantiatorTest.object":73,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":345,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":261,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":435,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":127,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":202,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":512,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":489,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":447,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":69,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":201,"org.easymock.tests.ReplayStateInvalidCallsTest.times":453,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":181,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":284,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":134,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":68,"org.easymock.tests2.UsageTest.resumeIfFailure":327,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":46,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":505,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":193,"org.easymock.tests2.StubTest.stubWithReturnValue":397,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":19,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":376,"org.easymock.tests2.SerializationTest.testAllMockedMethod":95,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":252,"org.easymock.samples.SupportTest.voteForRemovals":166,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":40,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":492,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":204,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":253,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":312,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":433,"org.easymock.tests.UsageExpectAndThrowTest.object":203,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":373,"org.easymock.tests2.DelegateToTest.testWrongClass":352,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":451,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":258,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":259,"org.easymock.samples.ConstructorCalledMockTest.testTax":44,"org.easymock.tests.UsageStrictMockTest.range":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":507,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":135,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":27,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":104,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":425,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":233,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":37,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":443,"org.easymock.tests2.CaptureTest.testCaptureNone":389,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":260,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":522,"org.easymock.tests.UsageUnorderedTest.message":145,"org.easymock.tests.UsageVerifyTest.twoReturns":147,"org.easymock.tests.UsageVarargTest.varargByteAccepted":249,"org.easymock.tests2.ThreadingTest.testThreadSafe":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":129,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":268,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":438,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":42,"org.easymock.tests2.CaptureTest.testCapture_2617107":383,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":412,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":483,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":230,"org.easymock.tests2.UsageConstraintsTest.any":364,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":422,"org.easymock.tests2.StubTest.stub":396,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":484,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":192,"org.easymock.tests.UsageExpectAndThrowTest.longType":199,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":77,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":421,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":307,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":310,"org.easymock.tests.LimitationsTest.mockNativeMethod":56,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":183,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":52,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":511,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":459,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":308,"org.easymock.tests2.NameTest.nameForMocksControl":401,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":513,"org.easymock.tests2.MockedExceptionTest.testMockedException":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":119,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":488,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":24,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":63,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":80,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":105,"org.easymock.tests.MockingTest.testNicePartialClassMocking":62,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":84,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":509,"org.easymock.tests2.CaptureTest.testCaptureLast":388,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":168,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":458,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":140,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":361,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":374,"org.easymock.tests.MockingTest.testTwoMocks":60,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":455,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":405,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":25,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":154,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":378,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":525,"org.easymock.samples.ExampleTest.removeNonExistingDocument":413,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":515,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":419,"org.easymock.tests.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":491,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":524,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":75,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":331,"org.easymock.tests2.MockBuilderTest.testCreateMockString":109,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":121,"org.easymock.tests.UsageExpectAndThrowTest.floatType":198,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":526,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":314,"org.easymock.tests.UsageVerifyTest.twoThrows":146,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":112,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":128,"org.easymock.samples.ExampleTest.voteAgainstRemoval":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":6,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests.LimitationsTest.privateConstructor":55,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":404,"org.easymock.tests2.UsageConstraintsTest.testNotNull":377,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":296,"org.easymock.tests2.UsageTest.defaultResetToNice":326,"org.easymock.samples.ExampleTest.voteAgainstRemovals":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":179,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":510,"org.easymock.tests.UsageVarargTest.differentLength":246,"org.easymock.tests2.CallbackTest.callback":380,"org.easymock.tests2.UsageConstraintsTest.equals":520,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":87,"org.easymock.tests.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":355,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":229,"org.easymock.tests.UsageCallCountTest.tooFewCalls":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":235,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":523,"org.easymock.tests.UsageThrowableTest.throwCheckedException":293,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":38,"org.easymock.tests.MockingTest.testStrictClassMocking":58,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":139,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":514,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":137,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":424,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":395,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":316,"org.easymock.tests.ObjectMethodsTest.testHashCode":436,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":457,"org.easymock.tests2.NameTest.nameForNiceMock":400,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":333,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":452,"org.easymock.tests2.DependencyTest.testInterfaceMocking":317,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":10,"org.easymock.samples.ExampleTest.addDocument":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":530,"org.easymock.tests2.DelegateToTest.testStubDelegate":351,"org.easymock.tests2.AnswerTest.stubAnswer":315,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":186,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":504,"org.easymock.tests.UsageVarargTest.varargLongAccepted":248,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":182,"org.easymock.tests.UsageExpectAndReturnTest.floatType":171,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":15,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":497,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":281,"org.easymock.tests.UsageThrowableTest.noUpperLimit":290,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":371,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":356,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":110,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":386,"org.easymock.tests2.SerializationTest.test":309,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":407,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":74,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":170,"org.easymock.tests2.UsageConstraintsTest.testSame":360,"org.easymock.samples.SupportTest.addDocument":165,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":532,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":442,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":122,"org.easymock.tests.GenericTest.testPackageScope":50,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":496,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":463,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":440,"org.easymock.tests2.NameTest.nameForMock":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":177,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":108,"org.easymock.tests2.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":28,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":434,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":257,"org.easymock.tests2.MockedExceptionTest.testRealException":348,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":477,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":306,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":228,"org.easymock.tests2.NameTest.nameForStrictMock":399,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":101,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":302,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":83,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":111,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":76,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":372,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":98,"org.easymock.tests2.UsageStrictMockTest.range":33,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":446,"org.easymock.tests2.UsageConstraintsTest.lessThan":379,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":11,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":335,"org.easymock.tests2.CaptureTest.testCaptureRightOne":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":125,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":521,"org.easymock.tests2.UsageConstraintsTest.testOr":1,"org.easymock.tests.UsageRangeTest.combination":254,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":81,"org.easymock.tests.UsageTest.wrongArguments":148,"org.easymock.tests2.MockBuilderTest.testWithConstructor":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":123,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":66,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":178,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":78,"org.easymock.tests.UsageVarargTest.varargShortAccepted":247,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":269,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":460,"org.easymock.tests2.UsageConstraintsTest.cmpTo":365,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":313,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":408,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":325,"org.easymock.tests2.CaptureTest.testCaptureFromStub":392,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":416,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":99,"org.easymock.tests.UsageTest.unexpectedCallWithArray":36,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":456,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":267,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":402,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":21,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":187,"org.easymock.tests2.UsageConstraintsTest.constraints":357,"org.easymock.samples.ExampleTest.addAndChangeDocument":164,"org.easymock.tests.UsageStrictMockTest.testVerify":189,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":157,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":220,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":174,"org.easymock.tests.LimitationsTest.abstractClass":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":239,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":340}}]
