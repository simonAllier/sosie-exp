[{"position":"org.easymock.internal.matchers.Captures:53","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[67,68,69,70,71,72,73,74,75,76,77,78,41,79,80],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[67,68,69,70,71,72,73,74,75,76,77,78,41,79,80],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[81,82,83],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[84,85,86,87,88,89,90,91,92,16,93,67,94,17,68,69,95,96,97,98,99,100,101,23,71,102,103,29,35,104,74,105,36,75,76,106,77,107,108,40,109,110,111,112,41,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"minimum"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[113],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[1,2,4,5,6,7,8,13,114,15,86,88,115,90,92,116,16,93,67,94,17,68,69,95,96,117,70,97,98,99,100,101,118,23,71,103,33,35,104,74,105,36,75,76,106,77,107,119,78,108,40,112,41,79,120,121],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[122,123,124],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[125,126],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[84,127,128,85,129],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[130,130,131,131,132,133],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[134,135,136],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[137,1,7,8,13,85,138,139,140,141,93,142,143,118,144,145,146,147,148,149,150,71,151,152,104,40,153,47,53,59,63,65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[155,156,157,158],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[140,159],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[1,7,8,13,85,138,139,140,141,93,142,143,160,118,144,145,146,147,148,149,150,71,151,104,40,47,53,59,63,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[115],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[161,162],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[81,82,83],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[163,164,165,130,130,131,131,122,124,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,132,208,209,210,211,212,213,214,215,216,217,218,219,18,19,20,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,161,237,238,134,162,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,125,259,260,261,126,262,263],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[122,166,167,264,265,266,267,268,269,229],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[270,271,272,273,73,77],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[114,15,116,16,95,70,275,276,277,278,279,35,106,78,79,120,121],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"position":"org.easymock.internal.LastControl:92","failures":[0,2,10,280,281,282,283,284,274],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[244,249,285],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.internal.MocksControl:105","failures":[286,287,84,288,289,290,291,292,137,293,294,295,0,1,2,3,4,5,6,7,8,9,10,11,12,13,123,296,127,114,128,297,85,298,15,138,299,280,281,300,301,86,87,282,283,302,284,88,89,303,304,139,305,115,140,306,274,307,308,309,310,90,91,141,311,312,313,314,92,315,316,317,116,318,319,320,321,322,323,324,325,326,327,328,329,330,16,331,93,67,332,333,94,17,334,68,69,335,95,336,337,142,143,160,338,339,340,341,96,117,70,97,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,98,99,100,101,118,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,18,19,20,21,144,375,145,146,376,377,378,379,380,147,381,382,383,384,385,148,386,387,388,149,389,150,390,22,391,23,24,25,26,27,28,71,392,393,394,395,102,396,397,398,399,400,401,402,403,404,405,103,29,30,31,32,33,34,406,407,408,409,410,411,412,413,414,415,416,417,418,419,275,420,276,151,421,422,423,152,424,425,426,277,278,427,279,35,104,73,74,105,36,75,76,106,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,37,38,450,451,452,453,39,454,455,77,107,119,78,108,456,457,458,459,40,460,461,462,463,464,465,466,467,109,468,110,469,470,111,112,41,79,471,155,129,42,156,472,80,473,474,475,476,43,44,157,158,477,478,479,480,481,482,483,484,485,153,486,487,488,489,120,45,46,121,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,490,491,492,493,494,285,495,496,263,497],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[163,164,165,130,130,131,131,122,124,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,132,208,209,210,211,212,213,214,498,215,216,217,218,219,18,19,20,499,220,221,222,223,224,225,226,227,228,229,230,231,500,232,233,234,235,236,161,237,238,134,162,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,125,259,260,261,126,262,263],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:252","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[189],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[234],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":281,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests2.UsageTest.argumentsOrdered":69,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":355,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":420,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":333,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":286,"org.easymock.tests2.DelegateToTest.testReturnException":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":30,"org.easymock.tests.MockingTest.testPartialClassMocking":255,"org.easymock.tests.MockClassControlTest.testToString":246,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":358,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":186,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":47,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":344,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":264,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":302,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":489,"org.easymock.tests2.UsageTest.wrongArguments":67,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":442,"org.easymock.samples.ExampleTest.answerVsDelegate":84,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":235,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":435,"org.easymock.tests2.UsageConstraintsTest.testNull":86,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":203,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":251,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":354,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":498,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":121,"org.easymock.tests.UsageTest.moreThanOneArgument":104,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":66,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":337,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":408,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":460,"org.easymock.tests.UsageTest.argumentsOrdered":76,"org.easymock.tests.UsageVarargTest.varargIntAccepted":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":444,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":373,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":448,"org.easymock.tests.ReplayStateInvalidUsageTest.times":153,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":324,"org.easymock.tests2.AnswerTest.answer":92,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":424,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":362,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":331,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":407,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":349,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":464,"org.easymock.tests2.DelegateToTest.testDelegate":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":62,"org.easymock.tests.LimitationsTest.mockFinalMethod":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":432,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":157,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":60,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":360,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":480,"org.easymock.tests.UsageThrowableTest.throwError":22,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":393,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":200,"org.easymock.samples.PartialClassMockTest.testGetArea":163,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":481,"org.easymock.tests.MockingTest.testInterfaceMocking":433,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":445,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":48,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":263,"org.easymock.tests2.UsageTest.niceToStrict":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":83,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":225,"org.easymock.tests2.MockBuilderTest.testCreateMock":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":195,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":327,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":56,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":270,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":350,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":465,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":440,"org.easymock.tests.UsageOverloadedMethodTest.overloading":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":197,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":139,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":42,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":458,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":385,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":135,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":304,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":398,"org.easymock.tests2.EasyMockSupportClassTest.testAll":179,"org.easymock.tests.MockClassControlTest.testEquals":250,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":64,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":430,"org.easymock.tests2.CaptureTest.testCaptureAll":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":361,"org.easymock.tests.MockNameTest.defaultName":497,"org.easymock.tests2.UsageConstraintsTest.testMatches":305,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":478,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":409,"org.easymock.samples.ExampleTest.voteForRemovals":291,"org.easymock.tests.UsageVarargTest.allKinds":103,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":431,"org.easymock.samples.BasicClassMockTest.testPrintContent":165,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":27,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":34,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":297,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":370,"org.easymock.tests2.UsageConstraintsTest.greaterThan":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":180,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":437,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":212,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":239,"org.easymock.samples.ExampleTest.voteForRemoval":288,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":143,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":213,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":500,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":206,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":16,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":262,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":347,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":29,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":348,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":95,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":80,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":381,"org.easymock.tests2.CaptureTest.testCapture2_2446744":12,"org.easymock.tests2.UsageTest.moreThanOneArgument":93,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":425,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":231,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":405,"org.easymock.tests.GenericTest.testBridgedEquals":126,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":470,"org.easymock.tests.UsageExpectAndReturnTest.longType":378,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":428,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":345,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":65,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":232,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":492,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":309,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":406,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":37,"org.easymock.tests.UsageCallCountTest.tooManyCalls":111,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":196,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":382,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":26,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":171,"org.easymock.tests.MockingTest.testNiceClassMocking":258,"org.easymock.tests.MockingTest.testClassMocking":253,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":466,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":221,"org.easymock.tests2.UsageConstraintsTest.testContains":303,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":20,"org.easymock.tests2.UsageConstraintsTest.testFind":301,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":40,"org.easymock.tests.MockTypeTest.fromEasyMockClass":392,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":454,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":145,"org.easymock.tests.UsageExpectAndReturnTest.object":384,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":353,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":400,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":265,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":495,"org.easymock.tests.UsageTest.exactCallCountByLastCall":106,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":461,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":450,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":167,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":149,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":102,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":129,"org.easymock.tests.MockClassControlTest.testHashCode":249,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":364,"org.easymock.tests2.EasyMockSupportTest.testVerify":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":189,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":462,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":471,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":43,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":359,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":336,"org.easymock.tests.UsageVarargTest.varargCharAccepted":399,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":279,"org.easymock.tests2.UsageTest.openCallCountByLastCall":94,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":81,"org.easymock.tests.DefaultClassInstantiatorTest.object":236,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":476,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":494,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":24,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":363,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":210,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":53,"org.easymock.tests.CapturesMatcherTest.test":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":389,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":198,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":247,"org.easymock.tests2.UsageTest.resumeIfFailure":335,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":32,"org.easymock.tests2.StubTest.stubWithReturnValue":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":269,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":310,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":383,"org.easymock.tests2.SerializationTest.testAllMockedMethod":124,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":152,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":271,"org.easymock.samples.SupportTest.voteForRemovals":294,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":125,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":366,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":59,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":427,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":315,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":452,"org.easymock.tests.UsageExpectAndThrowTest.object":57,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":307,"org.easymock.tests2.DelegateToTest.testWrongClass":128,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":490,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":491,"org.easymock.samples.ConstructorCalledMockTest.testTax":130,"org.easymock.tests.UsageStrictMockTest.range":78,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":311,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":227,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":176,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":441,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":272,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":475,"org.easymock.tests2.CaptureTest.testCaptureNone":8,"org.easymock.tests.UsageUnorderedTest.message":71,"org.easymock.tests.UsageVerifyTest.twoReturns":79,"org.easymock.tests.UsageVarargTest.varargByteAccepted":404,"org.easymock.tests2.ThreadingTest.testThreadSafe":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":193,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":110,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":496,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":164,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":477,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":277,"org.easymock.tests2.UsageConstraintsTest.any":88,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":485,"org.easymock.tests2.StubTest.stub":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":31,"org.easymock.tests.UsageExpectAndThrowTest.longType":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":278,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":134,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":484,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":117,"org.easymock.tests2.SerializationTest.testClass":122,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":368,"org.easymock.tests.LimitationsTest.mockNativeMethod":242,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":390,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":261,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":218,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":321,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":342,"org.easymock.tests2.NameTest.nameForMocksControl":101,"org.easymock.tests2.MockedExceptionTest.testMockedException":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":181,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":51,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":257,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":375,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":201,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":228,"org.easymock.tests.MockingTest.testNicePartialClassMocking":256,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":205,"org.easymock.tests2.CompareToTest.testNotComparable":113,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":319,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":158,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":175,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":283,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":308,"org.easymock.tests.MockingTest.testTwoMocks":254,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":314,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":55,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":68,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":91,"org.easymock.samples.ExampleTest.removeNonExistingDocument":292,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":482,"org.easymock.tests.UsageStrictMockTest.differentMethods":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":326,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":365,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":237,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":160,"org.easymock.tests2.MockBuilderTest.testCreateMockString":233,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":183,"org.easymock.tests.UsageExpectAndThrowTest.floatType":49,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":178,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":317,"org.easymock.tests.UsageVerifyTest.twoThrows":41,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":192,"org.easymock.samples.ExampleTest.voteAgainstRemoval":289,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":276,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":211,"org.easymock.tests.LimitationsTest.privateConstructor":241,"org.easymock.tests2.UsageConstraintsTest.testNotNull":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":28,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":18,"org.easymock.tests2.UsageTest.defaultResetToNice":334,"org.easymock.samples.ExampleTest.voteAgainstRemovals":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":151,"org.easymock.tests.UsageVarargTest.differentLength":401,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":320,"org.easymock.tests2.CallbackTest.callback":118,"org.easymock.tests2.UsageConstraintsTest.equals":300,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":132,"org.easymock.tests.UsageTest.openCallCountByLastCall":105,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":138,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":45,"org.easymock.tests.UsageCallCountTest.tooFewCalls":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":443,"org.easymock.tests.UsageThrowableTest.throwCheckedException":25,"org.easymock.tests.MockingTest.testStrictClassMocking":252,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":273,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":174,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":325,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":486,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":313,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":318,"org.easymock.tests.ObjectMethodsTest.testHashCode":285,"org.easymock.tests2.NameTest.nameForNiceMock":100,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":339,"org.easymock.tests2.DependencyTest.testInterfaceMocking":343,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":266,"org.easymock.samples.ExampleTest.addDocument":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":194,"org.easymock.tests2.DelegateToTest.testStubDelegate":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":199,"org.easymock.tests2.AnswerTest.stubAnswer":116,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":107,"org.easymock.tests.UsageVarargTest.varargLongAccepted":403,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":275,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":150,"org.easymock.tests.UsageExpectAndReturnTest.floatType":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":166,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":131,"org.easymock.tests.UsageThrowableTest.noUpperLimit":391,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":306,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":372,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":299,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":168,"org.easymock.tests2.SerializationTest.test":123,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":136,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":161,"org.easymock.tests2.UsageConstraintsTest.testSame":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":376,"org.easymock.samples.SupportTest.addDocument":293,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":184,"org.easymock.tests.GenericTest.testPackageScope":259,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":371,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":434,"org.easymock.tests2.NameTest.nameForMock":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":148,"org.easymock.tests2.UsageStrictMockTest.differentMethods":97,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":379,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":61,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":493,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":439,"org.easymock.tests2.MockedExceptionTest.testRealException":21,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":421,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":96,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":488,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":120,"org.easymock.tests2.NameTest.nameForStrictMock":99,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":224,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":144,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":204,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":169,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":238,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":274,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":222,"org.easymock.tests2.UsageStrictMockTest.range":70,"org.easymock.tests2.UsageConstraintsTest.lessThan":141,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":216,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":367,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":419,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":267,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":188,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":282,"org.easymock.tests.UsageRangeTest.combination":436,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":202,"org.easymock.tests.UsageTest.wrongArguments":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":185,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":386,"org.easymock.tests.UsageVarargTest.varargShortAccepted":402,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":162,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":469,"org.easymock.tests2.UsageConstraintsTest.cmpTo":89,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":414,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":17,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":479,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":223,"org.easymock.tests.UsageTest.unexpectedCallWithArray":73,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":77,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":468,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":387,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":119,"org.easymock.tests2.UsageConstraintsTest.constraints":280,"org.easymock.samples.ExampleTest.addAndChangeDocument":137,"org.easymock.tests.UsageStrictMockTest.testVerify":457,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":295,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":455,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":429,"org.easymock.tests2.CompareToTest.testGreateThan":159,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":446,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":217,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":147,"org.easymock.tests.LimitationsTest.abstractClass":240,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":447,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":351}}]
