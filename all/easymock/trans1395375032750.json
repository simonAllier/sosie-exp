[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"key"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[3,4,5,6,7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[48,49,50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[12,66,67,68,52,57,13,14,15,16,17,18,19,20,21,22,69,70,23,71,72,73,32,74,33,34,75,76,35,36,37,38,77,78,79,80,81,39,82,40,41,83,42,43,84,85,86,87,88,44,45,46,89,90,91,92,93,94,95,96,97,98,99,47,100,101],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[102],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[103,104,105,106,107,108,109,110,111,3,112,4,113,114,115,116,117,48,118,119,5,6,120,7,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,12,66,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,67,176,177,178,179,180,181,182,183,184,185,186,187,68,188,189,190,191,192,52,193,194,195,196,197,8,9,10,198,199,53,54,200,201,55,56,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,11,227,228,229,230,231,232,233,234,235,236,237,238,57,13,239,58,240,241,242,14,15,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,49,295,50,16,17,18,19,20,296,60,61,297,21,22,69,70,23,298,299,300,301,302,303,304,305,24,25,26,27,28,306,307,308,309,310,311,312,313,314,315,316,317,318,319,29,30,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,0,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,71,374,72,375,31,376,377,378,379,380,381,382,383,384,385,386,387,62,388,389,390,391,392,63,64,51,393,394,395,396,397,398,399,400,401,73,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,32,426,65,427,428,429,430,431,432,433,434,435,74,33,34,75,76,436,35,36,37,38,77,78,79,80,81,39,82,40,41,83,42,43,84,85,86,87,88,44,45,46,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,2,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,89,90,91,92,93,94,95,96,97,98,99,47,100,101],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[82],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[3,4,5,6,7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[491,2,474,475],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[66,145,149,150,154,172,173,174,175,67,176,198,201,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,69,70,308,31,385,391,458,459,460,461],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:369","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[48,49,295,50,375,51],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[492,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[123,124,125,126,128,129,142,12,66,143,144,145,146,147,148,149,150,151,153,154,156,161,162,164,170,172,173,174,175,67,176,177,178,179,181,182,184,185,186,187,68,189,190,52,198,199,54,200,201,55,56,202,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,238,57,13,239,58,240,241,14,15,250,260,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,50,16,17,18,19,20,296,60,61,21,22,69,70,23,24,25,26,27,28,306,307,308,309,310,311,312,313,314,316,330,340,341,342,343,344,71,72,375,31,383,385,386,387,62,388,389,390,391,63,64,51,393,394,395,396,397,398,399,73,406,410,425,32,426,65,427,428,33,34,75,76,35,36,37,38,77,78,80,81,39,82,40,41,83,42,43,84,85,86,87,88,44,45,46,437,452,455,456,457,458,459,460,461,2,474,475,477,478,482,483,486,487,488,490,89,90,91,92,93,94,95,96,97,98,99,47,100,101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[249],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[53,57,495,496,497,498],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[453,456,457],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":76,"org.easymock.tests2.UsageTest.argumentsOrdered":64,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":198,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":421,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":112,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":389,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":320,"org.easymock.tests2.DelegateToTest.testReturnException":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":173,"org.easymock.tests.MockingTest.testPartialClassMocking":161,"org.easymock.tests.MockClassControlTest.testToString":300,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":376,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":11,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":206,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":355,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":384,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":21,"org.easymock.tests2.UsageTest.wrongArguments":62,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":451,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":140,"org.easymock.samples.ExampleTest.answerVsDelegate":310,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":135,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":166,"org.easymock.tests2.UsageConstraintsTest.testNull":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":397,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":420,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":305,"org.easymock.tests2.CaptureTest.testPrimitive":92,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":23,"org.easymock.tests.UsageTest.moreThanOneArgument":199,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":225,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":26,"org.easymock.tests.UsageTest.argumentsOrdered":56,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":269,"org.easymock.tests.UsageVarargTest.varargIntAccepted":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":16,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":472,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":431,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":20,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":445,"org.easymock.tests.ReplayStateInvalidUsageTest.times":264,"org.easymock.tests2.DependencyTest.testClassMocking":381,"org.easymock.tests2.AnswerTest.answer":452,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":348,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":132,"org.easymock.tests2.CaptureTest.testAnd":89,"org.easymock.tests2.UsageTest.strictResetToDefault":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":404,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":25,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":415,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":295,"org.easymock.tests2.DelegateToTest.testDelegate":490,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":273,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":221,"org.easymock.tests.LimitationsTest.mockFinalMethod":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":197,"org.easymock.tests2.DependencyTest.testClassMockingSupport":382,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":249,"org.easymock.tests2.CaptureTest.testCapture1_2446744":93,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":401,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":219,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":346,"org.easymock.tests.UsageThrowableTest.throwError":143,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":258,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":134,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":473,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":373,"org.easymock.samples.PartialClassMockTest.testGetArea":321,"org.easymock.tests.MockingTest.testInterfaceMocking":163,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":17,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":9,"org.easymock.tests2.UsageTest.niceToStrict":388,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":207,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":360,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":103,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":330,"org.easymock.tests2.MockBuilderTest.testCreateMock":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":368,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":448,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":215,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":416,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":131,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":205,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":138,"org.easymock.tests.UsageOverloadedMethodTest.overloading":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":370,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":154,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":285,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":306,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":82,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":98,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":180,"org.easymock.tests.MockClassControlTest.testEquals":304,"org.easymock.tests2.EasyMockSupportClassTest.testAll":352,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":190,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":223,"org.easymock.tests2.CaptureTest.testCaptureAll":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":195,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":347,"org.easymock.tests.MockNameTest.defaultName":255,"org.easymock.tests2.UsageConstraintsTest.testMatches":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":27,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":256,"org.easymock.samples.ExampleTest.voteForRemovals":314,"org.easymock.tests.UsageVarargTest.allKinds":68,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":196,"org.easymock.samples.BasicClassMockTest.testPrintContent":323,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":149,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":424,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":176,"org.easymock.tests2.UsageConstraintsTest.greaterThan":42,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":353,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":49,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":407,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":236,"org.easymock.samples.ExampleTest.voteForRemoval":311,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":408,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":341,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":136,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":400,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":385,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":142,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":413,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":172,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":485,"org.easymock.tests2.CaptureTest.testCaptureFirst":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":414,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":393,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":281,"org.easymock.tests2.UsageTest.moreThanOneArgument":387,"org.easymock.tests2.CaptureTest.testCapture2_2446744":100,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":118,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":337,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":187,"org.easymock.tests.GenericTest.testBridgedEquals":192,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":128,"org.easymock.tests.UsageExpectAndReturnTest.longType":277,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":411,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":224,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":87,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":297,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":24,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":253,"org.easymock.tests.UsageCallCountTest.tooManyCalls":129,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":282,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":211,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":148,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":477,"org.easymock.tests.MockingTest.testNiceClassMocking":167,"org.easymock.tests.MockingTest.testClassMocking":159,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":122,"org.easymock.tests2.UsageConstraintsTest.testContains":39,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":460,"org.easymock.tests2.UsageConstraintsTest.testFind":35,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":308,"org.easymock.tests.MockTypeTest.fromEasyMockClass":133,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":72,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":237,"org.easymock.tests.UsageExpectAndReturnTest.object":284,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":419,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":182,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":246,"org.easymock.tests.UsageTest.exactCallCountByLastCall":202,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":108,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":226,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":270,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":438,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":177,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":290,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":153,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":463,"org.easymock.tests.MockClassControlTest.testHashCode":303,"org.easymock.tests2.EasyMockSupportTest.testVerify":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":362,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":271,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":151,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":345,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":74,"org.easymock.tests.UsageVarargTest.varargCharAccepted":181,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":228,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":7,"org.easymock.tests2.UsageTest.openCallCountByLastCall":390,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":493,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":422,"org.easymock.tests.DefaultClassInstantiatorTest.object":229,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":203,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":244,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":59,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":363,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":443,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":462,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":405,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":302,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":212,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":291,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":252,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":371,"org.easymock.tests2.UsageTest.resumeIfFailure":51,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":130,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":175,"org.easymock.tests2.StubTest.stubWithReturnValue":31,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":333,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":88,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":283,"org.easymock.tests2.SerializationTest.testAllMockedMethod":475,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":117,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":1,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":319,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":465,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":218,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":491,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":120,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":453,"org.easymock.tests.UsageExpectAndThrowTest.object":216,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":227,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":85,"org.easymock.tests2.DelegateToTest.testWrongClass":488,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":14,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":15,"org.easymock.samples.ConstructorCalledMockTest.testTax":29,"org.easymock.tests.UsageStrictMockTest.range":58,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":434,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":418,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":476,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":217,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":332,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":55,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":139,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":495,"org.easymock.tests2.CaptureTest.testCaptureNone":97,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":10,"org.easymock.tests.UsageUnorderedTest.message":52,"org.easymock.tests.UsageVerifyTest.twoReturns":61,"org.easymock.tests.UsageVarargTest.varargByteAccepted":186,"org.easymock.tests2.ThreadingTest.testThreadSafe":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":366,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":126,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":247,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":322,"org.easymock.tests2.CaptureTest.testCapture_2617107":91,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":70,"org.easymock.tests2.UsageConstraintsTest.any":80,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":263,"org.easymock.tests2.StubTest.stub":375,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":6,"org.easymock.tests.UsageExpectAndThrowTest.longType":209,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":233,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":262,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":426,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":467,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":170,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":191,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":293,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":442,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":428,"org.easymock.tests2.NameTest.nameForMocksControl":380,"org.easymock.tests2.MockedExceptionTest.testMockedException":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":354,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":201,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":210,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":374,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":394,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":334,"org.easymock.tests.MockingTest.testNicePartialClassMocking":162,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":399,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":440,"org.easymock.tests2.CaptureTest.testCaptureLast":96,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":250,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":483,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":77,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":86,"org.easymock.tests.MockingTest.testTwoMocks":160,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":214,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":63,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":45,"org.easymock.samples.ExampleTest.removeNonExistingDocument":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":447,"org.easymock.tests.UsageStrictMockTest.differentMethods":240,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":260,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":464,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":231,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":342,"org.easymock.tests2.MockBuilderTest.testCreateMockString":339,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":298,"org.easymock.tests.UsageExpectAndThrowTest.floatType":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":356,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":455,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":439,"org.easymock.tests.UsageVerifyTest.twoThrows":60,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":365,"org.easymock.samples.ExampleTest.voteAgainstRemoval":312,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":406,"org.easymock.tests.LimitationsTest.privateConstructor":169,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":102,"org.easymock.tests2.UsageConstraintsTest.testNotNull":44,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":458,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":150,"org.easymock.tests2.UsageTest.defaultResetToNice":392,"org.easymock.samples.ExampleTest.voteAgainstRemovals":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":113,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":289,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":441,"org.easymock.tests.UsageVarargTest.differentLength":183,"org.easymock.tests2.CallbackTest.callback":410,"org.easymock.tests2.UsageConstraintsTest.equals":436,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":402,"org.easymock.tests.UsageTest.openCallCountByLastCall":200,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":69,"org.easymock.tests.UsageCallCountTest.tooFewCalls":124,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":479,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":141,"org.easymock.tests.UsageThrowableTest.throwCheckedException":147,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":496,"org.easymock.tests.MockingTest.testStrictClassMocking":158,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":482,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":66,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":478,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":446,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":265,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":481,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":457,"org.easymock.tests.ObjectMethodsTest.testHashCode":245,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":344,"org.easymock.tests2.NameTest.nameForNiceMock":379,"org.easymock.tests2.DependencyTest.testInterfaceMocking":383,"org.easymock.samples.ExampleTest.addDocument":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":367,"org.easymock.tests2.DelegateToTest.testStubDelegate":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.AnswerTest.stubAnswer":456,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":335,"org.easymock.tests.UsageVarargTest.varargLongAccepted":185,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":3,"org.easymock.tests.UsageExpectAndReturnTest.floatType":276,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":292,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":437,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":471,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests.UsageThrowableTest.noUpperLimit":144,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":43,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":34,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":429,"org.easymock.tests2.SerializationTest.test":474,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":94,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":230,"org.easymock.tests2.UsageConstraintsTest.testSame":37,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":275,"org.easymock.samples.SupportTest.addDocument":318,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":480,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":357,"org.easymock.tests.GenericTest.testPackageScope":189,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":107,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":470,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":165,"org.easymock.tests2.NameTest.nameForMock":377,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":286,"org.easymock.tests2.UsageStrictMockTest.differentMethods":427,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":338,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":403,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":278,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":220,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":243,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":50,"org.easymock.tests2.MockedExceptionTest.testRealException":461,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":137,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":114,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":22,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":267,"org.easymock.tests2.NameTest.nameForStrictMock":378,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":494,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":71,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":433,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":84,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":232,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":326,"org.easymock.tests2.UsageStrictMockTest.range":65,"org.easymock.tests2.UsageConstraintsTest.lessThan":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":466,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":111,"org.easymock.tests2.CaptureTest.testCaptureRightOne":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":361,"org.easymock.tests2.UsageConstraintsTest.testOr":38,"org.easymock.tests.UsageRangeTest.combination":294,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":395,"org.easymock.tests.UsageTest.wrongArguments":54,"org.easymock.tests2.MockBuilderTest.testWithConstructor":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":358,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":104,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":287,"org.easymock.tests.UsageVarargTest.varargShortAccepted":184,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":127,"org.easymock.tests2.UsageConstraintsTest.cmpTo":81,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":106,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":391,"org.easymock.tests2.CaptureTest.testCaptureFromStub":47,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":257,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":327,"org.easymock.tests.UsageTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":57,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":125,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":288,"org.easymock.tests2.UsageConstraintsTest.constraints":75,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":239,"org.easymock.samples.ExampleTest.addAndChangeDocument":316,"org.easymock.tests.UsageStrictMockTest.testVerify":242,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":317,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":194,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":18,"org.easymock.tests.LimitationsTest.abstractClass":168,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":280,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":417,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":178}}]
