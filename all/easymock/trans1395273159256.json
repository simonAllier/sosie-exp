[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"toStringMethod"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[32,33,34,35],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,11,0,1,2,94,95,96,97,98,99,100,101,102,103,104,105,106,107,32,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,33,124,125,126,127,128,34,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,23,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,30,379,380,381,31,382,382,383,383],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","bridgeMethod":"hashCodeMethod"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[36,37,38,39,41,42,90,91,92,93,0,2,96,97,99,100,101,102,103,104,105,106,107,140,159,384,160,385,161,162,163,164,165,166,386,167,387,388,389,170,245,246,247,250,286,293,390,391,321,322,323,324,379,380,381,382,382,383,383],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[252,317],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[36,37,38,39,41,42,392,393,394,395,396,90,397,398,91,399,400,401,402,403,404,405,406,407,92,408,409,410,411,412,93,413,414,415,416,417,418,0,2,96,97,99,100,101,102,103,419,420,104,105,106,107,421,422,138,139,140,159,160,385,423,161,162,163,164,424,165,166,167,170,425,426,245,246,247,427,428,429,250,430,285,286,287,288,289,290,291,292,293,390,391,431,432,321,322,323,324,433,345,434,435,436,437,438,439,379,380,381,382,382,383,383],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[61,94,95,132,135,137,346,370],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[133,136,440],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[232,235],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[0,441,424,442,443,444,445,446,170,425],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[40,447,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,448,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,449,450,6,7,8,9,10,11,12,13,14,15,16,17,1,94,451,95,98,32,108,109,110,452,111,112,113,114,115,116,453,117,118,119,120,121,122,123,33,124,125,126,127,128,34,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,454,155,156,157,158,168,169,171,172,173,174,175,18,19,20,21,22,23,24,25,26,27,28,29,176,177,178,455,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,456,240,241,242,243,244,248,249,457,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,458,273,274,275,459,460,276,277,278,279,280,281,282,283,284,461,462,463,464,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,465,466,467,468,469,470,440,471,472,473,474,475,476,477,478,479,319,480,481,482,483,484,320,485,486,487,488,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,30,31],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[44,50,51,56,61,64,94,95,32,121,33,131,154,171,172,198,206,212,218,224,228,230,263,272,476,319,325,331,337,341,343,376],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[64,65,71,72,144,147,155,156,157,158,198,200,203,204,206,278,279,282,295,296],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[489,490,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[489,492,493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,11,0,1,2,94,95,96,97,98,99,100,101,103,105,106,107,32,108,109,110,111,112,113,114,115,116,453,117,118,119,120,121,122,123,33,124,125,126,127,128,34,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,163,164,166,168,169,170,171,172,173,174,175,23,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,197,198,200,201,202,203,204,205,206,207,208,210,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,267,268,269,270,271,272,276,277,278,279,280,281,282,283,284,293,294,295,296,297,299,300,301,302,304,305,307,308,311,312,313,314,315,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,353,354,355,356,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,30,379,380,381,31,382,382,383,383],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[494,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[496,497,199,498,499,278],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[419,500,382,382,383,383],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[115],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[65,71,72,146,199,200,203,204,206,501,278,281,295,296],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[345,434,438],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[32,109,35],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[3,4,502,503,504,505,506,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[73,480,354,355,356],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[0,419,424,170,425,382,382,383,383],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":110,"org.easymock.tests2.UsageTest.argumentsOrdered":72,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":197,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":85,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":474,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":67,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":31,"org.easymock.tests2.DelegateToTest.testReturnException":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":188,"org.easymock.tests.MockingTest.testPartialClassMocking":322,"org.easymock.tests.MockClassControlTest.testToString":287,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":454,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":212,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":442,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":116,"org.easymock.tests2.UsageTest.wrongArguments":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":362,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":195,"org.easymock.samples.ExampleTest.answerVsDelegate":370,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":391,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":488,"org.easymock.tests2.UsageConstraintsTest.testNull":112,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":99,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":84,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":292,"org.easymock.tests2.CaptureTest.testPrimitive":46,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":366,"org.easymock.tests.UsageTest.moreThanOneArgument":198,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":231,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":242,"org.easymock.tests.UsageTest.argumentsOrdered":204,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":306,"org.easymock.tests.UsageVarargTest.varargIntAccepted":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":311,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":159,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":417,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":28,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":467,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":315,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":490,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":11,"org.easymock.tests.ReplayStateInvalidUsageTest.times":263,"org.easymock.tests2.DependencyTest.testClassMocking":392,"org.easymock.tests2.AnswerTest.answer":132,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":480,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":60,"org.easymock.tests2.CaptureTest.testAnd":43,"org.easymock.tests2.UsageTest.strictResetToDefault":63,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":241,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":79,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":355,"org.easymock.tests2.DelegateToTest.testDelegate":154,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":310,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":227,"org.easymock.tests.LimitationsTest.mockFinalMethod":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":361,"org.easymock.tests2.DependencyTest.testClassMockingSupport":393,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":248,"org.easymock.tests2.CaptureTest.testCapture1_2446744":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":225,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":58,"org.easymock.tests.UsageThrowableTest.throwError":232,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":257,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":462,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":414,"org.easymock.samples.PartialClassMockTest.testGetArea":381,"org.easymock.tests.MockingTest.testInterfaceMocking":486,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":258,"org.easymock.tests2.CompareToTest.testLessOrEqual":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":312,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":268,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":403,"org.easymock.tests2.UsageTest.niceToStrict":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":5,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":161,"org.easymock.tests2.MockBuilderTest.testCreateMock":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":410,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":14,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":496,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":221,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":80,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":318,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":193,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":504,"org.easymock.tests.UsageOverloadedMethodTest.overloading":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":121,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":349,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":336,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":120,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":52,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":455,"org.easymock.tests2.EasyMockSupportClassTest.testAll":90,"org.easymock.tests.MockClassControlTest.testEquals":291,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":246,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":229,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":387,"org.easymock.tests2.CaptureTest.testCaptureAll":44,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":359,"org.easymock.tests.MockNameTest.defaultName":456,"org.easymock.tests2.UsageConstraintsTest.testMatches":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":243,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":255,"org.easymock.samples.ExampleTest.voteForRemovals":374,"org.easymock.tests.UsageVarargTest.allKinds":186,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":360,"org.easymock.samples.BasicClassMockTest.testPrintContent":380,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":238,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":142,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":153,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":446,"org.easymock.tests2.UsageConstraintsTest.greaterThan":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":354,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":107,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":439,"org.easymock.samples.ExampleTest.voteForRemoval":371,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":421,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":172,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":463,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":102,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":62,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":293,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":77,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":187,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":149,"org.easymock.tests2.CaptureTest.testCaptureFirst":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":78,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":74,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":332,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":174,"org.easymock.tests2.CaptureTest.testCapture2_2446744":55,"org.easymock.tests2.UsageTest.moreThanOneArgument":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":481,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":166,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":185,"org.easymock.tests.GenericTest.testBridgedEquals":427,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":505,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":502,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":304,"org.easymock.tests.UsageExpectAndReturnTest.longType":328,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":357,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":386,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":230,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":128,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":254,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":240,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":252,"org.easymock.tests.UsageCallCountTest.tooManyCalls":305,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":491,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":333,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":16,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":217,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":237,"org.easymock.tests.MockingTest.testNiceClassMocking":433,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":37,"org.easymock.tests.MockingTest.testClassMocking":432,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":384,"org.easymock.tests2.UsageConstraintsTest.testContains":119,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":298,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":140,"org.easymock.tests2.UsageConstraintsTest.testFind":111,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":272,"org.easymock.tests.MockTypeTest.fromEasyMockClass":461,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":95,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests.UsageExpectAndReturnTest.object":335,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":15,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":443,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":180,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":275,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":506,"org.easymock.tests.UsageTest.exactCallCountByLastCall":205,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":209,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":307,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":425,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":176,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":341,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":19,"org.easymock.tests.MockClassControlTest.testHashCode":290,"org.easymock.tests2.EasyMockSupportTest.testVerify":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":405,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":489,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":57,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":448,"org.easymock.tests.UsageVarargTest.varargCharAccepted":179,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":485,"org.easymock.tests2.UsageTest.openCallCountByLastCall":68,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":3,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":86,"org.easymock.tests.DefaultClassInstantiatorTest.object":345,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":316,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":273,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":406,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":9,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":18,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":105,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":218,"org.easymock.tests.CapturesMatcherTest.test":495,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":342,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":251,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":93,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":288,"org.easymock.tests2.UsageTest.resumeIfFailure":73,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":390,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":190,"org.easymock.tests2.StubTest.stubWithReturnValue":169,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":441,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":334,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":319,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":497,"org.easymock.samples.SupportTest.voteForRemovals":378,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":426,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":224,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":320,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":133,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":211,"org.easymock.tests.UsageExpectAndThrowTest.object":222,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":126,"org.easymock.tests2.DelegateToTest.testWrongClass":152,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":367,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":368,"org.easymock.tests.UsageStrictMockTest.range":281,"org.easymock.samples.ConstructorCalledMockTest.testTax":382,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":449,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":82,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":36,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":503,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":223,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":394,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":203,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":265,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":194,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":498,"org.easymock.tests2.CaptureTest.testCaptureNone":51,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":269,"org.easymock.tests.UsageUnorderedTest.message":206,"org.easymock.tests.UsageVerifyTest.twoReturns":296,"org.easymock.tests.UsageVarargTest.varargByteAccepted":184,"org.easymock.tests2.ThreadingTest.testThreadSafe":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":408,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":302,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":459,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":379,"org.easymock.tests2.CaptureTest.testCapture_2617107":45,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":483,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":365,"org.easymock.tests2.UsageConstraintsTest.any":117,"org.easymock.tests2.StubTest.stub":168,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":484,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":189,"org.easymock.tests.UsageExpectAndThrowTest.longType":215,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":437,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":261,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":145,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":23,"org.easymock.tests.LimitationsTest.mockNativeMethod":250,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":344,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":8,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":148,"org.easymock.tests2.NameTest.nameForMocksControl":158,"org.easymock.tests2.MockedExceptionTest.testMockedException":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":398,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":451,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":216,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":324,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":96,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":164,"org.easymock.tests.MockingTest.testNicePartialClassMocking":323,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":101,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":6,"org.easymock.tests2.CaptureTest.testCaptureLast":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":249,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":115,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":42,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":127,"org.easymock.tests.MockingTest.testTwoMocks":321,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":220,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":71,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":130,"org.easymock.samples.ExampleTest.removeNonExistingDocument":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":13,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":259,"org.easymock.tests.UsageStrictMockTest.differentMethods":282,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":20,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":435,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":173,"org.easymock.tests2.MockBuilderTest.testCreateMockString":167,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":399,"org.easymock.tests.UsageExpectAndThrowTest.floatType":214,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":135,"org.easymock.tests.UsageVerifyTest.twoThrows":295,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":92,"org.easymock.samples.ExampleTest.voteAgainstRemoval":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":106,"org.easymock.tests.LimitationsTest.privateConstructor":429,"org.easymock.tests2.UsageConstraintsTest.testNotNull":129,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":239,"org.easymock.tests2.UsageTest.defaultResetToNice":70,"org.easymock.samples.ExampleTest.voteAgainstRemovals":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":340,"org.easymock.tests.UsageVarargTest.differentLength":181,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":7,"org.easymock.tests2.CallbackTest.callback":61,"org.easymock.tests2.UsageConstraintsTest.equals":452,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":419,"org.easymock.tests.UsageTest.openCallCountByLastCall":201,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":364,"org.easymock.tests.UsageCallCountTest.tooFewCalls":300,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":39,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":196,"org.easymock.tests.UsageThrowableTest.throwCheckedException":236,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":499,"org.easymock.tests.MockingTest.testStrictClassMocking":431,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":41,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":208,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":12,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":40,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":137,"org.easymock.tests.ObjectMethodsTest.testHashCode":274,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":175,"org.easymock.tests2.NameTest.nameForNiceMock":157,"org.easymock.tests2.DependencyTest.testInterfaceMocking":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":444,"org.easymock.samples.ExampleTest.addDocument":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.DelegateToTest.testStubDelegate":151,"org.easymock.tests2.AnswerTest.stubAnswer":136,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":279,"org.easymock.tests.UsageVarargTest.varargLongAccepted":183,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.floatType":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":343,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":170,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":383,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":124,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":27,"org.easymock.tests.UsageThrowableTest.noUpperLimit":233,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":108,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":415,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":48,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":434,"org.easymock.tests2.UsageConstraintsTest.testSame":113,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":326,"org.easymock.samples.SupportTest.addDocument":377,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":400,"org.easymock.tests.GenericTest.testPackageScope":245,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":26,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":487,"org.easymock.tests2.NameTest.nameForMock":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":337,"org.easymock.tests2.UsageStrictMockTest.differentMethods":147,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":420,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":226,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":458,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":356,"org.easymock.tests2.MockedExceptionTest.testRealException":141,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":477,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":144,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":363,"org.easymock.tests2.NameTest.nameForStrictMock":156,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":423,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":4,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":94,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":100,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":418,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":436,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":125,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":160,"org.easymock.tests2.UsageStrictMockTest.range":146,"org.easymock.tests2.UsageConstraintsTest.lessThan":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":472,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":445,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":404,"org.easymock.tests2.CaptureTest.testCaptureRightOne":53,"org.easymock.tests2.UsageConstraintsTest.testOr":114,"org.easymock.tests.UsageRangeTest.combination":353,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":97,"org.easymock.tests.UsageTest.wrongArguments":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":401,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":286,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":338,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":438,"org.easymock.tests.UsageVarargTest.varargShortAccepted":182,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":303,"org.easymock.tests2.UsageConstraintsTest.cmpTo":118,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":468,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":69,"org.easymock.tests2.CaptureTest.testCaptureFromStub":54,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":256,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":385,"org.easymock.tests.UsageTest.unexpectedCallWithArray":199,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":278,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":301,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":500,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":339,"org.easymock.tests2.CaptureTest.testCapture":494,"org.easymock.tests2.UsageConstraintsTest.constraints":109,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.samples.ExampleTest.addAndChangeDocument":376,"org.easymock.tests.UsageStrictMockTest.testVerify":284,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":30,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":358,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":49,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":313,"org.easymock.tests.LimitationsTest.abstractClass":428,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":314,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":81}}]
