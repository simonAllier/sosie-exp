[{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.Any:36","failures":[84,85,5,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,55,101,71,75,76,78],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"result","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:112","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[0,142,143,5,144,86,7,8,26,145,146,147,148,100,47,48,66,149,150,151,152,153,154,155],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[156,157,144,158,159,160],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[161,46,64,65,162,163,103,164],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[0,142,143,166,167,168,1,2,3,4,169,84,85,170,171,6,86,7,8,87,88,89,90,91,172,173,174,175,176,177,178,92,93,96,179,180,10,11,181,182,12,183,13,14,15,16,184,17,18,19,20,185,21,22,23,24,25,26,27,28,186,187,97,98,188,99,161,189,190,148,30,31,191,192,32,193,33,34,35,36,194,37,38,39,40,195,41,42,43,44,196,197,104,198,45,109,46,199,100,47,48,112,200,49,50,51,201,52,53,54,55,202,203,101,204,56,57,58,59,205,60,61,206,207,208,209,210,211,62,63,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,115,119,121,123,127,231,232,233,66,234,68,69,235,70,236,162,102,103,237,71,72,238,73,75,76,239,240,77,78,241,80,81,82,242,243,244,131,132,133,245,246,247,248,249,250,251,136,137,252,253,254,255,141,256,164,257,258,259],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"failures":[187,260,106],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[226,261,262,263,264,246,265,252],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[266,267,268],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[235,269],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:179","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Constructor<?>.getParameterTypes()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[78],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[270,112,200,271],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[272],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[273,49,51],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[237,72,238,73,74,274,75,239,275,240,276,78],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[156,157,144,158,159,160],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[84,85,5,277,144,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,49,50,51,201,52,53,54,55,202,203,278,101,204,56,57,58,59,205,60,61,206,207,208,209,210,211,62,63,279,64,65,237,71,72,238,73,74,274,75,76,239,240,276,77,78,251],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[280,281],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[0,142,143,166,167,168,1,2,3,4,282,283,284,285,286,287,84,85,5,288,289,290,291,292,293,294,295,296,297,277,170,171,6,298,299,300,301,302,144,86,303,7,8,304,305,87,88,89,90,91,306,307,308,309,310,311,172,9,173,174,175,176,177,178,92,93,94,95,96,10,11,181,182,12,183,13,14,15,16,184,17,18,19,20,185,21,22,23,24,25,26,158,145,27,28,146,147,186,312,313,29,314,315,316,317,318,319,187,260,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,97,98,188,336,337,338,339,99,340,341,342,343,344,345,346,347,348,161,189,190,148,349,30,31,191,192,32,193,33,34,35,36,194,37,38,39,40,195,41,42,43,44,196,197,104,198,45,109,46,199,350,351,100,352,47,48,353,112,200,271,49,50,51,201,52,53,54,55,202,203,101,204,56,57,58,59,205,60,61,206,207,208,209,210,211,62,63,212,213,214,215,216,217,218,219,220,221,222,223,354,224,225,226,227,228,229,230,355,356,357,358,113,115,119,120,121,123,126,127,129,130,359,231,360,279,64,65,232,233,66,149,234,67,68,69,235,150,151,70,236,162,163,102,103,152,153,154,155,237,71,72,238,73,74,274,75,76,239,240,276,77,78,79,241,80,81,82,242,243,244,131,132,133,245,246,247,248,249,250,134,251,265,136,137,252,253,254,361,255,362,363,364,139,139,140,140,141,256,164,257,258,365,259,366,83,367],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[368],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[156,157,144,158,159,160],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[45],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[369,370,371,368,372,373],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[0,142,143,5,156,374,157,375,376,377,378,144,86,7,8,179,180,26,158,145,146,147,379,380,148,349,381,159,382,383,384,385,386,387,160,388,389,100,47,48,205,66,149,150,151],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":201,"org.easymock.tests2.UsageTest.argumentsOrdered":151,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":25,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":222,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":67,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":364,"org.easymock.tests2.DelegateToTest.testReturnException":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":337,"org.easymock.tests.MockingTest.testPartialClassMocking":166,"org.easymock.tests.MockClassControlTest.testToString":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":138,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":10,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":254,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":203,"org.easymock.tests2.UsageTest.wrongArguments":149,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":322,"org.easymock.samples.ExampleTest.answerVsDelegate":164,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":108,"org.easymock.tests2.UsageConstraintsTest.testNull":53,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":248,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":221,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":348,"org.easymock.tests2.CaptureTest.testPrimitive":238,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":96,"org.easymock.tests.UsageTest.moreThanOneArgument":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":24,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":308,"org.easymock.tests.UsageTest.argumentsOrdered":147,"org.easymock.tests.UsageVarargTest.varargIntAccepted":290,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":87,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":113,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":91,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":384,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":199,"org.easymock.tests.ReplayStateInvalidUsageTest.times":332,"org.easymock.tests2.AnswerTest.answer":162,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":358,"org.easymock.tests2.CaptureTest.testAnd":237,"org.easymock.tests2.UsageTest.strictResetToDefault":233,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":307,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":216,"org.easymock.tests2.DelegateToTest.testDelegate":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":286,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":179,"org.easymock.tests2.CaptureTest.testCapture1_2446744":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":19,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":356,"org.easymock.tests.UsageThrowableTest.throwError":172,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":264,"org.easymock.samples.PartialClassMockTest.testGetArea":141,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":327,"org.easymock.tests2.CompareToTest.testLessOrEqual":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":11,"org.easymock.tests2.UsageTest.niceToStrict":234,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":119,"org.easymock.tests2.MockBuilderTest.testCreateMock":126,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":159,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":16,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":217,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":320,"org.easymock.tests.UsageOverloadedMethodTest.overloading":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":262,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":190,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":58,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":37,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":57,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":267,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":239,"org.easymock.tests2.EasyMockSupportClassTest.testAll":244,"org.easymock.tests.MockClassControlTest.testEquals":347,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":260,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":22,"org.easymock.tests2.CaptureTest.testCaptureAll":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":357,"org.easymock.tests2.UsageConstraintsTest.testMatches":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":309,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":324,"org.easymock.samples.ExampleTest.voteForRemovals":259,"org.easymock.tests.UsageVarargTest.allKinds":277,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":285,"org.easymock.samples.BasicClassMockTest.testPrintContent":363,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":177,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":340,"org.easymock.tests2.UsageConstraintsTest.greaterThan":60,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":2,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":252,"org.easymock.samples.ExampleTest.voteForRemoval":257,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":134,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":232,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":311,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":214,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":173,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":336,"org.easymock.tests2.CaptureTest.testCaptureFirst":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":215,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":236,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":34,"org.easymock.tests2.UsageTest.moreThanOneArgument":66,"org.easymock.tests2.CaptureTest.testCapture2_2446744":77,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":242,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":127,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":318,"org.easymock.tests.UsageExpectAndReturnTest.longType":192,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":282,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":23,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":209,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":306,"org.easymock.tests.UsageCallCountTest.tooManyCalls":319,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":374,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":176,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":225,"org.easymock.tests2.UsageConstraintsTest.testContains":56,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":313,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":231,"org.easymock.tests2.UsageConstraintsTest.testFind":52,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":6,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":65,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":301,"org.easymock.tests.UsageExpectAndReturnTest.object":194,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":220,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":292,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":300,"org.easymock.tests.UsageTest.exactCallCountByLastCall":186,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":84,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":110,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":41,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":288,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":189,"org.easymock.tests.MockClassControlTest.testHashCode":346,"org.easymock.tests2.EasyMockSupportTest.testVerify":354,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":383,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":355,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":279,"org.easymock.tests.UsageVarargTest.varargCharAccepted":291,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":351,"org.easymock.tests2.UsageTest.openCallCountByLastCall":68,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":223,"org.easymock.tests.DefaultClassInstantiatorTest.object":287,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":298,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":378,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":174,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":136,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":345,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":42,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":133,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":344,"org.easymock.tests2.UsageTest.resumeIfFailure":70,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":339,"org.easymock.tests2.StubTest.stubWithReturnValue":241,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":36,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":210,"org.easymock.tests2.SerializationTest.testAllMockedMethod":271,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":169,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":160,"org.easymock.samples.SupportTest.voteForRemovals":255,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":105,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":18,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":270,"org.easymock.tests.UsageExpectAndThrowTest.object":184,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":207,"org.easymock.tests2.DelegateToTest.testWrongClass":198,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":97,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":98,"org.easymock.samples.ConstructorCalledMockTest.testTax":139,"org.easymock.tests.UsageStrictMockTest.range":7,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":121,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":321,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":156,"org.easymock.tests2.CaptureTest.testCaptureNone":76,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":370,"org.easymock.tests.UsageUnorderedTest.message":5,"org.easymock.tests.UsageVerifyTest.twoReturns":143,"org.easymock.tests.UsageVarargTest.varargByteAccepted":296,"org.easymock.tests2.ThreadingTest.testThreadSafe":80,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":316,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":362,"org.easymock.tests2.CaptureTest.testCapture_2617107":72,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":95,"org.easymock.tests2.UsageConstraintsTest.any":101,"org.easymock.tests2.StubTest.stub":79,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":331,"org.easymock.tests.UsageExpectAndThrowTest.longType":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":338,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":266,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":330,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":352,"org.easymock.tests2.SerializationTest.testClass":112,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":196,"org.easymock.tests.LimitationsTest.mockNativeMethod":188,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":106,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":44,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":353,"org.easymock.tests2.NameTest.nameForMocksControl":155,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":371,"org.easymock.tests2.MockedExceptionTest.testMockedException":359,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":28,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":12,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":245,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":123,"org.easymock.tests.MockingTest.testNicePartialClassMocking":167,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":250,"org.easymock.tests2.CaptureTest.testCaptureLast":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":180,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":202,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":230,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":208,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":261,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":30,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":15,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":150,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":62,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":373,"org.easymock.samples.ExampleTest.removeNonExistingDocument":366,"org.easymock.tests.UsageStrictMockTest.differentMethods":8,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":328,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":372,"org.easymock.tests2.ConstraintsToStringTest.andToString":387,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":82,"org.easymock.tests2.MockBuilderTest.testCreateMockString":129,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":341,"org.easymock.tests.UsageExpectAndThrowTest.floatType":181,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":205,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":163,"org.easymock.tests.UsageVerifyTest.twoThrows":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":111,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":132,"org.easymock.samples.ExampleTest.voteAgainstRemoval":258,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":137,"org.easymock.tests2.UsageConstraintsTest.testNotNull":211,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":178,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":130,"org.easymock.tests2.UsageTest.defaultResetToNice":235,"org.easymock.samples.ExampleTest.voteAgainstRemovals":256,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":195,"org.easymock.tests.UsageVarargTest.differentLength":293,"org.easymock.tests2.CallbackTest.callback":46,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":135,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":375,"org.easymock.tests.UsageTest.openCallCountByLastCall":27,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":94,"org.easymock.tests.UsageCallCountTest.tooFewCalls":314,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":323,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":368,"org.easymock.tests.UsageThrowableTest.throwCheckedException":175,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":85,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":229,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":226,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":228,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":103,"org.easymock.tests.ObjectMethodsTest.testHashCode":299,"org.easymock.tests2.NameTest.nameForNiceMock":154,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":243,"org.easymock.tests2.DependencyTest.testInterfaceMocking":253,"org.easymock.samples.ExampleTest.addDocument":365,"org.easymock.tests2.DelegateToTest.testStubDelegate":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":263,"org.easymock.tests2.AnswerTest.stubAnswer":102,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":86,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":124,"org.easymock.tests.UsageVarargTest.varargLongAccepted":295,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests.UsageExpectAndReturnTest.floatType":191,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":43,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":109,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":140,"org.easymock.tests2.ConstraintsToStringTest.orToString":381,"org.easymock.tests.UsageThrowableTest.noUpperLimit":9,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":61,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":50,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":74,"org.easymock.tests2.SerializationTest.test":200,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":268,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":31,"org.easymock.tests2.UsageConstraintsTest.testSame":54,"org.easymock.samples.SupportTest.addDocument":361,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":329,"org.easymock.tests.GenericTest.testPackageScope":187,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":272,"org.easymock.tests2.NameTest.nameForMock":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":128,"org.easymock.tests2.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":269,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":32,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":4,"org.easymock.tests2.MockedExceptionTest.testRealException":360,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":376,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":93,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":335,"org.easymock.tests2.NameTest.nameForStrictMock":153,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":118,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":64,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":249,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":206,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":115,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests2.UsageConstraintsTest.lessThan":63,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":213,"org.easymock.tests2.CaptureTest.testCaptureRightOne":240,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":369,"org.easymock.tests2.UsageConstraintsTest.testOr":55,"org.easymock.tests.UsageRangeTest.combination":1,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":246,"org.easymock.tests.UsageTest.wrongArguments":145,"org.easymock.tests2.MockBuilderTest.testWithConstructor":114,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":342,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":39,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":281,"org.easymock.tests.UsageVarargTest.varargShortAccepted":294,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":317,"org.easymock.tests2.UsageConstraintsTest.cmpTo":204,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":69,"org.easymock.tests2.CaptureTest.testCaptureFromStub":276,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":325,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":116,"org.easymock.tests.UsageTest.unexpectedCallWithArray":158,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":144,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":315,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":165,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":40,"org.easymock.tests2.CaptureTest.testCapture":275,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":303,"org.easymock.samples.ExampleTest.addAndChangeDocument":83,"org.easymock.tests2.ConstraintsToStringTest.notToString":382,"org.easymock.tests.UsageStrictMockTest.testVerify":305,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":367,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":283,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":89,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":33,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":218,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":289}}]
