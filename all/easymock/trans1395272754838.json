[{"position":"org.easymock.internal.InjectionPlan:51","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.RecordState:274","failures":[29,48,49,90,91,92,93,109,242],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[28,29,30,31,33,34,243,244,245,245,246,246,35,247,36,37,38,248,249,40,41,250,42,43,251,252,253,254,44,45,46,47,48,49,50,51,255,256,257,258,259,260,261,262,263,264,265,266,267,53,54,268,269,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,270,84,90,271,272,91,92,93,94,95,97,273,100,101,102,103,274,275,104,109,7,276,110,111,277,278,112,113,279,115,280,281,282,117,283,118,284,119,120,121,122,123,285,125,286,19,126,127,287,288,128,129,130,289,290,291,292,140,141,293,142,294,295,296,143,144,297,298,145,299,146,147,148,149,150,151,300,301,302,27,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,303,173,174,304,305,306,307,308,175,176,177,178,179,180,309,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,310,311,312,203,208,313,209,242,314,315,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:70","failures":[270,84,313,209],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[43,141,298,303,304,305,306,307,308,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,315,214,220],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[328,329],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[331,332,333,115,285,125],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:48","failures":[28,29,30,31,33,34,243,244,245,245,246,246,35,247,36,37,38,248,249,40,41,250,42,43,251,252,253,254,44,45,46,47,48,49,50,51,255,256,257,258,259,260,261,262,263,264,265,266,267,53,54,268,269,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,270,84,90,271,272,91,92,93,94,95,97,273,100,101,102,103,274,275,104,109,7,276,110,111,277,278,112,113,279,115,280,281,282,117,283,118,284,119,120,121,122,123,285,125,286,19,126,127,287,288,128,129,130,290,292,140,141,293,142,294,295,296,143,144,297,298,145,299,146,147,148,149,150,151,300,301,302,27,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,303,173,174,304,305,306,307,308,175,176,177,178,179,180,309,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,310,311,312,203,208,313,209,242,314,315,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[28,29,30,31,32,33,34,334,243,0,335,336,244,245,246,1,35,247,36,37,337,38,39,248,249,40,338,339,41,250,42,43,251,252,253,254,44,45,46,47,48,49,50,51,52,255,256,257,258,259,260,261,262,263,264,265,266,340,53,54,268,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,341,78,79,80,81,342,82,83,343,270,84,85,90,91,92,93,94,95,96,97,273,98,99,100,101,102,103,274,275,104,105,106,107,108,109,7,276,110,111,277,278,112,113,114,279,115,116,280,281,344,282,345,117,283,118,284,119,120,121,122,346,123,124,285,125,286,19,126,127,287,288,128,129,130,131,132,133,134,135,136,137,138,139,292,140,141,293,142,347,348,294,295,349,350,296,143,144,297,298,145,299,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,303,173,174,304,305,306,307,308,175,176,177,178,179,180,309,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,203,204,205,206,351,352,353,354,207,355,208,356,313,209,210,242,314,315,357,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,358,236,237,238,239,240,359,359],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[360,361,347,362,363,355],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[35,364,365,366,367,368,369,50,370,371],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[372,373,374],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[375],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[39],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[364,376,377,111,113,378,379,380,370,381,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"position":"org.easymock.internal.Range:52","failures":[29,247,37,337,248,249,338,339,250,55,61,62,66,67,79,80,83,270,84,86,87,88,89,90,141,293,142,348,294,295,349,350,296,299,174,204,206,353,355,208,313,209,213,214,215,324,325,231,240,383],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[360,361,347,362,363,355],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Contains:40","failures":[384],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[28,29,30,31,32,33,385,34,334,243,0,1,247,36,37,337,38,39,248,249,40,338,339,41,250,386,42,43,44,45,46,47,48,387,49,51,255,256,257,258,259,260,261,262,263,264,265,266,340,267,53,54,268,269,55,56,57,58,59,388,60,61,62,63,64,65,389,66,67,68,69,70,71,72,73,74,75,76,77,341,78,79,80,81,342,82,83,343,270,84,85,390,86,87,88,89,90,271,272,91,92,93,94,95,96,97,273,98,99,100,101,102,103,274,275,104,105,106,107,108,109,2,3,4,5,6,7,8,9,10,11,12,13,278,378,117,283,391,392,119,14,15,16,17,18,19,20,21,22,23,24,25,126,127,287,288,128,131,132,133,134,289,290,291,135,136,137,138,139,292,140,141,293,142,347,348,294,295,349,350,296,143,144,297,298,145,299,393,394,395,149,150,396,301,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,26,302,413,414,415,416,417,27,418,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,419,420,421,422,423,424,425,426,427,428,429,430,303,173,174,304,305,306,307,308,175,176,177,178,179,180,309,431,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,432,433,434,435,310,311,312,201,202,203,204,205,206,351,352,353,354,207,355,208,356,313,209,210,211,242,436,314,315,437,212,357,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,316,317,318,319,320,321,322,323,324,325,326,327,231,232,233,438,234,235,358,236,237,238,239,240,439,383,372,440,441,442],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[35,364,443,365,366,367,368,444,369,50,370,371,445],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[28,30,31,33,243,244,35,247,36,37,38,248,249,40,41,250,43,251,252,253,254,46,50,51,255,256,257,258,259,260,261,262,263,264,265,266,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,270,84,90,92,94,95,97,273,100,101,102,103,275,104,7,276,110,111,277,278,112,113,279,115,280,281,282,117,283,118,284,119,120,121,122,123,285,125,286,19,126,127,287,288,128,130,292,140,141,293,142,294,295,296,143,144,145,146,147,148,149,150,151,300,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,303,174,304,305,306,307,308,180,208,313,209,212,213,215,222,223,224,225,226,227,228,229,230],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[44,45,46,47,297,309,216,217,218,219,220,221],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[66],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[28,29,30,31,32,33,385,34,334,243,0,335,336,244,245,246,1,35,364,446,247,36,37,337,38,39,248,249,40,338,339,41,250,386,42,43,447,448,449,251,450,451,252,452,453,454,455,456,457,458,459,460,253,461,462,463,464,465,254,466,467,44,45,46,47,48,387,49,50,51,52,255,256,257,258,259,260,261,262,263,264,265,266,340,267,53,54,268,269,55,56,57,58,59,388,60,61,62,63,64,65,389,66,67,68,69,70,71,72,73,74,75,76,77,341,78,79,80,81,342,82,83,343,270,84,85,390,86,87,88,89,90,271,272,91,92,93,94,95,96,97,273,98,99,100,101,102,103,274,275,104,105,106,107,108,109,2,3,4,5,6,7,8,9,10,11,12,13,276,110,111,277,468,278,112,113,378,114,379,279,469,380,470,115,116,280,370,281,471,371,344,282,382,345,472,473,117,283,474,475,476,477,478,391,392,118,284,119,120,121,122,346,479,123,480,481,124,285,125,286,482,483,14,15,16,17,18,19,20,21,22,23,24,25,126,127,287,288,128,129,484,485,130,486,131,132,133,134,289,290,291,135,136,137,138,139,292,140,141,293,142,347,348,294,295,349,350,296,143,144,297,298,145,299,487,488,489,146,147,393,148,394,395,490,149,150,328,151,152,300,329,396,301,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,26,302,413,414,415,416,417,27,418,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,419,420,421,422,423,424,425,426,427,428,429,430,303,173,174,304,305,306,307,308,175,176,177,178,179,180,309,431,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,491,492,493,432,433,494,434,435,310,311,312,201,202,203,204,205,206,351,352,353,354,207,355,208,356,313,209,210,211,242,436,314,315,437,212,357,213,214,215,495,496,497,498,499,500,501,502,503,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,316,317,318,319,320,321,322,323,324,325,326,327,231,232,233,438,234,235,358,236,237,238,239,240,439,383,372,440,441,442,373,241,504,505,506,374,507,508,509],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[109,411],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[360,361,347,362,363,355],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[500,510,511],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[28,29,30,31,33,34,243,244,245,245,246,246,35,247,36,37,337,38,39,248,249,40,338,339,41,250,42,43,251,252,253,254,44,45,46,47,48,49,50,51,255,256,257,258,259,260,261,262,263,264,265,266,267,53,54,268,269,55,56,57,58,59,60,61,62,63,64,65,389,66,67,68,69,70,71,72,73,74,75,76,77,341,78,79,80,81,342,83,343,270,84,85,90,271,272,91,92,93,94,95,96,97,273,98,99,100,101,102,103,274,275,104,105,106,107,108,109,7,276,110,111,277,278,112,113,114,279,115,116,280,281,282,345,117,283,118,284,119,120,121,122,346,123,124,285,125,286,19,126,127,287,288,128,129,130,131,132,133,134,290,135,136,137,138,139,292,140,141,293,142,347,348,294,295,349,350,296,143,144,297,298,145,299,146,147,148,149,150,151,300,396,301,302,27,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,303,173,174,304,305,306,307,308,175,176,177,178,179,180,309,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,310,311,312,203,354,355,208,356,313,209,210,242,436,314,315,437,212,357,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,316,317,318,319,320,321,322,323,324,325,326,327,240],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[512,513,514],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":59,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":293,"org.easymock.tests2.UsageTest.argumentsOrdered":339,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":265,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":408,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":39,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":0,"org.easymock.tests2.DelegateToTest.testReturnException":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":217,"org.easymock.tests.MockingTest.testPartialClassMocking":146,"org.easymock.tests.MockClassControlTest.testToString":504,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":390,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":181,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":252,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":365,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":143,"org.easymock.tests2.UsageTest.wrongArguments":337,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":133,"org.easymock.samples.ExampleTest.answerVsDelegate":29,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":494,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":395,"org.easymock.tests2.UsageConstraintsTest.testNull":61,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":120,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":508,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":264,"org.easymock.tests2.CaptureTest.testPrimitive":97,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":145,"org.easymock.tests.UsageTest.moreThanOneArgument":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":200,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":177,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":323,"org.easymock.tests.UsageTest.argumentsOrdered":350,"org.easymock.tests.UsageVarargTest.varargIntAccepted":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":222,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":114,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":476,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":12,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":226,"org.easymock.tests.ReplayStateInvalidUsageTest.times":427,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":19,"org.easymock.tests2.DependencyTest.testClassMocking":472,"org.easymock.tests2.AnswerTest.answer":90,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":413,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":108,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":493,"org.easymock.tests2.CaptureTest.testAnd":94,"org.easymock.tests2.UsageTest.strictResetToDefault":36,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":380,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":176,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":259,"org.easymock.tests2.DelegateToTest.testDelegate":55,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":327,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":196,"org.easymock.tests.LimitationsTest.mockFinalMethod":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":139,"org.easymock.tests2.DependencyTest.testClassMockingSupport":473,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":396,"org.easymock.tests2.CaptureTest.testCapture1_2446744":273,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":106,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":421,"org.easymock.tests.UsageThrowableTest.throwError":303,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":433,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":509,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":179,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":467,"org.easymock.samples.PartialClassMockTest.testGetArea":244,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":422,"org.easymock.tests.MockingTest.testInterfaceMocking":393,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":456,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":442,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":182,"org.easymock.tests2.UsageTest.niceToStrict":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":375,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":115,"org.easymock.tests2.MockBuilderTest.testCreateMock":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":463,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":22,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":190,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":360,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":260,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":492,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":312,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":131,"org.easymock.tests.UsageOverloadedMethodTest.overloading":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":460,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":70,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":164,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":292,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":510,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":69,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":102,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":438,"org.easymock.tests.MockClassControlTest.testEquals":507,"org.easymock.tests2.EasyMockSupportClassTest.testAll":251,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":198,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":137,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":107,"org.easymock.tests2.CaptureTest.testCaptureAll":95,"org.easymock.tests.MockNameTest.defaultName":431,"org.easymock.tests2.UsageConstraintsTest.testMatches":71,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":419,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":178,"org.easymock.samples.ExampleTest.voteForRemovals":33,"org.easymock.tests.UsageVarargTest.allKinds":240,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":138,"org.easymock.samples.BasicClassMockTest.testPrintContent":336,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":307,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":342,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":221,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":269,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":502,"org.easymock.tests2.UsageConstraintsTest.greaterThan":73,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":228,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":286,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":503,"org.easymock.samples.ExampleTest.voteForRemoval":30,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":482,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":127,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":434,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":346,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":129,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":247,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":257,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":216,"org.easymock.tests2.CaptureTest.testCaptureFirst":104,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":258,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":250,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":160,"org.easymock.tests2.UsageTest.moreThanOneArgument":37,"org.easymock.tests2.CaptureTest.testCapture2_2446744":275,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":414,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":282,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":239,"org.easymock.tests.GenericTest.testBridgedEquals":329,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":352,"org.easymock.tests.UsageExpectAndReturnTest.longType":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":135,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":199,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":322,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":341,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":175,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":317,"org.easymock.tests.UsageCallCountTest.tooManyCalls":353,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":186,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":306,"org.easymock.tests.MockingTest.testNiceClassMocking":490,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":110,"org.easymock.tests.MockingTest.testClassMocking":488,"org.easymock.tests2.UsageConstraintsTest.testContains":68,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":202,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":46,"org.easymock.tests2.UsageConstraintsTest.testFind":60,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":141,"org.easymock.tests.MockTypeTest.fromEasyMockClass":432,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":49,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":354,"org.easymock.tests.UsageExpectAndReturnTest.object":163,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":23,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":263,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":366,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":440,"org.easymock.tests.UsageTest.exactCallCountByLastCall":296,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":289,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":324,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":364,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":169,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":231,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":314,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":3,"org.easymock.tests.MockClassControlTest.testHashCode":374,"org.easymock.tests2.EasyMockSupportTest.testVerify":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":458,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":325,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":242,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":311,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":105,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":386,"org.easymock.tests.UsageVarargTest.varargCharAccepted":234,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":495,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastCall":248,"org.easymock.tests.DefaultClassInstantiatorTest.object":496,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":310,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":459,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":304,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":333,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":17,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":2,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":506,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":285,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":187,"org.easymock.tests.CapturesMatcherTest.test":359,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":170,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":316,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":254,"org.easymock.tests2.UsageTest.resumeIfFailure":41,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":491,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":219,"org.easymock.tests2.StubTest.stubWithReturnValue":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":370,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":162,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":78,"org.easymock.tests2.SerializationTest.testAllMockedMethod":52,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":302,"org.easymock.samples.SupportTest.voteForRemovals":243,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":361,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":328,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":193,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":27,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":271,"org.easymock.tests.UsageExpectAndThrowTest.object":191,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":291,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":76,"org.easymock.tests2.DelegateToTest.testWrongClass":268,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":149,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":150,"org.easymock.samples.ConstructorCalledMockTest.testTax":245,"org.easymock.tests.UsageStrictMockTest.range":313,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":391,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":262,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":276,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":192,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":447,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":429,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":132,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":362,"org.easymock.tests2.CaptureTest.testCaptureNone":101,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":321,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":512,"org.easymock.tests.UsageUnorderedTest.message":299,"org.easymock.tests.UsageVerifyTest.twoReturns":215,"org.easymock.tests.UsageVarargTest.varargByteAccepted":238,"org.easymock.tests2.ThreadingTest.testThreadSafe":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":461,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":206,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":441,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":335,"org.easymock.tests2.CaptureTest.testCapture_2617107":96,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":298,"org.easymock.tests2.UsageConstraintsTest.any":66,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":426,"org.easymock.tests2.StubTest.stub":42,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndThrowTest.longType":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":218,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":500,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":425,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":343,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":7,"org.easymock.tests2.SerializationTest.testClass":50,"org.easymock.tests.LimitationsTest.mockNativeMethod":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":172,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":16,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":332,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":85,"org.easymock.tests2.NameTest.nameForMocksControl":89,"org.easymock.tests2.MockedExceptionTest.testMockedException":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":451,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":295,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":387,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":185,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":148,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":118,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":281,"org.easymock.tests.MockingTest.testNicePartialClassMocking":147,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":443,"org.easymock.tests2.CaptureTest.testCaptureLast":100,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":301,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":113,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":64,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":77,"org.easymock.tests.MockingTest.testTwoMocks":489,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":378,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":153,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":189,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":338,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":80,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":514,"org.easymock.samples.ExampleTest.removeNonExistingDocument":385,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":423,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":21,"org.easymock.tests.UsageStrictMockTest.differentMethods":209,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":4,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":513,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":498,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":287,"org.easymock.tests2.MockBuilderTest.testCreateMockString":345,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":452,"org.easymock.tests.UsageExpectAndThrowTest.floatType":183,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":449,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":446,"org.easymock.tests.UsageVerifyTest.twoThrows":214,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":253,"org.easymock.samples.ExampleTest.voteAgainstRemoval":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":409,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":319,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":125,"org.easymock.tests.LimitationsTest.privateConstructor":485,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":377,"org.easymock.tests2.UsageConstraintsTest.testNotNull":79,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":308,"org.easymock.tests2.UsageTest.defaultResetToNice":40,"org.easymock.samples.ExampleTest.voteAgainstRemovals":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":168,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":15,"org.easymock.tests.UsageVarargTest.differentLength":358,"org.easymock.tests2.CallbackTest.callback":109,"org.easymock.tests2.UsageConstraintsTest.equals":388,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":480,"org.easymock.tests.UsageTest.openCallCountByLastCall":294,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":297,"org.easymock.tests.UsageCallCountTest.tooFewCalls":204,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":277,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":134,"org.easymock.tests.UsageThrowableTest.throwCheckedException":305,"org.easymock.tests.MockingTest.testStrictClassMocking":487,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":363,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":112,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":309,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":20,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":428,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":278,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":93,"org.easymock.tests.ObjectMethodsTest.testHashCode":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":444,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":128,"org.easymock.tests2.NameTest.nameForNiceMock":88,"org.easymock.tests2.DependencyTest.testInterfaceMocking":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":367,"org.easymock.samples.ExampleTest.addDocument":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":466,"org.easymock.tests2.DelegateToTest.testStubDelegate":54,"org.easymock.tests2.AnswerTest.stubAnswer":92,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":208,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":471,"org.easymock.tests.UsageVarargTest.varargLongAccepted":237,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":171,"org.easymock.tests.UsageExpectAndReturnTest.floatType":155,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":35,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":246,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":437,"org.easymock.tests.UsageThrowableTest.noUpperLimit":173,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":11,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":74,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":57,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":474,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":98,"org.easymock.tests2.SerializationTest.test":51,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":511,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":154,"org.easymock.tests2.UsageConstraintsTest.testSame":62,"org.easymock.samples.SupportTest.addDocument":334,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":468,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":453,"org.easymock.tests.GenericTest.testPackageScope":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":402,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":10,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":394,"org.easymock.tests2.NameTest.nameForMock":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":165,"org.easymock.tests2.UsageStrictMockTest.differentMethods":84,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":382,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":481,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":157,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":195,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":439,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":230,"org.easymock.tests2.MockedExceptionTest.testRealException":47,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":392,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":411,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":83,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":430,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":144,"org.easymock.tests2.NameTest.nameForStrictMock":87,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":470,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":121,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":478,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":499,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":75,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":279,"org.easymock.tests2.UsageStrictMockTest.range":270,"org.easymock.tests2.UsageConstraintsTest.lessThan":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":256,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":457,"org.easymock.tests2.CaptureTest.testCaptureRightOne":103,"org.easymock.tests2.UsageConstraintsTest.testOr":63,"org.easymock.tests.UsageRangeTest.combination":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":284,"org.easymock.tests.UsageTest.wrongArguments":348,"org.easymock.tests2.MockBuilderTest.testWithConstructor":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":454,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":399,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":166,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":501,"org.easymock.tests.UsageVarargTest.varargShortAccepted":236,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":351,"org.easymock.tests2.UsageConstraintsTest.cmpTo":67,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":272,"org.easymock.tests2.CompareToTest.testLessThan":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":401,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":249,"org.easymock.tests2.CaptureTest.testCaptureFromStub":274,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":420,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":469,"org.easymock.tests.UsageTest.unexpectedCallWithArray":347,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":355,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":205,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":381,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":167,"org.easymock.tests2.UsageConstraintsTest.constraints":58,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":356,"org.easymock.samples.ExampleTest.addAndChangeDocument":34,"org.easymock.tests2.ConstraintsToStringTest.containsToString":384,"org.easymock.tests.UsageStrictMockTest.testVerify":211,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":1,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":207,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":136,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":224,"org.easymock.tests.LimitationsTest.abstractClass":484,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":159,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":225,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":261}}]
