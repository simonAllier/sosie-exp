[{"position":"org.easymock.internal.matchers.Equals:37","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[180,181,182,183,184,185,186,187],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[188],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[190,52,191,157],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[192,7,8,9,13,17,18,20,27,38,193,41,42,194,195,45,46,196,197,56,198,199,200,201,202,203,76,204,205,85,86,87,206,207,208,209,210,211,212,213,214,159,160,164,215,216,217,218,168],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"suffix"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[28,29,220,221],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[28,29,220],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"equalsMethod"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[32,222,36,196,51,52,53,54,223,224,55],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[225,182,183,184,185,186,226],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[180,227,28,220,228,229,230,231,232,233,234,56,235,57,236,237,238,239,198,58,199,240,241,200,242,59,243,60,61,201,202,244,203,245,246,247,248,249,64,65,250,250,251,251,252,253,82,254,255,256,257,258,259,260,261,262,263],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[180,225,28,264,58,265,59,266,267,201,203,268,254],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[269,270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"result","java.lang.Integer.MAX_VALUE":"result"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[271,32,222,272,273,274,275,34,276,277,36,278,37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[268],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[188,279],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[280],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[0,1,2,4,6,8,9,11,12,13,14,15,16,17,18,281,19,20,21,22,23,24,25,190,26,180,28,29,31,228,229,230,231,282,232,233,32,33,272,273,34,35,276,36,283,37,38,39,40,41,43,44,284,45,46,48,285,219,196,51,286,52,287,53,54,288,289,290,291,189,279,292,197,270,293,224,294,295,296,55,297,298,234,56,299,235,57,236,238,198,58,199,200,59,60,61,202,62,245,246,247,248,249,66,68,69,71,74,252,253,254,84,86,87,300,301,302,303,304,305,306,307,89,90,93,256,258,259,260,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,308,143,144,145,146,147,212,309,310,311,158,160,161,162,163,164,165,166,167,168,169,170,312],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[271,32,222,272,273,274,275,34,276,277,36,278,37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[313,314,315,316,0,1,2,3,4,317,192,5,6,7,8,9,10,11,12,13,14,15,16,17,18,281,19,20,21,22,318,23,24,25,190,26,180,27,319,320,28,29,220,30,31,228,229,230,231,282,232,233,32,33,222,272,273,274,275,34,35,276,36,278,283,37,38,39,40,193,41,42,43,44,284,194,195,45,46,47,48,49,50,285,219,196,51,286,52,287,53,54,288,289,290,291,189,279,292,197,270,293,224,294,295,191,296,55,297,298,234,56,299,235,57,236,237,238,239,198,58,199,240,200,59,243,60,61,201,202,203,62,321,322,245,323,246,247,248,249,63,64,65,66,67,68,69,70,71,72,250,251,73,74,75,252,76,77,78,79,80,81,253,82,204,83,205,84,85,86,87,88,324,325,326,327,206,207,208,89,90,91,92,93,328,328,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,256,258,259,260,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,329,330,331,332,333,334,143,144,145,146,147,148,149,150,151,152,211,153,154,155,156,157,212,310,311,158,159,160,161,162,163,164,165,215,216,166,167,217,218,168,335,336,337,338,169,170,171,172,173,339,263,174,175,176,177,178,179],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.Range:44","failures":[313,314,315,316,340,341,0,1,2,342,343,3,4,317,192,5,6,7,8,9,10,344,345,346,347,348,11,349,350,351,352,353,354,12,13,14,15,16,17,18,281,19,20,21,22,318,23,24,25,190,26,180,225,355,27,319,356,320,28,29,220,30,31,228,229,230,231,357,282,232,233,358,359,360,361,362,363,364,365,32,33,222,272,273,274,275,34,35,276,36,278,283,37,38,39,40,193,41,42,43,44,284,194,195,45,46,366,47,48,49,367,50,368,285,219,196,51,369,286,52,287,53,54,288,223,289,290,291,189,279,292,197,270,293,224,294,295,191,296,55,297,298,370,371,372,373,374,234,56,299,235,57,236,237,375,238,264,376,239,198,58,199,377,265,240,378,200,242,379,380,59,243,60,226,61,266,267,201,202,381,203,382,383,384,385,386,62,387,388,389,390,391,392,321,322,245,323,393,394,395,246,396,397,247,398,399,400,401,402,403,404,405,406,248,407,408,409,410,411,249,412,413,63,64,65,66,67,68,69,70,71,414,72,250,251,73,74,75,252,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,76,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,77,78,79,80,81,445,446,447,268,253,82,254,448,449,255,450,451,452,453,454,455,204,83,205,84,85,86,87,88,456,300,301,302,457,458,324,325,326,327,206,207,208,459,460,461,462,463,464,465,466,467,303,468,304,469,470,471,472,473,474,475,476,305,306,477,307,89,90,91,92,93,478,479,480,481,482,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,483,484,256,485,210,486,487,488,257,258,259,489,260,490,491,492,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,329,493,308,494,330,331,332,333,334,143,144,145,146,147,148,149,150,495,151,152,211,153,154,155,156,157,212,309,310,311,158,159,160,496,161,162,163,164,165,215,216,166,167,217,218,168,335,336,337,338,497,498,499,261,500,501,502,503,262,504,505,169,170,171,506,172,173,507,312,339,263,174,175,176,177,178,179],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[6,8,9,40,193,194,195,371,372,373,374,76,205,84,86,87,158,159,160,165,216,217,218,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[28,29,220,221],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[297],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[42,197,57,436],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[190,282,366,47,48,49,367,50,299,321,322,245,323,423,427,333,144],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:173","failures":[48],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[313,314,315,316,0,2,3,4,317,192,5,6,7,8,9,10,23,24,25,190,26,180,27,319,320,28,29,220,30,31,229,230,232,233,32,33,222,272,273,274,275,34,35,276,36,278,283,37,38,39,40,193,41,42,43,44,284,194,195,45,46,47,48,49,50,368,285,219,196,51,286,52,287,53,54,288,289,290,291,189,279,292,197,270,293,224,294,295,296,55,297,298,371,372,373,374,234,56,299,235,57,236,238,239,58,240,59,243,202,203,321,322,245,323,66,67,68,69,70,71,72,76,434,77,78,79,80,81,253,82,255,204,83,205,84,85,86,87,88,456,457,458,324,325,326,327,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,256,258,259,260,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,329,330,331,332,333,334,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,212,309,310,311,158,159,160,162,163,164,165,215,216,166,167,217,218,168,335,336,337,338,498,169,170,312,263,174,175,176,177,178,179],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[313,314,315,316,0,1,2,3,4,317,192,5,6,7,8,9,10,11,12,13,14,15,16,17,18,281,19,20,21,22,318,23,24,25,190,26,180,27,319,356,320,28,29,220,30,31,228,229,230,231,282,232,233,32,33,222,272,273,274,275,34,35,276,36,278,283,37,38,39,40,193,41,42,43,44,284,194,195,45,46,47,48,49,50,285,219,196,51,286,52,287,53,54,288,289,290,291,189,279,292,197,270,293,224,294,295,191,296,55,297,298,234,56,299,235,57,236,237,238,239,198,58,199,240,200,59,243,60,61,201,202,203,62,321,322,245,323,246,247,248,249,63,64,65,66,67,68,69,70,71,72,250,251,73,74,75,252,76,77,78,79,80,81,253,82,204,83,205,84,85,86,87,88,324,325,326,327,206,207,208,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,256,258,259,260,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,329,330,331,332,333,334,143,144,145,146,147,148,149,150,151,152,211,153,154,155,156,157,212,310,311,158,159,160,161,162,163,164,165,215,216,166,167,217,218,168,335,336,337,338,169,170,171,172,173,339,263,174,175,176,177,178,179],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[6,319,320,32,33,222,272,273,274,275,34,35,276,36,278,283,37,368,285,219,196,51,286,52,287,53,54,288,223,289,290,291,189,279,292,197,270,293,224,294,295,191,296,55,297,298,238,76,205,84,89,90,91,92,93,142,329,143,144,145,146,147,157,169,170,178],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:99","failures":[0,1,4,6,8,9,11,12,13,14,15,16,17,18,281,19,20,21,22,23,24,25,190,26,180,28,29,31,228,229,230,231,282,232,233,32,33,272,273,34,35,276,36,283,37,38,39,40,41,43,44,284,45,46,48,285,219,196,51,286,52,287,53,54,288,289,290,291,189,279,292,197,270,293,224,294,295,296,55,297,298,234,56,299,235,57,236,238,198,58,199,200,59,60,61,202,62,245,246,247,248,249,66,68,69,71,74,252,253,254,84,86,87,89,90,93,256,258,259,260,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,212,309,310,311,158,160,161,162,163,164,165,166,167,168,169,170,312],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[180,509,250,251],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[268,448],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[4,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":51,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests2.UsageTest.argumentsOrdered":195,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":468,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":42,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":75,"org.easymock.tests2.DelegateToTest.testReturnException":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":175,"org.easymock.tests.MockingTest.testPartialClassMocking":258,"org.easymock.tests.MockClassControlTest.testToString":450,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":370,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":401,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":94,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":247,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":1,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":182,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":89,"org.easymock.tests2.UsageTest.wrongArguments":193,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":337,"org.easymock.samples.ExampleTest.answerVsDelegate":67,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":262,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":491,"org.easymock.tests2.UsageConstraintsTest.testNull":52,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":235,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":455,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":20,"org.easymock.tests2.CaptureTest.testPrimitive":272,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":93,"org.easymock.tests.UsageTest.moreThanOneArgument":165,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":113,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":79,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":478,"org.easymock.tests.UsageTest.argumentsOrdered":218,"org.easymock.tests.UsageVarargTest.varargIntAccepted":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":186,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":240,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":391,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":361,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":147,"org.easymock.tests.ReplayStateInvalidUsageTest.times":438,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":11,"org.easymock.tests2.DependencyTest.testClassMocking":340,"org.easymock.tests2.AnswerTest.answer":2,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":474,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":316,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":501,"org.easymock.tests2.CaptureTest.testAnd":32,"org.easymock.tests2.UsageTest.strictResetToDefault":39,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":239,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":379,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":16,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":310,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":482,"org.easymock.tests2.DelegateToTest.testDelegate":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":109,"org.easymock.tests.LimitationsTest.mockFinalMethod":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":334,"org.easymock.tests2.DependencyTest.testClassMockingSupport":341,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":497,"org.easymock.tests2.CaptureTest.testCapture1_2446744":273,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":107,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":314,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":432,"org.easymock.tests.UsageThrowableTest.throwError":114,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":503,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":392,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":81,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":413,"org.easymock.samples.PartialClassMockTest.testGetArea":252,"org.easymock.tests.MockingTest.testInterfaceMocking":489,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":433,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":301,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":402,"org.easymock.tests2.UsageTest.niceToStrict":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":95,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":59,"org.easymock.tests2.MockBuilderTest.testCreateMock":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":409,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":351,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":103,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":17,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":500,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":444,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":457,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":335,"org.easymock.tests.UsageOverloadedMethodTest.overloading":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":406,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":173,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":279,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":133,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":189,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":276,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":495,"org.easymock.tests.MockClassControlTest.testEquals":454,"org.easymock.tests2.EasyMockSupportClassTest.testAll":246,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":82,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":111,"org.easymock.tests2.CaptureTest.testCaptureAll":33,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":332,"org.easymock.tests.MockNameTest.defaultName":486,"org.easymock.tests2.UsageConstraintsTest.testMatches":292,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":430,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":80,"org.easymock.samples.ExampleTest.voteForRemovals":71,"org.easymock.tests.UsageVarargTest.allKinds":157,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":158,"org.easymock.samples.BasicClassMockTest.testPrintContent":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":333,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":120,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":179,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":367,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":428,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":187,"org.easymock.tests2.UsageConstraintsTest.greaterThan":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":199,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":429,"org.easymock.samples.ExampleTest.voteForRemoval":68,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":24,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":377,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":504,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":362,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":237,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":263,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":14,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":174,"org.easymock.tests2.CaptureTest.testCaptureFirst":37,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":15,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":46,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":129,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":190,"org.easymock.tests2.UsageTest.moreThanOneArgument":40,"org.easymock.tests2.CaptureTest.testCapture2_2446744":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":475,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":202,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":156,"org.easymock.tests.GenericTest.testBridgedEquals":448,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":207,"org.easymock.tests.UsageExpectAndReturnTest.longType":125,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":330,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":112,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":244,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":496,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":191,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":110,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":446,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":77,"org.easymock.tests.UsageCallCountTest.tooManyCalls":208,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":99,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":119,"org.easymock.tests.MockingTest.testNiceClassMocking":492,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":229,"org.easymock.tests.MockingTest.testClassMocking":488,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":458,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":241,"org.easymock.tests2.UsageConstraintsTest.testContains":291,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":245,"org.easymock.tests2.UsageConstraintsTest.testFind":286,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":163,"org.easymock.tests.MockTypeTest.fromEasyMockClass":502,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":204,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":320,"org.easymock.tests.UsageExpectAndReturnTest.object":132,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":238,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":352,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":183,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":152,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":418,"org.easymock.tests.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":493,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":479,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":225,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":148,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":138,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":172,"org.easymock.tests.MockClassControlTest.testHashCode":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":383,"org.easymock.tests2.EasyMockSupportTest.testVerify":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":404,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":480,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":443,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":171,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":213,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":313,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":368,"org.easymock.tests.UsageVarargTest.varargCharAccepted":151,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":421,"org.easymock.tests2.CaptureTest.testCaptureMultiple":271,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":307,"org.easymock.tests2.UsageTest.openCallCountByLastCall":43,"org.easymock.tests.DefaultClassInstantiatorTest.object":422,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":22,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":442,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":416,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":405,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":101,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":382,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":452,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":100,"org.easymock.tests.CapturesMatcherTest.test":328,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":445,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":249,"org.easymock.tests2.UsageTest.resumeIfFailure":45,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":261,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":177,"org.easymock.tests2.StubTest.stubWithReturnValue":31,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":226,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":131,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":296,"org.easymock.tests2.SerializationTest.testAllMockedMethod":220,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":473,"org.easymock.samples.SupportTest.voteForRemovals":74,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":268,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":106,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":221,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":477,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":342,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":494,"org.easymock.tests.UsageExpectAndThrowTest.object":104,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":294,"org.easymock.tests2.DelegateToTest.testWrongClass":49,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":170,"org.easymock.tests.UsageStrictMockTest.range":86,"org.easymock.samples.ConstructorCalledMockTest.testTax":250,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":364,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":105,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":60,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":393,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":336,"org.easymock.tests2.CaptureTest.testCaptureNone":35,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":302,"org.easymock.tests.UsageUnorderedTest.message":76,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":209,"org.easymock.tests.UsageVerifyTest.twoReturns":160,"org.easymock.tests.UsageVarargTest.varargByteAccepted":155,"org.easymock.tests2.ThreadingTest.testThreadSafe":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":407,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":327,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":419,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":64,"org.easymock.tests2.CaptureTest.testCapture_2617107":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":499,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":305,"org.easymock.tests2.UsageConstraintsTest.any":289,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":437,"org.easymock.tests2.StubTest.stub":30,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":176,"org.easymock.tests.UsageExpectAndThrowTest.longType":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":306,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":426,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":436,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":7,"org.easymock.tests2.SerializationTest.testClass":28,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":62,"org.easymock.tests.LimitationsTest.mockNativeMethod":256,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":141,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":254,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":346,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":10,"org.easymock.tests2.NameTest.nameForMocksControl":374,"org.easymock.tests2.MockedExceptionTest.testMockedException":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":397,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":98,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":260,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":356,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":234,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":61,"org.easymock.tests.MockingTest.testNicePartialClassMocking":259,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":181,"org.easymock.tests2.CaptureTest.testCaptureLast":34,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":498,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":54,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":233,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":295,"org.easymock.tests.MockingTest.testTwoMocks":257,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":358,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":102,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":194,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":297,"org.easymock.samples.ExampleTest.removeNonExistingDocument":414,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":434,"org.easymock.tests.UsageStrictMockTest.differentMethods":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":384,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":424,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":25,"org.easymock.tests2.MockBuilderTest.testCreateMockString":203,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":398,"org.easymock.tests.UsageExpectAndThrowTest.floatType":96,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":395,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":3,"org.easymock.tests.UsageVerifyTest.twoThrows":159,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":355,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":248,"org.easymock.samples.ExampleTest.voteAgainstRemoval":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":304,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":58,"org.easymock.tests.LimitationsTest.privateConstructor":484,"org.easymock.tests2.UsageConstraintsTest.testNotNull":55,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":121,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":321,"org.easymock.tests2.UsageTest.defaultResetToNice":284,"org.easymock.samples.ExampleTest.voteAgainstRemovals":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":137,"org.easymock.tests.UsageVarargTest.differentLength":211,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":345,"org.easymock.tests2.CallbackTest.callback":27,"org.easymock.tests2.UsageConstraintsTest.equals":369,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":264,"org.easymock.tests.UsageTest.openCallCountByLastCall":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":285,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":91,"org.easymock.tests.UsageCallCountTest.tooFewCalls":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":231,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":338,"org.easymock.tests.UsageThrowableTest.throwCheckedException":118,"org.easymock.tests.MockingTest.testStrictClassMocking":487,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":232,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":329,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":349,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":439,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":282,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":317,"org.easymock.tests.ObjectMethodsTest.testHashCode":417,"org.easymock.tests2.CompareToTest.testGreateOrEqual":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":185,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":26,"org.easymock.tests2.NameTest.nameForNiceMock":373,"org.easymock.tests2.DependencyTest.testInterfaceMocking":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":184,"org.easymock.samples.ExampleTest.addDocument":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":412,"org.easymock.tests2.DelegateToTest.testStubDelegate":48,"org.easymock.tests2.AnswerTest.stubAnswer":4,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":84,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":266,"org.easymock.tests.UsageVarargTest.varargLongAccepted":154,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":303,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":140,"org.easymock.tests.UsageExpectAndReturnTest.floatType":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":180,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":251,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":507,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":390,"org.easymock.tests.UsageThrowableTest.noUpperLimit":115,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":293,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":219,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":359,"org.easymock.tests2.SerializationTest.test":29,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":274,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":123,"org.easymock.tests2.UsageConstraintsTest.testSame":287,"org.easymock.samples.SupportTest.addDocument":73,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":357,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":399,"org.easymock.tests.GenericTest.testPackageScope":253,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":389,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":490,"org.easymock.tests2.NameTest.nameForMock":371,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":134,"org.easymock.tests2.UsageStrictMockTest.differentMethods":9,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":381,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":376,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":126,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":108,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":415,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":311,"org.easymock.tests2.MockedExceptionTest.testRealException":323,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":471,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":470,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":6,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":441,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":90,"org.easymock.tests2.NameTest.nameForStrictMock":372,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":380,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":363,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":425,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":224,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":200,"org.easymock.tests2.UsageStrictMockTest.range":8,"org.easymock.tests2.UsageConstraintsTest.lessThan":298,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":403,"org.easymock.tests2.CaptureTest.testCaptureRightOne":36,"org.easymock.tests2.UsageConstraintsTest.testOr":53,"org.easymock.tests.UsageRangeTest.combination":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":56,"org.easymock.tests.UsageTest.wrongArguments":216,"org.easymock.tests2.MockBuilderTest.testWithConstructor":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":400,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":135,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":427,"org.easymock.tests.UsageVarargTest.varargShortAccepted":153,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":206,"org.easymock.tests2.UsageConstraintsTest.cmpTo":290,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":462,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":44,"org.easymock.tests2.CaptureTest.testCaptureFromStub":278,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":431,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":242,"org.easymock.tests.UsageTest.unexpectedCallWithArray":215,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":205,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":326,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":280,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":136,"org.easymock.tests2.CaptureTest.testCapture":277,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":85,"org.easymock.tests2.UsageConstraintsTest.constraints":196,"org.easymock.samples.ExampleTest.addAndChangeDocument":72,"org.easymock.tests.UsageStrictMockTest.testVerify":456,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":63,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":83,"org.easymock.tests2.CompareToTest.testGreateThan":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":331,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":145,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":227,"org.easymock.tests.LimitationsTest.abstractClass":483,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":146,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":18}}]
