[{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,178,179,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[312],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[323],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[224],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:47","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[35,331,171,209,210,263,264,266,295],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[332,333,124,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[0,334,335,2,3,4,5,6,7,8,9,10,1,336,337,338,339,340,341,342,343,11,12,13,344,14,15,16,345,346,347,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,348,36,37,349,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,350,64,65,66,67,68,69,70,71,351,352,353,354,355,72,356,73,74,357,75,76,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,331,373,332,374,375,376,377,378,379,333,380,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,381,382,383,117,118,384,119,385,386,387,120,121,122,123,124,125,126,388,389,390,391,392,393,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,394,395,396,397,148,149,150,151,152,153,154,155,156,157,158,159,398,399,400,401,402,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,178,179,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,403,404,194,195,196,197,405,406,198,407,199,408,409,410,411,412,413,200,414,415,201,416,417,204,205,206,207,209,418,210,211,212,213,214,419,215,216,217,218,219,220,420,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,242,421,243,244,245,422,247,250,251,252,253,254,255,256,257,258,259,260,261,262,423,424,425,426,263,427,428,264,265,266,267,268,269,270,429,430,431,432,433,271,434,435,436,437,438,439,272,273,274,276,277,279,281,282,283,284,440,441,442,443,444,445,289,446,447,448,449,450,451,290,452,291,292,293,294,295,296,297,298,299,300,301,302,303,304,453,305,306,307,454,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[427],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[455,456,54,162,457,458],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[36,362,171,305,307,454,308],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[459,452,460,461,462,463,464],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[238,239,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[465,339,72,75,76,358,383,117,118,119,149,156,169,178,178,179,179,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,238,240,241,466,242,467,243,244,245,246,247,248,468,249,290,469,470,293],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[357,358,169,178,179,403,196,471,199,200,238,243,472,422,247,249,290,452],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[473],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[238,459,422,290,452,460,461,462,474,475],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[178,179,403,476,477,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[479,238,239,240],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[401],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:108","failures":[13,17,20,21,22,23,24,33,37,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,124,158,302],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[480],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[459,452,460,461,462,463,464],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[228,481],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[357,359],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[388,392],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":214,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests2.UsageTest.argumentsOrdered":260,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":370,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":255,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":180,"org.easymock.tests2.DelegateToTest.testReturnException":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":30,"org.easymock.tests.MockingTest.testPartialClassMocking":117,"org.easymock.tests.MockClassControlTest.testToString":150,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":440,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":352,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":77,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":199,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":304,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":460,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":121,"org.easymock.tests2.UsageTest.wrongArguments":253,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":451,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":27,"org.easymock.samples.ExampleTest.answerVsDelegate":171,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":339,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":386,"org.easymock.tests2.UsageConstraintsTest.testNull":216,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":189,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":155,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":281,"org.easymock.tests2.CaptureTest.testPrimitive":312,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":96,"org.easymock.tests.UsageTest.moreThanOneArgument":53,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":145,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":398,"org.easymock.tests.UsageTest.argumentsOrdered":59,"org.easymock.tests.UsageVarargTest.varargIntAccepted":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":464,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":438,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":46,"org.easymock.tests.ReplayStateInvalidUsageTest.times":135,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":289,"org.easymock.tests2.AnswerTest.answer":263,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":270,"org.easymock.tests2.CaptureTest.testAnd":309,"org.easymock.tests2.UsageTest.strictResetToDefault":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":144,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":276,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":402,"org.easymock.tests2.DelegateToTest.testDelegate":308,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":92,"org.easymock.tests.LimitationsTest.mockFinalMethod":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":51,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":395,"org.easymock.tests2.CaptureTest.testCapture1_2446744":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":268,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":129,"org.easymock.tests.UsageThrowableTest.throwError":17,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":439,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":417,"org.easymock.samples.PartialClassMockTest.testGetArea":169,"org.easymock.tests.MockingTest.testInterfaceMocking":384,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":43,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":78,"org.easymock.tests2.UsageTest.niceToStrict":254,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":243,"org.easymock.tests2.MockBuilderTest.testCreateMock":247,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":448,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":457,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":86,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":335,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":2,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":25,"org.easymock.tests.UsageOverloadedMethodTest.overloading":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":37,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":108,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":11,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":224,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":318,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":350,"org.easymock.tests.MockClassControlTest.testEquals":154,"org.easymock.tests2.EasyMockSupportClassTest.testAll":198,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":76,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":94,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":469,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":480,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":269,"org.easymock.tests2.CaptureTest.testCaptureAll":310,"org.easymock.tests.MockNameTest.defaultName":347,"org.easymock.tests2.UsageConstraintsTest.testMatches":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":127,"org.easymock.samples.ExampleTest.voteForRemovals":175,"org.easymock.tests.UsageVarargTest.allKinds":71,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":157,"org.easymock.samples.BasicClassMockTest.testPrintContent":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":50,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":23,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":454,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":475,"org.easymock.tests2.UsageConstraintsTest.greaterThan":228,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":140,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":197,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":393,"org.easymock.samples.ExampleTest.voteForRemoval":172,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":405,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":192,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":156,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":250,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":274,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":29,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":453,"org.easymock.tests2.CaptureTest.testCaptureFirst":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":275,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":262,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":39,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":104,"org.easymock.tests2.UsageTest.moreThanOneArgument":252,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":299,"org.easymock.tests2.CaptureTest.testCapture2_2446744":321,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":376,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":70,"org.easymock.tests.GenericTest.testBridgedEquals":359,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":9,"org.easymock.tests.UsageExpectAndReturnTest.longType":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":47,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":272,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":468,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":95,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":394,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":233,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":336,"org.easymock.tests.UsageCallCountTest.tooManyCalls":10,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":22,"org.easymock.tests.MockingTest.testNiceClassMocking":387,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":203,"org.easymock.tests.MockingTest.testClassMocking":382,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":466,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":3,"org.easymock.tests2.UsageConstraintsTest.testContains":223,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":293,"org.easymock.tests2.UsageConstraintsTest.testFind":215,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":13,"org.easymock.tests.MockTypeTest.fromEasyMockClass":338,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":160,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":210,"org.easymock.tests.UsageExpectAndReturnTest.object":107,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":461,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":65,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":16,"org.easymock.tests.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":399,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":452,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":113,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":61,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":36,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":430,"org.easymock.tests.MockClassControlTest.testHashCode":153,"org.easymock.tests2.EasyMockSupportTest.testVerify":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":411,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":400,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":35,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":267,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":323,"org.easymock.tests.UsageVarargTest.varargCharAccepted":64,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":380,"org.easymock.tests2.UsageTest.openCallCountByLastCall":256,"org.easymock.tests.DefaultClassInstantiatorTest.object":126,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":283,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":0,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":412,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":20,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":429,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":152,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":195,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":114,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":1,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":201,"org.easymock.tests2.UsageTest.resumeIfFailure":261,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":32,"org.easymock.tests2.StubTest.stubWithReturnValue":302,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":459,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":106,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":234,"org.easymock.tests2.SerializationTest.testAllMockedMethod":240,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":374,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":458,"org.easymock.samples.SupportTest.voteForRemovals":183,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":357,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":432,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":89,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":479,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":333,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":427,"org.easymock.tests.UsageExpectAndThrowTest.object":87,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":353,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":231,"org.easymock.tests2.DelegateToTest.testWrongClass":307,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":40,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":41,"org.easymock.samples.ConstructorCalledMockTest.testTax":178,"org.easymock.tests.UsageStrictMockTest.range":165,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":425,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":279,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":202,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":88,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":406,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":137,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":26,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":455,"org.easymock.tests2.CaptureTest.testCaptureNone":317,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":343,"org.easymock.tests.UsageUnorderedTest.message":120,"org.easymock.tests.UsageVerifyTest.twoReturns":159,"org.easymock.tests.UsageVarargTest.varargByteAccepted":69,"org.easymock.tests2.ThreadingTest.testThreadSafe":296,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":7,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":184,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":345,"org.easymock.tests2.CaptureTest.testCapture_2617107":311,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":397,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":378,"org.easymock.tests2.UsageConstraintsTest.any":221,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":134,"org.easymock.tests2.StubTest.stub":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":31,"org.easymock.tests.UsageExpectAndThrowTest.longType":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":379,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":391,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":133,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":327,"org.easymock.tests2.SerializationTest.testClass":238,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":271,"org.easymock.tests.LimitationsTest.mockNativeMethod":72,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":116,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":443,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":330,"org.easymock.tests2.NameTest.nameForMocksControl":288,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":445,"org.easymock.tests2.MockedExceptionTest.testMockedException":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":407,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":57,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":418,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":119,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":81,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":186,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":246,"org.easymock.tests.MockingTest.testNicePartialClassMocking":118,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":191,"org.easymock.tests2.CompareToTest.testCompareEqual":473,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":441,"org.easymock.tests2.CaptureTest.testCaptureLast":316,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":396,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":208,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":219,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":232,"org.easymock.tests.MockingTest.testTwoMocks":383,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":85,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":259,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":236,"org.easymock.samples.ExampleTest.removeNonExistingDocument":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":447,"org.easymock.tests.UsageStrictMockTest.differentMethods":166,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":131,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":431,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":389,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":298,"org.easymock.tests2.MockBuilderTest.testCreateMockString":249,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":148,"org.easymock.tests.UsageExpectAndThrowTest.floatType":79,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":227,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":264,"org.easymock.tests.UsageVerifyTest.twoThrows":158,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":200,"org.easymock.samples.ExampleTest.voteAgainstRemoval":173,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":371,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":196,"org.easymock.tests.LimitationsTest.privateConstructor":355,"org.easymock.tests2.UsageConstraintsTest.testNotNull":235,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":24,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":291,"org.easymock.tests2.UsageTest.defaultResetToNice":258,"org.easymock.samples.ExampleTest.voteAgainstRemovals":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":372,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":442,"org.easymock.tests.UsageVarargTest.differentLength":66,"org.easymock.tests2.CallbackTest.callback":295,"org.easymock.tests2.UsageConstraintsTest.equals":419,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":403,"org.easymock.tests.UsageTest.openCallCountByLastCall":56,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":211,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":123,"org.easymock.tests.UsageCallCountTest.tooFewCalls":5,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":28,"org.easymock.tests.UsageThrowableTest.throwCheckedException":21,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":456,"org.easymock.tests.MockingTest.testStrictClassMocking":381,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":74,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":446,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":204,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":206,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":266,"org.easymock.tests.ObjectMethodsTest.testHashCode":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":463,"org.easymock.tests2.NameTest.nameForNiceMock":287,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":300,"org.easymock.tests2.DependencyTest.testInterfaceMocking":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":462,"org.easymock.samples.ExampleTest.addDocument":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.DelegateToTest.testStubDelegate":306,"org.easymock.tests2.AnswerTest.stubAnswer":265,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":163,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":472,"org.easymock.tests.UsageVarargTest.varargLongAccepted":68,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":115,"org.easymock.tests.UsageExpectAndReturnTest.floatType":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":290,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":179,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":437,"org.easymock.tests.UsageThrowableTest.noUpperLimit":18,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":229,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":212,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":423,"org.easymock.tests2.SerializationTest.test":239,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":314,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":98,"org.easymock.tests2.UsageConstraintsTest.testSame":217,"org.easymock.samples.SupportTest.addDocument":182,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":408,"org.easymock.tests.GenericTest.testPackageScope":75,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":436,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":385,"org.easymock.tests2.NameTest.nameForMock":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":109,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":478,"org.easymock.tests2.UsageStrictMockTest.differentMethods":329,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":101,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":91,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":142,"org.easymock.tests2.MockedExceptionTest.testRealException":294,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":340,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":331,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":138,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":122,"org.easymock.tests2.NameTest.nameForStrictMock":286,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":421,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":209,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":190,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":424,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":390,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":230,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":242,"org.easymock.tests2.UsageStrictMockTest.range":328,"org.easymock.tests2.UsageConstraintsTest.lessThan":237,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":433,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":474,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":410,"org.easymock.tests2.CaptureTest.testCaptureRightOne":319,"org.easymock.tests2.UsageConstraintsTest.testOr":218,"org.easymock.tests.UsageRangeTest.combination":139,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":187,"org.easymock.tests.UsageTest.wrongArguments":55,"org.easymock.tests2.MockBuilderTest.testWithConstructor":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":409,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":361,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":392,"org.easymock.tests.UsageVarargTest.varargShortAccepted":67,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":8,"org.easymock.tests2.UsageConstraintsTest.cmpTo":222,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":363,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":257,"org.easymock.tests2.CaptureTest.testCaptureFromStub":320,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":128,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":467,"org.easymock.tests.UsageTest.unexpectedCallWithArray":54,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":162,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":6,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":477,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":111,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":164,"org.easymock.tests2.UsageConstraintsTest.constraints":213,"org.easymock.samples.ExampleTest.addAndChangeDocument":177,"org.easymock.tests.UsageStrictMockTest.testVerify":168,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":181,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":161,"org.easymock.tests2.CompareToTest.testGreateThan":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":48,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":315,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":470,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":44,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":103,"org.easymock.tests.LimitationsTest.abstractClass":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":45,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":38,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":62,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":278}}]
