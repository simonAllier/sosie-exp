[{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:127","sourceCode":"java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"mockType","this":"this"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[0],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,60,61,61,62],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[63,64],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[65,66],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[67,68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[69,70,71,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[73,74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[75,76,77,78,79,80,81,82,22,83],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[76,77,78,81,82,83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[84,11,12,13,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[31,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[86],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[87,22,88,23],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,48,55,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:108","sourceCode":"if (org.easymock.TestSubject != null) {\n    org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field);\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[122],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[84,85],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[124,125,126],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:136","failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,64,154,155,156,157,158,60,60,61,61],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[65,66],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[13,14,15,22,30,32,33,34,35,36,37,38,39,41,44,45,46,52,55,56,159,62],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[160,161,162],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[163,148,164,165],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[166,89,90,6,7,8,9,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,2,127,182,183,184,185,91,163,186,187,188,189,190,191,192,193,94,95,128,96,97,194,195,129,130,131,132,133,134,135,136,137,138,10,196,197,198,199,200,201,202,203,139,140,204,3,141,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,98,231,99,100,232,233,101,102,103,234,11,13,14,235,236,15,237,238,239,240,241,242,142,143,16,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,104,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,21,105,292,293,106,144,107,108,294,295,22,88,145,146,109,124,147,148,149,150,125,296,297,298,299,151,122,152,153,110,64,154,126,300,301,164,302,155,156,157,73,111,303,304,305,112,113,306,307,114,308,309,310,24,25,26,27,311,28,29,312,313,314,315,30,32,33,34,35,36,37,38,39,41,316,317,42,318,319,320,115,74,321,116,117,118,322,323,324,119,120,325,121,326,70,327,328,71,72,329,330,331,332,333,334,335,336,337,338,339,158,340,341,5,342,343,67,68,165,344,43,44,45,46,47,48,345,49,50,51,52,53,54,55,56,57,159,346,347,348,60,60,61,61,62,349,350,351,352,353,354],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.RecordState:117","failures":[258,105,319,320,326,328,72,350],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[355,356,22,357,358,359,360,361,362,123,363,364,365,43,366,367,44,368,369,370,371,372,373,374,375,376,45,377,378,379,380,381,46,382,383],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[355,356,123],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":124,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":98,"org.easymock.tests2.UsageTest.argumentsOrdered":120,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":308,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":246,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":118,"org.easymock.tests2.StubTest.stubWithReturnValue":342,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":83,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":302,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":273,"org.easymock.tests2.SerializationTest.testAllMockedMethod":23,"org.easymock.tests2.DelegateToTest.testReturnException":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":244,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":181,"org.easymock.tests.MockingTest.testPartialClassMocking":7,"org.easymock.samples.SupportTest.voteForRemovals":348,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":84,"org.easymock.tests.MockClassControlTest.testToString":253,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":257,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":371,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":211,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":2,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":44,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":70,"org.easymock.tests.UsageExpectAndThrowTest.object":221,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":347,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":300,"org.easymock.tests2.DelegateToTest.testWrongClass":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":76,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":142,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":143,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":296,"org.easymock.tests2.UsageTest.wrongArguments":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":139,"org.easymock.samples.ConstructorCalledMockTest.testTax":60,"org.easymock.tests.UsageStrictMockTest.range":97,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":241,"org.easymock.samples.ExampleTest.answerVsDelegate":350,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":306,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":15,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":24,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":359,"org.easymock.tests2.UsageConstraintsTest.testNull":148,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":222,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":36,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":114,"org.easymock.tests2.CaptureTest.testPrimitive":332,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":363,"org.easymock.tests.UsageTest.moreThanOneArgument":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":230,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":101,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":136,"org.easymock.tests2.CaptureTest.testCaptureNone":337,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":185,"org.easymock.tests.UsageUnorderedTest.message":91,"org.easymock.tests.UsageVerifyTest.twoReturns":90,"org.easymock.tests2.ThreadingTest.testThreadSafe":343,"org.easymock.tests.UsageTest.argumentsOrdered":102,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":377,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":192,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":1,"org.easymock.tests2.CaptureTest.testCapture_2617107":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":80,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":3,"org.easymock.tests2.UsageConstraintsTest.any":298,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":35,"org.easymock.tests2.StubTest.stub":5,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":245,"org.easymock.tests.UsageExpectAndThrowTest.longType":214,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":160,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":107,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":284,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":292,"org.easymock.tests.LimitationsTest.mockNativeMethod":16,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":86,"org.easymock.tests2.AnswerTest.answer":326,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":283,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":13,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":315,"org.easymock.tests2.CaptureTest.testAnd":329,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":20,"org.easymock.tests2.UsageTest.strictResetToDefault":74,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":295,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":54,"org.easymock.tests2.MockedExceptionTest.testMockedException":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":174,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":233,"org.easymock.tests2.DelegateToTest.testDelegate":291,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":171,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":215,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":9,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":47,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":37,"org.easymock.tests.MockingTest.testNicePartialClassMocking":8,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":226,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":51,"org.easymock.tests2.CaptureTest.testCaptureLast":336,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":247,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":210,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":125,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":180,"org.easymock.tests.MockingTest.testTwoMocks":6,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":209,"org.easymock.tests2.CaptureTest.testCapture1_2446744":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":219,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":156,"org.easymock.tests.UsageThrowableTest.throwError":196,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":4,"org.easymock.tests.UsageStrictMockTest.differentMethods":194,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":236,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":68,"org.easymock.tests2.MockBuilderTest.testCreateMockString":41,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":368,"org.easymock.tests.UsageExpectAndThrowTest.floatType":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":138,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":328,"org.easymock.tests.UsageVerifyTest.twoThrows":89,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":45,"org.easymock.samples.PartialClassMockTest.testGetArea":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":130,"org.easymock.samples.ExampleTest.voteAgainstRemoval":352,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":183,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":184,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":372,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":212,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":193,"org.easymock.tests2.UsageTest.niceToStrict":117,"org.easymock.tests2.UsageConstraintsTest.testNotNull":155,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":316,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":203,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":123,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":34,"org.easymock.tests2.UsageTest.defaultResetToNice":324,"org.easymock.tests2.MockBuilderTest.testCreateMock":38,"org.easymock.samples.ExampleTest.voteAgainstRemovals":349,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":379,"org.easymock.tests.UsageVarargTest.differentLength":93,"org.easymock.tests2.CallbackTest.callback":105,"org.easymock.tests.UsageTest.openCallCountByLastCall":232,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":220,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":112,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":145,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":251,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":204,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":360,"org.easymock.tests.UsageOverloadedMethodTest.overloading":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":376,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":261,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":275,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":27,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":186,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":122,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":161,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":242,"org.easymock.tests.UsageThrowableTest.throwCheckedException":200,"org.easymock.tests2.EasyMockSupportClassTest.testAll":43,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":12,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":228,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":18,"org.easymock.tests2.CaptureTest.testCaptureAll":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":178,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":28,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":293,"org.easymock.tests.MockNameTest.defaultName":205,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":26,"org.easymock.tests2.UsageConstraintsTest.testMatches":153,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":311,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":137,"org.easymock.tests.ObjectMethodsTest.testHashCode":191,"org.easymock.samples.ExampleTest.voteForRemovals":353,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":79,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":344,"org.easymock.tests.UsageVarargTest.allKinds":163,"org.easymock.tests2.DependencyTest.testInterfaceMocking":346,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":78,"org.easymock.samples.BasicClassMockTest.testPrintContent":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.DelegateToTest.testStubDelegate":288,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":202,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":106,"org.easymock.tests2.AnswerTest.stubAnswer":71,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":248,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":81,"org.easymock.tests2.UsageConstraintsTest.greaterThan":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":173,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":57,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":195,"org.easymock.samples.ExampleTest.voteForRemoval":351,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":67,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":282,"org.easymock.tests.UsageExpectAndReturnTest.floatType":266,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":52,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":61,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":262,"org.easymock.tests.UsageThrowableTest.noUpperLimit":197,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":154,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":10,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":115,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":146,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":334,"org.easymock.tests2.SerializationTest.test":88,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":357,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":162,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":303,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":65,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":198,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":265,"org.easymock.tests2.UsageConstraintsTest.testSame":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":243,"org.easymock.tests2.CaptureTest.testCaptureFirst":341,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":69,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":304,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":104,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":369,"org.easymock.tests.GenericTest.testPackageScope":11,"org.easymock.tests2.CaptureTest.testCapture2_2446744":340,"org.easymock.tests2.UsageTest.moreThanOneArgument":321,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":165,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":170,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":39,"org.easymock.tests.GenericTest.testBridgedEquals":85,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":361,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":358,"org.easymock.tests.UsageExpectAndReturnTest.longType":267,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":176,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":276,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":229,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":40,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":164,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":189,"org.easymock.tests2.UsageStrictMockTest.differentMethods":294,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":134,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":268,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":225,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":175,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":380,"org.easymock.tests2.MockedExceptionTest.testRealException":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":272,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":216,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":144,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":201,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":140,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":25,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":31,"org.easymock.tests2.UsageConstraintsTest.testContains":151,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":42,"org.easymock.tests2.UsageConstraintsTest.testFind":147,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":356,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":319,"org.easymock.tests.MockTypeTest.fromEasyMockClass":235,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":50,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":320,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":94,"org.easymock.tests.UsageExpectAndReturnTest.object":274,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":32,"org.easymock.tests2.UsageStrictMockTest.range":108,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":307,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":77,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":362,"org.easymock.tests.UsageTest.exactCallCountByLastCall":103,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":373,"org.easymock.tests2.CaptureTest.testCaptureRightOne":339,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":168,"org.easymock.tests2.UsageConstraintsTest.testOr":150,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":82,"org.easymock.tests.UsageRangeTest.combination":172,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":280,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":48,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":260,"org.easymock.tests.UsageTest.wrongArguments":100,"org.easymock.tests.MockClassControlTest.testHashCode":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":370,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":17,"org.easymock.tests2.EasyMockSupportTest.testVerify":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":374,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":169,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":258,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":250,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":312,"org.easymock.tests2.UsageConstraintsTest.cmpTo":299,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":327,"org.easymock.tests2.UsageTest.openCallCountByLastCall":322,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":355,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":309,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":249,"org.easymock.tests2.CaptureTest.testCaptureFromStub":158,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":33,"org.easymock.tests.UsageTest.unexpectedCallWithArray":99,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":190,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":375,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":218,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":199,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":95,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":278,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":255,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":55,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":96,"org.easymock.tests2.UsageConstraintsTest.constraints":109,"org.easymock.samples.ExampleTest.addAndChangeDocument":354,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":217,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":281,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":206,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":46,"org.easymock.tests2.CompareToTest.testGreateThan":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":177,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":335,"org.easymock.tests2.UsageTest.resumeIfFailure":325,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":19,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":131,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":270,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":14,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":113}}]
