[{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:317","failures":[14,15,16,17],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[18,19,20,21],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,23,96,97,98,99,100,101,24,102,25,103,104,26,27,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,28,29,128,30,31,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,32,33,34,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,39,40,220,221,222,223,224,41,42,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,43,255,44,45,256,257,258,259,0,1,260,261,262,12,13,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,19,20,21,291,292,293,294,295,296,297,298,299,300,301,3,302,4,5,6,7,8,303,304,9,11,305,306,307],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[60,61,63,64,65,66,67,68,71,77,78,79,80,81,82,101,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,33,162,163,172,215,218,223,286,287,288,289],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[19,20,21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[308,309,310,311,312],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[18,19,20,21],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:37","sourceCode":"return org.easymock.internal.ExpectedInvocation","type":"CtReturnImpl"},"failures":[59,60,77,78,79,80,81,82,29,130,131,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,183,184,214,215,43,257,258,1,260,261,262,265,267,268,270,271,277,278,279,284,285,286,287,288,289,299,305],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[313,60,77,78,79,80,81,82,314,16,17,286,287,288,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[220],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:37","sourceCode":"java.util.regex.Pattern.java.util.regex.Pattern.compile(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:210","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[73,74,75,315,316,317,228,235,238,296,318],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[215],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":42,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":101,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":250,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":80,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":221,"org.easymock.tests2.StubTest.stubWithReturnValue":215,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":276,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":141,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":185,"org.easymock.tests2.SerializationTest.testAllMockedMethod":21,"org.easymock.tests2.DelegateToTest.testReturnException":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":78,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":309,"org.easymock.tests.MockingTest.testPartialClassMocking":73,"org.easymock.samples.SupportTest.voteForRemovals":182,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":118,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":18,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":106,"org.easymock.tests.UsageExpectAndThrowTest.object":116,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":273,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":217,"org.easymock.tests2.DelegateToTest.testWrongClass":300,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":130,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":131,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":13,"org.easymock.tests2.UsageTest.wrongArguments":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":160,"org.easymock.tests.UsageStrictMockTest.range":30,"org.easymock.samples.ConstructorCalledMockTest.testTax":183,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":56,"org.easymock.samples.ExampleTest.answerVsDelegate":174,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":247,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":291,"org.easymock.tests2.UsageConstraintsTest.testNull":260,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":117,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":249,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":193,"org.easymock.tests2.CaptureTest.testPrimitive":5,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":164,"org.easymock.tests.UsageTest.moreThanOneArgument":24,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":125,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":229,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":167,"org.easymock.tests2.CaptureTest.testCaptureNone":304,"org.easymock.tests.UsageUnorderedTest.message":23,"org.easymock.tests.UsageVerifyTest.twoReturns":34,"org.easymock.tests.UsageVarargTest.varargByteAccepted":91,"org.easymock.tests2.ThreadingTest.testThreadSafe":198,"org.easymock.tests.UsageTest.argumentsOrdered":27,"org.easymock.tests.UsageVarargTest.varargIntAccepted":85,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":50,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":187,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":312,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":189,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":163,"org.easymock.tests2.UsageConstraintsTest.any":263,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":192,"org.easymock.tests2.StubTest.stub":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":159,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":79,"org.easymock.tests.UsageExpectAndThrowTest.longType":109,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":46,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":290,"org.easymock.tests2.SerializationTest.testClass":19,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":281,"org.easymock.tests.LimitationsTest.mockNativeMethod":76,"org.easymock.tests2.AnswerTest.answer":282,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":151,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":206,"org.easymock.tests2.CaptureTest.testAnd":3,"org.easymock.tests2.UsageTest.strictResetToDefault":219,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":235,"org.easymock.tests2.NameTest.nameForMocksControl":38,"org.easymock.tests2.MockedExceptionTest.testMockedException":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":244,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":153,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":104,"org.easymock.tests2.DelegateToTest.testDelegate":301,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":212,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":75,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":110,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":227,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":194,"org.easymock.tests.MockingTest.testNicePartialClassMocking":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":121,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":310,"org.easymock.tests2.CaptureTest.testCaptureLast":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":81,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":297,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":12,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":274,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":100,"org.easymock.tests2.CaptureTest.testCapture1_2446744":6,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":119,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":114,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":278,"org.easymock.tests.UsageThrowableTest.throwError":61,"org.easymock.tests.UsageStrictMockTest.differentMethods":31,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":200,"org.easymock.tests2.MockBuilderTest.testCreateMockString":197,"org.easymock.tests.UsageExpectAndThrowTest.floatType":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":169,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":269,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":283,"org.easymock.tests.UsageVerifyTest.twoThrows":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":209,"org.easymock.samples.PartialClassMockTest.testGetArea":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":156,"org.easymock.samples.ExampleTest.voteAgainstRemoval":176,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":237,"org.easymock.tests2.UsageTest.niceToStrict":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":107,"org.easymock.tests2.UsageConstraintsTest.testNotNull":277,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":286,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":68,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":191,"org.easymock.tests2.UsageTest.defaultResetToNice":224,"org.easymock.tests2.MockBuilderTest.testCreateMock":195,"org.easymock.samples.ExampleTest.voteAgainstRemovals":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":147,"org.easymock.tests.UsageVarargTest.differentLength":88,"org.easymock.tests2.CallbackTest.callback":239,"org.easymock.tests.UsageTest.openCallCountByLastCall":103,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":115,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":245,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":257,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":162,"org.easymock.tests.UsageCallCountTest.tooFewCalls":48,"org.easymock.tests.UsageOverloadedMethodTest.overloading":171,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":267,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":71,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":143,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":170,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":266,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":57,"org.easymock.tests.UsageThrowableTest.throwCheckedException":65,"org.easymock.tests2.EasyMockSupportClassTest.testAll":207,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":95,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":123,"org.easymock.tests2.CaptureTest.testCaptureAll":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":98,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":296,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":60,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":293,"org.easymock.tests2.UsageConstraintsTest.testMatches":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":295,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":285,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":168,"org.easymock.samples.ExampleTest.voteForRemovals":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":311,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":202,"org.easymock.tests2.NameTest.nameForNiceMock":37,"org.easymock.tests.UsageVarargTest.allKinds":93,"org.easymock.tests2.DependencyTest.testInterfaceMocking":216,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":99,"org.easymock.samples.BasicClassMockTest.testPrintContent":188,"org.easymock.samples.ExampleTest.addDocument":177,"org.easymock.tests2.DelegateToTest.testStubDelegate":299,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":67,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":253,"org.easymock.tests2.AnswerTest.stubAnswer":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":82,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":29,"org.easymock.tests2.UsageConstraintsTest.greaterThan":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":238,"org.easymock.tests.UsageVarargTest.varargLongAccepted":90,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":129,"org.easymock.samples.ExampleTest.voteForRemoval":175,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":199,"org.easymock.tests.UsageExpectAndReturnTest.floatType":134,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":150,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":280,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":233,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":184,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":271,"org.easymock.tests.UsageThrowableTest.noUpperLimit":62,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":258,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":218,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":58,"org.easymock.tests2.SerializationTest.test":20,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":242,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":63,"org.easymock.tests2.UsageConstraintsTest.testSame":261,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":133,"org.easymock.samples.SupportTest.addDocument":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":77,"org.easymock.tests2.CaptureTest.testCaptureFirst":307,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":243,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":226,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":72,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":139,"org.easymock.tests.GenericTest.testPackageScope":94,"org.easymock.tests2.CaptureTest.testCapture2_2446744":306,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":201,"org.easymock.tests2.UsageTest.moreThanOneArgument":39,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":196,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":92,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":52,"org.easymock.tests2.NameTest.nameForMock":35,"org.easymock.tests.UsageExpectAndReturnTest.longType":135,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":144,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":275,"org.easymock.tests2.UsageStrictMockTest.differentMethods":45,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":122,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":136,"org.easymock.tests.UsageCallCountTest.tooManyCalls":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":154,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":47,"org.easymock.tests2.MockedExceptionTest.testRealException":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":308,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":66,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":161,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":292,"org.easymock.tests2.UsageConstraintsTest.testContains":265,"org.easymock.tests2.NameTest.nameForStrictMock":36,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":288,"org.easymock.tests2.UsageConstraintsTest.testFind":1,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":172,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":211,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":231,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":213,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":126,"org.easymock.tests.UsageExpectAndReturnTest.object":142,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":272,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":234,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":190,"org.easymock.tests2.UsageStrictMockTest.range":44,"org.easymock.tests2.UsageConstraintsTest.lessThan":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":248,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":87,"org.easymock.tests.UsageTest.exactCallCountByLastCall":105,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":59,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":316,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.UsageConstraintsTest.testOr":262,"org.easymock.tests.UsageRangeTest.combination":152,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":228,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":148,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":70,"org.easymock.tests.UsageTest.wrongArguments":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":315,"org.easymock.tests2.EasyMockSupportTest.testVerify":252,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":137,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":317,"org.easymock.tests.UsageVarargTest.varargShortAccepted":89,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":69,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":14,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":203,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":51,"org.easymock.tests2.UsageConstraintsTest.cmpTo":264,"org.easymock.tests.UsageVarargTest.varargCharAccepted":86,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":254,"org.easymock.tests2.UsageTest.openCallCountByLastCall":222,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":223,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":251,"org.easymock.tests2.CaptureTest.testCaptureFromStub":305,"org.easymock.tests.UsageTest.unexpectedCallWithArray":102,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":64,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":28,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":49,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":146,"org.easymock.tests2.CaptureTest.testCapture":10,"org.easymock.tests2.UsageConstraintsTest.constraints":259,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":236,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":128,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":112,"org.easymock.samples.ExampleTest.addAndChangeDocument":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":149,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":314,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":210,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":97,"org.easymock.tests2.UsageTest.resumeIfFailure":225,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":138,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":246,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":84}}]
