[{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[14,21,22,23,24,27,28,29,40,41,42,43,30,37,38,39],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,79,80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,44,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[14,150,21,22,23,27,29,151,30,37,39,152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[15,153,154,26,155,156],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1569","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[105],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[157,158,159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"invocation"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,101,102,104,105,106,107,108,109,110,112,113,114,115,44,116,117,118,119,121,123,124,125,126,127,129,130,131,132,134,135,136,137,138,139,140,145,146,147,149],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[160,161],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[162,163],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:371","sourceCode":"return this","type":"CtReturnImpl"},"failures":[164,165,166,167,168],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[110,111,112,113,114,115,44,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[169,170,171,172],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,27,190,191,4,192,193,79,79,80,80,194,37,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[210,211,212,213,214,215,216,217,218,219,220,221,222,223,28,29,38,39],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageTest.argumentsOrdered":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":160,"org.easymock.tests2.StubTest.stubWithReturnValue":194,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":212,"org.easymock.tests2.SerializationTest.testAllMockedMethod":149,"org.easymock.tests.MockingTest.testPartialClassMocking":62,"org.easymock.samples.SupportTest.voteForRemovals":5,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":156,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":73,"org.easymock.tests.MockClassControlTest.testToString":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":128,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":124,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":170,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":40,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":182,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":183,"org.easymock.tests2.UsageTest.wrongArguments":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":173,"org.easymock.samples.ConstructorCalledMockTest.testTax":79,"org.easymock.tests.UsageStrictMockTest.range":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":98,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":2,"org.easymock.tests2.UsageConstraintsTest.testNull":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":222,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":106,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":92,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":54,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":175,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests.UsageTest.moreThanOneArgument":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":118,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":186,"org.easymock.tests.UsageUnorderedTest.message":24,"org.easymock.tests.UsageVerifyTest.twoReturns":23,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":216,"org.easymock.tests.UsageTest.argumentsOrdered":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":135,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":81,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":20,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":190,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":86,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":91,"org.easymock.tests2.StubTest.stub":168,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":193,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":70,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":159,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":36,"org.easymock.tests2.SerializationTest.testClass":148,"org.easymock.tests.LimitationsTest.mockNativeMethod":57,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":113,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":152,"org.easymock.tests2.MockedExceptionTest.testMockedException":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":123,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":165,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":218,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":219,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":64,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":93,"org.easymock.tests.MockingTest.testNicePartialClassMocking":63,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":108,"org.easymock.tests.LimitationsTest.mockFinalMethod":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":13,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":103,"org.easymock.tests.MockingTest.testTwoMocks":61,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":220,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":207,"org.easymock.tests.UsageStrictMockTest.differentMethods":29,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":68,"org.easymock.tests2.MockBuilderTest.testCreateMockString":97,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":120,"org.easymock.tests.UsageVerifyTest.twoThrows":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":134,"org.easymock.samples.PartialClassMockTest.testGetArea":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":191,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":129,"org.easymock.tests.LimitationsTest.privateConstructor":56,"org.easymock.tests2.UsageConstraintsTest.testNotNull":206,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":176,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":90,"org.easymock.tests2.MockBuilderTest.testCreateMock":95,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":111,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":221,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":139,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":202,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":0,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":213,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":101,"org.easymock.tests.MockClassControlTest.testEquals":53,"org.easymock.tests2.EasyMockSupportClassTest.testAll":121,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":75,"org.easymock.tests.MockingTest.testStrictClassMocking":59,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":154,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":102,"org.easymock.tests.MockNameTest.defaultName":25,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":100,"org.easymock.tests2.UsageConstraintsTest.testMatches":203,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":187,"org.easymock.samples.ExampleTest.voteForRemovals":9,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":21,"org.easymock.samples.BasicClassMockTest.testPrintContent":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":141,"org.easymock.tests2.AnswerTest.stubAnswer":171,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":27,"org.easymock.tests2.UsageConstraintsTest.greaterThan":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":122,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":164,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":44,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":151,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":72,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":109,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":143,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":80,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":205,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":196,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":78,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":84,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":94,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":67,"org.easymock.tests2.UsageConstraintsTest.testSame":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":119,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":126,"org.easymock.tests.GenericTest.testPackageScope":74,"org.easymock.tests2.UsageTest.moreThanOneArgument":30,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":217,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":177,"org.easymock.tests.GenericTest.testBridgedEquals":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":3,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":181,"org.easymock.tests2.UsageStrictMockTest.differentMethods":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":184,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":112,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":210,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":223,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":157,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":166,"org.easymock.tests2.MockedExceptionTest.testRealException":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":138,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":211,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":179,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":174,"org.easymock.tests.MockingTest.testNiceClassMocking":65,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":99,"org.easymock.tests.MockingTest.testClassMocking":60,"org.easymock.tests2.UsageConstraintsTest.testContains":201,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":147,"org.easymock.tests2.UsageConstraintsTest.testFind":197,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":89,"org.easymock.tests.MockTypeTest.fromEasyMockClass":10,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":107,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":85,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":69,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":110,"org.easymock.tests.ErrorMessageTest.testGetters":42,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":87,"org.easymock.tests2.UsageStrictMockTest.range":38,"org.easymock.tests2.UsageConstraintsTest.lessThan":208,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":130,"org.easymock.tests2.UsageConstraintsTest.testOr":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":105,"org.easymock.tests.UsageTest.wrongArguments":16,"org.easymock.tests.MockClassControlTest.testHashCode":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":127,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":131,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":158,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":71,"org.easymock.tests.DefaultClassInstantiatorTest.object":66,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":163,"org.easymock.tests2.CaptureTest.testCaptureFromStub":209,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":88,"org.easymock.tests.UsageTest.unexpectedCallWithArray":15,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":132,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":214,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":51,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":114,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":162,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":140,"org.easymock.tests2.UsageTest.resumeIfFailure":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":4,"org.easymock.tests.LimitationsTest.abstractClass":55,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":45,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":192,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":150,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":43}}]
