[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[17,18,19],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[21,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[24,25,26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[27,28],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[29,30],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[31,32,33],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,25,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,29,108,109,110,111,112,113,114,115,116,0,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,34,35,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,20,262,263,264,265,266,267,268,269,270,33,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[104],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1673","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[117,120,121,327],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[328,310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[90,29,110,30],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[221,222,269,270],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[138,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"answer"}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[330,331,332,333,334,335,336,337,338,339,340,341,342,343,26,88,344,345,346,347,348,349,350,351,352,353,123,124,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,17,378,379,380,381],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[382,10,383],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[384],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[330,385,1,331,36,386,2,37,38,40,41,44,45,46,47,49,50,56,57,58,60,62,63,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,333,387,388,389,84,24,25,88,344,89,345,346,347,348,390,391,351,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,29,108,109,110,111,113,114,115,116,0,120,124,128,130,131,135,392,393,394,395,396,144,397,145,34,35,146,147,148,171,172,175,176,179,181,204,206,207,208,209,210,211,354,218,359,227,228,229,238,240,241,248,250,263,264,265,266,267,398,399,400,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,297,299,300,301,302,308,309,312,313,314,315,317,318,320,324,401],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[402,403,173,404,405,237],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[117,118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[38,44,45,50,97,101,128,165,180,181,182,238,263,264,265,266,267,308,309,310,311,312,313,314],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[56,63,144,165,171,176,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,229,249,295,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[59,65,66,130,173,174,177,178,180,406,237,240,249,250,298],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.Capture:134","failures":[407,408],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[409,356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[330,385,1,331,386,2,333,387,388,389,24,26,88,344,345,346,347,410,348,350,390,391,351,124,411,392,412,393,413,394,395,414,396,415,416,397,354,355,417,359,369,372,398,399,400,380,381,401,418,418,419,419],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[330,385,1,331,36,386,2,37,38,39,40,42,43,44,45,46,47,50,51,52,53,54,55,57,58,60,61,64,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,333,387,388,389,84,24,25,26,86,87,88,89,345,346,347,348,350,391,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,29,108,109,110,111,113,114,115,116,0,119,120,121,122,123,124,125,127,128,131,132,134,135,138,139,140,141,142,411,393,413,394,395,143,144,397,145,34,147,148,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,181,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,213,214,215,216,217,354,355,359,228,229,236,238,241,242,243,362,369,248,249,250,251,420,252,253,254,255,263,264,265,266,267,398,399,400,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,297,299,300,301,302,303,304,305,306,307,308,309,312,313,314,315,316,317,318,319,320,322,323,324,325,380,381,401,326,418,419],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[421,422],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[98],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[56,62,63,68,0,128,171,175,176,179,238,248,250],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[93],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":93,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests2.UsageTest.argumentsOrdered":66,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":79,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":149,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":61,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":326,"org.easymock.tests2.DelegateToTest.testReturnException":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":162,"org.easymock.tests.MockingTest.testPartialClassMocking":398,"org.easymock.tests.MockClassControlTest.testToString":363,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":183,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":387,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":184,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":83,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":99,"org.easymock.tests2.UsageTest.wrongArguments":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":169,"org.easymock.samples.ExampleTest.answerVsDelegate":316,"org.easymock.tests2.UsageConstraintsTest.testNull":95,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":345,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":78,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":368,"org.easymock.tests2.CaptureTest.testPrimitive":40,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":312,"org.easymock.tests.UsageTest.moreThanOneArgument":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":203,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":215,"org.easymock.tests.UsageTest.argumentsOrdered":178,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":259,"org.easymock.tests.UsageVarargTest.varargIntAccepted":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":263,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":411,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":267,"org.easymock.tests.ReplayStateInvalidUsageTest.times":31,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":84,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":54,"org.easymock.tests2.CaptureTest.testAnd":37,"org.easymock.tests2.UsageTest.strictResetToDefault":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":5,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":301,"org.easymock.tests2.DelegateToTest.testDelegate":138,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":199,"org.easymock.tests.LimitationsTest.mockFinalMethod":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":218,"org.easymock.tests2.CaptureTest.testCapture1_2446744":41,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":52,"org.easymock.tests.UsageThrowableTest.throwError":204,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":217,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":11,"org.easymock.samples.PartialClassMockTest.testGetArea":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":264,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":185,"org.easymock.tests2.UsageTest.niceToStrict":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":337,"org.easymock.tests2.ThreadingTest.testChangeDefault":23,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":383,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":393,"org.easymock.tests2.MockBuilderTest.testCreateMock":414,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":402,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":193,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":74,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":270,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":251,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":167,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":14,"org.easymock.tests.UsageOverloadedMethodTest.overloading":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":341,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":105,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":295,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":283,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":104,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":18,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":46,"org.easymock.tests2.EasyMockSupportClassTest.testAll":333,"org.easymock.tests.MockClassControlTest.testEquals":367,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":201,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":416,"org.easymock.tests2.CaptureTest.testCaptureAll":38,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":305,"org.easymock.tests.MockNameTest.defaultName":212,"org.easymock.tests2.UsageConstraintsTest.testMatches":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":216,"org.easymock.samples.ExampleTest.voteForRemovals":320,"org.easymock.tests.UsageVarargTest.allKinds":160,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":248,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":306,"org.easymock.samples.BasicClassMockTest.testPrintContent":381,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":210,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":166,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":137,"org.easymock.tests2.UsageConstraintsTest.greaterThan":29,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":351,"org.easymock.samples.ExampleTest.voteForRemoval":317,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":379,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":34,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":352,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":410,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":71,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":161,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":133,"org.easymock.tests2.CaptureTest.testCaptureFirst":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":72,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":298,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":279,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":146,"org.easymock.tests2.CaptureTest.testCapture2_2446744":49,"org.easymock.tests2.UsageTest.moreThanOneArgument":58,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":396,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":159,"org.easymock.tests.GenericTest.testBridgedEquals":356,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":257,"org.easymock.tests.UsageExpectAndReturnTest.longType":275,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":69,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":303,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":202,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":112,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":223,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":221,"org.easymock.tests.UsageCallCountTest.tooManyCalls":258,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":280,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":209,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":385,"org.easymock.tests.MockingTest.testNiceClassMocking":373,"org.easymock.tests.MockingTest.testClassMocking":371,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":420,"org.easymock.tests2.UsageConstraintsTest.testContains":103,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":124,"org.easymock.tests2.UsageConstraintsTest.testFind":94,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":229,"org.easymock.tests.MockTypeTest.fromEasyMockClass":244,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":87,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":235,"org.easymock.tests.UsageExpectAndReturnTest.object":282,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":77,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":154,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":233,"org.easymock.tests.UsageTest.exactCallCountByLastCall":179,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":16,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":181,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":9,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":288,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":294,"org.easymock.tests.MockClassControlTest.testHashCode":366,"org.easymock.tests2.EasyMockSupportTest.testVerify":81,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":261,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":269,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":292,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":384,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":51,"org.easymock.tests.UsageVarargTest.varargCharAccepted":153,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":127,"org.easymock.tests2.UsageTest.openCallCountByLastCall":62,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":80,"org.easymock.tests.DefaultClassInstantiatorTest.object":374,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":382,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":268,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":231,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":406,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":338,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":421,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":390,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":365,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":190,"org.easymock.tests.CapturesMatcherTest.test":408,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":289,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":389,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":364,"org.easymock.tests2.UsageTest.resumeIfFailure":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":164,"org.easymock.tests2.StubTest.stubWithReturnValue":144,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":113,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":281,"org.easymock.tests2.SerializationTest.testAllMockedMethod":26,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":33,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":403,"org.easymock.samples.SupportTest.voteForRemovals":324,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":422,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":196,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":271,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":117,"org.easymock.tests.UsageExpectAndThrowTest.object":194,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":110,"org.easymock.tests2.DelegateToTest.testWrongClass":136,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":313,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":314,"org.easymock.samples.ConstructorCalledMockTest.testTax":418,"org.easymock.tests.UsageStrictMockTest.range":240,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":76,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":330,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":394,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":168,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":404,"org.easymock.tests2.CaptureTest.testCaptureNone":45,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":226,"org.easymock.tests.UsageUnorderedTest.message":180,"org.easymock.tests.UsageVerifyTest.twoReturns":250,"org.easymock.tests.UsageVarargTest.varargByteAccepted":158,"org.easymock.tests2.ThreadingTest.testThreadSafe":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":339,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":255,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":234,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":380,"org.easymock.tests2.CaptureTest.testCapture_2617107":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":311,"org.easymock.tests2.UsageConstraintsTest.any":101,"org.easymock.tests2.StubTest.stub":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":222,"org.easymock.tests.UsageExpectAndThrowTest.longType":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":163,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":17,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":129,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":148,"org.easymock.tests2.SerializationTest.testClass":24,"org.easymock.tests.LimitationsTest.mockNativeMethod":359,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":417,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":291,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":132,"org.easymock.tests2.NameTest.nameForMocksControl":142,"org.easymock.tests2.MockedExceptionTest.testMockedException":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":334,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":176,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":400,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":188,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":88,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":395,"org.easymock.tests.MockingTest.testNicePartialClassMocking":399,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":347,"org.easymock.tests2.CaptureTest.testCaptureLast":44,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":219,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":98,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":2,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":111,"org.easymock.tests.MockingTest.testTwoMocks":372,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":192,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":115,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":22,"org.easymock.samples.ExampleTest.removeNonExistingDocument":321,"org.easymock.tests.UsageStrictMockTest.differentMethods":241,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":28,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":376,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":35,"org.easymock.tests2.MockBuilderTest.testCreateMockString":415,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":361,"org.easymock.tests.UsageExpectAndThrowTest.floatType":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":335,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":107,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":119,"org.easymock.tests.UsageVerifyTest.twoThrows":249,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":388,"org.easymock.samples.ExampleTest.voteAgainstRemoval":318,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":224,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":391,"org.easymock.tests.LimitationsTest.privateConstructor":358,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":12,"org.easymock.tests2.UsageConstraintsTest.testNotNull":114,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":211,"org.easymock.tests2.UsageTest.defaultResetToNice":64,"org.easymock.samples.ExampleTest.voteAgainstRemovals":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":287,"org.easymock.tests.UsageVarargTest.differentLength":155,"org.easymock.tests2.CallbackTest.callback":55,"org.easymock.tests.UsageTest.openCallCountByLastCall":175,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":310,"org.easymock.tests.UsageCallCountTest.tooFewCalls":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":170,"org.easymock.tests.UsageThrowableTest.throwCheckedException":208,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":405,"org.easymock.tests.MockingTest.testStrictClassMocking":370,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":386,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":182,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":1,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":85,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":36,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":121,"org.easymock.tests.ObjectMethodsTest.testHashCode":232,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":147,"org.easymock.tests2.NameTest.nameForNiceMock":141,"org.easymock.tests2.DependencyTest.testInterfaceMocking":82,"org.easymock.samples.ExampleTest.addDocument":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":340,"org.easymock.tests2.DelegateToTest.testStubDelegate":135,"org.easymock.tests2.AnswerTest.stubAnswer":120,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":238,"org.easymock.tests.UsageVarargTest.varargLongAccepted":157,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":242,"org.easymock.tests.UsageExpectAndReturnTest.floatType":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":397,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":419,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":108,"org.easymock.tests.UsageThrowableTest.noUpperLimit":205,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":296,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":91,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":342,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":42,"org.easymock.tests2.SerializationTest.test":25,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":19,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":375,"org.easymock.tests2.UsageConstraintsTest.testSame":96,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":273,"org.easymock.samples.SupportTest.addDocument":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":336,"org.easymock.tests.GenericTest.testPackageScope":354,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":20,"org.easymock.tests2.NameTest.nameForMock":139,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":284,"org.easymock.tests2.UsageStrictMockTest.differentMethods":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":349,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":276,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":198,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":230,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":302,"org.easymock.tests2.MockedExceptionTest.testRealException":125,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":247,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":309,"org.easymock.tests2.NameTest.nameForStrictMock":140,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":10,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":86,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":346,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":343,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":109,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":377,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":392,"org.easymock.tests2.UsageStrictMockTest.range":130,"org.easymock.tests2.UsageConstraintsTest.lessThan":116,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":70,"org.easymock.tests2.CaptureTest.testCaptureRightOne":47,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":27,"org.easymock.tests2.UsageConstraintsTest.testOr":97,"org.easymock.tests.UsageRangeTest.combination":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":344,"org.easymock.tests.UsageTest.wrongArguments":174,"org.easymock.tests2.MockBuilderTest.testWithConstructor":4,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":362,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":285,"org.easymock.tests.UsageVarargTest.varargShortAccepted":156,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":378,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":256,"org.easymock.tests2.UsageConstraintsTest.cmpTo":102,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":118,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":63,"org.easymock.tests2.CaptureTest.testCaptureFromStub":48,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":412,"org.easymock.tests.UsageTest.unexpectedCallWithArray":173,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":237,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":254,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":286,"org.easymock.tests2.CaptureTest.testCapture":407,"org.easymock.tests2.UsageConstraintsTest.constraints":92,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":239,"org.easymock.samples.ExampleTest.addAndChangeDocument":322,"org.easymock.tests.UsageStrictMockTest.testVerify":243,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":325,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":236,"org.easymock.tests2.CompareToTest.testGreateThan":30,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":304,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":43,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":265,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":278,"org.easymock.tests.LimitationsTest.abstractClass":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":266,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":297,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":75}}]
