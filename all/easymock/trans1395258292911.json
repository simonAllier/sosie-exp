[{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:338","sourceCode":"if (java.lang.reflect.Type != null) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","resolvedType":"actualTypeArgument","variable":"variable"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[3,4,5,6],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[69,70,71,72,73,74],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"key"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[76,77,78,79,80,69,81,82,83,84,85,86,70,87,88,89,36,59,60,90,71,91,92,93,94,95,96,97,98,99,100,101,102,103,72,52,67,68,73,104,74,105,106,107,108],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[109,110,111,112,113,114,115,116],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[117,118,119,120,121,122,123,124,125,126,127],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:99","failures":[128,129,130,131,132,133,134,135,64,136,65,137],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[138,139,140,141,142,143,144,145,146,147,148,149,150,119,121,122,125,126,127,151,152,153,154,155,156,157,158,159,160,5,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[188,180,185],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[69,70,71,72,73,74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[189,138,139,19,20,190,191,128,129,192,130,193,131,132,194,195,133,196,197,198,199,200,201,7,8,202,9,203,204,10,11,205,206,12,207,208,209,210,211,212,134,213,214,215,216,217,218,219,55,220,221,222,13,14,223,15,224,225,16,17,226,227,18,228,229,230,231,232,233,140,234,235,141,236,237,238,239,240,56,241,142,242,243,244,143,245,246,247,248,249,250,76,77,57,251,252,253,1,78,79,254,255,256,257,258,259,260,144,145,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,21,22,276,277,278,23,24,25,26,279,280,281,135,282,27,283,28,29,89,30,31,284,285,286,287,288,32,33,34,289,290,291,292,146,147,293,148,149,150,294,118,119,120,121,122,123,124,125,126,127,116,295,296,297,298,299,300,301,302,303,304,305,306,307,35,308,309,151,310,311,152,312,153,313,154,155,314,315,156,316,317,157,318,319,158,159,320,321,160,322,323,324,58,325,36,326,59,60,327,328,61,329,330,331,62,63,2,332,64,333,136,334,3,4,5,335,336,337,338,339,340,341,342,343,344,345,37,38,346,347,39,348,349,350,351,352,353,354,355,356,357,358,359,360,161,162,361,163,40,362,363,188,364,365,366,367,368,369,370,371,372,373,90,71,91,374,375,92,93,376,41,42,43,44,45,377,378,379,380,381,382,383,384,164,385,165,166,167,168,169,170,386,171,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,94,403,404,95,96,97,172,173,174,405,406,407,408,409,410,175,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,98,99,100,65,426,427,428,429,430,431,432,433,101,434,435,436,437,438,439,440,441,442,443,444,445,176,177,178,179,102,103,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,0,489,46,47,48,49,50,490,180,181,182,183,184,185,186,187,51,491,66,492,72,52,493,67,68,494,495,53,54,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[55,56,57,251,79,277,279,280,135,283,284,285,286,288,147,124,307,58,59,60,61,330,62,63,64,333,136,93,377,378,380,381,382,383,384,400,99,65,101,66,67,68],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[102,103,483],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[517,518],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[381,382,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[59,60,71,72,67,68],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:33","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResult>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[189,138,139,190,191,128,129,192,130,131,132,194,195,133,199,200,203,134,214,216,224,229,231,233,140,234,235,141,237,238,239,56,249,250,77,57,251,78,79,255,258,259,145,265,268,277,24,279,280,135,282,283,89,284,285,286,287,288,32,146,147,293,148,149,150,119,124,116,297,298,299,300,302,303,304,305,306,307,309,152,313,319,322,325,36,326,59,60,327,328,61,329,330,331,62,63,332,64,333,136,334,3,4,5,37,38,346,347,161,162,91,92,93,376,377,378,379,380,381,382,383,384,164,390,391,392,394,395,399,400,402,403,404,96,405,406,408,414,415,416,418,419,421,422,423,424,425,99,100,65,101,178,449,450,452,457,462,492,72,52,493,67,68,494,498,499,501,506,511],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:62","sourceCode":"throw new java.lang.RuntimeException(java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":277,"org.easymock.tests2.UsageTest.argumentsOrdered":79,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":373,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":333,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":477,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":251,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":194,"org.easymock.tests2.DelegateToTest.testReturnException":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":368,"org.easymock.tests.MockingTest.testPartialClassMocking":405,"org.easymock.tests.MockClassControlTest.testToString":182,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":271,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":486,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":315,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":447,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":313,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":110,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":37,"org.easymock.tests2.UsageTest.wrongArguments":77,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":358,"org.easymock.samples.ExampleTest.answerVsDelegate":191,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":343,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":410,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":148,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":187,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":64,"org.easymock.tests2.CaptureTest.testPrimitive":300,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":39,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":466,"org.easymock.tests.UsageTest.moreThanOneArgument":90,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":429,"org.easymock.tests.UsageTest.argumentsOrdered":93,"org.easymock.tests.UsageVarargTest.varargIntAccepted":416,"org.easymock.tests.InvocationTest.testEquals":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":482,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":41,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":114,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":207,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":227,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":243,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":45,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":83,"org.easymock.tests.ReplayStateInvalidUsageTest.times":442,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests2.DependencyTest.testClassMocking":256,"org.easymock.tests2.AnswerTest.answer":265,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":484,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":292,"org.easymock.tests2.CaptureTest.testAnd":297,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":340,"org.easymock.tests2.UsageTest.strictResetToDefault":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":47,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":331,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":433,"org.easymock.tests2.DelegateToTest.testDelegate":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":462,"org.easymock.tests.LimitationsTest.mockFinalMethod":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":371,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":352,"org.easymock.tests2.DependencyTest.testClassMockingSupport":257,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":102,"org.easymock.tests2.CaptureTest.testCapture1_2446744":301,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":460,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":290,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":436,"org.easymock.tests.UsageThrowableTest.throwError":377,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":342,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":490,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":324,"org.easymock.samples.PartialClassMockTest.testGetArea":132,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":437,"org.easymock.tests.MockingTest.testInterfaceMocking":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":42,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":156,"org.easymock.tests2.UsageTest.niceToStrict":57,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":366,"org.easymock.tests2.ThreadingTest.testChangeDefault":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":134,"org.easymock.tests2.MockBuilderTest.testCreateMock":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":320,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":11,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":456,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":69,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":62,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":339,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":356,"org.easymock.tests.UsageOverloadedMethodTest.overloading":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":318,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":404,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":28,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":507,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":399,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":517,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":283,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":306,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":417,"org.easymock.tests.MockClassControlTest.testEquals":186,"org.easymock.tests2.EasyMockSupportClassTest.testAll":152,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":162,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":464,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":85,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":291,"org.easymock.tests2.CaptureTest.testCaptureAll":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":350,"org.easymock.tests.MockNameTest.defaultName":516,"org.easymock.tests2.UsageConstraintsTest.testMatches":29,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":434,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":49,"org.easymock.samples.ExampleTest.voteForRemovals":130,"org.easymock.tests.UsageVarargTest.allKinds":425,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":98,"org.easymock.samples.BasicClassMockTest.testPrintContent":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":351,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":383,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":16,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":372,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":386,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":115,"org.easymock.tests2.UsageConstraintsTest.greaterThan":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":426,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":125,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":171,"org.easymock.samples.ExampleTest.voteForRemoval":128,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":126,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":197,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":344,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":244,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":294,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":164,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":249,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":329,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":367,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":228,"org.easymock.tests2.CaptureTest.testCaptureFirst":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":330,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":255,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":503,"org.easymock.tests2.UsageTest.moreThanOneArgument":76,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":199,"org.easymock.tests2.CaptureTest.testCapture2_2446744":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":485,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":55,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":424,"org.easymock.tests.GenericTest.testBridgedEquals":163,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":394,"org.easymock.tests.UsageExpectAndReturnTest.longType":499,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":328,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":348,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":465,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":40,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":287,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":463,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":46,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":336,"org.easymock.tests.UsageCallCountTest.tooManyCalls":395,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":104,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":321,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":504,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":452,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":382,"org.easymock.tests.MockingTest.testNiceClassMocking":175,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":234,"org.easymock.tests.MockingTest.testClassMocking":173,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":388,"org.easymock.tests2.UsageConstraintsTest.testContains":27,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":145,"org.easymock.tests2.UsageConstraintsTest.testFind":23,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":401,"org.easymock.tests.MockTypeTest.fromEasyMockClass":341,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":66,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":264,"org.easymock.tests.UsageExpectAndReturnTest.object":506,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":332,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":419,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":111,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":364,"org.easymock.tests.UsageTest.exactCallCountByLastCall":376,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":430,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":353,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":107,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":295,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":512,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":414,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":403,"org.easymock.tests.MockClassControlTest.testHashCode":185,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":13,"org.easymock.tests2.EasyMockSupportTest.testVerify":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":317,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":82,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":431,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":402,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":397,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":289,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":241,"org.easymock.tests.UsageVarargTest.varargCharAccepted":418,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":385,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":489,"org.easymock.tests2.UsageTest.openCallCountByLastCall":252,"org.easymock.tests.DefaultClassInstantiatorTest.object":165,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":136,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":396,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":363,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":108,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":380,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":202,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":222,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":184,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":453,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":513,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":335,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":183,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":322,"org.easymock.tests2.UsageTest.resumeIfFailure":254,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":338,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":370,"org.easymock.tests2.StubTest.stubWithReturnValue":248,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":215,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":505,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":288,"org.easymock.tests2.SerializationTest.testAllMockedMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":483,"org.easymock.samples.SupportTest.voteForRemovals":133,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":70,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":459,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":0,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":266,"org.easymock.tests.UsageExpectAndThrowTest.object":457,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":355,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":285,"org.easymock.tests2.DelegateToTest.testWrongClass":231,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":53,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":54,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.UsageStrictMockTest.range":67,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":245,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":2,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":458,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":214,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":151,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":357,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":73,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":413,"org.easymock.tests2.CaptureTest.testCaptureNone":305,"org.easymock.tests.UsageUnorderedTest.message":101,"org.easymock.tests.UsageVerifyTest.twoReturns":100,"org.easymock.tests.UsageVarargTest.varargByteAccepted":423,"org.easymock.tests2.ThreadingTest.testThreadSafe":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":158,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":392,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":138,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":365,"org.easymock.tests2.CaptureTest.testCapture_2617107":299,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":88,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":487,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":347,"org.easymock.tests2.UsageConstraintsTest.any":135,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":441,"org.easymock.tests2.StubTest.stub":247,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":488,"org.easymock.tests.UsageExpectAndThrowTest.longType":450,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":369,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":169,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":440,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":326,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":224,"org.easymock.tests.LimitationsTest.mockNativeMethod":178,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":515,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":361,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":8,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":327,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":75,"org.easymock.tests2.NameTest.nameForMocksControl":275,"org.easymock.tests2.MockedExceptionTest.testMockedException":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":153,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":375,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":451,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":408,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":263,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":146,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":216,"org.easymock.tests.MockingTest.testNicePartialClassMocking":406,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":109,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":201,"org.easymock.tests2.CaptureTest.testCaptureLast":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":103,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":239,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":279,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":286,"org.easymock.tests.MockingTest.testTwoMocks":174,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":240,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":496,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":455,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":78,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.samples.ExampleTest.removeNonExistingDocument":193,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":438,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":10,"org.easymock.tests.UsageStrictMockTest.differentMethods":68,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":14,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":167,"org.easymock.tests2.ConstraintsToStringTest.andToString":86,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":198,"org.easymock.tests2.MockBuilderTest.testCreateMockString":221,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":180,"org.easymock.tests.UsageExpectAndThrowTest.floatType":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":154,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":311,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":268,"org.easymock.tests.UsageVerifyTest.twoThrows":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":296,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":319,"org.easymock.samples.ExampleTest.voteAgainstRemoval":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":478,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":411,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":124,"org.easymock.tests.LimitationsTest.privateConstructor":177,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":384,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":260,"org.easymock.tests2.UsageTest.defaultResetToNice":1,"org.easymock.samples.ExampleTest.voteAgainstRemovals":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":479,"org.easymock.tests.UsageVarargTest.differentLength":420,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":7,"org.easymock.tests2.CallbackTest.callback":56,"org.easymock.tests2.UsageConstraintsTest.equals":278,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":120,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":105,"org.easymock.tests.UsageTest.openCallCountByLastCall":374,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":346,"org.easymock.tests.UsageCallCountTest.tooFewCalls":390,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":141,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":359,"org.easymock.tests.UsageThrowableTest.throwCheckedException":381,"org.easymock.tests.MockingTest.testStrictClassMocking":172,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":74,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":491,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":238,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":204,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":235,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":443,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":237,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":270,"org.easymock.tests.ObjectMethodsTest.testHashCode":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":113,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":200,"org.easymock.tests2.NameTest.nameForNiceMock":274,"org.easymock.tests2.DependencyTest.testInterfaceMocking":258,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":112,"org.easymock.samples.ExampleTest.addDocument":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":159,"org.easymock.tests2.DelegateToTest.testStubDelegate":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":323,"org.easymock.tests2.AnswerTest.stubAnswer":269,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":52,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":217,"org.easymock.tests.UsageVarargTest.varargLongAccepted":422,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":514,"org.easymock.tests.UsageExpectAndReturnTest.floatType":498,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":116,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests2.ConstraintsToStringTest.orToString":80,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":31,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":226,"org.easymock.tests.UsageThrowableTest.noUpperLimit":378,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":142,"org.easymock.tests2.SerializationTest.test":4,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":302,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":518,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":497,"org.easymock.tests2.UsageConstraintsTest.testSame":25,"org.easymock.samples.SupportTest.addDocument":195,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":236,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":155,"org.easymock.tests.GenericTest.testPackageScope":161,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":17,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":409,"org.easymock.tests2.NameTest.nameForMock":272,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":508,"org.easymock.tests2.UsageStrictMockTest.differentMethods":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":220,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":121,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":500,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":461,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":362,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":428,"org.easymock.tests2.MockedExceptionTest.testRealException":261,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":481,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":246,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":480,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":445,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":38,"org.easymock.tests2.NameTest.nameForStrictMock":273,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":212,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":149,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":143,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":168,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":284,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":209,"org.easymock.tests2.UsageStrictMockTest.range":59,"org.easymock.tests2.UsageConstraintsTest.lessThan":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":475,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":61,"org.easymock.tests2.CaptureTest.testCaptureRightOne":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":316,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":65,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":147,"org.easymock.tests.UsageTest.wrongArguments":91,"org.easymock.tests2.MockBuilderTest.testWithConstructor":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":314,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":501,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":468,"org.easymock.tests.UsageVarargTest.varargShortAccepted":421,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":170,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":393,"org.easymock.tests2.UsageConstraintsTest.cmpTo":282,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":470,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":253,"org.easymock.tests2.CaptureTest.testCaptureFromStub":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":435,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":210,"org.easymock.tests.UsageTest.unexpectedCallWithArray":71,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":72,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":391,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":510,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":493,"org.easymock.tests2.UsageConstraintsTest.constraints":276,"org.easymock.samples.ExampleTest.addAndChangeDocument":131,"org.easymock.tests2.ConstraintsToStringTest.notToString":81,"org.easymock.tests.UsageStrictMockTest.testVerify":495,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":189,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":492,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":349,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":43,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":502,"org.easymock.tests.LimitationsTest.abstractClass":176,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":96,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":44,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":63}}]
