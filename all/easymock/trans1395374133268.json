[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[67,68,48,69,70,71],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[107],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[108,109,110,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[112],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[113,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[115,116,117,118,119,120,121,122,0,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,71,165,166,167,168,169,170],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[171,171,172,172,3,4,5,8,9,10,11,17,19,20,22,23,29,30,31,43,173,174,175,176,177,178,49,51,179,180,181,182,183,54,55,56,57,58,184,59,60,63,64,65],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:244","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[185,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[187,188],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[189],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[108,109,110,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":52,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":154,"org.easymock.tests2.UsageConstraintsTest.testMatches":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":177,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":145,"org.easymock.tests.ObjectMethodsTest.testHashCode":141,"org.easymock.tests2.CompareToTest.testGreateOrEqual":107,"org.easymock.tests2.StubTest.stubWithReturnValue":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":28,"org.easymock.tests.UsageVarargTest.allKinds":53,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":68,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":168,"org.easymock.tests.MockClassControlTest.testToString":159,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":92,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":88,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":185,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":49,"org.easymock.tests2.UsageConstraintsTest.greaterThan":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":86,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":25,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":64,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":65,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":59,"org.easymock.samples.ConstructorCalledMockTest.testTax":171,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":122,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":124,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":172,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":23,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":5,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":76,"org.easymock.tests2.UsageConstraintsTest.testNull":9,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":37,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":164,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":74,"org.easymock.tests2.CaptureTest.testPrimitive":35,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":63,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":135,"org.easymock.tests2.UsageConstraintsTest.testSame":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":176,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":83,"org.easymock.tests2.CaptureTest.testCaptureFirst":45,"org.easymock.tests2.CaptureTest.testCaptureNone":40,"org.easymock.tests.UsageUnorderedTest.message":66,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":170,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":90,"org.easymock.tests2.CaptureTest.testCapture2_2446744":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":180,"org.easymock.tests.GenericTest.testBridgedEquals":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":99,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":78,"org.easymock.tests2.CaptureTest.testCapture_2617107":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":54,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":165,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":126,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":123,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":184,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":62,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":127,"org.easymock.tests2.UsageConstraintsTest.any":15,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":58,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":151,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":133,"org.easymock.tests2.SerializationTest.testClass":81,"org.easymock.tests.ReplayStateInvalidUsageTest.times":153,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":120,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":119,"org.easymock.tests2.CaptureTest.testAnd":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":0,"org.easymock.tests2.MockedExceptionTest.testMockedException":132,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":3,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":156,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":87,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":143,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":110,"org.easymock.tests2.UsageConstraintsTest.testContains":17,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":121,"org.easymock.tests2.UsageConstraintsTest.testFind":8,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":1,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":73,"org.easymock.tests2.CaptureTest.testCaptureLast":39,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":50,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":2,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":24,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":169,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":47,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":26,"org.easymock.tests2.UsageConstraintsTest.lessThan":31,"org.easymock.tests2.CaptureTest.testCapture1_2446744":36,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":142,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":117,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":79,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":181,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":30,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":147,"org.easymock.samples.ExampleTest.removeNonExistingDocument":115,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":149,"org.easymock.tests2.CaptureTest.testCaptureRightOne":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":94,"org.easymock.tests2.UsageConstraintsTest.testOr":11,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":112,"org.easymock.tests2.MockBuilderTest.testCreateMockString":129,"org.easymock.tests.MockClassControlTest.testHashCode":162,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":178,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":89,"org.easymock.tests2.EasyMockSupportTest.testVerify":125,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":95,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":106,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":46,"org.easymock.tests2.UsageConstraintsTest.cmpTo":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":98,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":148,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":55,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":93,"org.easymock.tests2.UsageConstraintsTest.testNotNull":29,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":131,"org.easymock.tests.DefaultClassInstantiatorTest.object":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":179,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":80,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":111,"org.easymock.tests2.CaptureTest.testCaptureFromStub":43,"org.easymock.tests2.UsageTest.defaultResetToNice":130,"org.easymock.tests2.MockBuilderTest.testCreateMock":128,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":101,"org.easymock.tests.UsageTest.unexpectedCallWithArray":71,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":96,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":67,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":48,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":4,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":113,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":61,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":77,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":161,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":97,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":19,"org.easymock.tests.UsageStrictMockTest.testVerify":139,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":18,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":137,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":104,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":166,"org.easymock.tests.MockClassControlTest.testEquals":163,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":38,"org.easymock.tests2.EasyMockSupportClassTest.testAll":85,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":56,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":57,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":118,"org.easymock.tests2.CaptureTest.testCaptureAll":33}}]
