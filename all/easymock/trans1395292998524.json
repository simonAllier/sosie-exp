[{"position":"org.easymock.ConstructorArgs:50","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,0,0,1,1,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,4,268,269,270,5,271,272,273,274,275,276,277,278,279,280,281,7,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,17,20,30,36,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,39,358,359,360,361],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[75,362,363,199,364,365],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[366,106,367,368,369],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[10,40,370,371,372,373,374],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[75,362,363,199,364,365],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[67,68,73,75,77,78,79,82,116,143,164,165,166,375,376,377,378,197,199,200,203,204,205,246,254,256,275,278,279,280,285,289,290,293,303,317,330,335,336,337,342,343,346,347,348,352,353,354,355],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[379,7,282,283],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[303,380],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[381,382,383,384,385,386],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:262","failures":[52,53,55,56,57,58,59,60,67,72,108,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,367,368,369,152,170,197,202,387,388,389,239,240,241,242,244,343,350],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[390,391,392,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,393,394,395,396,397,398,399,366,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,416,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,367,368,369,151,152,153,154,155,156,157,158,160,161,162,163,165,166,167,169,170,171,173,174,175,417,418,419,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,387,388,389,420,210,211,212,0,0,1,1,213,214,215,216,217,218,219,220,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,254,255,256,257,258,259,260,261,262,263,264,265,266,267,4,268,269,270,5,275,276,277,278,279,280,281,7,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,421,297,298,299,422,300,301,302,303,304,305,306,307,308,309,310,423,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,333,334,336,338,17,20,30,36,339,340,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,39,358,424,425,359,360,361],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[381,382,385],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"failures":[7,10,11,39,40,370,371,372,426],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[368,388],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[301,303,427],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[0,1,428,7,8,9,10,429,11,13,39,40,430],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[310,315,327,431],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[320,321],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[10,40,370,371,372,373,374],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[379,7,282,283],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[432,41,42,43,433,434,435,390,436,437,391,392,438,439,44,45,46,47,48,440,49,441,50,51,52,53,54,55,56,57,58,59,60,442,443,444,445,446,447,448,449,393,394,395,396,397,398,399,366,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,450,86,87,416,451,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,452,453,454,117,455,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,456,141,142,143,144,145,146,147,148,149,150,367,368,369,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,457,171,172,458,459,460,173,174,461,175,462,463,464,378,417,418,419,465,176,466,467,468,469,470,471,472,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,387,388,389,420,210,211,212,0,1,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,473,252,428,474,253,254,255,256,475,476,477,257,258,259,260,478,479,480,481,482,483,484,261,262,263,264,265,266,267,4,268,485,269,270,5,6,271,272,273,274,275,276,277,278,279,280,281,7,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,421,297,298,299,422,300,301,302,303,304,486,305,306,307,308,309,310,423,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,487,488,489,490,491,328,492,493,494,495,496,497,329,8,330,498,9,499,331,332,333,10,334,429,11,335,336,13,337,500,501,502,503,504,338,505,506,507,508,509,510,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,511,512,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,513,357,39,40,430,358,424,425,359,360,361],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[306,423,320,325],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[514],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[515,516],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[75,362,363,199,364,365],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[20],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[310],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":304,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":197,"org.easymock.tests2.UsageTest.argumentsOrdered":353,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":294,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":402,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":348,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":214,"org.easymock.tests2.DelegateToTest.testReturnException":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":56,"org.easymock.tests.MockingTest.testPartialClassMocking":173,"org.easymock.tests.MockClassControlTest.testToString":90,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":477,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":390,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":118,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":20,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":340,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":370,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":50,"org.easymock.tests2.UsageTest.wrongArguments":346,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":510,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":208,"org.easymock.samples.ExampleTest.answerVsDelegate":216,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":447,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":463,"org.easymock.tests2.UsageConstraintsTest.testNull":306,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":248,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":95,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":293,"org.easymock.tests2.CaptureTest.testPrimitive":228,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":137,"org.easymock.tests.UsageTest.moreThanOneArgument":198,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":155,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":437,"org.easymock.tests.UsageTest.argumentsOrdered":204,"org.easymock.tests.UsageVarargTest.varargIntAccepted":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":44,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":329,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":374,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":496,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":480,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":48,"org.easymock.tests.ReplayStateInvalidUsageTest.times":104,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":338,"org.easymock.tests2.DependencyTest.testClassMocking":511,"org.easymock.tests2.AnswerTest.answer":358,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":409,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":274,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":444,"org.easymock.tests2.CaptureTest.testAnd":225,"org.easymock.tests2.UsageTest.strictResetToDefault":344,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":9,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":154,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":288,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":439,"org.easymock.tests2.DelegateToTest.testDelegate":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":133,"org.easymock.tests.LimitationsTest.mockFinalMethod":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":65,"org.easymock.tests2.DependencyTest.testClassMockingSupport":512,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":440,"org.easymock.tests2.CaptureTest.testCapture1_2446744":229,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":473,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":272,"org.easymock.tests.UsageThrowableTest.throwError":108,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":98,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":446,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":497,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":157,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":38,"org.easymock.samples.PartialClassMockTest.testGetArea":213,"org.easymock.tests.MockingTest.testInterfaceMocking":461,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":99,"org.easymock.tests2.CompareToTest.testLessOrEqual":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":45,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":418,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":434,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":25,"org.easymock.tests2.UsageTest.niceToStrict":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":331,"org.easymock.tests2.MockBuilderTest.testCreateMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":33,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":507,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":127,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":364,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":289,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":443,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":389,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":158,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":206,"org.easymock.tests.UsageOverloadedMethodTest.overloading":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":29,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":170,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":188,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":70,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":515,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":314,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":234,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":456,"org.easymock.tests2.EasyMockSupportClassTest.testAll":17,"org.easymock.tests.MockClassControlTest.testEquals":94,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":87,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":63,"org.easymock.tests2.CaptureTest.testCaptureAll":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":273,"org.easymock.tests.MockNameTest.defaultName":452,"org.easymock.tests2.UsageConstraintsTest.testMatches":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":96,"org.easymock.samples.ExampleTest.voteForRemovals":220,"org.easymock.tests.UsageVarargTest.allKinds":148,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":64,"org.easymock.samples.BasicClassMockTest.testPrintContent":212,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":114,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":275,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":493,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":60,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":471,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":426,"org.easymock.tests2.UsageConstraintsTest.greaterThan":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":18,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":83,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":256,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":472,"org.easymock.samples.ExampleTest.voteForRemoval":217,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":475,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":262,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":481,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":251,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":69,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":343,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":286,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":55,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":421,"org.easymock.tests2.CaptureTest.testCaptureFirst":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":287,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":355,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":172,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":184,"org.easymock.tests2.CaptureTest.testCapture2_2446744":237,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":264,"org.easymock.tests2.UsageTest.moreThanOneArgument":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":410,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":336,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":147,"org.easymock.tests.GenericTest.testBridgedEquals":451,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":165,"org.easymock.tests.UsageExpectAndReturnTest.longType":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":61,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":136,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":420,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":368,"org.easymock.tests.UsageCallCountTest.tooManyCalls":166,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":509,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":113,"org.easymock.tests.MockingTest.testNiceClassMocking":464,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":267,"org.easymock.tests.MockingTest.testClassMocking":459,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":159,"org.easymock.tests2.UsageConstraintsTest.testContains":313,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":241,"org.easymock.tests2.UsageConstraintsTest.testFind":305,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":72,"org.easymock.tests.MockTypeTest.fromEasyMockClass":445,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":73,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":357,"org.easymock.tests.UsageExpectAndReturnTest.object":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":508,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":292,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":371,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":43,"org.easymock.tests.UsageTest.exactCallCountByLastCall":205,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":435,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":391,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":40,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":193,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":169,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":488,"org.easymock.tests.MockClassControlTest.testHashCode":93,"org.easymock.tests2.EasyMockSupportTest.testVerify":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":27,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":392,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":388,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":271,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":375,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":341,"org.easymock.tests.UsageVarargTest.varargCharAccepted":141,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":465,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastCall":349,"org.easymock.tests.DefaultClassInstantiatorTest.object":176,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":295,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":387,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":41,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":376,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":28,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":503,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":487,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":92,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":254,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":124,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":194,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":36,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":91,"org.easymock.tests2.UsageTest.resumeIfFailure":354,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":442,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":58,"org.easymock.tests2.StubTest.stubWithReturnValue":244,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":186,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":324,"org.easymock.tests2.SerializationTest.testAllMockedMethod":283,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":408,"org.easymock.samples.SupportTest.voteForRemovals":224,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":365,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":450,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":490,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":130,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":379,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":414,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":424,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":436,"org.easymock.tests.UsageExpectAndThrowTest.object":128,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":321,"org.easymock.tests2.DelegateToTest.testWrongClass":299,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":149,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":150,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":78,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":483,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":291,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":129,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":333,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":14,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":203,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":207,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":362,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":419,"org.easymock.tests2.CaptureTest.testCaptureNone":233,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":382,"org.easymock.tests.UsageUnorderedTest.message":116,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":377,"org.easymock.tests.UsageVerifyTest.twoReturns":68,"org.easymock.tests.UsageVarargTest.varargByteAccepted":146,"org.easymock.tests2.ThreadingTest.testThreadSafe":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":31,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":163,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":433,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":211,"org.easymock.tests2.CaptureTest.testCapture_2617107":227,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":53,"org.easymock.tests2.UsageConstraintsTest.any":311,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":103,"org.easymock.tests2.StubTest.stub":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndThrowTest.longType":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":57,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":469,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":102,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":278,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":328,"org.easymock.tests.LimitationsTest.mockNativeMethod":117,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":416,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":196,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":502,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":281,"org.easymock.tests2.NameTest.nameForMocksControl":260,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":383,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":504,"org.easymock.tests2.MockedExceptionTest.testMockedException":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":19,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":513,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":122,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":245,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":334,"org.easymock.tests.MockingTest.testNicePartialClassMocking":174,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":250,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":500,"org.easymock.tests2.CaptureTest.testCaptureLast":232,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":49,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":5,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":309,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":322,"org.easymock.tests.MockingTest.testTwoMocks":460,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":126,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":352,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":326,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":386,"org.easymock.samples.ExampleTest.removeNonExistingDocument":221,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":506,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":100,"org.easymock.tests.UsageStrictMockTest.differentMethods":79,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":489,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":467,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":385,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":263,"org.easymock.tests2.ConstraintsToStringTest.andToString":380,"org.easymock.tests2.MockBuilderTest.testCreateMockString":337,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":88,"org.easymock.tests.UsageExpectAndThrowTest.floatType":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":21,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":16,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":359,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":430,"org.easymock.tests.UsageVerifyTest.twoThrows":67,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":30,"org.easymock.samples.ExampleTest.voteAgainstRemoval":218,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":403,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":255,"org.easymock.tests.LimitationsTest.privateConstructor":454,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":3,"org.easymock.tests2.UsageConstraintsTest.testNotNull":325,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":115,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":239,"org.easymock.tests2.UsageTest.defaultResetToNice":351,"org.easymock.samples.ExampleTest.voteAgainstRemovals":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":501,"org.easymock.tests.UsageVarargTest.differentLength":143,"org.easymock.tests2.CallbackTest.callback":342,"org.easymock.tests2.UsageConstraintsTest.equals":486,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":428,"org.easymock.tests.UsageTest.openCallCountByLastCall":201,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":301,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":52,"org.easymock.tests.UsageCallCountTest.tooFewCalls":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":268,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":209,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":384,"org.easymock.tests.UsageThrowableTest.throwCheckedException":112,"org.easymock.tests.MockingTest.testStrictClassMocking":458,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":363,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":152,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":505,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":4,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":105,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":269,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":361,"org.easymock.tests2.CompareToTest.testGreateOrEqual":431,"org.easymock.tests.ObjectMethodsTest.testHashCode":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":373,"org.easymock.tests2.NameTest.nameForNiceMock":259,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":265,"org.easymock.tests2.DependencyTest.testInterfaceMocking":339,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":372,"org.easymock.samples.ExampleTest.addDocument":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":37,"org.easymock.tests2.DelegateToTest.testStubDelegate":298,"org.easymock.tests2.AnswerTest.stubAnswer":360,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":76,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":429,"org.easymock.tests.UsageVarargTest.varargLongAccepted":145,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndReturnTest.floatType":179,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":39,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":495,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":457,"org.easymock.tests.UsageThrowableTest.noUpperLimit":109,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":319,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":302,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":478,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":230,"org.easymock.tests2.SerializationTest.test":282,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":516,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":178,"org.easymock.tests2.UsageConstraintsTest.testSame":307,"org.easymock.samples.SupportTest.addDocument":223,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":485,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":22,"org.easymock.tests.GenericTest.testPackageScope":86,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":494,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":462,"org.easymock.tests2.NameTest.nameForMock":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":189,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":13,"org.easymock.tests2.UsageStrictMockTest.differentMethods":280,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":474,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":132,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":432,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":85,"org.easymock.tests2.MockedExceptionTest.testRealException":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":405,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":277,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":51,"org.easymock.tests2.NameTest.nameForStrictMock":258,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":499,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":356,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":249,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":482,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":468,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":320,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":330,"org.easymock.tests2.UsageStrictMockTest.range":279,"org.easymock.tests2.UsageConstraintsTest.lessThan":327,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":491,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":26,"org.easymock.tests2.CaptureTest.testCaptureRightOne":235,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":381,"org.easymock.tests2.UsageConstraintsTest.testOr":308,"org.easymock.tests.UsageRangeTest.combination":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":246,"org.easymock.tests.UsageTest.wrongArguments":200,"org.easymock.tests2.MockBuilderTest.testWithConstructor":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":23,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":190,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":470,"org.easymock.tests.UsageVarargTest.varargShortAccepted":144,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":164,"org.easymock.tests2.UsageConstraintsTest.cmpTo":312,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":396,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":350,"org.easymock.tests2.CaptureTest.testCaptureFromStub":236,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":97,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":498,"org.easymock.tests.UsageTest.unexpectedCallWithArray":199,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":75,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":162,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":12,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":191,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":77,"org.easymock.tests2.UsageConstraintsTest.constraints":303,"org.easymock.samples.ExampleTest.addAndChangeDocument":222,"org.easymock.tests.UsageStrictMockTest.testVerify":81,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":210,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":62,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":46,"org.easymock.tests.LimitationsTest.abstractClass":453,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":183,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":47,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":290}}]
