[{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[32,33,34],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[296,297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[298,299],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.RecordState:117","failures":[3,35,69,70,126,127,129,219],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[300],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[298,299,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[24,302,32,303,304,305,306,307,308,309],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[310],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[161,172,173],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,311,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[63,133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[27,29,30,312,313,314,315,141,142,148,149,160,161,162,178,179,181,182,243,287,289,292,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[19,104,121,270],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[24,302,32,303,304,305,306,307,308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:119","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[38,41,58,66,68,131,134,136,316,317,318,319,320,321,322],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[323,81,324],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[0,1,2,4,5,6,7,8,11,13,14,15,25,26,27,28,29,30,31,34,35,44,45,48,49,50,51,56,57,69,70,87,93,94,95,96,97,325,109,121,122,312,313,314,315,127,131,132,137,142,144,148,149,169,176,177,178,179,180,181,182,183,326,327,190,191,192,193,195,196,198,243,328,329,254,255,260,261,262,263,264,265,266,267,268,269,270,271,282,330,289,292,293],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[44,45,47,48,49,50,51,56,115,121],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:45","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[29,30,65,181,182],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,7,12,16,17,18,19,20,21,22,23,24,27,29,30,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,52,53,55,56,57,58,59,60,61,62,64,66,67,68,73,75,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,131,132,134,135,137,139,140,141,143,145,146,147,150,151,152,153,154,155,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,179,181,182,188,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,331,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,252,253,256,257,258,259,271,272,278,279,280,283,332,284,285,286,287,290,291,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[333,334,335,336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[63,337,71,130,133],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[9,10,24,338,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":102,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":286,"org.easymock.tests2.UsageTest.argumentsOrdered":149,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":94,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":324,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":144,"org.easymock.tests2.StubTest.stubWithReturnValue":98,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":308,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":208,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":11,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":122,"org.easymock.tests2.SerializationTest.testAllMockedMethod":34,"org.easymock.tests2.DelegateToTest.testReturnException":80,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":185,"org.easymock.tests.MockingTest.testPartialClassMocking":278,"org.easymock.samples.SupportTest.voteForRemovals":1,"org.easymock.tests.MockClassControlTest.testToString":320,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":235,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":223,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":153,"org.easymock.tests.UsageExpectAndThrowTest.object":233,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":23,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":119,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":303,"org.easymock.tests2.DelegateToTest.testWrongClass":82,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":271,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":272,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":252,"org.easymock.tests2.UsageTest.wrongArguments":142,"org.easymock.samples.ConstructorCalledMockTest.testTax":9,"org.easymock.tests.UsageStrictMockTest.range":181,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":158,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":91,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":319,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":36,"org.easymock.tests2.UsageConstraintsTest.testNull":104,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":234,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":60,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":134,"org.easymock.tests2.CaptureTest.testPrimitive":46,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":256,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":292,"org.easymock.tests.UsageTest.moreThanOneArgument":287,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":242,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":59,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":275,"org.easymock.tests2.CaptureTest.testCaptureNone":51,"org.easymock.tests.UsageUnorderedTest.message":243,"org.easymock.tests.UsageVerifyTest.twoReturns":162,"org.easymock.tests.UsageVarargTest.varargByteAccepted":268,"org.easymock.tests2.ThreadingTest.testThreadSafe":16,"org.easymock.tests.UsageTest.argumentsOrdered":293,"org.easymock.tests.UsageVarargTest.varargIntAccepted":262,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":193,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":13,"org.easymock.tests2.CaptureTest.testCapture_2617107":45,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":163,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":255,"org.easymock.tests2.UsageConstraintsTest.any":109,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":133,"org.easymock.tests2.StubTest.stub":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":167,"org.easymock.tests.UsageExpectAndThrowTest.longType":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":186,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":28,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":75,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests.LimitationsTest.mockNativeMethod":244,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":21,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":218,"org.easymock.tests2.AnswerTest.answer":126,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":79,"org.easymock.tests2.CaptureTest.testAnd":43,"org.easymock.tests2.UsageTest.strictResetToDefault":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":65,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":31,"org.easymock.tests2.NameTest.nameForMocksControl":315,"org.easymock.tests2.MockedExceptionTest.testMockedException":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":88,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":291,"org.easymock.tests2.DelegateToTest.testDelegate":83,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":311,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":280,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":227,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":57,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":135,"org.easymock.tests.MockingTest.testNicePartialClassMocking":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":238,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":62,"org.easymock.tests2.CaptureTest.testCaptureLast":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":188,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":42,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":251,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":120,"org.easymock.tests2.CaptureTest.testCapture1_2446744":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":236,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":77,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":148,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":124,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":297,"org.easymock.tests.UsageThrowableTest.throwError":168,"org.easymock.tests.UsageStrictMockTest.differentMethods":182,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":18,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":318,"org.easymock.tests2.MockBuilderTest.testCreateMockString":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":277,"org.easymock.tests.UsageExpectAndThrowTest.floatType":225,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":115,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":127,"org.easymock.tests.UsageVerifyTest.twoThrows":161,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":154,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":164,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":67,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":224,"org.easymock.tests2.UsageTest.niceToStrict":143,"org.easymock.tests2.ThreadingTest.testChangeDefault":296,"org.easymock.tests2.UsageConstraintsTest.testNotNull":123,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":175,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":339,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":132,"org.easymock.tests2.MockBuilderTest.testCreateMock":136,"org.easymock.tests2.UsageTest.defaultResetToNice":147,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":214,"org.easymock.tests.UsageVarargTest.differentLength":265,"org.easymock.tests2.CallbackTest.callback":35,"org.easymock.tests.UsageTest.openCallCountByLastCall":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":232,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":89,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":99,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":335,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":327,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":254,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":156,"org.easymock.tests.UsageCallCountTest.tooFewCalls":191,"org.easymock.tests.UsageOverloadedMethodTest.overloading":258,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":221,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":113,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":39,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":112,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":159,"org.easymock.tests.UsageThrowableTest.throwCheckedException":172,"org.easymock.tests2.EasyMockSupportClassTest.testAll":152,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":198,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":249,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":78,"org.easymock.tests2.CaptureTest.testCaptureAll":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":246,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":41,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":38,"org.easymock.tests2.UsageConstraintsTest.testMatches":114,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":40,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":276,"org.easymock.tests2.CompareToTest.testGreateOrEqual":295,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests2.NameTest.nameForNiceMock":314,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":20,"org.easymock.tests.UsageVarargTest.allKinds":270,"org.easymock.tests2.DependencyTest.testInterfaceMocking":22,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":250,"org.easymock.samples.BasicClassMockTest.testPrintContent":14,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.DelegateToTest.testStubDelegate":81,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":174,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":25,"org.easymock.tests2.AnswerTest.stubAnswer":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":189,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":307,"org.easymock.tests2.UsageConstraintsTest.greaterThan":116,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":332,"org.easymock.tests.UsageVarargTest.varargLongAccepted":267,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":68,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":183,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":217,"org.easymock.tests.UsageExpectAndReturnTest.floatType":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":63,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":24,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":10,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":117,"org.easymock.tests.UsageThrowableTest.noUpperLimit":169,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":282,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":100,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":316,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":48,"org.easymock.tests2.SerializationTest.test":33,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":309,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":86,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":200,"org.easymock.tests2.UsageConstraintsTest.testSame":105,"org.easymock.samples.SupportTest.addDocument":0,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":184,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":323,"org.easymock.tests2.CaptureTest.testCaptureFirst":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":87,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":151,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":206,"org.easymock.tests.GenericTest.testPackageScope":197,"org.easymock.tests2.CaptureTest.testCapture2_2446744":55,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":19,"org.easymock.tests2.UsageTest.moreThanOneArgument":141,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":137,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":269,"org.easymock.tests.GenericTest.testBridgedEquals":300,"org.easymock.tests2.NameTest.nameForMock":312,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":195,"org.easymock.tests.UsageExpectAndReturnTest.longType":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":247,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":84,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":211,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":121,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":239,"org.easymock.tests2.UsageStrictMockTest.differentMethods":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":273,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":203,"org.easymock.tests.UsageCallCountTest.tooManyCalls":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":237,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":285,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":190,"org.easymock.tests2.MockedExceptionTest.testRealException":74,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":228,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":173,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":37,"org.easymock.tests2.NameTest.nameForStrictMock":313,"org.easymock.tests2.UsageConstraintsTest.testContains":111,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":73,"org.easymock.tests2.UsageConstraintsTest.testFind":103,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":259,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":61,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":70,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":176,"org.easymock.tests.UsageExpectAndReturnTest.object":209,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":118,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":131,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests2.UsageConstraintsTest.lessThan":125,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":304,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":264,"org.easymock.tests.UsageTest.exactCallCountByLastCall":294,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":306,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":85,"org.easymock.tests2.CaptureTest.testCaptureRightOne":53,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":328,"org.easymock.tests2.UsageConstraintsTest.testOr":106,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":302,"org.easymock.tests.UsageRangeTest.combination":283,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":260,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":58,"org.easymock.tests.UsageTest.wrongArguments":289,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":220,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":204,"org.easymock.tests2.EasyMockSupportTest.testVerify":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":212,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":329,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":334,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":299,"org.easymock.tests.UsageVarargTest.varargShortAccepted":266,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":219,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":76,"org.easymock.tests2.UsageConstraintsTest.cmpTo":110,"org.easymock.tests.UsageVarargTest.varargCharAccepted":263,"org.easymock.tests2.CompareToTest.testLessThan":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":336,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":26,"org.easymock.tests2.UsageTest.openCallCountByLastCall":145,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":95,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":333,"org.easymock.tests2.CaptureTest.testCaptureFromStub":54,"org.easymock.tests.UsageTest.unexpectedCallWithArray":288,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":230,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":171,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":192,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":213,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":322,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":66,"org.easymock.tests2.UsageConstraintsTest.constraints":101,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":180,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":229,"org.easymock.samples.ExampleTest.addAndChangeDocument":8,"org.easymock.tests.CapturesMatcherTest.test":281,"org.easymock.tests.UsageStrictMockTest.testVerify":326,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":216,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":15,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":155,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":248,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":49,"org.easymock.tests2.UsageTest.resumeIfFailure":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":165,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":205,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":166,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":90}}]
