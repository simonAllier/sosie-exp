[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[1,2,3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[6,7,8,9],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[45,46,47],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[48],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[50,51,52,53,54,55,56,16,57,17,18,58,59,60,61,62,63,64,65,66,67,68,69,70,27,28,71,29,30,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[89],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[90,91,92,93,94,95,96,97,98,99,100,101,102,103,37,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[105],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[107,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"m"}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[110],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[111,112,113,114,115,116,66,117,118,119,93,120,121,122,123,124,94,125,126,127,128,129,95,130,131,132,96,133,97,134,135,136,137,138,139,140,103,141,142,143,144,145,146,147,148,149,150,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[50,151,152,153,154,155,55,16,17,58,20,21,156,157,22,23,158,159,160,161,162,163,164,165,166,167,105,65,168,169,122,125,126,128,130,170,69,28,29,72,171,172,173,174,175,32,34,35,36,74,75,76,77,150,40,41,42],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[176,177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"result","maximum":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1582","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[179],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[90,91,92,93,94,95,96,97,98,99,100,101,102,103,37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[180,181,182,183],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[184],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[185,6,186,187,188,189,190,62,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageTest.argumentsOrdered":23,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":147,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":157,"org.easymock.tests2.StubTest.stubWithReturnValue":66,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":183,"org.easymock.tests2.SerializationTest.testAllMockedMethod":8,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":145,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":178,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":197,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":9,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":119,"org.easymock.tests.UsageExpectAndThrowTest.object":127,"org.easymock.tests2.UsageTest.wrongArguments":21,"org.easymock.tests.UsageStrictMockTest.range":29,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":19,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":108,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":213,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":128,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":107,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":155,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":2,"org.easymock.tests.UsageTest.moreThanOneArgument":32,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":188,"org.easymock.tests.UsageUnorderedTest.message":37,"org.easymock.tests.UsageVerifyTest.twoReturns":42,"org.easymock.tests.UsageVarargTest.varargByteAccepted":86,"org.easymock.tests.UsageTest.argumentsOrdered":36,"org.easymock.tests.UsageVarargTest.varargIntAccepted":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":204,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":39,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":143,"org.easymock.tests2.StubTest.stub":65,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":5,"org.easymock.tests.UsageExpectAndThrowTest.longType":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":146,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":57,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":15,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":24,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":102,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":49,"org.easymock.tests2.UsageTest.strictResetToDefault":59,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":58,"org.easymock.tests2.MockedExceptionTest.testMockedException":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":192,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":76,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":131,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":148,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":25,"org.easymock.tests2.CaptureTest.testCapture1_2446744":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":125,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":22,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":105,"org.easymock.tests.UsageThrowableTest.throwError":134,"org.easymock.tests.UsageStrictMockTest.differentMethods":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":194,"org.easymock.tests.UsageExpectAndThrowTest.floatType":120,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":190,"org.easymock.tests.UsageVerifyTest.twoThrows":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":203,"org.easymock.tests2.CompareToTest.testLessOrEqual":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":93,"org.easymock.tests2.UsageTest.niceToStrict":156,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":140,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":206,"org.easymock.tests.UsageVarargTest.differentLength":83,"org.easymock.tests2.CallbackTest.callback":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":126,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":153,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":142,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":202,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":118,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":174,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests.UsageThrowableTest.throwCheckedException":137,"org.easymock.tests2.EasyMockSupportClassTest.testAll":62,"org.easymock.tests.MockingTest.testStrictClassMocking":67,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":96,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":117,"org.easymock.tests.MockNameTest.defaultName":31,"org.easymock.tests2.UsageConstraintsTest.testMatches":165,"org.easymock.tests2.CompareToTest.testGreateOrEqual":176,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":110,"org.easymock.tests.UsageVarargTest.allKinds":88,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":210,"org.easymock.tests2.DelegateToTest.testStubDelegate":89,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":139,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":55,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":149,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":28,"org.easymock.tests2.UsageConstraintsTest.greaterThan":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":191,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":75,"org.easymock.tests.UsageVarargTest.varargLongAccepted":85,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":54,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":72,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":167,"org.easymock.tests.UsageThrowableTest.noUpperLimit":170,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":111,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":159,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":63,"org.easymock.tests2.SerializationTest.test":7,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":13,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":98,"org.easymock.tests2.UsageConstraintsTest.testSame":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":144,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":195,"org.easymock.tests2.CaptureTest.testCapture2_2446744":91,"org.easymock.tests2.UsageTest.moreThanOneArgument":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":92,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":151,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":87,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":68,"org.easymock.tests.GenericTest.testBridgedEquals":109,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":215,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":212,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":133,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":132,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":4,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":171,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":77,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":207,"org.easymock.tests2.MockedExceptionTest.testRealException":116,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":172,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":16,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":138,"org.easymock.tests2.UsageConstraintsTest.testContains":164,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":115,"org.easymock.tests2.UsageConstraintsTest.testFind":161,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":150,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":60,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":52,"org.easymock.tests.MockTypeTest.fromEasyMockClass":43,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":69,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":61,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":82,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":216,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":179,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":199,"org.easymock.tests2.UsageConstraintsTest.testOr":163,"org.easymock.tests.UsageRangeTest.combination":74,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":78,"org.easymock.tests.UsageTest.wrongArguments":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":200,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":45,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":104,"org.easymock.tests.UsageVarargTest.varargShortAccepted":84,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":14,"org.easymock.tests.UsageVarargTest.varargCharAccepted":81,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":184,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":56,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":186,"org.easymock.tests.UsageTest.unexpectedCallWithArray":33,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":201,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":94,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":136,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":175,"org.easymock.tests2.CaptureTest.testCapture":11,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":71,"org.easymock.tests2.UsageConstraintsTest.constraints":160,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":124,"org.easymock.tests.CapturesMatcherTest.test":12,"org.easymock.tests.UsageStrictMockTest.testVerify":73,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":101,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":209,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":70,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":46,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":64,"org.easymock.tests2.UsageTest.resumeIfFailure":158,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":169,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":79,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":154}}]
