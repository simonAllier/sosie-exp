[{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[8,9,10,10,11,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"targetField"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[14,30,31,32,33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[34],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,14,15,16,17,75,76,77,78,79,30,80,31,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,18,148,149,150,19,20,21,22,23,24,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,25,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,7,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[35,36,37,38,279,39,40,41,42,43,44,280,45,46,47,48,49,50,51,52,53,54,55,56,281,57,58,59,60,282,283,284,285,286,287,288,289,61,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,62,316,317,63,64,65,66,67,68,69,70,71,72,73,74,318,319,320,321,322,0,323,324,325,326,327,328,14,15,16,17,329,330,331,332,333,334,335,336,337,338,339,340,341,75,342,76,77,78,79,30,343,344,345,80,31,346,347,348,349,350,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,351,96,97,98,352,99,100,101,102,103,353,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,354,355,356,357,358,1,359,360,361,362,363,364,365,119,120,121,122,366,367,368,123,124,369,125,126,127,128,129,370,130,131,132,133,134,135,136,32,371,137,9,372,138,373,139,374,375,33,376,140,141,142,143,377,378,379,380,381,382,383,144,384,385,386,387,388,389,390,391,145,392,393,394,395,34,146,396,397,398,399,400,401,402,403,147,18,404,148,149,405,406,407,408,409,150,410,19,20,21,22,23,24,151,152,153,154,155,156,157,158,159,160,161,162,163,411,412,413,414,415,416,417,418,419,164,165,420,166,421,422,423,424,425,426,167,168,25,169,170,171,172,173,174,427,428,429,430,431,432,433,26,434,435,436,437,438,439,440,441,442,443,12,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,471,472,473,474,475,476,477,478,479,480,2,481,204,205,206,482,207,208,483,209,210,211,212,213,7,214,215,216,217,218,484,485,486,487,488,489,490,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,491,241,492,27,28,29,493,494,13,495,496,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,5,270,271,497,6,3,272,273,274,275,276,277,498,278,499,500,501,502,4,10,11,503],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[48,213],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"expected"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,14,15,16,17,75,76,77,78,79,30,80,31,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,18,148,149,150,19,20,21,22,23,24,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,25,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,7,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[74,83,90,149,408,23,162,414,415,416,169,430,180,185,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,280,45,46,47,48,49,50,51,52,53,54,55,56,281,57,58,59,60,61,290,294,62,316,317,63,64,66,67,68,69,70,71,72,73,74,0,329,330,331,332,333,334,335,336,337,338,339,340,75,76,77,78,79,30,80,346,347,83,84,85,86,87,88,89,90,91,92,93,94,95,351,96,97,98,352,99,100,101,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,1,129,130,131,132,135,137,138,373,139,374,147,18,404,148,149,405,406,407,408,409,150,410,19,20,21,22,23,24,152,153,154,155,156,157,158,159,160,161,162,163,412,413,414,415,416,425,167,168,25,169,170,171,442,447,180,181,183,184,185,186,187,188,193,194,195,196,197,474,204,205,206,207,208,483,209,210,211,212,213,7,214,215,216,217,218,484,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,491,241,27,28,29,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,3,272,273,274,275,276,277,278,499,500,501,502,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[504,505,506,507,508,509,510],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[76,77],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[511,100,353,512,504,505,506,508,509,510],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[35,36,37,38,279,39,40,41,42,43,44,280,45,46,47,48,49,50,51,52,53,54,55,56,281,57,58,59,60,282,283,284,285,286,287,288,289,61,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,62,316,317,63,64,65,66,67,68,69,70,71,72,73,74,318,319,320,321,322,0,323,324,325,326,327,328,14,15,16,17,329,330,331,332,333,334,335,336,337,338,339,340,341,75,342,76,77,78,79,30,343,344,345,80,31,346,347,348,349,350,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,351,96,97,98,352,99,100,101,102,103,353,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,354,355,356,357,358,1,359,360,361,362,363,364,365,119,120,121,122,366,367,368,123,124,369,125,126,127,128,129,370,130,131,132,133,134,135,136,32,371,137,9,372,138,373,139,374,375,33,376,140,141,142,143,377,378,379,380,381,382,383,144,384,385,386,387,388,389,390,391,145,392,393,394,395,34,146,396,397,398,399,400,401,402,403,147,18,404,148,149,405,406,407,408,409,150,410,19,20,21,22,23,24,151,152,153,154,155,156,157,158,159,160,161,162,163,411,412,413,414,415,416,417,418,419,164,165,420,166,421,422,423,424,425,426,167,168,25,169,170,171,172,173,174,427,428,429,430,431,432,433,26,434,435,436,437,438,439,440,441,442,443,12,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,471,472,473,474,475,476,477,478,479,480,2,481,204,205,206,482,207,208,483,209,210,211,212,213,7,214,215,216,217,218,484,485,486,487,488,489,490,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,491,241,492,27,28,29,493,494,13,495,496,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,5,270,271,497,6,3,272,273,274,275,276,277,498,278,499,500,501,502,4,10,11,503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[100,101,102,513],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":38,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":180,"org.easymock.tests2.UsageTest.argumentsOrdered":93,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":339,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":436,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":88,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":4,"org.easymock.tests2.DelegateToTest.testReturnException":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":20,"org.easymock.tests.MockingTest.testPartialClassMocking":164,"org.easymock.tests.MockClassControlTest.testToString":384,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":376,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":242,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":297,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":290,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":470,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":504,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":167,"org.easymock.tests2.UsageTest.wrongArguments":86,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":191,"org.easymock.samples.ExampleTest.answerVsDelegate":273,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":480,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":422,"org.easymock.tests2.UsageConstraintsTest.testNull":40,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":134,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":389,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":338,"org.easymock.tests2.CaptureTest.testPrimitive":107,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":170,"org.easymock.tests.UsageTest.moreThanOneArgument":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":261,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":195,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":493,"org.easymock.tests.UsageTest.argumentsOrdered":187,"org.easymock.tests.UsageVarargTest.varargIntAccepted":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":441,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":509,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":30,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":327,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":429,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":217,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":454,"org.easymock.tests.ReplayStateInvalidUsageTest.times":399,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":1,"org.easymock.tests2.DependencyTest.testClassMocking":288,"org.easymock.tests2.AnswerTest.answer":62,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":443,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":128,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":477,"org.easymock.tests2.CaptureTest.testAnd":104,"org.easymock.tests2.UsageTest.strictResetToDefault":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":194,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":333,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":496,"org.easymock.tests2.DelegateToTest.testDelegate":99,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":453,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":257,"org.easymock.tests.LimitationsTest.mockFinalMethod":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":179,"org.easymock.tests2.DependencyTest.testClassMockingSupport":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":491,"org.easymock.tests2.CaptureTest.testCapture1_2446744":108,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":255,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":126,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":395,"org.easymock.tests.UsageThrowableTest.throwError":262,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":479,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":315,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":457,"org.easymock.samples.PartialClassMockTest.testGetArea":503,"org.easymock.tests.MockingTest.testInterfaceMocking":420,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":214,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":412,"org.easymock.tests2.UsageTest.niceToStrict":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":302,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":382,"org.easymock.tests2.ThreadingTest.testChangeDefault":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":80,"org.easymock.tests2.MockBuilderTest.testCreateMock":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":310,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":251,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":334,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":476,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":416,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":198,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":189,"org.easymock.tests.UsageOverloadedMethodTest.overloading":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":312,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":408,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":49,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":404,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":230,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":48,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":113,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":482,"org.easymock.tests.MockClassControlTest.testEquals":388,"org.easymock.tests2.EasyMockSupportClassTest.testAll":294,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":271,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":177,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":127,"org.easymock.tests2.CaptureTest.testCaptureAll":105,"org.easymock.tests.MockNameTest.defaultName":403,"org.easymock.tests2.UsageConstraintsTest.testMatches":50,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":196,"org.easymock.samples.ExampleTest.voteForRemovals":277,"org.easymock.tests.UsageVarargTest.allKinds":213,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":161,"org.easymock.samples.BasicClassMockTest.testPrintContent":502,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":178,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":268,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":24,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":324,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":352,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":510,"org.easymock.tests2.UsageConstraintsTest.greaterThan":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":172,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":374,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":458,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":490,"org.easymock.samples.ExampleTest.voteForRemoval":274,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":76,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":375,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":2,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":32,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":450,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":151,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":331,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":19,"org.easymock.tests2.CaptureTest.testCaptureFirst":117,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":332,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":95,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":410,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":226,"org.easymock.tests2.CaptureTest.testCapture2_2446744":116,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":78,"org.easymock.tests2.UsageTest.moreThanOneArgument":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":12,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":81,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":212,"org.easymock.tests.GenericTest.testBridgedEquals":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":472,"org.easymock.tests.UsageExpectAndReturnTest.longType":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":175,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":329,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":260,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":474,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":258,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":193,"org.easymock.tests.UsageCallCountTest.tooManyCalls":473,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":247,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":267,"org.easymock.tests.MockingTest.testNiceClassMocking":423,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":121,"org.easymock.tests.MockingTest.testClassMocking":418,"org.easymock.tests2.UsageConstraintsTest.testContains":47,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":199,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":16,"org.easymock.tests2.UsageConstraintsTest.testFind":39,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":149,"org.easymock.tests.MockTypeTest.fromEasyMockClass":478,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":152,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":130,"org.easymock.tests.UsageExpectAndReturnTest.object":229,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":337,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":505,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":208,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":380,"org.easymock.tests.UsageTest.exactCallCountByLastCall":188,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":494,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":424,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":353,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":204,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":235,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":407,"org.easymock.tests.MockClassControlTest.testHashCode":387,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":319,"org.easymock.tests2.EasyMockSupportTest.testVerify":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":304,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":13,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":415,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":405,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":125,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":119,"org.easymock.tests.UsageVarargTest.varargCharAccepted":207,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":448,"org.easymock.tests2.UsageTest.openCallCountByLastCall":89,"org.easymock.tests.DefaultClassInstantiatorTest.object":484,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":340,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":414,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":378,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":305,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":318,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":456,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":386,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":373,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":248,"org.easymock.tests.ReplayStateInvalidCallsTest.times":462,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":27,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":463,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":313,"org.easymock.tests2.UsageTest.resumeIfFailure":94,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":22,"org.easymock.tests2.StubTest.stubWithReturnValue":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":511,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":228,"org.easymock.tests2.SerializationTest.testAllMockedMethod":102,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":442,"org.easymock.samples.SupportTest.voteForRemovals":500,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":254,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":513,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":447,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":316,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":426,"org.easymock.tests.UsageExpectAndThrowTest.object":252,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":55,"org.easymock.tests2.DelegateToTest.testWrongClass":98,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":460,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":239,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":240,"org.easymock.tests.UsageStrictMockTest.range":157,"org.easymock.samples.ConstructorCalledMockTest.testTax":10,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":286,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":336,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":253,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":346,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":401,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":190,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":452,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":413,"org.easymock.tests2.CaptureTest.testCaptureNone":112,"org.easymock.tests.UsageUnorderedTest.message":218,"org.easymock.tests.UsageVerifyTest.twoReturns":163,"org.easymock.tests.UsageVarargTest.varargByteAccepted":211,"org.easymock.tests2.ThreadingTest.testThreadSafe":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":308,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":203,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":501,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":381,"org.easymock.tests2.CaptureTest.testCapture_2617107":106,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":445,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":169,"org.easymock.tests2.UsageConstraintsTest.any":45,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":398,"org.easymock.tests2.StubTest.stub":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":21,"org.easymock.tests.UsageExpectAndThrowTest.longType":245,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":488,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":397,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.tests2.SerializationTest.testClass":100,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":145,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":497,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":238,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":356,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":468,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":72,"org.easymock.tests2.NameTest.nameForMocksControl":143,"org.easymock.tests2.MockedExceptionTest.testMockedException":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":296,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":185,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":166,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":246,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":370,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":131,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":347,"org.easymock.tests.MockingTest.testNicePartialClassMocking":165,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":512,"org.easymock.tests2.CaptureTest.testCaptureLast":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":241,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":467,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":124,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":43,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":56,"org.easymock.tests.MockingTest.testTwoMocks":419,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":464,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":250,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":92,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":59,"org.easymock.samples.ExampleTest.removeNonExistingDocument":498,"org.easymock.tests.UsageStrictMockTest.differentMethods":158,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":320,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":486,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":365,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":77,"org.easymock.tests2.MockBuilderTest.testCreateMockString":82,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":383,"org.easymock.tests.UsageExpectAndThrowTest.floatType":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":298,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":293,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":63,"org.easymock.tests.UsageVerifyTest.twoThrows":162,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":307,"org.easymock.samples.ExampleTest.voteAgainstRemoval":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":437,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":411,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":139,"org.easymock.tests.LimitationsTest.privateConstructor":391,"org.easymock.tests2.UsageConstraintsTest.testNotNull":58,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":269,"org.easymock.tests2.UsageTest.defaultResetToNice":91,"org.easymock.samples.ExampleTest.voteAgainstRemovals":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":234,"org.easymock.tests.UsageVarargTest.differentLength":483,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":355,"org.easymock.tests2.CallbackTest.callback":118,"org.easymock.tests2.UsageConstraintsTest.equals":279,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":9,"org.easymock.tests.UsageTest.openCallCountByLastCall":184,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":25,"org.easymock.tests.UsageCallCountTest.tooFewCalls":201,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":192,"org.easymock.tests.UsageThrowableTest.throwCheckedException":266,"org.easymock.tests.MockingTest.testStrictClassMocking":417,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":18,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":359,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":400,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":368,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":65,"org.easymock.tests.ObjectMethodsTest.testHashCode":379,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":508,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":466,"org.easymock.tests2.NameTest.nameForNiceMock":142,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":79,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":461,"org.easymock.tests2.DependencyTest.testInterfaceMocking":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":506,"org.easymock.samples.ExampleTest.addDocument":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":309,"org.easymock.tests2.DelegateToTest.testStubDelegate":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":314,"org.easymock.tests2.AnswerTest.stubAnswer":64,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":155,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":348,"org.easymock.tests.UsageVarargTest.varargLongAccepted":210,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.floatType":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":237,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":103,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":11,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":409,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":53,"org.easymock.tests.UsageThrowableTest.noUpperLimit":263,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":326,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":36,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":282,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":109,"org.easymock.tests2.SerializationTest.test":101,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":485,"org.easymock.tests2.UsageConstraintsTest.testSame":41,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":220,"org.easymock.samples.SupportTest.addDocument":499,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":367,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":451,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":299,"org.easymock.tests.GenericTest.testPackageScope":270,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":325,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":421,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":449,"org.easymock.tests2.NameTest.nameForMock":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":231,"org.easymock.tests2.UsageStrictMockTest.differentMethods":71,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":372,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":256,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":174,"org.easymock.tests2.MockedExceptionTest.testRealException":17,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":439,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":68,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":402,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":168,"org.easymock.tests2.NameTest.nameForStrictMock":141,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":345,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":129,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":135,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":285,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":487,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":54,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":343,"org.easymock.tests2.UsageStrictMockTest.range":70,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":455,"org.easymock.tests2.UsageConstraintsTest.lessThan":60,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":322,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":330,"org.easymock.tests2.CaptureTest.testCaptureRightOne":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":303,"org.easymock.tests2.UsageConstraintsTest.testOr":42,"org.easymock.tests.UsageRangeTest.combination":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":132,"org.easymock.tests.UsageTest.wrongArguments":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":300,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":232,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":489,"org.easymock.tests.UsageVarargTest.varargShortAccepted":209,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":471,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":469,"org.easymock.tests2.UsageConstraintsTest.cmpTo":46,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":317,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":430,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":90,"org.easymock.tests2.CaptureTest.testCaptureFromStub":115,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":394,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":344,"org.easymock.tests.UsageTest.unexpectedCallWithArray":182,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":465,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":202,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":233,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":156,"org.easymock.tests2.UsageConstraintsTest.constraints":37,"org.easymock.samples.ExampleTest.addAndChangeDocument":278,"org.easymock.tests.UsageStrictMockTest.testVerify":160,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":3,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":176,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":215,"org.easymock.tests.LimitationsTest.abstractClass":390,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":225,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":216,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":335}}]
