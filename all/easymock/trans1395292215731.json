[{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[79,80,81],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[82,83,84,85,86,87,88,89,29,33,90],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[91,92,93,94,95,96],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:327","failures":[97,98,99,100],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[101,0,1,2,3,4,102,103,104,105,12,13,106,107,34,108,109,110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[111,101,0,112,1,113,2,3,114,4,102,103,104,105,106,34,115,109,110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[116],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[117,118,119,120,121,4,122,20,21,22,123,124,125,126,127,128,129,130,45,131,53,54,55,132,133,134,135,136,137,138,139,140],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[141,142,143,144,145,146,117,147,148,149,118,119,150,151,120,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,121,173,174,175,176,177,178,179,180,181,182,111,84,0,112,85,183,1,113,2,86,3,184,185,114,4,88,103,104,186,187,5,6,7,8,9,10,105,188,11,189,190,191,12,13,14,192,193,194,195,196,197,198,199,200,15,201,202,203,16,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,17,18,231,232,233,234,235,236,19,89,237,122,238,20,239,21,22,123,240,241,242,23,243,244,24,245,246,247,248,249,250,251,252,253,25,254,255,256,257,258,26,259,260,261,262,263,264,265,266,79,267,268,269,270,271,272,273,124,125,126,127,274,275,276,128,129,277,278,279,280,281,282,283,284,285,286,287,288,289,290,80,291,292,293,294,295,296,297,298,130,27,28,29,30,299,31,32,33,90,300,301,302,303,304,34,305,306,35,36,307,37,38,308,39,309,310,311,312,313,314,315,316,317,318,40,41,42,43,44,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,115,341,342,45,46,47,48,343,344,49,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,108,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,109,391,392,393,81,110,394,395,50,51,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,52,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,97,98,444,445,446,447,448,449,131,450,95,53,451,54,55,132,452,453,454,133,96,134,455,456,135,136,457,458,99,100,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,56,57,58,59,60,61,478,479,62,63,480,64,65,66,481,67,68,69,70,71,482,483,484,137,138,139,72,73,74,75,485,486,487,488,489,76,77,490,78,491,492,493,494,495,496,497,498,140,499],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:224","sourceCode":"return (java.lang.reflect.Field == null) || (((java.lang.reflect.Field.getModifiers()) & ((java.lang.reflect.Modifier.int) + (java.lang.reflect.Modifier.int))) != 0)","type":"CtReturnImpl"},"failures":[261,265,268,269,270,285,289,292,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[155,173,179,500],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[155,157,173,179,500],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[338,341],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[141,142,6,193],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[220],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[501],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[502,111,0,112,183,1,113,2,3,114,4,503,103,104,187,5,8,9,10,105,11,190,12,13,192,193,221,225,504,505,506,234,235,89,240,241,242,23,243,244,24,245,246,247,248,249,250,251,252,253,25,254,255,256,257,258,26,259,260,27,30,300,301,302,302,303,303,34,115,341,109,110,413,472,477],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[97,99],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[141,142,143,144,145,146,117,147,148,149,118,119,150,151,120,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,121,173,174,175,176,177,178,179,180,181,182,111,84,0,112,85,183,1,113,2,86,3,184,185,114,4,88,103,104,186,187,5,6,7,8,9,10,105,188,11,189,190,191,12,13,14,192,193,194,195,196,197,198,199,200,15,201,202,203,16,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,17,18,231,232,233,234,235,236,19,89,237,122,238,20,239,21,22,123,240,241,242,23,243,244,24,245,246,247,248,249,250,251,252,253,25,254,255,256,257,258,26,259,260,261,262,263,264,265,266,79,267,268,269,270,271,272,273,124,125,126,127,274,275,276,128,129,277,278,279,280,281,282,283,284,285,286,287,288,289,290,80,291,292,293,294,295,296,297,298,130,27,28,29,30,299,31,32,33,90,300,301,302,303,304,34,305,306,35,36,307,37,38,308,39,309,310,311,312,313,314,315,316,317,318,40,41,42,43,44,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,115,341,342,45,46,47,48,343,344,49,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,108,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,109,391,392,393,81,110,394,395,50,51,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,52,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,97,98,444,445,446,447,448,449,131,450,95,53,451,54,55,132,452,453,454,133,96,134,455,456,135,136,457,458,99,100,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,56,57,58,59,60,61,478,479,62,63,480,64,65,66,481,67,68,69,70,71,482,483,484,137,138,139,72,73,74,75,485,486,487,488,489,76,77,490,78,491,492,493,494,495,496,497,498,140,499],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[203,204,206,307,496],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[155,157,173,179,500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[232,272,275,311,313,314,315,316,317,318,325,347,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,454,456,463,138,497],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[24],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[155,156,160,161,162,163,169,171,172,173,174,180,181,182,218,232,20,302,302,303,303,40,41,42,43,44,322,343,49,345,348,50,51,401,419,423,424,433,438,53,72,73,74,75,485],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[471,475],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:48","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Constructor<?>.getParameterTypes()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[184,87,88,507,508,189,302,303],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[82,83,84,85,86,87,88,89,29,33,90],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[509,91,510,511,512,513,20,21,22,124,94,514,515,444,53,54,55,133,482,483,137,138,139,495,498,140,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[104,186,187,516],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":158,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":454,"org.easymock.tests2.UsageTest.argumentsOrdered":129,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":429,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":127,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":304,"org.easymock.tests2.DelegateToTest.testReturnException":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":460,"org.easymock.tests.MockingTest.testPartialClassMocking":76,"org.easymock.tests.MockClassControlTest.testToString":376,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":141,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":248,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":355,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":18,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":165,"org.easymock.tests2.UsageTest.wrongArguments":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":49,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":271,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":467,"org.easymock.samples.ExampleTest.answerVsDelegate":307,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":110,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":492,"org.easymock.tests2.UsageConstraintsTest.testNull":161,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":8,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":120,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":381,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":504,"org.easymock.tests2.CaptureTest.testPrimitive":210,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":348,"org.easymock.tests.UsageTest.moreThanOneArgument":133,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":374,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":7,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":74,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":396,"org.easymock.tests.UsageTest.argumentsOrdered":136,"org.easymock.tests.UsageVarargTest.varargIntAccepted":328,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":40,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":111,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":294,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":44,"org.easymock.tests.ReplayStateInvalidUsageTest.times":409,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":266,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":508,"org.easymock.tests2.DependencyTest.testClassMocking":229,"org.easymock.tests2.AnswerTest.answer":279,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":436,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":197,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":392,"org.easymock.tests2.CaptureTest.testAnd":207,"org.easymock.tests2.UsageTest.strictResetToDefault":273,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":191,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":149,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":47,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":400,"org.easymock.tests2.DelegateToTest.testDelegate":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":370,"org.easymock.tests.LimitationsTest.mockFinalMethod":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":463,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":449,"org.easymock.tests2.DependencyTest.testClassMockingSupport":230,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":482,"org.easymock.tests2.CaptureTest.testCapture1_2446744":211,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":188,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":195,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":403,"org.easymock.tests.UsageThrowableTest.throwError":311,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":81,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":295,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":485,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":507,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":260,"org.easymock.samples.PartialClassMockTest.testGetArea":34,"org.easymock.tests.MockingTest.testInterfaceMocking":490,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":404,"org.easymock.tests2.CompareToTest.testLessOrEqual":500,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":41,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":417,"org.easymock.tests2.UsageTest.niceToStrict":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":249,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":354,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":1,"org.easymock.tests2.MockBuilderTest.testCreateMock":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":256,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":268,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":91,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":364,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":118,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":391,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":98,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":465,"org.easymock.tests.UsageOverloadedMethodTest.overloading":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":258,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":64,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":323,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":170,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":216,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":329,"org.easymock.tests2.EasyMockSupportClassTest.testAll":23,"org.easymock.tests.MockClassControlTest.testEquals":380,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":340,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":372,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":505,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":447,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":196,"org.easymock.tests2.CaptureTest.testCaptureAll":208,"org.easymock.tests.MockNameTest.defaultName":486,"org.easymock.tests2.UsageConstraintsTest.testMatches":172,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":75,"org.easymock.samples.ExampleTest.voteForRemovals":39,"org.easymock.tests.UsageVarargTest.allKinds":337,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":448,"org.easymock.samples.BasicClassMockTest.testPrintContent":301,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":317,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":464,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":205,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":291,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":476,"org.easymock.tests2.UsageConstraintsTest.greaterThan":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":243,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":46,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":14,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":477,"org.easymock.samples.ExampleTest.voteForRemoval":37,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":192,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":199,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":503,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":105,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":453,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":272,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":147,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":459,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":202,"org.easymock.tests2.CaptureTest.testCaptureFirst":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":148,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":278,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":499,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":479,"org.easymock.tests2.UsageTest.moreThanOneArgument":124,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":15,"org.easymock.tests2.CaptureTest.testCapture2_2446744":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":437,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":4,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":336,"org.easymock.tests.GenericTest.testBridgedEquals":341,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":389,"org.easymock.tests.UsageExpectAndReturnTest.longType":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":445,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":146,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":102,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":373,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":178,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":322,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":371,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":72,"org.easymock.tests.UsageCallCountTest.tooManyCalls":390,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":257,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":270,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":360,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":316,"org.easymock.tests.MockingTest.testNiceClassMocking":493,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":28,"org.easymock.tests.MockingTest.testClassMocking":488,"org.easymock.tests2.UsageConstraintsTest.testContains":169,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":101,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":383,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":235,"org.easymock.tests2.UsageConstraintsTest.testFind":160,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":325,"org.easymock.tests.MockTypeTest.fromEasyMockClass":393,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":131,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":298,"org.easymock.tests.UsageExpectAndReturnTest.object":480,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":151,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":331,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":352,"org.easymock.tests.UsageTest.exactCallCountByLastCall":457,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":397,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":319,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":68,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":326,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":496,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":286,"org.easymock.tests.MockClassControlTest.testHashCode":379,"org.easymock.tests2.EasyMockSupportTest.testVerify":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":251,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":398,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":494,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":97,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":194,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":228,"org.easymock.tests.UsageVarargTest.varargCharAccepted":330,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":469,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":442,"org.easymock.tests2.UsageTest.openCallCountByLastCall":274,"org.easymock.tests.DefaultClassInstantiatorTest.object":470,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":153,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":443,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":350,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":252,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":362,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":506,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":264,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":285,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":12,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":378,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":361,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":69,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":458,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":26,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":377,"org.easymock.tests2.UsageTest.resumeIfFailure":277,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":109,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":462,"org.easymock.tests2.StubTest.stubWithReturnValue":232,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":86,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":63,"org.easymock.tests2.SerializationTest.testAllMockedMethod":187,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":435,"org.easymock.samples.SupportTest.voteForRemovals":35,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":92,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":288,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":367,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":516,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":441,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":280,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":321,"org.easymock.tests.UsageExpectAndThrowTest.object":365,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":176,"org.easymock.tests2.DelegateToTest.testWrongClass":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":50,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":51,"org.easymock.tests.UsageStrictMockTest.range":54,"org.easymock.samples.ConstructorCalledMockTest.testTax":302,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":226,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":150,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":366,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":2,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":411,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":240,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":466,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":93,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":418,"org.easymock.tests2.CaptureTest.testCaptureNone":215,"org.easymock.tests.UsageUnorderedTest.message":444,"org.easymock.tests.UsageVerifyTest.twoReturns":139,"org.easymock.tests.UsageVarargTest.varargByteAccepted":335,"org.easymock.tests2.ThreadingTest.testThreadSafe":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":254,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":387,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":300,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":353,"org.easymock.tests2.CaptureTest.testCapture_2617107":209,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":347,"org.easymock.tests2.UsageConstraintsTest.any":167,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":408,"org.easymock.tests2.StubTest.stub":231,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndThrowTest.longType":358,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":474,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":407,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":239,"org.easymock.tests2.SerializationTest.testClass":104,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":290,"org.easymock.tests.LimitationsTest.mockNativeMethod":52,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":115,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":71,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":107,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":263,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":123,"org.easymock.tests2.NameTest.nameForMocksControl":145,"org.easymock.tests2.MockedExceptionTest.testMockedException":234,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":244,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":456,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":78,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":297,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":359,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":5,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":3,"org.easymock.tests.MockingTest.testNicePartialClassMocking":77,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":10,"org.easymock.tests2.CompareToTest.testNotComparable":501,"org.easymock.tests2.CaptureTest.testCaptureLast":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":261,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":483,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":164,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":177,"org.easymock.tests.MockingTest.testTwoMocks":489,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":363,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":128,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":181,"org.easymock.samples.ExampleTest.removeNonExistingDocument":309,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":405,"org.easymock.tests.UsageStrictMockTest.differentMethods":55,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":267,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":287,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":472,"org.easymock.tests2.ConstraintsToStringTest.andToString":512,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":200,"org.easymock.tests2.MockBuilderTest.testCreateMockString":103,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":245,"org.easymock.tests.UsageExpectAndThrowTest.floatType":357,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":242,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":282,"org.easymock.tests.UsageVerifyTest.twoThrows":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":237,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":25,"org.easymock.samples.ExampleTest.voteAgainstRemoval":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":430,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":416,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":13,"org.easymock.tests.LimitationsTest.privateConstructor":414,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":83,"org.easymock.tests2.UsageConstraintsTest.testNotNull":180,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":233,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":318,"org.easymock.tests2.UsageTest.defaultResetToNice":276,"org.easymock.samples.ExampleTest.voteAgainstRemovals":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":67,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":262,"org.easymock.tests.UsageVarargTest.differentLength":332,"org.easymock.tests2.CallbackTest.callback":130,"org.easymock.tests2.UsageConstraintsTest.equals":159,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":189,"org.easymock.tests.UsageTest.openCallCountByLastCall":455,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":346,"org.easymock.tests.UsageCallCountTest.tooFewCalls":385,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":468,"org.easymock.tests.UsageThrowableTest.throwCheckedException":315,"org.easymock.tests.MockingTest.testStrictClassMocking":487,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":94,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":32,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":344,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":79,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":410,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":31,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":284,"org.easymock.tests.ObjectMethodsTest.testHashCode":351,"org.easymock.tests2.NameTest.nameForNiceMock":144,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":201,"org.easymock.tests2.DependencyTest.testInterfaceMocking":17,"org.easymock.samples.ExampleTest.addDocument":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":255,"org.easymock.tests2.DelegateToTest.testStubDelegate":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":259,"org.easymock.tests2.AnswerTest.stubAnswer":283,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":53,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":184,"org.easymock.tests.UsageVarargTest.varargLongAccepted":334,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.floatType":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":19,"org.easymock.tests2.ConstraintsToStringTest.orToString":509,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":303,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":498,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":174,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":293,"org.easymock.tests.UsageThrowableTest.noUpperLimit":312,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":156,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":221,"org.easymock.tests2.SerializationTest.test":186,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":212,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":471,"org.easymock.tests2.UsageConstraintsTest.testSame":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":57,"org.easymock.samples.SupportTest.addDocument":306,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":299,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":246,"org.easymock.tests.GenericTest.testPackageScope":339,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":292,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":491,"org.easymock.tests2.NameTest.nameForMock":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":65,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":190,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":60,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":369,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":349,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":48,"org.easymock.tests2.MockedExceptionTest.testRealException":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":227,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":514,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":432,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":345,"org.easymock.tests2.NameTest.nameForStrictMock":143,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":296,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":225,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":473,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":175,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":0,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests2.UsageConstraintsTest.lessThan":182,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":289,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":117,"org.easymock.tests2.CaptureTest.testCaptureRightOne":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":250,"org.easymock.tests2.UsageConstraintsTest.testOr":163,"org.easymock.tests.UsageRangeTest.combination":45,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":6,"org.easymock.tests.UsageTest.wrongArguments":134,"org.easymock.tests2.MockBuilderTest.testWithConstructor":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":247,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":108,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":66,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":475,"org.easymock.tests.UsageVarargTest.varargShortAccepted":333,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":388,"org.easymock.tests2.UsageConstraintsTest.cmpTo":168,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":422,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":275,"org.easymock.tests2.CaptureTest.testCaptureFromStub":218,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":402,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":112,"org.easymock.tests.UsageTest.unexpectedCallWithArray":96,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":95,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":386,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":87,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":481,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":451,"org.easymock.tests2.UsageConstraintsTest.constraints":157,"org.easymock.samples.ExampleTest.addAndChangeDocument":310,"org.easymock.tests2.ConstraintsToStringTest.notToString":510,"org.easymock.tests.UsageStrictMockTest.testVerify":452,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":305,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":450,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":446,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":213,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":42,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":478,"org.easymock.tests.LimitationsTest.abstractClass":413,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":140,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":119,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":327}}]
