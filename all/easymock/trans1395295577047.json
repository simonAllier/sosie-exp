[{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[312,313],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:245","sourceCode":"net.sf.cglib.proxy.Factory.getCallback(0)","type":"CtInvocationImpl"},"failures":[12,13,14,28,29,30,314,71,315,316,72,317,73,74,318,75,319,98,129,130,132,134,143,144,146,147,148,320,149,321,322,150,151,152,323,324,153,325,154,155,156,157,326,327,186,187,188,189,328,190,191,192,198,0,329,330,331,332,1,333,334,335,336,262],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[100,116,123,162,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,240,242,243,244,245,246,247,254,258,273,289,303,309],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[240,243],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,337,338,339,340,65,68,69,70,314,72,317,73,74,75,319,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,322,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,341,342,343,344,345,346,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,329,347,348,349,350,351,352,353,354,355,254,255,356,256,257,258,259,260,261,262,263,357,264,265,266,267,270,271,272,273,274,277,282,283,284,285,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[358],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[118,138,141,142,170,174,175,177,180,255,359,291,296,299,300,302,303,304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:172","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[360,361,362],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[124],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:108","sourceCode":"if (org.easymock.TestSubject != null) {\n    org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field);\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[140,363,364,277,298,303,304],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[3,4,5,6,7,8,365,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,366,24,25,26,27,28,29,30,31,32,367,33,34,35,36,37,368,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,369,370,62,63,64,371,372,373,337,338,339,340,65,66,67,68,69,70,314,374,71,315,375,316,72,317,73,376,74,377,378,318,75,379,319,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,380,381,382,383,384,115,385,386,387,388,389,390,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,391,133,134,135,392,136,137,138,139,140,141,142,143,144,145,146,147,148,320,358,149,393,321,322,150,151,152,323,324,394,395,396,397,398,153,399,400,401,402,403,404,405,406,407,408,325,409,410,411,412,413,154,414,415,155,416,417,418,419,420,421,422,423,424,156,425,426,427,428,429,157,430,431,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,326,327,186,187,188,432,189,433,434,328,435,190,191,192,436,193,194,195,196,197,437,438,198,439,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,440,341,441,342,343,442,344,443,444,345,445,346,229,230,231,446,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,0,329,330,331,332,1,333,334,248,249,250,347,348,349,350,351,447,251,252,253,335,448,449,450,451,336,452,453,352,353,354,355,254,255,356,256,257,258,259,260,261,454,455,2,456,457,458,459,460,461,462,463,360,464,465,466,262,263,357,264,265,266,267,467,268,269,270,271,272,273,274,275,276,359,277,278,279,280,468,281,469,282,283,284,285,286,287,288,289,290,291,470,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,310,488,489,490,491,492,311,493],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[4,32,367,33,65,68,69],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[12,13,14,17,17,18,18,30,64,494,495,496,314,497,71,315,72,317,73,74,318,75,498,319,96,98,129,130,131,132,134,135,143,144,146,147,148,320,149,322,150,151,152,154,155,156,157,186,187,188,189,190,191,192,198,329,335,336,262],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","name":"name","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[499,500,501],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[119,125,126,140,502,356,256,259,260,277,295,298,303,304],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:41","sourceCode":"java.lang.StringBuffer.append(((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[503],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[61,504],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[36,37,38,39,40,41,42,43,44,45,54,55,59,60,82,83,84,85,92,93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[28,29,30,31,100,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,240,243,244,245,246,247,289,303,309],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[505,506,507,508,509,510,511,512,378,96,411,412,413,154,414,415,155,416,417,418,419,420,421,422,423,424,156,425,426,427,428,429,157,430,431],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[51],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[505,506,512],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[96,97,98,513],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":37,"org.easymock.tests2.UsageTest.argumentsOrdered":126,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":254,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":482,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":121,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testReturnException":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":159,"org.easymock.tests.MockingTest.testPartialClassMocking":187,"org.easymock.tests.MockClassControlTest.testToString":330,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":366,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":419,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":166,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":155,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":63,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":43,"org.easymock.tests2.UsageTest.wrongArguments":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":270,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":404,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":354,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":336,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":434,"org.easymock.tests2.UsageConstraintsTest.testNull":39,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":146,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":110,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":334,"org.easymock.tests2.CaptureTest.testPrimitive":85,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":185,"org.easymock.tests.UsageTest.moreThanOneArgument":255,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":221,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":224,"org.easymock.tests.UsageTest.argumentsOrdered":260,"org.easymock.tests.UsageVarargTest.varargIntAccepted":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":193,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":314,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":407,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":389,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":197,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":500,"org.easymock.tests.ReplayStateInvalidUsageTest.times":444,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":153,"org.easymock.tests2.DependencyTest.testClassMocking":369,"org.easymock.tests2.AnswerTest.answer":65,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":488,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":340,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":449,"org.easymock.tests2.CaptureTest.testAnd":82,"org.easymock.tests2.UsageTest.strictResetToDefault":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":322,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":284,"org.easymock.tests2.DelegateToTest.testDelegate":81,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":228,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":181,"org.easymock.tests.LimitationsTest.mockFinalMethod":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":351,"org.easymock.tests2.DependencyTest.testClassMockingSupport":370,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":275,"org.easymock.tests2.CaptureTest.testCapture1_2446744":86,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":358,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":179,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":338,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":441,"org.easymock.tests.UsageThrowableTest.throwError":240,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":451,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":471,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":390,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":431,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.MockingTest.testInterfaceMocking":432,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":194,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":249,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":420,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":167,"org.easymock.tests2.UsageTest.niceToStrict":120,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":72,"org.easymock.tests2.MockBuilderTest.testCreateMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":427,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":401,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":175,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":106,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":448,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":280,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":263,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":352,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":509,"org.easymock.tests.UsageOverloadedMethodTest.overloading":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":424,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":49,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":210,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":307,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":48,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":361,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":91,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":446,"org.easymock.tests2.EasyMockSupportClassTest.testAll":154,"org.easymock.tests.MockClassControlTest.testEquals":333,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":191,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":183,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":494,"org.easymock.tests2.CaptureTest.testCaptureAll":83,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":349,"org.easymock.tests.MockNameTest.defaultName":447,"org.easymock.tests2.UsageConstraintsTest.testMatches":50,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":440,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":222,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":239,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":302,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":350,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":246,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":136,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":163,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":80,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":465,"org.easymock.tests2.UsageConstraintsTest.greaterThan":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":414,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":283,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":152,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":466,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":20,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":323,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":452,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":408,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":320,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":262,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":103,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":158,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":76,"org.easymock.tests2.CaptureTest.testCaptureFirst":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":104,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":128,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":206,"org.easymock.tests2.UsageTest.moreThanOneArgument":118,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":22,"org.easymock.tests2.CaptureTest.testCapture2_2446744":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":489,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":75,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":238,"org.easymock.tests.GenericTest.testBridgedEquals":436,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":510,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":507,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":268,"org.easymock.tests.UsageExpectAndReturnTest.longType":202,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":347,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":498,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":184,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":57,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":292,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":182,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":252,"org.easymock.tests.UsageCallCountTest.tooManyCalls":269,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":501,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":245,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":130,"org.easymock.tests.MockingTest.testNiceClassMocking":328,"org.easymock.tests.MockingTest.testClassMocking":327,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":497,"org.easymock.tests2.UsageConstraintsTest.testContains":47,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":357,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":30,"org.easymock.tests2.UsageConstraintsTest.testFind":38,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":309,"org.easymock.tests.MockTypeTest.fromEasyMockClass":450,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":33,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests.UsageExpectAndReturnTest.object":209,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":109,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":233,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":456,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":511,"org.easymock.tests.UsageTest.exactCallCountByLastCall":261,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":468,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":225,"org.easymock.tests2.ConstraintsToStringTest.findToString":503,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":371,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":215,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":229,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":288,"org.easymock.tests.MockClassControlTest.testHashCode":1,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":381,"org.easymock.tests2.EasyMockSupportTest.testVerify":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":422,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":499,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":226,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":279,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":286,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":337,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":373,"org.easymock.tests.UsageVarargTest.varargCharAccepted":232,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":459,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":493,"org.easymock.tests2.UsageTest.openCallCountByLastCall":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":505,"org.easymock.tests.DefaultClassInstantiatorTest.object":460,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":112,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":278,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":455,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":423,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":173,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":243,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":380,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":150,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":332,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":172,"org.easymock.tests.CapturesMatcherTest.test":313,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":157,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":331,"org.easymock.tests2.UsageTest.resumeIfFailure":127,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":335,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":406,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":161,"org.easymock.tests2.StubTest.stubWithReturnValue":100,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":376,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":58,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":208,"org.easymock.tests2.SerializationTest.testAllMockedMethod":98,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":310,"org.easymock.samples.SupportTest.voteForRemovals":16,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":178,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":513,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":311,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":66,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":469,"org.easymock.tests.UsageExpectAndThrowTest.object":176,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":55,"org.easymock.tests2.DelegateToTest.testWrongClass":79,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":305,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":306,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests.UsageStrictMockTest.range":298,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":409,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":129,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":508,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":177,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":73,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":411,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":259,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":353,"org.easymock.tests2.CaptureTest.testCaptureNone":90,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":250,"org.easymock.tests.UsageUnorderedTest.message":277,"org.easymock.tests.UsageVerifyTest.twoReturns":304,"org.easymock.tests.UsageVarargTest.varargByteAccepted":237,"org.easymock.tests2.ThreadingTest.testThreadSafe":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":425,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":267,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":457,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests2.CaptureTest.testCapture_2617107":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":491,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":273,"org.easymock.tests2.UsageConstraintsTest.any":45,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":443,"org.easymock.tests2.StubTest.stub":99,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":492,"org.easymock.tests.UsageExpectAndThrowTest.longType":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":160,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":360,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":344,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":139,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests2.SerializationTest.testClass":96,"org.easymock.tests.LimitationsTest.mockNativeMethod":198,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":192,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":218,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":396,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.tests2.NameTest.nameForMocksControl":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":398,"org.easymock.tests2.MockedExceptionTest.testMockedException":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":415,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":258,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":189,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":170,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":367,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":74,"org.easymock.tests.MockingTest.testNicePartialClassMocking":188,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":148,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":394,"org.easymock.tests2.CaptureTest.testCaptureLast":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":276,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":135,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":42,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":56,"org.easymock.tests.MockingTest.testTwoMocks":186,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":174,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":125,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":60,"org.easymock.samples.ExampleTest.removeNonExistingDocument":365,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":400,"org.easymock.tests.UsageStrictMockTest.differentMethods":299,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":382,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":462,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":21,"org.easymock.tests2.MockBuilderTest.testCreateMockString":319,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":416,"org.easymock.tests.UsageExpectAndThrowTest.floatType":168,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":68,"org.easymock.tests.UsageVerifyTest.twoThrows":303,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":372,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":156,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":483,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":248,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":151,"org.easymock.tests.LimitationsTest.privateConstructor":438,"org.easymock.tests2.UsageConstraintsTest.testNotNull":59,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":28,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":247,"org.easymock.tests2.UsageTest.defaultResetToNice":124,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":395,"org.easymock.tests.UsageVarargTest.differentLength":234,"org.easymock.tests2.CallbackTest.callback":114,"org.easymock.tests2.UsageConstraintsTest.equals":368,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":393,"org.easymock.tests.UsageTest.openCallCountByLastCall":257,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":272,"org.easymock.tests.UsageCallCountTest.tooFewCalls":265,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":132,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":355,"org.easymock.tests.UsageThrowableTest.throwCheckedException":244,"org.easymock.tests.MockingTest.testStrictClassMocking":326,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":165,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":399,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":131,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":133,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":70,"org.easymock.tests.ObjectMethodsTest.testHashCode":2,"org.easymock.tests2.NameTest.nameForNiceMock":26,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":23,"org.easymock.tests2.DependencyTest.testInterfaceMocking":62,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":430,"org.easymock.tests2.DelegateToTest.testStubDelegate":78,"org.easymock.tests2.AnswerTest.stubAnswer":69,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":296,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":377,"org.easymock.tests.UsageVarargTest.varargLongAccepted":236,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":481,"org.easymock.tests.UsageExpectAndReturnTest.floatType":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":64,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":388,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":53,"org.easymock.tests.UsageThrowableTest.noUpperLimit":241,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":35,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":405,"org.easymock.tests2.SerializationTest.test":97,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":87,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":362,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":461,"org.easymock.tests2.UsageConstraintsTest.testSame":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":200,"org.easymock.samples.SupportTest.addDocument":15,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":391,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":417,"org.easymock.tests.GenericTest.testPackageScope":190,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":387,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":433,"org.easymock.tests2.NameTest.nameForMock":24,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":211,"org.easymock.tests2.UsageStrictMockTest.differentMethods":141,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":379,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":321,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":180,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":285,"org.easymock.tests2.MockedExceptionTest.testRealException":31,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":486,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":485,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":138,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":271,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":346,"org.easymock.tests2.NameTest.nameForStrictMock":25,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":316,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":506,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":32,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":147,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":325,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":463,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":54,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":363,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":71,"org.easymock.tests2.UsageStrictMockTest.range":140,"org.easymock.tests2.UsageConstraintsTest.lessThan":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":421,"org.easymock.tests2.CaptureTest.testCaptureRightOne":92,"org.easymock.tests2.UsageConstraintsTest.testOr":41,"org.easymock.tests.UsageRangeTest.combination":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":144,"org.easymock.tests.UsageTest.wrongArguments":256,"org.easymock.tests2.MockBuilderTest.testWithConstructor":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":418,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":212,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":464,"org.easymock.tests.UsageVarargTest.varargShortAccepted":235,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":467,"org.easymock.tests2.UsageConstraintsTest.cmpTo":46,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":67,"org.easymock.tests2.CompareToTest.testLessThan":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":475,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":123,"org.easymock.tests2.CaptureTest.testCaptureFromStub":93,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":341,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":315,"org.easymock.tests.UsageTest.unexpectedCallWithArray":356,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":295,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":213,"org.easymock.tests2.CaptureTest.testCapture":312,"org.easymock.tests2.UsageConstraintsTest.constraints":36,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":297,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests.UsageStrictMockTest.testVerify":301,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":11,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":348,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":88,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":495,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":195,"org.easymock.tests.LimitationsTest.abstractClass":437,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":196,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":107,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":230,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":364}}]
