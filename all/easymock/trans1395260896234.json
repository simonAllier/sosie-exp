[{"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:183","sourceCode":"net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:174","sourceCode":"try {\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n} catch (final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException) {\n    net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader());\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[13,14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,32,33,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,15,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,1,2,273,3,274,4,5,12,6,275,276,277,278,279,280,281,282,283,7,284,285,286,287,8,288,289,290,291,292,293,294,9,295,10,296,297,298,299,300,301,302,11,303,304,305,306,307,308,309,310,311,312,313,314,315,17,316,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[59,62,97,99,100,105,106,109,110,318,207,225,231,232],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[143],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[270],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[320],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[321,322,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[324,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[59,60,62,63,65,194,196,205,207,208],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[32,32,33,33,60,101,119,120,123,124,126,127,128,129,130,326,327,328,329,330,149,150,164,165,166,167,168,205,271,272,273,3,274,4,277,279,280,282,283,8,288,289,303],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[59,105,332,333,334,335],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[281],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[59,105,332,333,334,335],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[336,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,337,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,58,60,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,104,113,114,115,338,339,340,341,342,117,118,119,120,123,125,343,344,345,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,144,145,146,147,346,149,150,157,347,158,159,160,161,164,165,166,167,168,174,184,185,348,349,350,351,191,193,194,195,196,197,198,200,201,202,204,205,208,209,210,211,212,213,214,217,218,219,220,221,223,224,226,227,230,233,235,236,239,240,242,352,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,270,271,272,1,2,273,3,274,4,5,12,275,276,277,278,279,280,281,282,283,7,284,285,287,8,288,289,290,291,292,293,294,9,295,10,296,298,299,300,301,302,11,305,306,307,308,309,310,311,312,313,314,315,17,316,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[99,103,108,185,222,229],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:190","failures":[57,62,63,97,99,110,117,144,183,184,186,187,188,189,190,192,200,203,207,208,226,227,232,245,248,250,252,253,256,257,258,2,5,12,275,278,7,284,285,287,294,11],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests2.UsageTest.argumentsOrdered":232,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":103,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":69,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":227,"org.easymock.tests2.StubTest.stubWithReturnValue":314,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":287,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":45,"org.easymock.tests2.SerializationTest.testAllMockedMethod":212,"org.easymock.tests2.DelegateToTest.testReturnException":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":67,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":142,"org.easymock.tests.MockingTest.testPartialClassMocking":113,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":335,"org.easymock.samples.SupportTest.voteForRemovals":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":13,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":16,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":76,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":143,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":215,"org.easymock.tests.UsageExpectAndThrowTest.object":86,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":284,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":221,"org.easymock.tests2.DelegateToTest.testWrongClass":268,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":149,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":150,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":12,"org.easymock.tests2.UsageTest.wrongArguments":225,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":119,"org.easymock.tests.UsageStrictMockTest.range":62,"org.easymock.samples.ConstructorCalledMockTest.testTax":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":344,"org.easymock.samples.ExampleTest.answerVsDelegate":22,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":306,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":319,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":87,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":256,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":243,"org.easymock.tests2.CaptureTest.testPrimitive":296,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":123,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":95,"org.easymock.tests.UsageTest.moreThanOneArgument":104,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":109,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":343,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":193,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":332,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":166,"org.easymock.tests2.CaptureTest.testCaptureNone":301,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":153,"org.easymock.tests.UsageUnorderedTest.message":97,"org.easymock.tests.UsageVerifyTest.twoReturns":100,"org.easymock.tests.UsageVarargTest.varargByteAccepted":139,"org.easymock.tests2.ThreadingTest.testThreadSafe":235,"org.easymock.tests.UsageTest.argumentsOrdered":110,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":178,"org.easymock.tests.UsageVarargTest.varargIntAccepted":133,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":161,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":28,"org.easymock.tests2.CaptureTest.testCapture_2617107":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":126,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":240,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":337,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":122,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":352,"org.easymock.tests2.UsageConstraintsTest.any":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":336,"org.easymock.tests2.StubTest.stub":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":130,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":177,"org.easymock.tests.UsageExpectAndThrowTest.longType":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":68,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":206,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":213,"org.easymock.tests2.SerializationTest.testClass":210,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":260,"org.easymock.tests.LimitationsTest.mockNativeMethod":96,"org.easymock.tests2.AnswerTest.answer":214,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":75,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":55,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":351,"org.easymock.tests2.CaptureTest.testAnd":9,"org.easymock.tests2.UsageTest.strictResetToDefault":223,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":198,"org.easymock.tests2.NameTest.nameForMocksControl":317,"org.easymock.tests2.MockedExceptionTest.testMockedException":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":251,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":146,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":108,"org.easymock.tests2.DelegateToTest.testDelegate":270,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":182,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":80,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":115,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":191,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":244,"org.easymock.tests.MockingTest.testNicePartialClassMocking":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":91,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":196,"org.easymock.tests2.CaptureTest.testCaptureLast":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":312,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":342,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":285,"org.easymock.tests.MockingTest.testTwoMocks":112,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":34,"org.easymock.tests2.CaptureTest.testCapture1_2446744":297,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":36,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":84,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":231,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":288,"org.easymock.tests.UsageThrowableTest.throwError":183,"org.easymock.tests.UsageStrictMockTest.differentMethods":63,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":325,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":237,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":148,"org.easymock.tests.UsageExpectAndThrowTest.floatType":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":168,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":281,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":217,"org.easymock.tests.UsageVerifyTest.twoThrows":99,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":292,"org.easymock.samples.PartialClassMockTest.testGetArea":19,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":127,"org.easymock.samples.ExampleTest.voteAgainstRemoval":24,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":152,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":200,"org.easymock.tests2.UsageTest.niceToStrict":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":77,"org.easymock.tests2.UsageConstraintsTest.testNotNull":8,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":261,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":323,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":242,"org.easymock.tests2.UsageTest.defaultResetToNice":230,"org.easymock.samples.ExampleTest.voteAgainstRemovals":21,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":51,"org.easymock.tests.UsageVarargTest.differentLength":136,"org.easymock.tests2.CallbackTest.callback":294,"org.easymock.tests.UsageTest.openCallCountByLastCall":107,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":85,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":252,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":271,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":156,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":125,"org.easymock.tests.UsageCallCountTest.tooFewCalls":159,"org.easymock.tests.UsageOverloadedMethodTest.overloading":117,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":279,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":47,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":116,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":278,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":345,"org.easymock.tests.UsageThrowableTest.throwCheckedException":187,"org.easymock.tests2.EasyMockSupportClassTest.testAll":290,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":74,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":93,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":350,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":340,"org.easymock.tests2.CaptureTest.testCaptureAll":295,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":311,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":308,"org.easymock.tests2.UsageConstraintsTest.testMatches":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":310,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":167,"org.easymock.samples.ExampleTest.voteForRemovals":26,"org.easymock.tests2.NameTest.nameForNiceMock":316,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":239,"org.easymock.tests.UsageVarargTest.allKinds":141,"org.easymock.tests2.DependencyTest.testInterfaceMocking":220,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":341,"org.easymock.samples.BasicClassMockTest.testPrintContent":29,"org.easymock.samples.ExampleTest.addDocument":25,"org.easymock.tests2.DelegateToTest.testStubDelegate":267,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":189,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":203,"org.easymock.tests2.AnswerTest.stubAnswer":218,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":71,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":60,"org.easymock.tests2.UsageConstraintsTest.greaterThan":282,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":145,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":15,"org.easymock.tests.UsageVarargTest.varargLongAccepted":138,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":64,"org.easymock.samples.ExampleTest.voteForRemoval":23,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":54,"org.easymock.tests.UsageExpectAndReturnTest.floatType":38,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":246,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":33,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":283,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":173,"org.easymock.tests.UsageThrowableTest.noUpperLimit":184,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":272,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":222,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":72,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":298,"org.easymock.tests2.SerializationTest.test":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":249,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":185,"org.easymock.tests2.UsageConstraintsTest.testSame":274,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":37,"org.easymock.samples.SupportTest.addDocument":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":66,"org.easymock.tests2.CaptureTest.testCaptureFirst":305,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":250,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":43,"org.easymock.tests.GenericTest.testPackageScope":73,"org.easymock.tests2.CaptureTest.testCapture2_2446744":304,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":238,"org.easymock.tests2.UsageTest.moreThanOneArgument":224,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":181,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":140,"org.easymock.tests2.NameTest.nameForMock":315,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":162,"org.easymock.tests.UsageExpectAndReturnTest.longType":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":338,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":48,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":286,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":124,"org.easymock.tests2.UsageStrictMockTest.differentMethods":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":164,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":40,"org.easymock.tests.UsageCallCountTest.tooManyCalls":163,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":90,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":147,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":158,"org.easymock.tests2.MockedExceptionTest.testRealException":264,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":188,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":307,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":347,"org.easymock.tests2.UsageConstraintsTest.testContains":277,"org.easymock.tests2.NameTest.nameForStrictMock":17,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":263,"org.easymock.tests2.UsageConstraintsTest.testFind":273,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":322,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":201,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":195,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":202,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":57,"org.easymock.tests.UsageExpectAndReturnTest.object":46,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":7,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":197,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":241,"org.easymock.tests2.UsageStrictMockTest.range":207,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":255,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":135,"org.easymock.tests.UsageTest.exactCallCountByLastCall":111,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":331,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":248,"org.easymock.tests2.CaptureTest.testCaptureRightOne":11,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":324,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":179,"org.easymock.tests2.UsageConstraintsTest.testOr":4,"org.easymock.tests.UsageRangeTest.combination":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":192,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":52,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":131,"org.easymock.tests.UsageTest.wrongArguments":106,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":171,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":346,"org.easymock.tests2.EasyMockSupportTest.testVerify":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":41,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":49,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":180,"org.easymock.tests.UsageVarargTest.varargShortAccepted":137,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":155,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":169,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":348,"org.easymock.tests2.UsageConstraintsTest.cmpTo":276,"org.easymock.tests.UsageVarargTest.varargCharAccepted":134,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":216,"org.easymock.tests2.CompareToTest.testLessThan":320,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":204,"org.easymock.tests2.UsageTest.openCallCountByLastCall":228,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":321,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":258,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":154,"org.easymock.tests2.CaptureTest.testCaptureFromStub":303,"org.easymock.tests.UsageTest.unexpectedCallWithArray":105,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":83,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":59,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":186,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":14,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":50,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":199,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":61,"org.easymock.tests2.UsageConstraintsTest.constraints":1,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":82,"org.easymock.samples.ExampleTest.addAndChangeDocument":27,"org.easymock.tests.UsageStrictMockTest.testVerify":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":53,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":175,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":293,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":339,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":299,"org.easymock.tests2.UsageTest.resumeIfFailure":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":128,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":129,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":253,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":132}}]
