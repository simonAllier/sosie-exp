[{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[43,477,478,86,479,480],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,1,15,19,20,23,24,39,44,46,47,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,85,88,89,92,121,122,123,124,125,126,131,133,134,136,163,164,166,174,189,190,192,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,246,247,248,249,251,256,262,268,277,278,281,283,284,287,292,293,294,295,297,298,299,301,302,303,305,307,308,309,312,313,316,318,319,320,321,322,323,331,334,336,337,341,346,349,359,365,368,369,370,371,372,373,376,380,381,382,385,389,390,395,396,397,399,400,401,402,403,404,407,408,409,410,412,413,414,415,416,417,418,419,420,421,422,423,424,425,433,444,445,446,447,449,450,451,452,453,454,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[481,473,474,475],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[454],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[235,239],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[392],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[0,1,5,6,7,8,9,10,11,12,13,15,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,85,86,87,88,89,90,91,92,120,121,122,123,124,125,126,127,128,129,130,131,133,134,136,137,138,139,140,142,143,144,145,146,147,148,149,154,155,156,163,164,166,170,171,172,173,174,175,189,190,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,268,277,278,279,280,281,282,283,284,285,286,287,292,293,294,295,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,326,327,328,329,330,331,334,335,336,337,340,341,342,346,349,359,365,368,369,370,371,372,373,374,376,379,380,381,382,385,388,389,390,391,393,395,396,397,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,433,440,441,442,443,444,445,446,447,449,450,451,452,453,454,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[482,483,484,485,486,323,324,487,339,473],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[481,473,474,475],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[15,16,17,39,120,162,163,164,166,181,186,193,254,254,255,255,256,259,260,488,489,490,292,293,294,295,298,299,316,323,330,491,331,332,334,335,336,337,340,341,492,342,346,349,359,365,368,369,371,372,373,374,376,379,380,381,382,473,475],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,493,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,494,234,235,236,237,238,239,495,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,496,497,498,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,499,325,326,327,328,329,330,500,331,332,501,333,334,335,336,487,337,338,339,340,341,502,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[238,503,504],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[19,39,44,46,47,58,59,60,61,62,63,66,67,69,70,71,73,74,75,76,77,121,122,123,124,125,163,164,166,189,190,223,224,225,226,241,242,243,244,246,248,249,251,256,262,277,278,281,283,284,292,293,294,295,297,298,299,321,323,331,334,336,337,341,346,349,359,365,368,369,370,371,372,373,376,380,381,382,396],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[459],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[481,473,474,475],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[505,400,401,402,403,404,405,406,407,409,410,411,412,413],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[24,43,44,46,47,78,79,477,506,478,507,508,509,510,85,86,87,90,91,132,135,136,137,227,228,229,281,283,284,303,304,310,311,511,479,512,513,514,515,516,517,480,518,519,462],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[8,10,13,24,43,44,47,52,84,85,87,88,89,90,91,92,138,149,150,202,227,228,229,247,281,284,301,303,304,307,308,310,311,313,326,327,328,329,385,399,450,451,456,457,470,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[394,396],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,493,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,494,234,235,236,237,238,239,495,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,496,497,498,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,499,325,326,327,328,329,330,500,331,332,501,333,334,335,336,487,337,338,339,340,341,502,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[306,372,462,463],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[520,521],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[0,1,19,20,21,22,23,24,44,121,122,123,124,125,174,189,190,281,401,407,408,413,452,456],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[522],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:66","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[43,44,46,47,85,87,90,91,523,227,228,229,281,283,284,303,304,310,311,326,327,328,329],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:195","failures":[493,181,185,187,263,264,265,266,267,268,269,270,271,272,273,274,292,293,299,326,327,328,329,330,332,337,341,342,344,345,347,350,353,354,360,362,363,369,379,382,384,417,420,422,428,429,430,431,432,433,434,435,436,437,438,439],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:46","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[257,258,263,264,265,267,269,270,271,274,428,429,430,432,434,435,436,439],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[43,477,478,86,479,480],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":447,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests2.UsageTest.argumentsOrdered":311,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":424,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":103,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":306,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":257,"org.easymock.tests2.DelegateToTest.testReturnException":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":171,"org.easymock.tests.MockingTest.testPartialClassMocking":163,"org.easymock.tests.MockClassControlTest.testToString":194,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":325,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":353,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":203,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":349,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":523,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":482,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":454,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":19,"org.easymock.tests2.UsageTest.wrongArguments":304,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":439,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":232,"org.easymock.samples.ExampleTest.answerVsDelegate":247,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":186,"org.easymock.tests2.UsageConstraintsTest.testNull":450,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":168,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":371,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":423,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":199,"org.easymock.tests2.CaptureTest.testPrimitive":403,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":23,"org.easymock.tests.UsageTest.moreThanOneArgument":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":222,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":243,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":176,"org.easymock.tests.UsageTest.argumentsOrdered":91,"org.easymock.tests.UsageVarargTest.varargIntAccepted":140,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":121,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":273,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":125,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":514,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":433,"org.easymock.tests.ReplayStateInvalidUsageTest.times":33,"org.easymock.tests2.DependencyTest.testClassMocking":275,"org.easymock.tests2.AnswerTest.answer":385,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":443,"org.easymock.tests2.CaptureTest.testAnd":400,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":183,"org.easymock.tests2.UsageTest.strictResetToDefault":302,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":501,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":379,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":418,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":225,"org.easymock.tests2.DelegateToTest.testDelegate":399,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":218,"org.easymock.tests.LimitationsTest.mockFinalMethod":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":130,"org.easymock.tests2.DependencyTest.testClassMockingSupport":276,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":78,"org.easymock.tests2.CaptureTest.testCapture1_2446744":404,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":375,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":216,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":441,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":27,"org.easymock.tests.UsageThrowableTest.throwError":50,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":185,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":493,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":367,"org.easymock.samples.PartialClassMockTest.testGetArea":256,"org.easymock.tests.MockingTest.testInterfaceMocking":165,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":28,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":122,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":151,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":204,"org.easymock.tests2.UsageTest.niceToStrict":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":354,"org.easymock.tests2.ThreadingTest.testChangeDefault":520,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":93,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":334,"org.easymock.tests2.MockBuilderTest.testCreateMock":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":436,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":479,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":212,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":419,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":5,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":230,"org.easymock.tests.UsageOverloadedMethodTest.overloading":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":364,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":460,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":69,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":200,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":503,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":459,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":409,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":141,"org.easymock.tests.MockClassControlTest.testEquals":198,"org.easymock.tests2.EasyMockSupportClassTest.testAll":346,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":16,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":516,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":220,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":488,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":442,"org.easymock.tests2.CaptureTest.testCaptureAll":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":128,"org.easymock.tests.MockNameTest.defaultName":191,"org.easymock.tests2.UsageConstraintsTest.testMatches":461,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":244,"org.easymock.samples.ExampleTest.voteForRemovals":251,"org.easymock.tests.UsageVarargTest.allKinds":149,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":129,"org.easymock.samples.BasicClassMockTest.testPrintContent":260,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":56,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":279,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":270,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":495,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":486,"org.easymock.tests2.UsageConstraintsTest.greaterThan":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":347,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":224,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":382,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":240,"org.easymock.samples.ExampleTest.voteForRemoval":248,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":319,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":383,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":187,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":374,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":120,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":301,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":416,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":170,"org.easymock.tests2.CaptureTest.testCaptureFirst":413,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":417,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":313,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":65,"org.easymock.tests2.CaptureTest.testCapture2_2446744":412,"org.easymock.tests2.UsageTest.moreThanOneArgument":303,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":111,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":341,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":148,"org.easymock.tests.GenericTest.testBridgedEquals":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":12,"org.easymock.tests.UsageExpectAndReturnTest.longType":61,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":414,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":126,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":492,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":221,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":468,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":159,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":241,"org.easymock.tests.UsageCallCountTest.tooManyCalls":13,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":506,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":438,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":208,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":55,"org.easymock.tests.MockingTest.testNiceClassMocking":169,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":293,"org.easymock.tests.MockingTest.testClassMocking":161,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":491,"org.easymock.tests2.UsageConstraintsTest.testContains":458,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":6,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":316,"org.easymock.tests2.UsageConstraintsTest.testFind":449,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":202,"org.easymock.tests.MockTypeTest.fromEasyMockClass":184,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":393,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":41,"org.easymock.tests.UsageExpectAndReturnTest.object":68,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":376,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":422,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":483,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":143,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":156,"org.easymock.tests.UsageTest.exactCallCountByLastCall":92,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":98,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":177,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":81,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":509,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":324,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":74,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":133,"org.easymock.tests.MockClassControlTest.testHashCode":197,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":264,"org.easymock.tests2.EasyMockSupportTest.testVerify":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":356,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":513,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":178,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":131,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":440,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":427,"org.easymock.tests.UsageVarargTest.varargCharAccepted":142,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":494,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":116,"org.easymock.tests2.UsageTest.openCallCountByLastCall":307,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":425,"org.easymock.tests.DefaultClassInstantiatorTest.object":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":2,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":154,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":510,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":357,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":263,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":196,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":380,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":209,"org.easymock.tests.CapturesMatcherTest.test":505,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":75,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":117,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":515,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":365,"org.easymock.tests2.UsageTest.resumeIfFailure":312,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":181,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":173,"org.easymock.tests2.StubTest.stubWithReturnValue":287,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":487,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":469,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":67,"org.easymock.tests2.SerializationTest.testAllMockedMethod":475,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":109,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":480,"org.easymock.samples.SupportTest.voteForRemovals":262,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":215,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":481,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":115,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":386,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":83,"org.easymock.tests.UsageExpectAndThrowTest.object":213,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":466,"org.easymock.tests2.DelegateToTest.testWrongClass":397,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":189,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":190,"org.easymock.tests.UsageStrictMockTest.range":46,"org.easymock.samples.ConstructorCalledMockTest.testTax":254,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":290,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":421,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":292,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":214,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":336,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":35,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":231,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":477,"org.easymock.tests2.CaptureTest.testCaptureNone":408,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":152,"org.easymock.tests.UsageUnorderedTest.message":24,"org.easymock.tests.UsageVerifyTest.twoReturns":229,"org.easymock.tests.UsageVarargTest.varargByteAccepted":147,"org.easymock.tests2.ThreadingTest.testThreadSafe":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":360,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":10,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":157,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":259,"org.easymock.tests2.CaptureTest.testCapture_2617107":402,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":519,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":113,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":22,"org.easymock.tests2.UsageConstraintsTest.any":456,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":32,"org.easymock.tests2.StubTest.stub":286,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":114,"org.easymock.tests.UsageExpectAndThrowTest.longType":206,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":238,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":31,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":282,"org.easymock.tests2.SerializationTest.testClass":473,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":268,"org.easymock.tests.LimitationsTest.mockNativeMethod":39,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":77,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":490,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":430,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":285,"org.easymock.tests2.NameTest.nameForMocksControl":329,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":432,"org.easymock.tests2.MockedExceptionTest.testMockedException":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":348,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":89,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":392,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":166,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":207,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":368,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":337,"org.easymock.tests.MockingTest.testNicePartialClassMocking":164,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":373,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":428,"org.easymock.tests2.CaptureTest.testCaptureLast":407,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":79,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":453,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":299,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":467,"org.easymock.tests.MockingTest.testTwoMocks":162,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":300,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":211,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":310,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":471,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":521,"org.easymock.samples.ExampleTest.removeNonExistingDocument":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":435,"org.easymock.tests.UsageStrictMockTest.differentMethods":47,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":29,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":265,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":236,"org.easymock.tests2.ConstraintsToStringTest.andToString":517,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":320,"org.easymock.tests2.MockBuilderTest.testCreateMockString":342,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":192,"org.easymock.tests.UsageExpectAndThrowTest.floatType":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":350,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":388,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":499,"org.easymock.tests.UsageVerifyTest.twoThrows":228,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":359,"org.easymock.samples.ExampleTest.voteAgainstRemoval":249,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":104,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":381,"org.easymock.tests.LimitationsTest.privateConstructor":38,"org.easymock.tests2.UsageConstraintsTest.testNotNull":470,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":57,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":314,"org.easymock.tests2.UsageTest.defaultResetToNice":309,"org.easymock.samples.ExampleTest.voteAgainstRemovals":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":429,"org.easymock.tests.UsageVarargTest.differentLength":144,"org.easymock.tests2.CallbackTest.callback":476,"org.easymock.tests2.UsageConstraintsTest.equals":448,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":507,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":377,"org.easymock.tests.UsageTest.openCallCountByLastCall":88,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":444,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":21,"org.easymock.tests.UsageCallCountTest.tooFewCalls":8,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":295,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":233,"org.easymock.tests.UsageThrowableTest.throwCheckedException":54,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":478,"org.easymock.tests.MockingTest.testStrictClassMocking":160,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":434,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":294,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":34,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":297,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":390,"org.easymock.tests.ObjectMethodsTest.testHashCode":155,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":322,"org.easymock.tests2.NameTest.nameForNiceMock":328,"org.easymock.tests2.DependencyTest.testInterfaceMocking":277,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":484,"org.easymock.samples.ExampleTest.addDocument":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":361,"org.easymock.tests2.DelegateToTest.testStubDelegate":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.AnswerTest.stubAnswer":389,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":44,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":338,"org.easymock.tests.UsageVarargTest.varargLongAccepted":146,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":102,"org.easymock.tests.UsageExpectAndReturnTest.floatType":60,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":76,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":323,"org.easymock.tests2.ConstraintsToStringTest.orToString":511,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":255,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":464,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":135,"org.easymock.tests.UsageThrowableTest.noUpperLimit":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":272,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":445,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":288,"org.easymock.tests2.SerializationTest.test":474,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":405,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":504,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":235,"org.easymock.tests2.UsageConstraintsTest.testSame":451,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":59,"org.easymock.samples.SupportTest.addDocument":261,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":296,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":351,"org.easymock.tests.GenericTest.testPackageScope":15,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":97,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":271,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":167,"org.easymock.tests2.NameTest.nameForMock":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":70,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":502,"org.easymock.tests2.UsageStrictMockTest.differentMethods":284,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":378,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":62,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":217,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":153,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":226,"org.easymock.tests2.MockedExceptionTest.testRealException":317,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":107,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":291,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":106,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":281,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":20,"org.easymock.tests2.NameTest.nameForStrictMock":327,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":333,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":391,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":372,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":289,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":465,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":237,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":331,"org.easymock.tests2.UsageStrictMockTest.range":283,"org.easymock.tests2.UsageConstraintsTest.lessThan":472,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":522,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":485,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":101,"org.easymock.tests2.CaptureTest.testCaptureRightOne":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":355,"org.easymock.tests2.UsageConstraintsTest.testOr":452,"org.easymock.tests.UsageRangeTest.combination":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":369,"org.easymock.tests.UsageTest.wrongArguments":87,"org.easymock.tests2.MockBuilderTest.testWithConstructor":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":352,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":94,"org.easymock.tests.UsageVarargTest.varargShortAccepted":145,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":239,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":11,"org.easymock.tests2.UsageConstraintsTest.cmpTo":457,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":96,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":308,"org.easymock.tests2.CaptureTest.testCaptureFromStub":411,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":26,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":332,"org.easymock.tests.UsageTest.unexpectedCallWithArray":86,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":72,"org.easymock.tests2.UsageConstraintsTest.constraints":446,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":45,"org.easymock.samples.ExampleTest.addAndChangeDocument":253,"org.easymock.tests2.ConstraintsToStringTest.notToString":512,"org.easymock.tests.UsageStrictMockTest.testVerify":49,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":258,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":127,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":406,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":489,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":123,"org.easymock.tests.LimitationsTest.abstractClass":37,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":64,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":420,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":139}}]
