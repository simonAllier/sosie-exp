[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[3,4,5,6,2,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[48,49,45],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[51],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.RecordState:280","failures":[3,65,66,67,68,69,70,31],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,17,98,18,99,100,101,102,103,104,105,106,107,108,109,110,25,111,112,113,50,114,115,116,117,49,118,55,119,120,121,122,123,124,125,126,127,128,129,130,131,68,132,58,133,134,135,40,136,41,137,138,63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[139],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[116,140],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:161","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[141],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[142,57,143,144],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[145,146,147,148,149,150,64],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[151,152,153,154,155,42,156,51,157,139,46],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[158,159],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[160],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:89","sourceCode":"if ((boolean && boolean) && (!boolean)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[162,163],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[164,16,17,98,18,165,50,115,117,160,119,40,136,41],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[116,140,166,167],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[57,168,145,146,147,169,148,149,170,150,60,171,172,63,64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.ConstructorArgs:54","failures":[173,174,175,176,177,121,178,179,122,180,181,182,183,184,185,186,187,188,123,189,190,191,192,193,124,194,195,57,127,131,196,197,198,199,200,150,60,201,202,63,64],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[203,204,205,206],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[71,72,3,73,74,207,75,208,209,76,210,173,174,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,4,77,78,79,80,81,82,236,237,83,84,238,85,86,87,239,88,89,90,91,92,93,95,96,240,241,242,243,244,245,246,247,248,249,250,251,252,253,5,254,0,1,255,256,97,257,258,203,259,6,2,7,8,9,164,10,11,12,13,14,15,260,261,262,263,264,265,266,65,267,268,269,270,16,17,271,98,18,272,99,100,101,273,19,274,20,275,276,21,277,278,22,102,103,104,105,279,106,107,108,109,110,23,280,281,282,283,284,285,286,287,288,24,25,111,112,113,50,114,115,116,117,289,49,160,118,55,119,151,290,152,291,292,293,294,295,296,297,153,298,299,300,301,158,159,120,302,121,122,123,124,303,304,305,306,307,26,308,309,310,57,143,144,311,312,313,314,315,316,317,318,319,320,321,322,323,324,125,126,127,128,129,130,131,67,68,69,31,325,132,58,326,133,134,61,135,62,32,327,33,34,328,140,35,36,329,37,38,330,39,331,332,40,333,136,41,334,335,336,337,338,137,138,206,339,340,341,342,154,155,343,42,43,156,51,344,44,45,345,346,347,348,166,167,349,139,350,351,352,353,46,47,354,355,356,357,63],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[57,145,146,147,169,170,150,60,63,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cstr":"classConstructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[200],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:123","sourceCode":"if (java.lang.Object instanceof org.easymock.EasyMockSupport) {\n    java.lang.Object = ((org.easymock.EasyMockSupport)(java.lang.Object)).createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n} else {\n    java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":155,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":8,"org.easymock.tests2.UsageTest.argumentsOrdered":38,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":263,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":140,"org.easymock.tests2.StubTest.stubWithReturnValue":339,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":150,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":353,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":84,"org.easymock.tests2.SerializationTest.testAllMockedMethod":144,"org.easymock.tests2.DelegateToTest.testReturnException":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":261,"org.easymock.tests.MockingTest.testPartialClassMocking":99,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":172,"org.easymock.samples.SupportTest.voteForRemovals":76,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":183,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":214,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":205,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":122,"org.easymock.tests.UsageExpectAndThrowTest.object":224,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":350,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":138,"org.easymock.tests2.DelegateToTest.testWrongClass":69,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":145,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":25,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":111,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":344,"org.easymock.tests2.UsageTest.wrongArguments":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":97,"org.easymock.tests.UsageStrictMockTest.range":98,"org.easymock.samples.ConstructorCalledMockTest.testTax":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":245,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":125,"org.easymock.tests2.UsageConstraintsTest.testNull":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":225,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":320,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":133,"org.easymock.tests2.CaptureTest.testPrimitive":291,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":259,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":233,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests.UsageTest.moreThanOneArgument":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":244,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":104,"org.easymock.tests2.CaptureTest.testCaptureNone":296,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":7,"org.easymock.tests.UsageVarargTest.varargByteAccepted":287,"org.easymock.tests2.ThreadingTest.testThreadSafe":301,"org.easymock.tests.UsageTest.argumentsOrdered":14,"org.easymock.tests.UsageVarargTest.varargIntAccepted":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":189,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":20,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":106,"org.easymock.tests2.CaptureTest.testCapture_2617107":152,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":325,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":149,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":203,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":326,"org.easymock.tests2.UsageConstraintsTest.any":44,"org.easymock.tests2.StubTest.stub":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":262,"org.easymock.tests.UsageExpectAndThrowTest.longType":217,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":333,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":340,"org.easymock.tests2.SerializationTest.testClass":57,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":324,"org.easymock.tests.LimitationsTest.mockNativeMethod":112,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":92,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":53,"org.easymock.tests2.AnswerTest.answer":26,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":338,"org.easymock.tests2.CaptureTest.testAnd":151,"org.easymock.tests2.UsageTest.strictResetToDefault":327,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":334,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":200,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":160,"org.easymock.tests2.NameTest.nameForMocksControl":30,"org.easymock.tests2.MockedExceptionTest.testMockedException":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":315,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":179,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":12,"org.easymock.tests2.DelegateToTest.testDelegate":31,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":356,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":218,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":101,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":134,"org.easymock.tests.MockingTest.testNicePartialClassMocking":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":229,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":117,"org.easymock.tests2.CaptureTest.testCaptureLast":295,"org.easymock.tests2.CompareToTest.testCompareEqual":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":264,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":51,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":131,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":351,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":251,"org.easymock.tests2.CaptureTest.testCapture1_2446744":292,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":196,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":77,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":222,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":47,"org.easymock.tests.UsageThrowableTest.throwError":252,"org.easymock.tests.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":159,"org.easymock.tests2.MockBuilderTest.testCreateMockString":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":279,"org.easymock.tests.UsageExpectAndThrowTest.floatType":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":180,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":177,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":308,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":123,"org.easymock.samples.PartialClassMockTest.testGetArea":71,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":107,"org.easymock.samples.ExampleTest.voteAgainstRemoval":74,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":55,"org.easymock.tests2.UsageTest.niceToStrict":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":184,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":198,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":304,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":256,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":58,"org.easymock.tests2.UsageTest.defaultResetToNice":329,"org.easymock.tests2.MockBuilderTest.testCreateMock":61,"org.easymock.samples.ExampleTest.voteAgainstRemovals":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":88,"org.easymock.tests.UsageVarargTest.differentLength":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":191,"org.easymock.tests2.CallbackTest.callback":303,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":54,"org.easymock.tests.UsageTest.openCallCountByLastCall":11,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":223,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":316,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":341,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":258,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":243,"org.easymock.tests.UsageCallCountTest.tooFewCalls":19,"org.easymock.tests.UsageOverloadedMethodTest.overloading":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":188,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":347,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":267,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":85,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":128,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":346,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":246,"org.easymock.tests.UsageThrowableTest.throwCheckedException":0,"org.easymock.tests2.EasyMockSupportClassTest.testAll":121,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":235,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":337,"org.easymock.tests2.CaptureTest.testCaptureAll":290,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":249,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":241,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":130,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":127,"org.easymock.tests2.UsageConstraintsTest.testMatches":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":129,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":105,"org.easymock.samples.ExampleTest.voteForRemovals":75,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":148,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":302,"org.easymock.tests2.NameTest.nameForNiceMock":29,"org.easymock.tests.UsageVarargTest.allKinds":24,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":6,"org.easymock.tests2.DependencyTest.testInterfaceMocking":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":250,"org.easymock.samples.BasicClassMockTest.testPrintContent":212,"org.easymock.samples.ExampleTest.addDocument":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":194,"org.easymock.tests2.DelegateToTest.testStubDelegate":68,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":255,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":331,"org.easymock.tests2.AnswerTest.stubAnswer":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":265,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":70,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":17,"org.easymock.tests2.UsageConstraintsTest.greaterThan":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":170,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":178,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":94,"org.easymock.tests.UsageVarargTest.varargLongAccepted":286,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":119,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":272,"org.easymock.samples.ExampleTest.voteForRemoval":73,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":91,"org.easymock.tests.UsageExpectAndReturnTest.floatType":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":289,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":63,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":174,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":349,"org.easymock.tests.UsageThrowableTest.noUpperLimit":253,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":342,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":242,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":32,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":293,"org.easymock.tests2.SerializationTest.test":143,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":60,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":313,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":78,"org.easymock.tests2.UsageConstraintsTest.testSame":43,"org.easymock.samples.SupportTest.addDocument":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":260,"org.easymock.tests2.CaptureTest.testCaptureFirst":300,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":314,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":39,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":181,"org.easymock.tests.GenericTest.testPackageScope":234,"org.easymock.tests2.CaptureTest.testCapture2_2446744":299,"org.easymock.tests2.UsageTest.moreThanOneArgument":33,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":120,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":135,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":288,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":276,"org.easymock.tests2.NameTest.nameForMock":27,"org.easymock.tests.UsageExpectAndReturnTest.longType":80,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":232,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":86,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":230,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":202,"org.easymock.tests2.UsageStrictMockTest.differentMethods":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":81,"org.easymock.tests.UsageCallCountTest.tooManyCalls":21,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":228,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":96,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":273,"org.easymock.tests2.MockedExceptionTest.testRealException":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":171,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":219,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":1,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":163,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":126,"org.easymock.tests2.UsageConstraintsTest.testContains":345,"org.easymock.tests2.NameTest.nameForStrictMock":28,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":306,"org.easymock.tests2.UsageConstraintsTest.testFind":343,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":22,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":355,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":116,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":357,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":269,"org.easymock.tests.UsageExpectAndReturnTest.object":238,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":49,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":132,"org.easymock.tests2.UsageStrictMockTest.range":136,"org.easymock.tests2.UsageConstraintsTest.lessThan":354,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":319,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":146,"org.easymock.tests.UsageTest.exactCallCountByLastCall":15,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":240,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":312,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":169,"org.easymock.tests2.CaptureTest.testCaptureRightOne":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":185,"org.easymock.tests2.UsageConstraintsTest.testOr":156,"org.easymock.tests.UsageRangeTest.combination":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":64,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":89,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":23,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":65,"org.easymock.tests.UsageTest.wrongArguments":10,"org.easymock.tests2.MockBuilderTest.testWithConstructor":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":182,"org.easymock.tests2.EasyMockSupportTest.testVerify":323,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":82,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":186,"org.easymock.tests.UsageVarargTest.varargShortAccepted":285,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":335,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":275,"org.easymock.tests2.UsageConstraintsTest.cmpTo":45,"org.easymock.tests.UsageVarargTest.varargCharAccepted":282,"org.easymock.tests2.CaptureTest.testCaptureMultiple":161,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":332,"org.easymock.tests2.UsageTest.openCallCountByLastCall":35,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":36,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":322,"org.easymock.tests2.CaptureTest.testCaptureFromStub":298,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":162,"org.easymock.tests.UsageTest.unexpectedCallWithArray":164,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":254,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":274,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":201,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":239,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":118,"org.easymock.tests2.UsageConstraintsTest.constraints":154,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":220,"org.easymock.samples.ExampleTest.addAndChangeDocument":208,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":90,"org.easymock.tests.UsageStrictMockTest.testVerify":165,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":210,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":248,"org.easymock.tests2.UsageTest.resumeIfFailure":330,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":108,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":317,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":280}}]
