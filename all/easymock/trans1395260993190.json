[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[5,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[53,54,55,56,57,58],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:45","sourceCode":"java.util.List<org.easymock.internal.Result>.add(org.easymock.internal.Result)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"position":"org.easymock.internal.LastControl:92","failures":[61,62,63,59,64,65,66,67,68],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[69,70,71,72,73,74],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[75],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[76],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[77,78,5,79,80,81,19,82,83,84,85,86,87,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,88,89,90],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + (org.easymock.internal.Range.toString())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[91,53,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,9,16,130,131,132,133,61,134,135,136,137,138,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[77,78,140,79,82,141,83],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[142,143],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[34],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[144,5,145,146],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[147,99,101,148,122,149],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[69,70,71,72,73,74],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[151,152,153,154,147,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,99,176,101,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,122,193,194,195,196,197,149],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[198],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[20,21,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,199,200,77,77,78,78,1,2,201,202,203,204,205,3,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,69,70,71,72,226,73,74,227,228,229,230,231,4,232,140,233,234,114,235,115,236,237,5,146,6,7,8,9,10,238,11,12,13,14,19,15,16,17,18,239,240,84,85,194,195,196,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,241,242,88,243,244,89],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[70,73],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[245,246,247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[248],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":62,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":101,"org.easymock.tests2.UsageTest.argumentsOrdered":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":154,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":126,"org.easymock.tests2.StubTest.stubWithReturnValue":149,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":81,"org.easymock.tests2.SerializationTest.testAllMockedMethod":146,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":152,"org.easymock.tests.MockingTest.testPartialClassMocking":214,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":58,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":203,"org.easymock.tests.MockClassControlTest.testToString":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":38,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":144,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":156,"org.easymock.tests.UsageExpectAndThrowTest.object":166,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":60,"org.easymock.tests2.UsageTest.wrongArguments":124,"org.easymock.tests.UsageStrictMockTest.range":94,"org.easymock.samples.ConstructorCalledMockTest.testTax":77,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":241,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":2,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":167,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":13,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":28,"org.easymock.tests.UsageTest.moreThanOneArgument":102,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":104,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":175,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":55,"org.easymock.tests.UsageUnorderedTest.message":97,"org.easymock.tests.UsageVerifyTest.twoReturns":100,"org.easymock.tests.UsageTest.argumentsOrdered":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":45,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":199,"org.easymock.tests2.CaptureTest.testCapture_2617107":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":247,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":180,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":12,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":153,"org.easymock.tests.UsageExpectAndThrowTest.longType":159,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":226,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":118,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests.LimitationsTest.mockNativeMethod":209,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":3,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":64,"org.easymock.tests2.CaptureTest.testAnd":66,"org.easymock.tests2.UsageTest.strictResetToDefault":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":234,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":80,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":121,"org.easymock.tests2.NameTest.nameForMocksControl":139,"org.easymock.tests2.MockedExceptionTest.testMockedException":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":33,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":216,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":160,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":227,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":14,"org.easymock.tests.MockingTest.testNicePartialClassMocking":215,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":171,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":231,"org.easymock.tests.LimitationsTest.mockFinalMethod":210,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":147,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":89,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":59,"org.easymock.tests.MockingTest.testTwoMocks":213,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":169,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":164,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":127,"org.easymock.tests.UsageThrowableTest.throwError":186,"org.easymock.tests.UsageStrictMockTest.differentMethods":95,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":71,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":143,"org.easymock.tests2.MockBuilderTest.testCreateMockString":18,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":35,"org.easymock.tests.UsageExpectAndThrowTest.floatType":158,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":30,"org.easymock.tests.UsageVerifyTest.twoThrows":99,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":44,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":150,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":235,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":39,"org.easymock.tests2.UsageTest.niceToStrict":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":157,"org.easymock.tests.LimitationsTest.privateConstructor":208,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":87,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":192,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":27,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":11,"org.easymock.tests2.MockBuilderTest.testCreateMock":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":47,"org.easymock.tests.UsageVarargTest.differentLength":107,"org.easymock.tests2.CallbackTest.callback":135,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":140,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":57,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":165,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":131,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":182,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":179,"org.easymock.tests.UsageCallCountTest.tooFewCalls":111,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":43,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":183,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":243,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":248,"org.easymock.tests.UsageThrowableTest.throwCheckedException":189,"org.easymock.tests.MockClassControlTest.testEquals":224,"org.easymock.tests2.EasyMockSupportClassTest.testAll":31,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":205,"org.easymock.tests.MockingTest.testStrictClassMocking":211,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":56,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":173,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":141,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":244,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":176,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":246,"org.easymock.tests2.NameTest.nameForNiceMock":138,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":98,"org.easymock.samples.BasicClassMockTest.testPrintContent":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":51,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":191,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":155,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":32,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":115,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":96,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":74,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":236,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":4,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":78,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":202,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":76,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":122,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":239,"org.easymock.tests2.SerializationTest.test":145,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":19,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":70,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":151,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":36,"org.easymock.tests.GenericTest.testPackageScope":204,"org.easymock.tests2.UsageTest.moreThanOneArgument":123,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":16,"org.easymock.tests.GenericTest.testBridgedEquals":206,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":25,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":112,"org.easymock.tests2.NameTest.nameForMock":136,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":17,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":83,"org.easymock.tests2.UsageStrictMockTest.differentMethods":120,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":172,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":184,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":233,"org.easymock.tests.UsageCallCountTest.tooManyCalls":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":170,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":110,"org.easymock.tests2.MockedExceptionTest.testRealException":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":48,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":117,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":161,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":190,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":242,"org.easymock.tests.MockingTest.testNiceClassMocking":217,"org.easymock.tests.MockingTest.testClassMocking":212,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":8,"org.easymock.tests2.NameTest.nameForStrictMock":137,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":196,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":178,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":238,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":21,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":230,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":91,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":240,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":72,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":65,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":232,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":9,"org.easymock.tests2.UsageStrictMockTest.range":119,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":26,"org.easymock.tests.UsageTest.exactCallCountByLastCall":106,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":130,"org.easymock.tests2.CaptureTest.testCaptureRightOne":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":40,"org.easymock.tests2.UsageConstraintsTest.testOr":63,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":85,"org.easymock.tests.UsageRangeTest.combination":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":228,"org.easymock.tests.UsageTest.wrongArguments":103,"org.easymock.tests2.MockBuilderTest.testWithConstructor":79,"org.easymock.tests.MockClassControlTest.testHashCode":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":37,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":41,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":73,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":181,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":148,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":193,"org.easymock.tests.DefaultClassInstantiatorTest.object":69,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":20,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":10,"org.easymock.tests.UsageTest.unexpectedCallWithArray":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":163,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":188,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":82,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":222,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":93,"org.easymock.tests2.UsageConstraintsTest.constraints":61,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":114,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":162,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":50,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":6,"org.easymock.tests.LimitationsTest.abstractClass":207,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":132}}]
