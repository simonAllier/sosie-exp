[{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[15,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:155","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[32,32,33,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[1,11,12,13,15,16,91,92,20,93,25,94,27,28,29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,37,114,115,0,116,1,2,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,46,135,136,137,138,139,58,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,59,205,206,10,11,207,208,209,210,211,12,13,212,213,214,215,216,217,218,219,220,221,14,15,16,222,223,224,225,226,227,17,18,228,229,230,231,30,31,232,233,234,235,92,19,236,20,21,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,22,277,278,23,24,93,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,25,79,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,80,337,338,339,340,341,342,343,344,345,346,26,94,27,347,348,28,29,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[109,111,0,116,121,122,123,124,125,126,127,128,129,130,131,132,133,134,52,53,136,137,350,142,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,222,223,224,225,226,92,19,246,247,25,304,305,306,311,312,313,314,315,329,330,331,332],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[170,171],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:130","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[104,105,351,352,353,111,354,355,356,357,358,141,359,360],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:105","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[361,169],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[181],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[95,96,97,98,99,100,101,102,103,32,33,104,34,35,36,105,106,107,108,109,110,111,112,113,37,114,115,0,116,1,2,117,38,118,39,119,40,41,42,43,120,44,45,121,122,123,124,125,126,127,128,129,130,131,132,133,134,46,47,135,48,49,50,51,52,53,54,55,56,136,137,138,139,58,140,141,142,143,144,145,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,199,202,203,204,59,60,62,63,64,65,66,67,68,205,206,10,11,207,208,209,210,211,12,13,212,213,69,70,71,72,218,219,220,221,14,15,16,222,223,224,225,226,228,229,230,231,30,31,232,233,234,235,92,19,236,20,21,237,242,243,244,245,246,247,249,250,251,252,253,254,255,76,77,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,93,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,25,79,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,81,82,83,362,362,90,342,344,345,346,26,94,27,347,348,28,29,349],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:41","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[363,25],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[47,57,364,195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[49,184,208,365],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[200,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[1,367,15,16,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[169,176,182,194],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:85","sourceCode":"return java.util.List<T>.get(0)","type":"CtReturnImpl"},"failures":[121,123,124,125,126,127,128,130,368,131,132,134],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[38,118,39],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":170,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":346,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":245,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":208,"org.easymock.tests2.StubTest.stubWithReturnValue":166,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":265,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":104,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":191,"org.easymock.tests2.SerializationTest.testAllMockedMethod":39,"org.easymock.tests2.DelegateToTest.testReturnException":147,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":243,"org.easymock.tests.MockingTest.testPartialClassMocking":81,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":7,"org.easymock.samples.SupportTest.voteForRemovals":96,"org.easymock.tests.MockClassControlTest.testToString":86,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":364,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":227,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":291,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":57,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":341,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":279,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":70,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":200,"org.easymock.tests.UsageExpectAndThrowTest.object":289,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":113,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":188,"org.easymock.tests2.DelegateToTest.testWrongClass":149,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":330,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":331,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":311,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":355,"org.easymock.tests.UsageStrictMockTest.range":20,"org.easymock.samples.ConstructorCalledMockTest.testTax":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":220,"org.easymock.samples.ExampleTest.answerVsDelegate":98,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":159,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":75,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":40,"org.easymock.tests2.UsageConstraintsTest.testNull":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":290,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":48,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":64,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":161,"org.easymock.tests2.CaptureTest.testPrimitive":124,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":315,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":298,"org.easymock.tests.UsageTest.moreThanOneArgument":26,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":219,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":334,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":217,"org.easymock.tests2.CaptureTest.testCaptureNone":129,"org.easymock.tests.UsageUnorderedTest.message":25,"org.easymock.tests.UsageVerifyTest.twoReturns":16,"org.easymock.tests.UsageVarargTest.varargByteAccepted":327,"org.easymock.tests2.ThreadingTest.testThreadSafe":106,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":299,"org.easymock.tests.UsageTest.argumentsOrdered":29,"org.easymock.tests.UsageVarargTest.varargIntAccepted":321,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":252,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":35,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":222,"org.easymock.tests2.CaptureTest.testCapture_2617107":123,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":314,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":63,"org.easymock.tests2.UsageConstraintsTest.any":178,"org.easymock.tests2.StubTest.stub":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":226,"org.easymock.tests.UsageExpectAndThrowTest.longType":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":244,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":5,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":365,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":116,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests.LimitationsTest.mockNativeMethod":79,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":111,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":275,"org.easymock.tests2.AnswerTest.answer":199,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":78,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":177,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":145,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":353,"org.easymock.tests2.CaptureTest.testAnd":121,"org.easymock.tests2.UsageTest.strictResetToDefault":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":53,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":117,"org.easymock.tests2.NameTest.nameForMocksControl":198,"org.easymock.tests2.MockedExceptionTest.testMockedException":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":156,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":348,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":303,"org.easymock.tests2.DelegateToTest.testDelegate":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":283,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":83,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":46,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":65,"org.easymock.tests.MockingTest.testNicePartialClassMocking":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":294,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":50,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":351,"org.easymock.tests2.CaptureTest.testCaptureLast":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":246,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":45,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":310,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":189,"org.easymock.tests.MockingTest.testTwoMocks":80,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":17,"org.easymock.tests2.CaptureTest.testCapture1_2446744":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":143,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":193,"org.easymock.tests.UsageThrowableTest.throwError":228,"org.easymock.tests.UsageStrictMockTest.differentMethods":21,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":358,"org.easymock.tests2.ConstraintsToStringTest.andToString":6,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":108,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":360,"org.easymock.tests2.MockBuilderTest.testCreateMockString":68,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":336,"org.easymock.tests.UsageExpectAndThrowTest.floatType":281,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":184,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":202,"org.easymock.tests.UsageVerifyTest.twoThrows":15,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":71,"org.easymock.samples.PartialClassMockTest.testGetArea":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":223,"org.easymock.samples.ExampleTest.voteAgainstRemoval":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":215,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":280,"org.easymock.tests2.UsageTest.niceToStrict":207,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":73,"org.easymock.tests2.UsageConstraintsTest.testNotNull":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":233,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":138,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":62,"org.easymock.tests2.UsageTest.defaultResetToNice":211,"org.easymock.tests2.MockBuilderTest.testCreateMock":66,"org.easymock.samples.ExampleTest.voteAgainstRemovals":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":271,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":352,"org.easymock.tests.UsageVarargTest.differentLength":324,"org.easymock.tests2.CallbackTest.callback":119,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":354,"org.easymock.tests.UsageTest.openCallCountByLastCall":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":288,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":157,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":167,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":339,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":313,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":218,"org.easymock.tests.UsageCallCountTest.tooFewCalls":250,"org.easymock.tests.UsageOverloadedMethodTest.overloading":317,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":278,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":182,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":43,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":181,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":221,"org.easymock.tests.UsageThrowableTest.throwCheckedException":30,"org.easymock.tests2.EasyMockSupportClassTest.testAll":69,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":77,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":308,"org.easymock.tests2.CaptureTest.testCaptureAll":122,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":144,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":305,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":44,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":42,"org.easymock.tests2.UsageConstraintsTest.testMatches":183,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":120,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":335,"org.easymock.samples.ExampleTest.voteForRemovals":102,"org.easymock.tests2.NameTest.nameForNiceMock":197,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":110,"org.easymock.tests.UsageVarargTest.allKinds":329,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":14,"org.easymock.tests2.DependencyTest.testInterfaceMocking":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":309,"org.easymock.samples.BasicClassMockTest.testPrintContent":36,"org.easymock.samples.ExampleTest.addDocument":101,"org.easymock.tests2.DelegateToTest.testStubDelegate":148,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":232,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":114,"org.easymock.tests2.AnswerTest.stubAnswer":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":247,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":150,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":19,"org.easymock.tests2.UsageConstraintsTest.greaterThan":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":343,"org.easymock.tests.UsageVarargTest.varargLongAccepted":326,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":56,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":237,"org.easymock.samples.ExampleTest.voteForRemoval":99,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":107,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":274,"org.easymock.tests.UsageExpectAndReturnTest.floatType":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":51,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":37,"org.easymock.tests2.ConstraintsToStringTest.orToString":3,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":33,"org.easymock.tests.UsageThrowableTest.noUpperLimit":229,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":23,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":186,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":205,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":90,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":168,"org.easymock.tests2.SerializationTest.test":118,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":154,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":230,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":257,"org.easymock.tests2.UsageConstraintsTest.testSame":173,"org.easymock.samples.SupportTest.addDocument":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":242,"org.easymock.tests2.CaptureTest.testCaptureFirst":134,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":155,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":213,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":263,"org.easymock.tests.GenericTest.testPackageScope":76,"org.easymock.tests2.UsageTest.moreThanOneArgument":10,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":109,"org.easymock.tests2.CaptureTest.testCapture2_2446744":133,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":302,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":67,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":359,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":254,"org.easymock.tests2.NameTest.nameForMock":195,"org.easymock.tests.UsageExpectAndReturnTest.longType":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":306,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":268,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":214,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":190,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":295,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":332,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":260,"org.easymock.tests.UsageCallCountTest.tooManyCalls":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":293,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":345,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":249,"org.easymock.tests2.MockedExceptionTest.testRealException":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":284,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":312,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":31,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":41,"org.easymock.tests2.NameTest.nameForStrictMock":196,"org.easymock.tests2.UsageConstraintsTest.testContains":180,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":58,"org.easymock.tests2.UsageConstraintsTest.testFind":171,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":318,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":136,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":49,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":234,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":137,"org.easymock.tests.UsageExpectAndReturnTest.object":266,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":363,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":52,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":60,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":160,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":323,"org.easymock.tests.UsageTest.exactCallCountByLastCall":349,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":304,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":153,"org.easymock.tests2.CaptureTest.testCaptureRightOne":131,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":300,"org.easymock.tests2.UsageConstraintsTest.testOr":174,"org.easymock.tests.UsageRangeTest.combination":342,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":319,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":272,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":47,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":277,"org.easymock.tests.UsageTest.wrongArguments":27,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":357,"org.easymock.tests.MockClassControlTest.testHashCode":89,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":261,"org.easymock.tests2.EasyMockSupportTest.testVerify":164,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":269,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":301,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":338,"org.easymock.tests.UsageVarargTest.varargShortAccepted":325,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":276,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":253,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":142,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":350,"org.easymock.tests2.UsageConstraintsTest.cmpTo":179,"org.easymock.tests.UsageVarargTest.varargCharAccepted":322,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":201,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":115,"org.easymock.tests2.UsageTest.openCallCountByLastCall":209,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":163,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":337,"org.easymock.tests2.CaptureTest.testCaptureFromStub":132,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":61,"org.easymock.tests.UsageTest.unexpectedCallWithArray":94,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":91,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":286,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":231,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":92,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":251,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":356,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":270,"org.easymock.tests2.CaptureTest.testCapture":368,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":236,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":54,"org.easymock.tests2.UsageConstraintsTest.constraints":169,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":285,"org.easymock.samples.ExampleTest.addAndChangeDocument":103,"org.easymock.tests2.ConstraintsToStringTest.notToString":4,"org.easymock.tests.CapturesMatcherTest.test":362,"org.easymock.tests2.ConstraintsToStringTest.containsToString":361,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":273,"org.easymock.tests.UsageStrictMockTest.testVerify":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":239,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":105,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":235,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":307,"org.easymock.tests2.UsageTest.resumeIfFailure":212,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":224,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":262,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":225,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":24,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":367,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":158}}]
