[{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,7,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,5,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,4,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,6,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,0,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,1,2,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,8,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,7,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,5,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,4,126,127,128,129,130,131,132,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,6,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,0,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,196,197,198,199,200,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,8,305,306,330,330,315,316,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[29,112,128,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[331],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"value","properties":"properties","key":"key"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[42,43,44,332],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[70,123,154,239],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[19,19,20,20,22,23,24,34,42,44,46,47,48,49,51,52,67,7,69,70,71,72,73,74,75,76,77,334,82,141,142,335,143,144,145,146,147,148,149,162,163,164,165,336,337,338,211,212,339,340,271,341,8,305,306,307,308,309,310,311,312,313,314,315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[37,39,40,342,343,344,345,346,347,348,152,153,158,159,170,171,172,349,350,188,190,191,351,352,248,270,321,323,326,327],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[35,38,39,40,45,7,75,77,94,5,98,101,109,123,142,147,148,149,150,153,6,154,158,159,160,161,171,172,353,354,185,187,189,190,191,355,356,208,209,210,270,292,316,320,322,323,326,327,328],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":110,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":320,"org.easymock.tests2.UsageTest.argumentsOrdered":159,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":199,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":154,"org.easymock.tests2.StubTest.stubWithReturnValue":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":222,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":21,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":129,"org.easymock.tests2.SerializationTest.testAllMockedMethod":44,"org.easymock.tests2.DelegateToTest.testReturnException":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":197,"org.easymock.tests.MockingTest.testPartialClassMocking":8,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":346,"org.easymock.samples.SupportTest.voteForRemovals":10,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":331,"org.easymock.tests.MockClassControlTest.testToString":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":262,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":250,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":163,"org.easymock.tests.UsageExpectAndThrowTest.object":260,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":33,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":126,"org.easymock.tests2.DelegateToTest.testWrongClass":91,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":298,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":299,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":279,"org.easymock.tests2.UsageTest.wrongArguments":153,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.UsageStrictMockTest.range":190,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":168,"org.easymock.samples.ExampleTest.answerVsDelegate":12,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":99,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":338,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":46,"org.easymock.tests2.UsageConstraintsTest.testNull":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":261,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":69,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":314,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":101,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":145,"org.easymock.tests2.CaptureTest.testPrimitive":56,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":283,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":326,"org.easymock.tests.UsageTest.moreThanOneArgument":321,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":269,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":243,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":302,"org.easymock.tests2.CaptureTest.testCaptureNone":61,"org.easymock.tests.UsageUnorderedTest.message":270,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":355,"org.easymock.tests.UsageVerifyTest.twoReturns":172,"org.easymock.tests.UsageVarargTest.varargByteAccepted":295,"org.easymock.tests2.ThreadingTest.testThreadSafe":26,"org.easymock.tests.UsageTest.argumentsOrdered":327,"org.easymock.tests.UsageVarargTest.varargIntAccepted":289,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":207,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":347,"org.easymock.tests2.CaptureTest.testCapture_2617107":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":0,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":348,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":282,"org.easymock.tests2.UsageConstraintsTest.any":117,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":144,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":240,"org.easymock.tests2.StubTest.stub":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":176,"org.easymock.tests.UsageExpectAndThrowTest.longType":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":198,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":344,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":239,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":38,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":84,"org.easymock.tests2.SerializationTest.testClass":42,"org.easymock.tests.LimitationsTest.mockNativeMethod":271,"org.easymock.tests.ReplayStateInvalidUsageTest.times":241,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":31,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":339,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":232,"org.easymock.tests2.AnswerTest.answer":137,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":88,"org.easymock.tests2.CaptureTest.testAnd":53,"org.easymock.tests2.UsageTest.strictResetToDefault":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":74,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":41,"org.easymock.tests2.NameTest.nameForMocksControl":136,"org.easymock.tests2.MockedExceptionTest.testMockedException":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":301,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":97,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":325,"org.easymock.tests2.DelegateToTest.testDelegate":92,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":306,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":254,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":67,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":146,"org.easymock.tests.MockingTest.testNicePartialClassMocking":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":265,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":71,"org.easymock.tests2.CaptureTest.testCaptureLast":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":200,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":350,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":52,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":278,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":127,"org.easymock.tests.MockingTest.testTwoMocks":341,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":349,"org.easymock.tests2.CaptureTest.testCapture1_2446744":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":258,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":86,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":158,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":131,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":235,"org.easymock.tests.UsageThrowableTest.throwError":177,"org.easymock.samples.ExampleTest.removeNonExistingDocument":17,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":237,"org.easymock.tests.UsageStrictMockTest.differentMethods":191,"org.easymock.tests2.ConstraintsToStringTest.andToString":345,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":28,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":356,"org.easymock.tests2.MockBuilderTest.testCreateMockString":149,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":307,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":304,"org.easymock.tests.UsageExpectAndThrowTest.floatType":252,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":123,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":138,"org.easymock.tests.UsageVerifyTest.twoThrows":171,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":164,"org.easymock.samples.PartialClassMockTest.testGetArea":22,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":173,"org.easymock.samples.ExampleTest.voteAgainstRemoval":14,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":76,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":251,"org.easymock.tests2.UsageTest.niceToStrict":6,"org.easymock.tests2.UsageConstraintsTest.testNotNull":130,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":184,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":143,"org.easymock.tests2.MockBuilderTest.testCreateMock":147,"org.easymock.tests2.UsageTest.defaultResetToNice":157,"org.easymock.samples.ExampleTest.voteAgainstRemovals":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":228,"org.easymock.tests.UsageVarargTest.differentLength":292,"org.easymock.tests2.CallbackTest.callback":45,"org.easymock.tests.UsageTest.openCallCountByLastCall":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":259,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":5,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":107,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":281,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":166,"org.easymock.tests.UsageCallCountTest.tooFewCalls":205,"org.easymock.tests.UsageOverloadedMethodTest.overloading":285,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":247,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":121,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":49,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":120,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":169,"org.easymock.tests.UsageThrowableTest.throwCheckedException":181,"org.easymock.tests.MockClassControlTest.testEquals":313,"org.easymock.tests2.EasyMockSupportClassTest.testAll":162,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":212,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":87,"org.easymock.tests2.CaptureTest.testCaptureAll":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":273,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":51,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":48,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":242,"org.easymock.tests2.UsageConstraintsTest.testMatches":122,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":50,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":303,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":233,"org.easymock.tests.ObjectMethodsTest.testHashCode":194,"org.easymock.samples.ExampleTest.voteForRemovals":16,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":30,"org.easymock.tests2.NameTest.nameForNiceMock":135,"org.easymock.tests.UsageVarargTest.allKinds":297,"org.easymock.tests2.DependencyTest.testInterfaceMocking":32,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":277,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.samples.ExampleTest.addDocument":15,"org.easymock.tests2.DelegateToTest.testStubDelegate":90,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":183,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":35,"org.easymock.tests2.AnswerTest.stubAnswer":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":201,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":188,"org.easymock.tests2.UsageConstraintsTest.greaterThan":124,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":3,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":317,"org.easymock.tests.UsageVarargTest.varargLongAccepted":294,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":77,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":192,"org.easymock.samples.ExampleTest.voteForRemoval":13,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":27,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":231,"org.easymock.tests.UsageExpectAndReturnTest.floatType":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":72,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":34,"org.easymock.tests2.ConstraintsToStringTest.orToString":342,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":125,"org.easymock.tests.UsageThrowableTest.noUpperLimit":178,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":315,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":108,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":150,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":58,"org.easymock.tests2.SerializationTest.test":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":95,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":179,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":214,"org.easymock.tests2.UsageConstraintsTest.testSame":113,"org.easymock.samples.SupportTest.addDocument":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":196,"org.easymock.tests2.CaptureTest.testCaptureFirst":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":96,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":220,"org.easymock.tests.GenericTest.testPackageScope":211,"org.easymock.tests2.CaptureTest.testCapture2_2446744":65,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":29,"org.easymock.tests2.UsageTest.moreThanOneArgument":152,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":148,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":296,"org.easymock.tests.GenericTest.testBridgedEquals":340,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":209,"org.easymock.tests2.NameTest.nameForMock":133,"org.easymock.tests.UsageExpectAndReturnTest.longType":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":274,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":268,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":225,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":128,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":266,"org.easymock.tests2.UsageStrictMockTest.differentMethods":40,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":300,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":217,"org.easymock.tests.UsageCallCountTest.tooManyCalls":210,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":319,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":204,"org.easymock.tests2.MockedExceptionTest.testRealException":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":221,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":255,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":280,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":244,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":182,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":47,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":203,"org.easymock.tests2.UsageConstraintsTest.testContains":119,"org.easymock.tests2.NameTest.nameForStrictMock":134,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":82,"org.easymock.tests2.UsageConstraintsTest.testFind":111,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":286,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":333,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":70,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":79,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":185,"org.easymock.tests.UsageExpectAndReturnTest.object":223,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":4,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":73,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":142,"org.easymock.tests2.UsageStrictMockTest.range":39,"org.easymock.tests2.UsageConstraintsTest.lessThan":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":100,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":291,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":195,"org.easymock.tests.UsageTest.exactCallCountByLastCall":328,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":329,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":272,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":94,"org.easymock.tests2.CaptureTest.testCaptureRightOne":63,"org.easymock.tests2.UsageConstraintsTest.testOr":114,"org.easymock.tests.UsageRangeTest.combination":316,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":287,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":7,"org.easymock.tests.UsageTest.wrongArguments":323,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":246,"org.easymock.tests.MockClassControlTest.testHashCode":312,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":218,"org.easymock.tests2.EasyMockSupportTest.testVerify":104,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":226,"org.easymock.tests.UsageVarargTest.varargShortAccepted":293,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":245,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":353,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":85,"org.easymock.tests2.UsageConstraintsTest.cmpTo":118,"org.easymock.tests.UsageVarargTest.varargCharAccepted":290,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":36,"org.easymock.tests2.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests.DefaultClassInstantiatorTest.object":1,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":103,"org.easymock.tests2.CaptureTest.testCaptureFromStub":64,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":234,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":335,"org.easymock.tests.UsageTest.unexpectedCallWithArray":322,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":2,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":354,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":180,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":187,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":206,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":227,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":311,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":75,"org.easymock.tests2.UsageConstraintsTest.constraints":109,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":189,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":256,"org.easymock.samples.ExampleTest.addAndChangeDocument":18,"org.easymock.tests2.ConstraintsToStringTest.notToString":343,"org.easymock.tests.CapturesMatcherTest.test":330,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":230,"org.easymock.tests.UsageStrictMockTest.testVerify":193,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":25,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":165,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":275,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":59,"org.easymock.tests2.UsageTest.resumeIfFailure":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":337,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":219,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":175,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":98}}]
