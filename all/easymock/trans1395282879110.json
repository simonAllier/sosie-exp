[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","type":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[6,7,8,9,10,11,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[15,16,17,18,19,20,21,22,23],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[6,24,25,7,8,9,10,26,27,28],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,13,42,43,44,45,46,47,48,0,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,3,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,180,181,181,182,183,184,185,186,187,17,188,189,18,19,20,21,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,22,217,218,23,219,220,221,222,223,224,225,226,227,228,25,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,14,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,28,311,312],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[313,314,174,184,315,185,187,192,288,289],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[14,261,265],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[316],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[261],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[317],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[29,0,51,318,319,3,149,152,153,156,157,197,298,304,305],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[29,320,31,32,33,13,42,43,44,45,46,0,49,66,67,68,69,70,163,164,165,166,21,190,195,196,238,243,244,245,246,247,14,248,249,250,251,321,252,253,254,255,256,257,258,259,260,261,262,263,322,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,288,289,290,293,295],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[323,242],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[29,320,30,325,326,327,328,329,15,31,32,33,34,35,330,36,37,331,38,39,40,41,13,42,43,44,45,46,332,333,316,47,48,0,49,50,51,52,53,54,334,335,336,337,338,339,340,55,56,57,58,341,342,343,344,345,317,346,347,348,349,350,351,352,59,60,61,62,63,64,65,353,354,355,66,67,68,69,70,356,357,358,359,360,71,72,361,16,73,74,75,76,362,363,364,365,366,367,368,369,370,371,372,373,374,313,375,376,377,378,379,380,381,382,383,384,385,77,386,78,79,387,80,388,389,81,390,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,391,123,124,125,126,127,392,128,129,393,394,130,395,396,397,398,131,132,133,134,135,136,137,138,399,400,401,402,403,404,405,406,407,408,409,410,139,140,411,141,412,413,414,142,143,144,145,146,147,148,3,149,150,151,152,153,154,155,156,157,415,158,416,159,160,161,162,163,164,417,418,419,165,166,314,420,421,323,422,167,423,168,169,170,171,172,173,174,175,176,177,178,424,179,180,181,182,183,184,425,315,185,186,187,17,188,189,18,19,20,426,427,21,428,429,190,430,191,431,432,433,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,22,217,218,23,434,219,220,221,435,222,436,437,438,439,440,223,224,225,6,226,441,24,442,227,443,228,25,7,444,445,229,230,231,232,446,233,234,235,447,236,448,449,450,451,452,237,453,454,455,456,457,458,238,239,240,241,242,243,244,245,246,459,247,14,248,249,250,251,321,252,253,254,255,256,257,258,259,260,261,262,263,322,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,460,461,462,284,463,464,285,465,466,467,468,469,470,471,472,473,286,474,475,476,477,478,287,479,480,288,481,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,482,483,484,485,486,487,488,489,490,308,309,491,492,493,494,495,310,496,497,498,499,500,501,28,311,312],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[368,186],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[320,30,325,326,327,328,329,15,317,350,59,360,71,72,361,16,393,394,130,395,400,401,402,403,404,405,407,408,409,410,139,140,141,414,170,180,180,181,181,182,183,17,188,18,19,20,426,21,428,429,190,430,191,431,432,433,22,217,218,23,220,221,222,437,438,440,223,224,225,226,24,442,227,228,25,7,239,240,241,460,461,462,284,463,464,285,465,466,467,468,469,470,471,472,473,286,474,475,476,477,478,287,479,480,482,483,486,489,490,28,312],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[502],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[223,503],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[504],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[446,447],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[29,31,32,33,34,35,36,37,331,38,39,40,41,13,42,43,44,45,46,333,47,48,0,49,50,51,52,53,54,342,343,59,60,62,63,64,65,354,355,66,67,68,69,70,356,357,358,71,72,361,73,74,75,76,377,383,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,391,392,128,129,130,396,397,398,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,417,418,419,165,166,314,421,323,167,168,169,170,171,172,173,174,175,176,177,178,179,180,180,181,181,182,183,184,425,315,185,186,187,17,188,189,18,19,20,21,430,191,431,192,193,194,195,196,197,198,199,204,205,206,207,208,209,210,211,212,213,214,215,216,22,217,218,23,219,220,221,437,223,225,226,227,25,229,230,231,232,446,233,234,235,447,236,237,239,240,241,242,243,244,245,246,247,14,248,249,250,251,321,252,253,254,255,256,257,258,259,260,261,262,263,322,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,28,311,312],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[400,401,402,403,405,407],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[246,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[31,42,43,44,45,46,333,49,51,52,66,67,70,71,361,73,74,75,76,371,373,381,382,384,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,392,128,129,130,131,133,134,135,136,137,138,139,140,141,147,148,150,151,154,155,157,417,418,419,165,166,167,170,172,173,175,176,178,184,186,17,188,189,18,19,20,21,430,191,431,195,197,198,204,205,206,207,208,209,210,211,212,213,214,215,22,217,218,23,219,220,221,437,223,225,226,227,25,234,237,241,243,244,245,246,247,14,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,273,274,277,278,279,280,282,283,284,285,286,287,290,291,292,293,294,295,296,297,299,301,302,303,306,307,308,309,310,28,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[6,24,25,7,8,9,10,27,28],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[505,28,311,312],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[218,221,435,436,439,6,506,443,7,507,508],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:135","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[509,267],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[404,510,511],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[30,325,326,327,339,317,350,59,71,72,361,130,410,139,140,141,170,180,180,181,181,182,183,17,188,18,19,20,426,21,190,430,191,431,433,22,217,218,23,220,221,222,437,438,223,224,225,226,442,227,228,25,241,284,285,286,287,28,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[29,0,51,319,3,149,152,153,156,157,423,197,298,304,305],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[369],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":246,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":147,"org.easymock.tests2.UsageTest.argumentsOrdered":305,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":372,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":300,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":168,"org.easymock.tests2.DelegateToTest.testReturnException":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":160,"org.easymock.tests.MockingTest.testPartialClassMocking":139,"org.easymock.tests.MockClassControlTest.testToString":325,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":445,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":333,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":468,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":83,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":285,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":309,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":251,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":66,"org.easymock.tests2.UsageTest.wrongArguments":298,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":501,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":57,"org.easymock.samples.ExampleTest.answerVsDelegate":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":350,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":413,"org.easymock.tests2.UsageConstraintsTest.testNull":14,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":18,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":15,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":213,"org.easymock.tests2.CaptureTest.testPrimitive":273,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":70,"org.easymock.tests.UsageTest.moreThanOneArgument":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":102,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":144,"org.easymock.tests.UsageTest.argumentsOrdered":153,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":341,"org.easymock.tests.UsageVarargTest.varargIntAccepted":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":12,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":222,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":457,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":46,"org.easymock.tests.ReplayStateInvalidUsageTest.times":389,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":310,"org.easymock.tests2.DependencyTest.testClassMocking":489,"org.easymock.tests2.AnswerTest.answer":184,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":203,"org.easymock.tests2.CaptureTest.testAnd":270,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":347,"org.easymock.tests2.UsageTest.strictResetToDefault":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":439,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":208,"org.easymock.tests2.DelegateToTest.testDelegate":236,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":98,"org.easymock.tests.LimitationsTest.mockFinalMethod":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":127,"org.easymock.tests2.DependencyTest.testClassMockingSupport":490,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":415,"org.easymock.tests2.CaptureTest.testCapture1_2446744":274,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":427,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":201,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":386,"org.easymock.tests.UsageThrowableTest.throwError":131,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":349,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":458,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":146,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":480,"org.easymock.samples.PartialClassMockTest.testGetArea":170,"org.easymock.tests.MockingTest.testInterfaceMocking":411,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":43,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":84,"org.easymock.tests2.UsageTest.niceToStrict":299,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":223,"org.easymock.tests2.MockBuilderTest.testCreateMock":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":476,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":498,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":92,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":209,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":346,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":358,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":60,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":55,"org.easymock.tests.UsageOverloadedMethodTest.overloading":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":256,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":323,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":392,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":114,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":510,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":255,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":279,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":330,"org.easymock.tests2.EasyMockSupportClassTest.testAll":284,"org.easymock.tests.MockClassControlTest.testEquals":329,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":202,"org.easymock.tests2.CaptureTest.testCaptureAll":271,"org.easymock.tests.MockNameTest.defaultName":340,"org.easymock.tests2.UsageConstraintsTest.testMatches":257,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":385,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":145,"org.easymock.samples.ExampleTest.voteForRemovals":178,"org.easymock.tests.UsageVarargTest.allKinds":13,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":155,"org.easymock.samples.BasicClassMockTest.testPrintContent":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":126,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":137,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":454,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":164,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":406,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":27,"org.easymock.tests2.UsageConstraintsTest.greaterThan":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":463,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":74,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":431,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":407,"org.easymock.samples.ExampleTest.voteForRemoval":175,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":432,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":291,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":351,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":426,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":59,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":295,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":206,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":159,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":446,"org.easymock.tests2.CaptureTest.testCaptureFirst":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":368,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":207,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":307,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":110,"org.easymock.tests2.CaptureTest.testCapture2_2446744":282,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":293,"org.easymock.tests2.UsageTest.moreThanOneArgument":297,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":379,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":41,"org.easymock.tests.GenericTest.testBridgedEquals":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":354,"org.easymock.tests.UsageExpectAndReturnTest.longType":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":123,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":204,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":503,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":101,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":391,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":322,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":99,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":397,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":142,"org.easymock.tests.UsageCallCountTest.tooManyCalls":355,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":500,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":88,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":136,"org.easymock.tests.MockingTest.testNiceClassMocking":414,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":217,"org.easymock.tests.MockingTest.testClassMocking":409,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":61,"org.easymock.tests2.UsageConstraintsTest.testContains":254,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":241,"org.easymock.tests2.UsageConstraintsTest.testFind":247,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":129,"org.easymock.tests.MockTypeTest.fromEasyMockClass":348,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":47,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":289,"org.easymock.tests.UsageExpectAndReturnTest.object":113,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":499,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":212,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":37,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":9,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":337,"org.easymock.tests.UsageTest.exactCallCountByLastCall":154,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":332,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":342,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":7,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":119,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":33,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":421,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":449,"org.easymock.tests.MockClassControlTest.testHashCode":328,"org.easymock.tests2.EasyMockSupportTest.testVerify":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":471,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":343,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":314,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":357,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":200,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":238,"org.easymock.tests.UsageVarargTest.varargCharAccepted":36,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":399,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":384,"org.easymock.tests2.UsageTest.openCallCountByLastCall":301,"org.easymock.tests.DefaultClassInstantiatorTest.object":400,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":215,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":356,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":335,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":472,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":494,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":448,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":430,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":327,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":120,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":287,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":326,"org.easymock.tests2.UsageTest.resumeIfFailure":306,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":317,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":162,"org.easymock.tests2.StubTest.stubWithReturnValue":269,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":112,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":264,"org.easymock.tests2.SerializationTest.testAllMockedMethod":312,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":377,"org.easymock.samples.SupportTest.voteForRemovals":172,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":95,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":505,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":383,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":425,"org.easymock.tests.UsageExpectAndThrowTest.object":93,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":316,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":262,"org.easymock.tests2.DelegateToTest.testWrongClass":235,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":165,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":166,"org.easymock.samples.ConstructorCalledMockTest.testTax":180,"org.easymock.tests.UsageStrictMockTest.range":51,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":487,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":22,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":94,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":460,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":390,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":152,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":56,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":1,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":419,"org.easymock.tests2.CaptureTest.testCaptureNone":278,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests.UsageVerifyTest.twoReturns":157,"org.easymock.tests.UsageVarargTest.varargByteAccepted":40,"org.easymock.tests2.ThreadingTest.testThreadSafe":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":474,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":65,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":182,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":338,"org.easymock.tests2.CaptureTest.testCapture_2617107":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":416,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":381,"org.easymock.tests2.UsageConstraintsTest.any":252,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":388,"org.easymock.tests2.StubTest.stub":268,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":161,"org.easymock.tests.UsageExpectAndThrowTest.longType":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":382,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":404,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":80,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":196,"org.easymock.tests2.SerializationTest.testClass":28,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":237,"org.easymock.tests.LimitationsTest.mockNativeMethod":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":122,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":361,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":493,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":199,"org.easymock.tests2.NameTest.nameForMocksControl":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":495,"org.easymock.tests2.MockedExceptionTest.testMockedException":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":464,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":151,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":481,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":87,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":226,"org.easymock.tests.MockingTest.testNicePartialClassMocking":140,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":20,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":491,"org.easymock.tests2.CaptureTest.testCaptureLast":277,"org.easymock.tests2.CompareToTest.testCompareEqual":324,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":158,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":221,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":250,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":263,"org.easymock.tests.MockingTest.testTwoMocks":410,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":435,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":91,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":304,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":266,"org.easymock.samples.ExampleTest.removeNonExistingDocument":424,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":497,"org.easymock.tests.UsageStrictMockTest.differentMethods":52,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":79,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":450,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":402,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":292,"org.easymock.tests2.MockBuilderTest.testCreateMockString":228,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":465,"org.easymock.tests.UsageExpectAndThrowTest.floatType":85,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":462,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":185,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":444,"org.easymock.tests.UsageVerifyTest.twoThrows":156,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":286,"org.easymock.samples.ExampleTest.voteAgainstRemoval":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":373,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":191,"org.easymock.tests.LimitationsTest.privateConstructor":394,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":508,"org.easymock.tests2.UsageConstraintsTest.testNotNull":265,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":138,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":239,"org.easymock.tests2.UsageTest.defaultResetToNice":303,"org.easymock.samples.ExampleTest.voteAgainstRemovals":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":374,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":492,"org.easymock.tests.UsageVarargTest.differentLength":331,"org.easymock.tests2.CallbackTest.callback":192,"org.easymock.tests2.UsageConstraintsTest.equals":459,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":428,"org.easymock.tests.UsageTest.openCallCountByLastCall":150,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":243,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":68,"org.easymock.tests.UsageCallCountTest.tooFewCalls":63,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":23,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":58,"org.easymock.tests.UsageThrowableTest.throwCheckedException":135,"org.easymock.tests.MockingTest.testStrictClassMocking":408,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":496,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":218,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":81,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":219,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":187,"org.easymock.tests.ObjectMethodsTest.testHashCode":336,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":11,"org.easymock.tests2.NameTest.nameForNiceMock":231,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":294,"org.easymock.tests2.DependencyTest.testInterfaceMocking":308,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":10,"org.easymock.samples.ExampleTest.addDocument":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":479,"org.easymock.tests2.DelegateToTest.testStubDelegate":234,"org.easymock.tests2.AnswerTest.stubAnswer":186,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":49,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":441,"org.easymock.tests.UsageVarargTest.varargLongAccepted":39,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":371,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":121,"org.easymock.tests.UsageExpectAndReturnTest.floatType":105,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":25,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":456,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":422,"org.easymock.tests.UsageThrowableTest.noUpperLimit":132,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":260,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":244,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":482,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":275,"org.easymock.tests2.SerializationTest.test":311,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":511,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":401,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":104,"org.easymock.tests2.UsageConstraintsTest.testSame":248,"org.easymock.samples.SupportTest.addDocument":171,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":434,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":466,"org.easymock.tests.GenericTest.testPackageScope":71,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":455,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":412,"org.easymock.tests2.NameTest.nameForMock":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":443,"org.easymock.tests2.UsageStrictMockTest.differentMethods":198,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":429,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":107,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":97,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":334,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":76,"org.easymock.tests2.MockedExceptionTest.testRealException":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":352,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":318,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":504,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":313,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":67,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":82,"org.easymock.tests2.NameTest.nameForStrictMock":230,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":440,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":288,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":19,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":486,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":403,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":261,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":437,"org.easymock.tests2.UsageStrictMockTest.range":197,"org.easymock.tests2.UsageConstraintsTest.lessThan":267,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":502,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":452,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":26,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":470,"org.easymock.tests2.CaptureTest.testCaptureRightOne":280,"org.easymock.tests2.UsageConstraintsTest.testOr":249,"org.easymock.tests.UsageRangeTest.combination":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":188,"org.easymock.tests.UsageTest.wrongArguments":149,"org.easymock.tests2.MockBuilderTest.testWithConstructor":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":467,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":30,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":108,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":363,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":405,"org.easymock.tests.UsageVarargTest.varargShortAccepted":38,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":353,"org.easymock.tests2.UsageConstraintsTest.cmpTo":253,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":315,"org.easymock.tests2.CompareToTest.testLessThan":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":365,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":302,"org.easymock.tests2.CaptureTest.testCaptureFromStub":281,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":77,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":438,"org.easymock.tests.UsageTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":64,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":506,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":117,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":50,"org.easymock.tests2.UsageConstraintsTest.constraints":245,"org.easymock.samples.ExampleTest.addAndChangeDocument":179,"org.easymock.tests.UsageStrictMockTest.testVerify":54,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":169,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":124,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":44,"org.easymock.tests.LimitationsTest.abstractClass":393,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":109,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":45,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":34,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":210}}]
