[{"position":"org.easymock.internal.RecordState:327","failures":[0,1,2,3],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"position":"org.easymock.internal.Range:40","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,0,1,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,2,3,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[54,246,260,263,264,265,266,267,268,2,3,285,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,404,408,464],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[4,6,7,9,14,16,23,27,28,32,33,39,54,64,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,89,90,91,92,94,95,96,97,98,99,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,131,141,147,153,157,159,161,165,173,182,189,190,191,192,194,195,196,198,202,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,234,238,239,240,248,251,252,255,256,260,262,263,264,265,266,267,343,350,352,353,377,378,381,382,385,402,403,404,429,430,431,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,461,463,465,471,472,476,477,479,483,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.RecordState:217","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,18,19,19,20,21,22,23,24,25,26,27,28,29,32,33,39,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,131,141,147,150,151,153,157,158,159,161,164,165,167,173,180,181,182,183,185,186,187,188,189,190,191,192,194,195,196,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,237,238,239,240,243,244,245,246,247,248,249,250,0,1,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,2,3,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399,402,403,404,421,427,429,430,431,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,461,463,464,465,466,467,468,469,470,471,472,475,476,477,479,483,484,486],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[489,490,491,492,493,160,205],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:101","sourceCode":"this.java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>(java.util.Arrays.java.util.Arrays.asList(java.lang.reflect.Method[]))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[338,494,495],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[108,471],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[64,66,67,71,72,78,79,185,186,187,188,497,349,350,352,353,378,380,383,384,463,464,465],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[498,499,500],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[117],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[66,67,72,78,79,80,153,164,165,167,222,249,501,502,349,352,353,379,380,383,384,392,393,394,395,429,503,433,464,465],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,0,1,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,2,3,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[114],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[82,84,92,98,99,102,104,105,107,117,122],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[358,420,427],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[4,5,6,7,9,14,16,22,23,24,26,27,28,32,33,39,54,64,66,67,69,70,71,73,75,76,77,80,81,82,83,84,85,86,89,90,91,92,94,95,96,97,98,99,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,131,141,147,153,157,159,161,165,173,182,189,190,191,192,194,195,196,198,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,234,238,239,240,243,245,246,248,251,252,255,256,260,262,263,264,265,266,267,285,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,343,350,352,353,377,378,381,382,385,402,403,404,429,430,431,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,461,463,464,465,471,472,476,477,479,483,484],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[54,253,285],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[64,66,67,229,231,349,350,352,353,355],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[54,180,181,182,183,250,0,1,281,282,283,284,285,286,412,472],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[338,495],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,18,19,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,0,1,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,2,3,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[23],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[325,330,398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[17,20,34,35,36,38,41,42,45,168,169,170,172,175,176,179],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[504],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[21,415],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[54,69,246,254,260,262,263,264,265,266,267,268,2,3,285,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,377,404,408,464],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[14,27,131,141,147,151,153,154,157,159,161,165,167,232,238,239,242,345,369,374],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[64,66,67,71,505,506,507,508,509,510,511,269,270,512,513,514,502,349,350,352,353,378,379,395,463,464,465],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[82,84,92,98,99,102,104,105,107,117,122],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":99,"org.easymock.tests2.UsageTest.argumentsOrdered":79,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":377,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":415,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":74,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":20,"org.easymock.tests2.DelegateToTest.testReturnException":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":282,"org.easymock.tests.MockingTest.testPartialClassMocking":476,"org.easymock.tests.MockClassControlTest.testToString":327,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":184,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":135,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":288,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":497,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":106,"org.easymock.tests2.UsageTest.wrongArguments":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":251,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":45,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":258,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":374,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":481,"org.easymock.tests2.UsageConstraintsTest.testNull":102,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":229,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":222,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":332,"org.easymock.tests2.CaptureTest.testPrimitive":85,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":307,"org.easymock.tests.UsageTest.moreThanOneArgument":378,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":277,"org.easymock.tests.UsageTest.argumentsOrdered":384,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":320,"org.easymock.tests.UsageVarargTest.varargIntAccepted":310,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":454,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":493,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":178,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":48,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":458,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":39,"org.easymock.tests.ReplayStateInvalidUsageTest.times":364,"org.easymock.tests2.DependencyTest.testClassMocking":30,"org.easymock.tests2.AnswerTest.answer":198,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":422,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":61,"org.easymock.tests2.CaptureTest.testAnd":82,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":371,"org.easymock.tests2.UsageTest.strictResetToDefault":70,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":276,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":431,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":217,"org.easymock.tests2.DelegateToTest.testDelegate":26,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":324,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":303,"org.easymock.tests.LimitationsTest.mockFinalMethod":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":470,"org.easymock.tests2.DependencyTest.testClassMockingSupport":31,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":269,"org.easymock.tests2.CaptureTest.testCapture1_2446744":86,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":301,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":59,"org.easymock.tests.UsageThrowableTest.throwError":260,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":358,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":373,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":433,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":149,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.MockingTest.testInterfaceMocking":478,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":455,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":273,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":136,"org.easymock.tests2.UsageTest.niceToStrict":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":289,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":157,"org.easymock.tests2.MockBuilderTest.testCreateMock":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":144,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":42,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":297,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":218,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":370,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":386,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":256,"org.easymock.tests.UsageOverloadedMethodTest.overloading":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":140,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":112,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":445,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":402,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":494,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":111,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":91,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":311,"org.easymock.tests2.EasyMockSupportClassTest.testAll":128,"org.easymock.tests.MockClassControlTest.testEquals":331,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":468,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":60,"org.easymock.tests2.CaptureTest.testCaptureAll":83,"org.easymock.tests.MockNameTest.defaultName":287,"org.easymock.tests2.UsageConstraintsTest.testMatches":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":278,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":356,"org.easymock.samples.ExampleTest.voteForRemovals":9,"org.easymock.tests.UsageVarargTest.allKinds":319,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":463,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":469,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":266,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":175,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":286,"org.easymock.tests2.UsageConstraintsTest.greaterThan":115,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":129,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":430,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":240,"org.easymock.samples.ExampleTest.voteForRemoval":6,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":341,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":209,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":375,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":232,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":69,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":280,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":215,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":281,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":21,"org.easymock.tests2.CaptureTest.testCaptureFirst":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":216,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":81,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":441,"org.easymock.tests2.UsageTest.moreThanOneArgument":71,"org.easymock.tests2.CaptureTest.testCapture2_2446744":94,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":423,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":165,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":318,"org.easymock.tests.GenericTest.testBridgedEquals":346,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":393,"org.easymock.tests.UsageExpectAndReturnTest.longType":437,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":466,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":213,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":306,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":120,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":368,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":0,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":275,"org.easymock.tests.UsageCallCountTest.tooManyCalls":394,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":145,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":442,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":44,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":293,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":265,"org.easymock.tests.MockingTest.testNiceClassMocking":482,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":190,"org.easymock.tests.MockingTest.testClassMocking":474,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":387,"org.easymock.tests2.UsageConstraintsTest.testContains":110,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":182,"org.easymock.tests2.UsageConstraintsTest.testFind":101,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":404,"org.easymock.tests.MockTypeTest.fromEasyMockClass":372,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":57,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":347,"org.easymock.tests.UsageExpectAndReturnTest.object":444,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":234,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":490,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":313,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":399,"org.easymock.tests.UsageTest.exactCallCountByLastCall":385,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":485,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":205,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":450,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":245,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":169,"org.easymock.tests.MockClassControlTest.testHashCode":330,"org.easymock.tests2.EasyMockSupportTest.testVerify":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":138,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":322,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":2,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":243,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":501,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":58,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":150,"org.easymock.tests.UsageVarargTest.varargCharAccepted":312,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":333,"org.easymock.tests2.CaptureTest.testCaptureMultiple":496,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":428,"org.easymock.tests2.UsageTest.openCallCountByLastCall":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":499,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":224,"org.easymock.tests.DefaultClassInstantiatorTest.object":334,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":268,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":397,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":139,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":295,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":37,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":168,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":238,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":294,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":451,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":250,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":147,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":328,"org.easymock.tests2.UsageTest.resumeIfFailure":80,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":369,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":284,"org.easymock.tests2.StubTest.stubWithReturnValue":54,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":160,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":443,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":121,"org.easymock.tests2.SerializationTest.testAllMockedMethod":29,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":421,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":504,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":510,"org.easymock.samples.SupportTest.voteForRemovals":16,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":342,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":171,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":300,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":427,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":199,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":487,"org.easymock.tests.UsageExpectAndThrowTest.object":298,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":118,"org.easymock.tests2.DelegateToTest.testWrongClass":24,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":483,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":484,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests.UsageStrictMockTest.range":352,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":51,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":189,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":299,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":125,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":366,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":257,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":512,"org.easymock.tests2.CaptureTest.testCaptureNone":90,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":274,"org.easymock.tests.UsageUnorderedTest.message":395,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":503,"org.easymock.tests.UsageVerifyTest.twoReturns":465,"org.easymock.tests.UsageVarargTest.varargByteAccepted":317,"org.easymock.tests2.ThreadingTest.testThreadSafe":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":142,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":391,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":400,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests2.CaptureTest.testCapture_2617107":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":254,"org.easymock.tests2.UsageConstraintsTest.any":108,"org.easymock.tests2.StubTest.stub":53,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":363,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":283,"org.easymock.tests.UsageExpectAndThrowTest.longType":291,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":338,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":362,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":65,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":173,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests.LimitationsTest.mockNativeMethod":461,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":453,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":345,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":36,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":68,"org.easymock.tests2.NameTest.nameForMocksControl":188,"org.easymock.tests2.MockedExceptionTest.testMockedException":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":130,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":382,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":479,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":56,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":292,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":226,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":161,"org.easymock.tests.MockingTest.testNicePartialClassMocking":477,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":231,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":34,"org.easymock.tests2.CaptureTest.testCaptureLast":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":270,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":105,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":196,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":119,"org.easymock.tests.MockingTest.testTwoMocks":475,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":434,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":296,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":78,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":123,"org.easymock.samples.ExampleTest.removeNonExistingDocument":10,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":41,"org.easymock.tests.UsageStrictMockTest.differentMethods":353,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":170,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":336,"org.easymock.tests2.ConstraintsToStringTest.andToString":509,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":210,"org.easymock.tests2.MockBuilderTest.testCreateMockString":167,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":132,"org.easymock.tests.UsageExpectAndThrowTest.floatType":290,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":127,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":201,"org.easymock.tests.UsageVerifyTest.twoThrows":464,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":206,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":141,"org.easymock.samples.ExampleTest.voteAgainstRemoval":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":416,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":272,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":239,"org.easymock.tests.LimitationsTest.privateConstructor":460,"org.easymock.tests2.UsageConstraintsTest.testNotNull":122,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":267,"org.easymock.tests2.UsageTest.defaultResetToNice":77,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":417,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":35,"org.easymock.tests.UsageVarargTest.differentLength":314,"org.easymock.tests2.CallbackTest.callback":207,"org.easymock.tests2.UsageConstraintsTest.equals":100,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":235,"org.easymock.tests.UsageTest.openCallCountByLastCall":381,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":253,"org.easymock.tests.UsageCallCountTest.tooFewCalls":389,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":259,"org.easymock.tests.UsageThrowableTest.throwCheckedException":264,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":513,"org.easymock.tests.MockingTest.testStrictClassMocking":473,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":472,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":195,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":40,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":365,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":194,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":203,"org.easymock.tests.ObjectMethodsTest.testHashCode":398,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":492,"org.easymock.tests2.NameTest.nameForNiceMock":187,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":212,"org.easymock.tests2.DependencyTest.testInterfaceMocking":32,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":491,"org.easymock.samples.ExampleTest.addDocument":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":148,"org.easymock.tests2.DelegateToTest.testStubDelegate":23,"org.easymock.tests2.AnswerTest.stubAnswer":202,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":350,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":162,"org.easymock.tests.UsageVarargTest.varargLongAccepted":316,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":452,"org.easymock.tests.UsageExpectAndReturnTest.floatType":436,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":204,"org.easymock.tests2.ConstraintsToStringTest.orToString":505,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":177,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":116,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":247,"org.easymock.tests.UsageThrowableTest.noUpperLimit":261,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":97,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":46,"org.easymock.tests2.SerializationTest.test":28,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":87,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":495,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":335,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":435,"org.easymock.tests2.UsageConstraintsTest.testSame":103,"org.easymock.samples.SupportTest.addDocument":15,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":193,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":133,"org.easymock.tests.GenericTest.testPackageScope":343,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":176,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":480,"org.easymock.tests2.NameTest.nameForMock":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":446,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":166,"org.easymock.tests2.UsageStrictMockTest.differentMethods":67,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":438,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":302,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":396,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":432,"org.easymock.tests2.MockedExceptionTest.testRealException":183,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":52,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":418,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":252,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":367,"org.easymock.tests2.NameTest.nameForStrictMock":186,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":156,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":500,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":230,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":50,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":117,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":337,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":153,"org.easymock.tests2.UsageStrictMockTest.range":66,"org.easymock.tests2.UsageConstraintsTest.lessThan":124,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":137,"org.easymock.tests2.CaptureTest.testCaptureRightOne":92,"org.easymock.tests2.UsageConstraintsTest.testOr":104,"org.easymock.tests.UsageRangeTest.combination":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":227,"org.easymock.tests.UsageTest.wrongArguments":380,"org.easymock.tests2.MockBuilderTest.testWithConstructor":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":134,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":439,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":406,"org.easymock.tests.UsageVarargTest.varargShortAccepted":315,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":339,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":392,"org.easymock.tests2.UsageConstraintsTest.cmpTo":109,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":408,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":76,"org.easymock.tests2.CaptureTest.testCaptureFromStub":93,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":357,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":154,"org.easymock.tests.UsageTest.unexpectedCallWithArray":379,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":349,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":390,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":448,"org.easymock.tests2.UsageConstraintsTest.constraints":98,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":351,"org.easymock.samples.ExampleTest.addAndChangeDocument":11,"org.easymock.tests2.ConstraintsToStringTest.notToString":507,"org.easymock.tests.UsageStrictMockTest.testVerify":355,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":17,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":348,"org.easymock.tests2.CompareToTest.testGreateThan":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":467,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":456,"org.easymock.tests.LimitationsTest.abstractClass":459,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":457,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":219,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":309}}]
