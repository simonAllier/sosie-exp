[{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[11],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[12,13,14,15,16,17,18,19,20,20,21,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,0,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,2,128,129,130,131,132,133,134,135,136,11,137,138,139,140,141,142,143,144,145,146,147,148,149,150,3,151,152,4,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,8,9,10,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[154,155,156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[48,52,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[362],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[93],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[37,135,140,141,189,192,228,229,363,281,282,285,286,338,361],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[12,13,14,15,16,17,19,22,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,364,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,96,107,108,0,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,132,133,134,135,136,11,137,138,139,140,141,142,143,144,145,146,147,148,365,152,155,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,240,241,242,243,244,245,246,247,366,367,368,369,370,250,252,253,254,255,256,257,258,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,371,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[372,373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[20,20,21,21,23,27,28,1,374,94,95,97,98,99,100,101,375,376,102,103,104,105,377,378,106,379,124,125,380,381,126,127,2,128,382,129,130,131,144,145,146,149,150,3,151,4,153,154,156,383,384,385,157,386,387,158,388,389,390,391,392,393,394,395,396,159,397,398,399,400,401,160,402,403,372,178,179,180,373,186,404,405,406,407,408,409,410,411,236,237,238,239,412,413,7,414,415,249,416,271,272,8,9,10,273,274,275,305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[47,48,50,52,53,55,65,70,73,75,83],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[20,20,21,21,23,27,28,1,374,94,95,97,98,99,100,101,375,376,102,103,104,105,377,378,106,379,417,124,125,380,381,126,127,2,128,382,129,130,418,131,144,145,146,149,150,3,151,4,153,154,156,383,384,385,157,386,387,158,388,389,390,391,392,393,394,395,396,159,397,398,399,400,401,160,402,403,419,420,421,372,178,179,180,373,186,404,405,406,407,408,409,410,411,236,237,238,239,412,413,7,414,415,249,416,271,8,9,10,273,274,275,305],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[422],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[133],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[48,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[172,309],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"failures":[272],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:35","sourceCode":"final java.lang.Object java.lang.Object = org.easymock.internal.matchers.Equals.getExpected()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[186,404,405,406,408,409],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[132,138,173,220,228,245,279,284,309,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,341,342,343,344,345,346,358],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,0,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,2,128,129,130,131,132,133,134,135,136,11,137,138,139,140,141,142,143,144,145,146,147,148,149,150,3,151,152,4,153,154,155,156,157,158,159,160,166,167,168,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,227,228,229,230,231,237,238,239,243,244,245,249,252,253,254,255,256,257,258,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,355,357,358,361],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[423],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:90","sourceCode":"return java.lang.Class<?>.getConstructor(new java.lang.Class[0])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[12,13,14,15,17,19,20,20,21,21,23,26,29,30,31,32,35,37,38,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,101,103,104,105,106,107,108,0,109,110,111,112,113,114,115,116,117,118,119,120,121,122,125,126,2,128,130,132,133,134,136,137,138,139,142,143,144,145,146,147,148,149,150,3,151,152,4,153,154,155,157,158,159,160,165,166,167,168,169,170,171,172,173,178,180,181,182,183,184,185,190,192,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,237,238,239,240,241,242,243,244,245,249,252,276,277,278,279,280,283,284,287,299,300,301,302,303,304,305,306,307,308,309,310,311,312,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,360],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[35,87,132,143,190,228,229,287,341],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:140","sourceCode":"java.lang.StringBuilder.append(\":\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[424,338],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[425,426,189,427,428,281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[144,145,146,147,173,216,217,218,219,220,221,231,429,276,277,278,308],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[37,135,140,141,189,192,228,229,363,281,282,285,286,338,361],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[430,431],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":48,"org.easymock.tests2.UsageTest.argumentsOrdered":141,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":279,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":121,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":365,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":11,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":24,"org.easymock.tests2.DelegateToTest.testReturnException":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":217,"org.easymock.tests.MockingTest.testPartialClassMocking":237,"org.easymock.tests.MockClassControlTest.testToString":8,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":318,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":30,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":54,"org.easymock.tests2.UsageTest.wrongArguments":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":176,"org.easymock.samples.ExampleTest.answerVsDelegate":13,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":7,"org.easymock.tests2.UsageConstraintsTest.testNull":50,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":97,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":120,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":275,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":419,"org.easymock.tests2.CaptureTest.testPrimitive":76,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":310,"org.easymock.tests.UsageTest.moreThanOneArgument":280,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":337,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":183,"org.easymock.tests.UsageTest.argumentsOrdered":286,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":347,"org.easymock.tests.UsageVarargTest.varargIntAccepted":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":299,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":124,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":303,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":44,"org.easymock.tests.ReplayStateInvalidUsageTest.times":267,"org.easymock.tests2.AnswerTest.answer":87,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":55,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":43,"org.easymock.tests2.CaptureTest.testAnd":73,"org.easymock.tests2.UsageTest.strictResetToDefault":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":115,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":224,"org.easymock.tests2.DelegateToTest.testDelegate":170,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":333,"org.easymock.tests.LimitationsTest.mockFinalMethod":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":317,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":232,"org.easymock.tests2.CaptureTest.testCapture1_2446744":77,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":41,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":261,"org.easymock.tests.UsageThrowableTest.throwError":339,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":368,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":5,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":403,"org.easymock.samples.PartialClassMockTest.testGetArea":23,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":300,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":392,"org.easymock.tests2.UsageTest.niceToStrict":136,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":6,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":319,"org.easymock.tests2.ThreadingTest.testChangeDefault":430,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":126,"org.easymock.tests2.MockBuilderTest.testCreateMock":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":399,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":425,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":327,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":354,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":250,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":174,"org.easymock.tests.UsageOverloadedMethodTest.overloading":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":60,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":358,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":207,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":243,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":59,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":82,"org.easymock.tests2.EasyMockSupportClassTest.testAll":157,"org.easymock.tests.MockClassControlTest.testEquals":274,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":179,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":335,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":420,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":42,"org.easymock.tests2.CaptureTest.testCaptureAll":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":315,"org.easymock.tests.MockNameTest.defaultName":371,"org.easymock.tests2.UsageConstraintsTest.testMatches":61,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":184,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":259,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests.UsageVarargTest.allKinds":298,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":227,"org.easymock.samples.BasicClassMockTest.testPrintContent":28,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":316,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":345,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":33,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":221,"org.easymock.tests2.UsageConstraintsTest.greaterThan":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":223,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":105,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":409,"org.easymock.samples.ExampleTest.voteForRemoval":14,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":108,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":377,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":418,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":369,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":100,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":132,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":305,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":113,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":216,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":165,"org.easymock.tests2.CaptureTest.testCaptureFirst":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":114,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":203,"org.easymock.tests2.UsageTest.moreThanOneArgument":134,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":109,"org.easymock.tests2.CaptureTest.testCapture2_2446744":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":130,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":297,"org.easymock.tests.GenericTest.testBridgedEquals":373,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":422,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":257,"org.easymock.tests.UsageExpectAndReturnTest.longType":199,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":336,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":68,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":304,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":181,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":277,"org.easymock.tests.UsageCallCountTest.tooManyCalls":258,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":323,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":344,"org.easymock.tests.MockingTest.testNiceClassMocking":412,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":150,"org.easymock.tests.MockingTest.testClassMocking":411,"org.easymock.tests2.UsageConstraintsTest.testContains":58,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":251,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":146,"org.easymock.tests2.UsageConstraintsTest.testFind":49,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":245,"org.easymock.tests.MockTypeTest.fromEasyMockClass":367,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":187,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":32,"org.easymock.tests.UsageExpectAndReturnTest.object":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":119,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":292,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":248,"org.easymock.tests.UsageTest.exactCallCountByLastCall":287,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":230,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":348,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":379,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":212,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":288,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":357,"org.easymock.tests.MockClassControlTest.testHashCode":273,"org.easymock.tests2.EasyMockSupportTest.testVerify":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":394,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":349,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":353,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":40,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":93,"org.easymock.tests.UsageVarargTest.varargCharAccepted":291,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":34,"org.easymock.tests2.UsageTest.openCallCountByLastCall":137,"org.easymock.tests.DefaultClassInstantiatorTest.object":186,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":122,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":352,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":246,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":395,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":325,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":421,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":342,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":103,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":10,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":324,"org.easymock.tests.CapturesMatcherTest.test":423,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":160,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":9,"org.easymock.tests2.UsageTest.resumeIfFailure":142,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":219,"org.easymock.tests2.StubTest.stubWithReturnValue":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":205,"org.easymock.tests2.SerializationTest.testAllMockedMethod":156,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":234,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":426,"org.easymock.samples.SupportTest.voteForRemovals":26,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":330,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":235,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":88,"org.easymock.tests.UsageExpectAndThrowTest.object":328,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":66,"org.easymock.tests2.DelegateToTest.testWrongClass":168,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":311,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":312,"org.easymock.samples.ConstructorCalledMockTest.testTax":20,"org.easymock.tests.UsageStrictMockTest.range":192,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":149,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":329,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":2,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":269,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":175,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":427,"org.easymock.tests2.CaptureTest.testCaptureNone":81,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":242,"org.easymock.tests.UsageUnorderedTest.message":338,"org.easymock.tests.UsageVerifyTest.twoReturns":229,"org.easymock.tests.UsageVarargTest.varargByteAccepted":296,"org.easymock.tests2.ThreadingTest.testThreadSafe":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":397,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":255,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":27,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":366,"org.easymock.tests2.CaptureTest.testCapture_2617107":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":309,"org.easymock.tests2.UsageConstraintsTest.any":56,"org.easymock.tests2.StubTest.stub":172,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":218,"org.easymock.tests.UsageExpectAndThrowTest.longType":321,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":407,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":265,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.tests2.SerializationTest.testClass":154,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":148,"org.easymock.tests.LimitationsTest.mockNativeMethod":249,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":180,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":215,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":39,"org.easymock.tests2.NameTest.nameForMocksControl":164,"org.easymock.tests2.MockedExceptionTest.testMockedException":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":387,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":284,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":239,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":322,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":94,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":128,"org.easymock.tests.MockingTest.testNicePartialClassMocking":238,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":99,"org.easymock.tests2.CaptureTest.testCaptureLast":80,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":233,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":153,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":67,"org.easymock.tests.MockingTest.testTwoMocks":236,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":326,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":140,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":71,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":431,"org.easymock.samples.ExampleTest.removeNonExistingDocument":18,"org.easymock.tests.UsageStrictMockTest.differentMethods":193,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":263,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":405,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":0,"org.easymock.tests2.ConstraintsToStringTest.andToString":362,"org.easymock.tests2.MockBuilderTest.testCreateMockString":131,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":388,"org.easymock.tests.UsageExpectAndThrowTest.floatType":320,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":90,"org.easymock.tests.UsageVerifyTest.twoThrows":228,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":159,"org.easymock.samples.ExampleTest.voteAgainstRemoval":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":240,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":104,"org.easymock.tests.LimitationsTest.privateConstructor":415,"org.easymock.tests2.UsageConstraintsTest.testNotNull":70,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":144,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":346,"org.easymock.tests2.UsageTest.defaultResetToNice":139,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":211,"org.easymock.tests.UsageVarargTest.differentLength":293,"org.easymock.tests2.CallbackTest.callback":171,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":375,"org.easymock.tests.UsageTest.openCallCountByLastCall":283,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":308,"org.easymock.tests.UsageCallCountTest.tooFewCalls":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":151,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":177,"org.easymock.tests.UsageThrowableTest.throwCheckedException":343,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":428,"org.easymock.tests.MockingTest.testStrictClassMocking":410,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":4,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":231,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":364,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":152,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":92,"org.easymock.tests.ObjectMethodsTest.testHashCode":247,"org.easymock.tests2.NameTest.nameForNiceMock":163,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":110,"org.easymock.tests2.DependencyTest.testInterfaceMocking":29,"org.easymock.samples.ExampleTest.addDocument":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.DelegateToTest.testStubDelegate":167,"org.easymock.tests2.AnswerTest.stubAnswer":91,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":190,"org.easymock.tests.UsageVarargTest.varargLongAccepted":295,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.tests.UsageExpectAndReturnTest.floatType":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":106,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":21,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":64,"org.easymock.tests.UsageThrowableTest.noUpperLimit":340,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":46,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":1,"org.easymock.tests2.SerializationTest.test":155,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":78,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":404,"org.easymock.tests2.UsageConstraintsTest.testSame":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":197,"org.easymock.samples.SupportTest.addDocument":25,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":389,"org.easymock.tests.GenericTest.testPackageScope":178,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":350,"org.easymock.tests2.NameTest.nameForMock":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":208,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":376,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":225,"org.easymock.tests2.MockedExceptionTest.testRealException":147,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":370,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":270,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":307,"org.easymock.tests2.NameTest.nameForStrictMock":162,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":381,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":31,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":98,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":374,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":424,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":406,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":65,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":125,"org.easymock.tests2.UsageStrictMockTest.range":37,"org.easymock.tests2.UsageConstraintsTest.lessThan":72,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":417,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":393,"org.easymock.tests2.CaptureTest.testCaptureRightOne":83,"org.easymock.tests2.UsageConstraintsTest.testOr":52,"org.easymock.tests.UsageRangeTest.combination":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":95,"org.easymock.tests.UsageTest.wrongArguments":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":390,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":272,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":209,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":408,"org.easymock.tests.UsageVarargTest.varargShortAccepted":294,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":256,"org.easymock.tests2.UsageConstraintsTest.cmpTo":57,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":89,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":138,"org.easymock.tests2.CaptureTest.testCaptureFromStub":84,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":260,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":380,"org.easymock.tests.UsageTest.unexpectedCallWithArray":281,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":189,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":210,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":191,"org.easymock.tests2.UsageConstraintsTest.constraints":47,"org.easymock.samples.ExampleTest.addAndChangeDocument":19,"org.easymock.tests.UsageStrictMockTest.testVerify":195,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":22,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":314,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":301,"org.easymock.tests.LimitationsTest.abstractClass":414,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":302,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":117,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":289}}]
