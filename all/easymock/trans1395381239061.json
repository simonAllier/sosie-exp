[{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[46,47],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:191","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[48,49,50,51,52,53,54,16,17,18,55,56,0,1,3,4,7,8,9,10,11,12,13,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,26,108,109,110,111,112,113,114,115,116,30,32,117,118,119,120,121,122,123,124,125,35,36,37,126,127,128,129,130,131,132,133,40,134,135,136,137,138,139,140,141,142,143,144,145,146,42,147,148,149],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[150,151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[97],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[94],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1305","sourceCode":"return int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[152,78,95,100],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[153,95],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[16,18,154,26,30,31,32,35,37,155,42],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[156,23,157,158,159,160],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[55,162,163],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:414","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[164,165,166,167,54,72,75,168,169,170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[34,171],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":81,"org.easymock.tests2.UsageConstraintsTest.testMatches":93,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":146,"org.easymock.tests2.UsageTest.argumentsOrdered":29,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":75,"org.easymock.tests2.StubTest.stubWithReturnValue":77,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":100,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":51,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":163,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":30,"org.easymock.tests2.DependencyTest.testInterfaceMocking":53,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":23,"org.easymock.samples.BasicClassMockTest.testPrintContent":166,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":118,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":124,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":151,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":35,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":15,"org.easymock.tests2.UsageConstraintsTest.greaterThan":95,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":143,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":98,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":54,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":62,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":155,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":49,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":135,"org.easymock.tests2.UsageTest.wrongArguments":27,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":72,"org.easymock.tests2.ConstraintsToStringTest.orToString":19,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":96,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":39,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":106,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":79,"org.easymock.tests2.UsageConstraintsTest.testNull":83,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests2.SerializationTest.test":56,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":162,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":74,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":169,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":120,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":44,"org.easymock.tests.UsageTest.moreThanOneArgument":42,"org.easymock.tests2.UsageConstraintsTest.testSame":84,"org.easymock.samples.SupportTest.addDocument":164,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":140,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":116,"org.easymock.tests2.CaptureTest.testCaptureNone":8,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":68,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":113,"org.easymock.tests.UsageUnorderedTest.message":41,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":128,"org.easymock.tests2.UsageTest.moreThanOneArgument":26,"org.easymock.tests2.CaptureTest.testCapture2_2446744":12,"org.easymock.tests.UsageVerifyTest.twoReturns":32,"org.easymock.tests2.ThreadingTest.testThreadSafe":48,"org.easymock.tests.UsageTest.argumentsOrdered":45,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":165,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":24,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":25,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":131,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":47,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.UsageConstraintsTest.any":88,"org.easymock.tests2.StubTest.stub":46,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":21,"org.easymock.tests2.SerializationTest.testClass":55,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":64,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":52,"org.easymock.tests2.AnswerTest.answer":104,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":145,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":107,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":154,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":123,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":69,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":148,"org.easymock.tests2.UsageConstraintsTest.testContains":90,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":63,"org.easymock.tests2.UsageConstraintsTest.testFind":82,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":58,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests.UsageExpectAndReturnTest.object":129,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":34,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":97,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":86,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":59,"org.easymock.tests2.DependencyTest.testClassMockingSupport":167,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":33,"org.easymock.tests2.UsageConstraintsTest.lessThan":103,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":73,"org.easymock.tests.UsageTest.exactCallCountByLastCall":149,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":134,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":102,"org.easymock.tests.UsageThrowableTest.throwError":119,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":66,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":171,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":85,"org.easymock.tests.UsageRangeTest.combination":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":57,"org.easymock.tests.UsageTest.wrongArguments":43,"org.easymock.tests2.ConstraintsToStringTest.andToString":22,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":50,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":141,"org.easymock.tests2.EasyMockSupportTest.testVerify":168,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":126,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":132,"org.easymock.tests.UsageVerifyTest.twoThrows":31,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":38,"org.easymock.tests2.UsageConstraintsTest.cmpTo":89,"org.easymock.tests2.CompareToTest.testLessOrEqual":152,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":115,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":61,"org.easymock.tests2.UsageTest.niceToStrict":108,"org.easymock.tests2.UsageTest.openCallCountByLastCall":109,"org.easymock.tests2.UsageConstraintsTest.testNotNull":101,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":125,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":110,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":76,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":105,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests2.UsageTest.defaultResetToNice":111,"org.easymock.tests.UsageTest.unexpectedCallWithArray":160,"org.easymock.tests.UsageTest.openCallCountByLastCall":147,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":156,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":121,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":70,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":78,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":133,"org.easymock.tests2.CaptureTest.testCapture":161,"org.easymock.tests.UsageOverloadedMethodTest.overloading":138,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":60,"org.easymock.tests2.UsageConstraintsTest.constraints":80,"org.easymock.tests2.ConstraintsToStringTest.notToString":20,"org.easymock.tests.CapturesMatcherTest.test":14,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":130,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":91,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests2.CompareToTest.testGreateThan":153,"org.easymock.tests.UsageThrowableTest.throwCheckedException":122,"org.easymock.tests2.EasyMockSupportClassTest.testAll":170,"org.easymock.tests2.UsageTest.resumeIfFailure":112,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":127,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":117,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":40,"org.easymock.tests2.CaptureTest.testCaptureAll":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":71}}]
