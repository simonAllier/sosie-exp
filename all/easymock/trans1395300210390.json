[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[16],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[17,18,7,8],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,0,1,2,4,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,14],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[51,277,0,278,279,57,61,280,281,282,283,284,285,286,287,288,289,140,290,291,141,292,293,294,295,296,297,298,299,300,142,301,302,303,304,305,143,306,307,308,309],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[310,281,285,286,308,309],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[51,277,311,0,2,55,56,57,58,60,61,312,313,123,124,126,127,128,314,129,310,315,316,130,131,132,317,318,319,320,133,321,322,134,323,135,136,284,324,137,325,326,327,328,139,287,288,289,140,290,291,141,292,293,294,295,296,297,298,299,300,142,301,302,303,304,305,143,306,307,145,146,308,308,309,309,157,329,330,331,332,333,334,335,336,337,159,160,338,339,340,341,342,343,344,345,346,347,348,349,203,350,351,352,353,204,205,206,354,355,356,276],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[357,218,224,231,232,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[358],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[359,360,361,362,19,20,21,363,364,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,0,1,2,365,4,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,366,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,367,88,368,89,369,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,314,129,316,130,131,132,319,133,134,323,135,136,324,137,326,138,327,328,139,370,140,141,142,143,144,145,146,147,148,149,150,151,152,153,308,308,309,309,154,155,156,157,158,371,17,18,372,357,373,374,375,6,7,8,159,160,338,161,162,163,164,165,166,167,168,169,376,377,378,170,171,172,173,174,379,175,176,380,381,177,178,179,180,181,382,383,182,384,385,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,353,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,386,387,388,389,390,391,392,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,393,259,260,261,262,263,394,264,265,266,267,268,269,395,396,397,398,399,400,270,271,272,401,273,274,402,275,403,276,10,11,12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[359,360,361,362,404,405,19,20,21,363,364,22,23,24,25,26,27,28,29,30,31,406,407,408,409,410,32,411,412,413,414,415,416,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,277,417,52,53,418,54,0,1,2,365,4,55,56,57,58,59,60,61,312,313,419,420,62,63,64,65,66,67,68,69,70,71,72,366,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,367,88,368,89,369,90,421,91,92,93,94,422,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,423,119,120,121,122,123,124,125,126,127,128,314,424,129,310,315,316,130,131,132,317,318,319,281,133,321,282,322,134,323,135,283,136,284,324,137,286,326,425,426,427,428,429,138,430,431,432,433,434,435,327,328,139,370,287,288,289,140,290,291,141,292,293,294,295,296,297,298,299,300,142,301,302,303,304,305,143,306,307,144,145,146,147,148,149,150,151,152,436,153,308,308,309,309,154,155,156,157,437,438,439,440,441,329,442,330,331,332,333,334,335,443,336,158,444,445,446,447,448,449,450,451,452,358,5,453,371,17,18,372,357,373,374,375,6,7,8,337,159,160,338,339,340,341,342,343,344,345,346,347,161,162,163,164,165,166,167,168,169,376,377,378,170,454,171,172,173,174,379,175,176,455,456,457,458,459,460,461,9,462,463,464,465,466,467,468,469,380,470,471,472,473,474,381,475,177,178,179,180,181,382,383,182,384,385,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,348,349,203,350,476,351,352,353,204,205,477,206,478,479,354,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,386,480,387,481,388,389,390,391,392,236,237,238,239,240,241,242,243,482,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,393,259,260,261,262,263,394,264,265,266,267,268,269,395,396,397,398,399,400,483,355,484,485,356,486,487,270,271,272,401,273,274,402,275,403,276,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[46,47,48,52,53,54,63,69,70,74,77,90,91,106,109,118,153,158,452,466,380,183,189,195,199,201,215,221,227,231,233,261,263],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[96,101,111,116],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[23,308,308,309,309],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[51,277,0,278,279,57,61,280,281,282,283,284,285,286,287,288,289,140,290,291,141,292,293,294,295,296,297,298,299,300,142,301,302,303,304,305,143,306,307,308,309],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[359,360,361,362,404,405,19,20,21,363,364,22,23,24,25,26,27,28,29,30,31,406,407,408,409,410,32,411,412,413,414,415,416,33,34,35,36,37,38,39,40,41,42,43,44,45,488,46,489,47,48,49,50,51,277,52,53,418,54,0,1,2,365,4,55,56,57,58,490,59,60,61,280,312,491,492,313,419,420,62,63,64,65,66,67,68,69,70,71,72,366,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,367,88,368,89,369,90,421,91,92,93,94,422,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,423,119,120,121,122,123,124,125,126,127,128,314,424,129,310,315,316,130,131,132,317,318,319,133,321,322,134,323,135,136,493,284,324,137,326,425,426,427,428,429,138,430,431,432,433,434,435,327,328,139,370,287,288,289,140,290,291,141,292,293,294,295,296,297,298,299,300,142,301,302,303,304,305,143,306,307,144,145,146,147,148,149,150,151,152,436,153,308,309,154,155,156,157,437,438,439,440,441,329,330,331,332,333,334,335,336,158,444,445,446,447,448,449,450,451,452,358,5,453,371,17,18,372,357,373,374,375,6,7,8,337,159,160,338,339,340,341,342,343,344,345,346,347,161,162,163,164,165,166,167,168,169,376,377,378,170,454,171,172,173,174,379,175,176,455,456,457,458,459,460,461,9,462,463,464,465,466,467,468,469,380,470,471,472,473,474,381,475,177,178,179,180,181,382,383,182,384,385,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,348,349,203,350,476,351,352,353,204,205,477,206,478,479,354,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,386,480,387,481,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,388,389,390,391,392,236,237,238,239,240,241,242,243,482,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,393,259,260,261,262,263,394,264,265,266,267,268,269,395,396,397,398,399,400,483,355,516,517,484,485,356,486,487,270,271,272,401,273,274,402,275,403,276,10,11,12,13,14,15],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[277,518,519,520,521,522,283],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[337],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:274","failures":[21,363,364,22,23,24,52,53,54,148,272],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[368],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[23,25,27,29,30,34,35,36,37,38,39,41,42,43,44,52,4,62,63,64,65,66,67,68,69,71,72,366,73,74,78,79,80,84,85,91,92,93,94,95,97,98,99,100,102,104,105,106,107,108,109,110,111,112,113,115,117,118,137,161,163,164,166,167,177,180,207,208,210,211,212,213,214,235,252,257,260,264,267,268],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[51,277,518,519,520,523,524,0,283,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[337,159,160,338,339],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:183","failures":[19,20,21,22,23,24,26,27,28,29,30,31,32,33,35,36,37,38,41,42,43,44,45,46,48,49,50,51,52,53,54,0,1,2,365,4,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,74,75,76,77,79,80,81,82,87,88,368,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,125,126,128,134,135,136,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,162,164,165,166,167,168,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,254,255,256,257,258,260,261,262,263,265,266,269,270,271,276],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":94,"org.easymock.tests2.UsageTest.argumentsOrdered":85,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":262,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":43,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":464,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":80,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":156,"org.easymock.tests2.DelegateToTest.testReturnException":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":11,"org.easymock.tests.MockingTest.testPartialClassMocking":204,"org.easymock.tests.MockClassControlTest.testToString":342,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":423,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":295,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":183,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":141,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":20,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":515,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":518,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":177,"org.easymock.tests2.UsageTest.wrongArguments":78,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":416,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":397,"org.easymock.samples.ExampleTest.answerVsDelegate":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":356,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":479,"org.easymock.tests2.UsageConstraintsTest.testNull":96,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":126,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":42,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":347,"org.easymock.tests2.CaptureTest.testPrimitive":65,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":202,"org.easymock.tests.UsageTest.moreThanOneArgument":263,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":373,"org.easymock.tests.UsageTest.argumentsOrdered":268,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":382,"org.easymock.tests.UsageVarargTest.varargIntAccepted":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":522,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":319,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":434,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":457,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":240,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":499,"org.easymock.tests.ReplayStateInvalidUsageTest.times":452,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":32,"org.easymock.tests2.DependencyTest.testClassMocking":404,"org.easymock.tests2.AnswerTest.answer":21,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":470,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":362,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":517,"org.easymock.tests2.CaptureTest.testAnd":62,"org.easymock.tests2.UsageTest.strictResetToDefault":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":37,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":254,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":385,"org.easymock.tests2.DelegateToTest.testDelegate":90,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":498,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":198,"org.easymock.tests.LimitationsTest.mockFinalMethod":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":392,"org.easymock.tests2.DependencyTest.testClassMockingSupport":405,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":399,"org.easymock.tests2.CaptureTest.testCapture1_2446744":66,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":424,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":360,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":446,"org.easymock.tests.UsageThrowableTest.throwError":207,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":485,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":435,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":375,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":307,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":502,"org.easymock.samples.PartialClassMockTest.testGetArea":157,"org.easymock.tests.MockingTest.testInterfaceMocking":477,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":237,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":377,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":184,"org.easymock.tests2.UsageTest.niceToStrict":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":296,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":329,"org.easymock.tests2.ThreadingTest.testChangeDefault":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":134,"org.easymock.tests2.MockBuilderTest.testCreateMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":303,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":413,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":192,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":38,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":516,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":170,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":395,"org.easymock.tests.UsageOverloadedMethodTest.overloading":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":305,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":106,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":226,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":259,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":105,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":71,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":482,"org.easymock.tests2.EasyMockSupportClassTest.testAll":140,"org.easymock.tests.MockClassControlTest.testEquals":346,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":390,"org.easymock.tests2.CaptureTest.testCaptureAll":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":361,"org.easymock.tests.MockNameTest.defaultName":476,"org.easymock.tests2.UsageConstraintsTest.testMatches":107,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":444,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":374,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests.UsageVarargTest.allKinds":251,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":391,"org.easymock.samples.BasicClassMockTest.testPrintContent":146,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":213,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":25,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":15,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":369,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":524,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":443,"org.easymock.tests2.UsageConstraintsTest.greaterThan":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":290,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":253,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":132,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":503,"org.easymock.samples.ExampleTest.voteForRemoval":149,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":336,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":47,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":317,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":16,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":486,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":314,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":495,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":75,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":276,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":35,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":10,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":36,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":87,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":403,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":222,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":49,"org.easymock.tests2.CaptureTest.testCapture2_2446744":73,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":471,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":137,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":250,"org.easymock.tests.GenericTest.testBridgedEquals":339,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":175,"org.easymock.tests.UsageExpectAndReturnTest.longType":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":388,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":201,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":325,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":393,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":114,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":199,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":7,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":372,"org.easymock.tests.UsageCallCountTest.tooManyCalls":176,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":223,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":415,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":212,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":56,"org.easymock.tests.MockingTest.testNiceClassMocking":354,"org.easymock.tests.MockingTest.testClassMocking":352,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":454,"org.easymock.tests2.UsageConstraintsTest.testContains":104,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":320,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":139,"org.easymock.tests2.UsageConstraintsTest.testFind":95,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":261,"org.easymock.tests.MockTypeTest.fromEasyMockClass":484,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":161,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":54,"org.easymock.tests.UsageExpectAndReturnTest.object":225,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":41,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":519,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":245,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":440,"org.easymock.tests.UsageTest.exactCallCountByLastCall":269,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":480,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":383,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":277,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":231,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":241,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":273,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":426,"org.easymock.tests.MockClassControlTest.testHashCode":345,"org.easymock.tests2.EasyMockSupportTest.testVerify":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":298,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":17,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":359,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":421,"org.easymock.tests.UsageVarargTest.varargCharAccepted":244,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":442,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":475,"org.easymock.tests2.UsageTest.openCallCountByLastCall":81,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":44,"org.easymock.tests.DefaultClassInstantiatorTest.object":330,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":371,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":438,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":299,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":210,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":409,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":425,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":501,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":130,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":344,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":189,"org.easymock.tests.ReplayStateInvalidCallsTest.times":507,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":232,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":6,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":143,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":343,"org.easymock.tests2.UsageTest.resumeIfFailure":86,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":355,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":491,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":13,"org.easymock.tests2.StubTest.stubWithReturnValue":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":283,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":115,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":224,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":380,"org.easymock.samples.SupportTest.voteForRemovals":155,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":337,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":195,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":381,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":363,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":481,"org.easymock.tests.UsageExpectAndThrowTest.object":193,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":112,"org.easymock.tests2.DelegateToTest.testWrongClass":89,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":505,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":270,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":271,"org.easymock.tests.UsageStrictMockTest.range":166,"org.easymock.samples.ConstructorCalledMockTest.testTax":308,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":419,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":40,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":55,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":194,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":135,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":5,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":287,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":396,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":497,"org.easymock.tests2.CaptureTest.testCaptureNone":70,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":378,"org.easymock.tests.UsageUnorderedTest.message":158,"org.easymock.tests.UsageVerifyTest.twoReturns":258,"org.easymock.tests.UsageVarargTest.varargByteAccepted":249,"org.easymock.tests2.ThreadingTest.testThreadSafe":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":301,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":174,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":441,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":145,"org.easymock.tests2.CaptureTest.testCapture_2617107":64,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":180,"org.easymock.tests2.UsageConstraintsTest.any":102,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":451,"org.easymock.tests2.StubTest.stub":365,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":474,"org.easymock.tests.UsageExpectAndThrowTest.longType":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":12,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":334,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":450,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":28,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":138,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":234,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":338,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":408,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":513,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":31,"org.easymock.tests2.NameTest.nameForMocksControl":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":410,"org.easymock.tests2.MockedExceptionTest.testMockedException":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":291,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":266,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":418,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":187,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":206,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":123,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":136,"org.easymock.tests.MockingTest.testNicePartialClassMocking":205,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":128,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":406,"org.easymock.tests2.CaptureTest.testCaptureLast":69,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":400,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":512,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":99,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":61,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":113,"org.easymock.tests.MockingTest.testTwoMocks":353,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":509,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":215,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":191,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":84,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":117,"org.easymock.samples.ExampleTest.removeNonExistingDocument":436,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":448,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":412,"org.easymock.tests.UsageStrictMockTest.differentMethods":167,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":427,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":488,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":332,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":48,"org.easymock.tests2.MockBuilderTest.testCreateMockString":326,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":340,"org.easymock.tests.UsageExpectAndThrowTest.floatType":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":292,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":289,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":417,"org.easymock.tests.UsageVerifyTest.twoThrows":257,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":142,"org.easymock.samples.ExampleTest.voteAgainstRemoval":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":376,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":131,"org.easymock.tests.LimitationsTest.privateConstructor":349,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":279,"org.easymock.tests2.UsageConstraintsTest.testNotNull":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":214,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":327,"org.easymock.tests2.UsageTest.defaultResetToNice":83,"org.easymock.samples.ExampleTest.voteAgainstRemovals":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":407,"org.easymock.tests.UsageVarargTest.differentLength":246,"org.easymock.tests2.CallbackTest.callback":52,"org.easymock.tests2.UsageConstraintsTest.equals":422,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":310,"org.easymock.tests.UsageTest.openCallCountByLastCall":265,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":179,"org.easymock.tests.UsageCallCountTest.tooFewCalls":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":398,"org.easymock.tests.UsageThrowableTest.throwCheckedException":211,"org.easymock.tests.MockingTest.testStrictClassMocking":351,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":386,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":60,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":411,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":57,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":358,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":59,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":24,"org.easymock.tests.ObjectMethodsTest.testHashCode":439,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":521,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":511,"org.easymock.tests2.NameTest.nameForNiceMock":121,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":50,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":506,"org.easymock.tests2.DependencyTest.testInterfaceMocking":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":520,"org.easymock.samples.ExampleTest.addDocument":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":306,"org.easymock.tests2.DelegateToTest.testStubDelegate":368,"org.easymock.tests2.AnswerTest.stubAnswer":23,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":164,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":493,"org.easymock.tests.UsageVarargTest.varargLongAccepted":248,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndReturnTest.floatType":217,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":233,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":51,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":433,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":402,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":110,"org.easymock.tests.UsageThrowableTest.noUpperLimit":208,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":92,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":312,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":67,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":331,"org.easymock.tests2.UsageConstraintsTest.testSame":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":216,"org.easymock.samples.SupportTest.addDocument":154,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":490,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":496,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":293,"org.easymock.tests.GenericTest.testPackageScope":159,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":432,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":478,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":494,"org.easymock.tests2.NameTest.nameForMock":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":227,"org.easymock.tests2.UsageStrictMockTest.differentMethods":30,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":286,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":315,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":219,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":197,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":437,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":255,"org.easymock.tests2.MockedExceptionTest.testRealException":370,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":467,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":27,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":178,"org.easymock.tests2.NameTest.nameForStrictMock":120,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":322,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":127,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":313,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":111,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":333,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":133,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":500,"org.easymock.tests2.UsageConstraintsTest.lessThan":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":429,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":523,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":34,"org.easymock.tests2.CaptureTest.testCaptureRightOne":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":297,"org.easymock.tests2.UsageConstraintsTest.testOr":98,"org.easymock.tests.UsageRangeTest.combination":252,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":124,"org.easymock.tests.UsageTest.wrongArguments":264,"org.easymock.tests2.MockBuilderTest.testWithConstructor":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":294,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":341,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":228,"org.easymock.tests.UsageVarargTest.varargShortAccepted":247,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":335,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":379,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":514,"org.easymock.tests2.UsageConstraintsTest.cmpTo":103,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":364,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":458,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":82,"org.easymock.tests2.CaptureTest.testCaptureFromStub":366,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":445,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":321,"org.easymock.tests.UsageTest.unexpectedCallWithArray":394,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":510,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":163,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":173,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":285,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":229,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":165,"org.easymock.tests2.UsageConstraintsTest.constraints":93,"org.easymock.samples.ExampleTest.addAndChangeDocument":153,"org.easymock.tests.UsageStrictMockTest.testVerify":169,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":144,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":389,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":238,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":221,"org.easymock.tests.LimitationsTest.abstractClass":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":239,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":39,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":242}}]
