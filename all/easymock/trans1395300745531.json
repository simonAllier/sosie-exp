[{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[43,44,45,46,47,48,49,50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[52,53,54,55],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksBehavior:200","failures":[56],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[70,71,72,73],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[76,77,78,79],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[80],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,2,2,3,3,58,95,59,60,61,62,63,64,96,65,67,68,97,69,4,98,99,100,101,102,103,104,105,106,107,5,70,108,109,110,111,112,113,114,115,52,116,117,118,119,120,53,121,76,71,122,123,124,125,126,72,127,128,54,129,130,7,131,132,133,8,43,134,135,136,137,138,139,13,16,26,32,44,140,141,142,143,77,144,145,146,147,148,149,45,150,74,151,152,78,153,154,155,156,157,158,159,56,160,161,162,163,46,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,0,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,47,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,48,75,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,49,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,50,51,323,324,1,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[4,98,99,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"primitiveType","paramType":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,2,3,58,95,59,60,61,62,63,64,96,65,67,68,97,69,4,98,99,101,102,103,105,106,107,5,70,108,109,110,111,112,113,114,115,52,117,118,119,120,53,121,76,71,122,123,124,125,126,72,127,128,54,129,130,7,131,132,133,8,43,136,137,138,139,13,16,26,32,44,140,141,142,143,77,144,145,146,147,148,149,45,150,74,151,152,78,153,361,154,362,155,156,157,158,159,160,161,162,163,46,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,187,363,364,365,366,188,189,190,191,0,367,192,193,368,194,195,369,196,370,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,47,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,274,275,371,276,277,278,279,280,48,372,373,374,375,376,75,281,282,283,285,286,377,378,379,380,287,288,289,290,291,296,297,298,299,300,49,301,302,303,304,306,307,309,310,311,312,316,317,318,319,381,320,321,322,50,51,323,324,1,382,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[383],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[384,385,386,387],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[142,147,148,165,226,388,371,276,279,280,300,302,50,51,382],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"argType":"type","paramType":"type"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[106,265,272,335],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[141,142,147,148,389,390,391,392,393,394,395,275,371,276,279,280,300],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[4,98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[81,83,84,85,86,88,91,58,95,59,60,61,64,96,65,67,97,69,4,98,101,102,103,105,107,5,70,108,109,110,111,112,113,114,115,52,117,118,119,120,53,121,76,71,122,123,124,125,126,72,127,128,54,129,130,7,131,132,133,8,43,137,138,139,13,16,26,32,44,140,141,143,144,145,146,149,45,150,74,151,152,78,153,154,155,156,157,158,159,56,160,161,46,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,187,188,191,192,193,194,195,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,47,221,222,223,224,225,227,243,251,258,262,267,268,274,275,277,278,48,75,281,282,283,284,285,286,287,288,289,290,291,296,297,49,302,303,306,310,311,312,322,50,51,323,324,1,325,332,333,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[396,397],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"failures":[110,115,123],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[81,92,93,2,2,3,3,4,99,5,129,130,7,131,133,8,13,16,26,32,150,74,152,78,153,361,154,362,155,156,157,398,399,400,191,367,401,192,402,193,368,194,195,369,196,403,370,404,405,227,406,407,75,281,282,306,307,308,309],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[165,166,371,300,302,303],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[408,306,307,308,409],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[81,82,83,84,85,86,87,88,410,89,90,91,92,93,94,2,2,3,3,58,95,59,60,61,62,63,64,96,65,67,68,97,69,4,98,99,101,102,103,105,106,107,5,70,108,109,110,111,112,113,114,115,52,117,118,119,120,53,121,76,71,122,123,124,125,126,72,127,128,54,129,130,7,131,132,133,8,43,136,137,138,139,13,16,26,32,44,140,141,142,143,77,144,145,146,147,148,149,45,150,74,151,152,78,153,361,154,362,155,156,157,158,159,56,160,161,162,163,46,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,363,364,365,366,188,189,190,191,0,367,192,193,368,194,195,369,196,370,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,47,221,222,223,224,225,226,411,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,412,406,413,414,415,416,417,418,245,246,247,248,249,274,275,371,276,277,278,279,280,48,372,373,374,375,376,75,281,282,283,284,285,286,377,378,379,380,287,288,289,290,291,296,297,298,299,300,49,301,302,303,304,305,306,307,309,310,311,312,315,419,316,317,318,319,381,320,321,322,50,51,323,384,324,1,325,382,387,420,421,422,57,423,424,79,425,426,427,428,429,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,430,431,432],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:60","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[4,6,433,434,435,436,437,438,80,39],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":110,"org.easymock.tests2.UsageTest.argumentsOrdered":148,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":274,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":260,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":77,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":82,"org.easymock.tests2.DelegateToTest.testReturnException":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":240,"org.easymock.tests.MockingTest.testPartialClassMocking":75,"org.easymock.tests.MockClassControlTest.testToString":413,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":337,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":434,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":52,"org.easymock.tests2.UsageTest.wrongArguments":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":332,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":379,"org.easymock.samples.ExampleTest.answerVsDelegate":84,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":405,"org.easymock.tests2.UsageConstraintsTest.testNull":112,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":152,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":418,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":179,"org.easymock.tests2.CaptureTest.testPrimitive":60,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":336,"org.easymock.tests.UsageTest.moreThanOneArgument":275,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":356,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":247,"org.easymock.tests.UsageTest.argumentsOrdered":280,"org.easymock.tests.UsageVarargTest.varargIntAccepted":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":265,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":438,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":367,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":291,"org.easymock.tests.ReplayStateInvalidUsageTest.times":426,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":139,"org.easymock.tests2.AnswerTest.answer":43,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":366,"org.easymock.tests2.CaptureTest.testAnd":58,"org.easymock.tests2.UsageTest.strictResetToDefault":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":38,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":285,"org.easymock.tests2.DelegateToTest.testDelegate":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":376,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":386,"org.easymock.tests2.CaptureTest.testCapture1_2446744":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":350,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":364,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":422,"org.easymock.tests.UsageThrowableTest.throwError":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":249,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":34,"org.easymock.samples.PartialClassMockTest.testGetArea":81,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":57,"org.easymock.tests2.CompareToTest.testLessOrEqual":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":288,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":327,"org.easymock.tests2.UsageTest.niceToStrict":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":250,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":193,"org.easymock.tests2.MockBuilderTest.testCreateMock":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":29,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":389,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":346,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":175,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":331,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":377,"org.easymock.tests.UsageOverloadedMethodTest.overloading":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":25,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":1,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":210,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":310,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":120,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":65,"org.easymock.tests.MockClassControlTest.testEquals":417,"org.easymock.tests2.EasyMockSupportClassTest.testAll":13,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":307,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":390,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":354,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":398,"org.easymock.tests2.CaptureTest.testCaptureAll":95,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":365,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":374,"org.easymock.tests2.UsageConstraintsTest.testMatches":121,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":420,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":248,"org.easymock.samples.ExampleTest.voteForRemovals":88,"org.easymock.tests.UsageVarargTest.allKinds":238,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":322,"org.easymock.samples.BasicClassMockTest.testPrintContent":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":375,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":224,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":162,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":244,"org.easymock.tests2.UsageConstraintsTest.greaterThan":71,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":14,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":284,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":157,"org.easymock.samples.ExampleTest.voteForRemoval":85,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":361,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":44,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":309,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":172,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":239,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":100,"org.easymock.tests2.CaptureTest.testCaptureFirst":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":256,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":173,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":206,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":160,"org.easymock.tests2.UsageTest.moreThanOneArgument":141,"org.easymock.tests2.CaptureTest.testCapture2_2446744":97,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":268,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":237,"org.easymock.tests.GenericTest.testBridgedEquals":409,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":320,"org.easymock.tests.UsageExpectAndReturnTest.longType":202,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":372,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":403,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":355,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":126,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":245,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":293,"org.easymock.tests.UsageCallCountTest.tooManyCalls":321,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":223,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":130,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":419,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":401,"org.easymock.tests2.UsageConstraintsTest.testContains":119,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":191,"org.easymock.tests2.UsageConstraintsTest.testFind":111,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":312,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":198,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":298,"org.easymock.tests.UsageExpectAndReturnTest.object":209,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":435,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":232,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":432,"org.easymock.tests.UsageTest.exactCallCountByLastCall":48,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":255,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":313,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":395,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":215,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":228,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":324,"org.easymock.tests.MockClassControlTest.testHashCode":416,"org.easymock.tests2.EasyMockSupportTest.testVerify":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":23,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":314,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":363,"org.easymock.tests.UsageVarargTest.varargCharAccepted":231,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":273,"org.easymock.tests2.UsageTest.openCallCountByLastCall":144,"org.easymock.tests.DefaultClassInstantiatorTest.object":411,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":181,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":329,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":430,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":344,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":221,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":415,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":155,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":343,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":292,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":32,"org.easymock.tests2.UsageTest.resumeIfFailure":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":242,"org.easymock.tests2.StubTest.stubWithReturnValue":107,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":39,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":72,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":208,"org.easymock.tests2.SerializationTest.testAllMockedMethod":99,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":266,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":391,"org.easymock.samples.SupportTest.voteForRemovals":91,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":408,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":349,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":360,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":272,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":134,"org.easymock.tests.UsageExpectAndThrowTest.object":347,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":124,"org.easymock.tests2.DelegateToTest.testWrongClass":103,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":357,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":358,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests.UsageStrictMockTest.range":302,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":177,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":129,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":348,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":194,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":10,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":279,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":378,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":393,"org.easymock.tests2.CaptureTest.testCaptureNone":96,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":328,"org.easymock.tests.UsageUnorderedTest.message":226,"org.easymock.tests.UsageVerifyTest.twoReturns":51,"org.easymock.tests.UsageVarargTest.varargByteAccepted":236,"org.easymock.tests2.ThreadingTest.testThreadSafe":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":27,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":319,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":92,"org.easymock.tests2.CaptureTest.testCapture_2617107":59,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":270,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":335,"org.easymock.tests2.UsageConstraintsTest.any":117,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":425,"org.easymock.tests2.StubTest.stub":106,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":271,"org.easymock.tests.UsageExpectAndThrowTest.longType":340,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":79,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":164,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":188,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests.LimitationsTest.mockNativeMethod":227,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":218,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":308,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":400,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":167,"org.easymock.tests2.NameTest.nameForMocksControl":186,"org.easymock.tests2.MockedExceptionTest.testMockedException":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":15,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":278,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":282,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":341,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":195,"org.easymock.tests.MockingTest.testNicePartialClassMocking":281,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":433,"org.easymock.tests2.CaptureTest.testCaptureLast":64,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":387,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":115,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":8,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":125,"org.easymock.tests.MockingTest.testTwoMocks":407,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":345,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":147,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":128,"org.easymock.samples.ExampleTest.removeNonExistingDocument":410,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":423,"org.easymock.tests.UsageStrictMockTest.differentMethods":303,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":56,"org.easymock.tests2.ConstraintsToStringTest.andToString":383,"org.easymock.tests2.MockBuilderTest.testCreateMockString":370,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":17,"org.easymock.tests.UsageExpectAndThrowTest.floatType":339,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":12,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":136,"org.easymock.tests.UsageVerifyTest.twoThrows":50,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":26,"org.easymock.samples.ExampleTest.voteAgainstRemoval":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":261,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":326,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":156,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":36,"org.easymock.tests2.UsageConstraintsTest.testNotNull":127,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":225,"org.easymock.tests2.UsageTest.defaultResetToNice":146,"org.easymock.samples.ExampleTest.voteAgainstRemovals":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":262,"org.easymock.tests.UsageVarargTest.differentLength":233,"org.easymock.tests2.CallbackTest.callback":187,"org.easymock.tests.UsageTest.openCallCountByLastCall":277,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":334,"org.easymock.tests.UsageCallCountTest.tooFewCalls":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":380,"org.easymock.tests.UsageThrowableTest.throwCheckedException":222,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":394,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":297,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":7,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":427,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":132,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":138,"org.easymock.tests.ObjectMethodsTest.testHashCode":431,"org.easymock.tests2.CompareToTest.testGreateOrEqual":55,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":437,"org.easymock.tests2.NameTest.nameForNiceMock":185,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":161,"org.easymock.tests2.DependencyTest.testInterfaceMocking":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":436,"org.easymock.samples.ExampleTest.addDocument":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":28,"org.easymock.tests2.DelegateToTest.testStubDelegate":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":33,"org.easymock.tests2.AnswerTest.stubAnswer":137,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":49,"org.easymock.tests.UsageVarargTest.varargLongAccepted":235,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":259,"org.easymock.tests.UsageExpectAndReturnTest.floatType":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":5,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":385,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":122,"org.easymock.tests.UsageThrowableTest.noUpperLimit":220,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":108,"org.easymock.tests2.SerializationTest.test":98,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":62,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":396,"org.easymock.tests2.UsageConstraintsTest.testSame":113,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":200,"org.easymock.samples.SupportTest.addDocument":90,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":18,"org.easymock.tests.GenericTest.testPackageScope":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":254,"org.easymock.tests2.NameTest.nameForMock":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":211,"org.easymock.tests2.UsageStrictMockTest.differentMethods":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":203,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":351,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":286,"org.easymock.tests2.MockedExceptionTest.testRealException":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":264,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":263,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":429,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":333,"org.easymock.tests2.NameTest.nameForStrictMock":184,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":197,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":78,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":123,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":192,"org.easymock.tests2.UsageStrictMockTest.range":165,"org.easymock.tests2.UsageConstraintsTest.lessThan":54,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":22,"org.easymock.tests2.CaptureTest.testCaptureRightOne":67,"org.easymock.tests2.UsageConstraintsTest.testOr":114,"org.easymock.tests.UsageRangeTest.combination":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":74,"org.easymock.tests.UsageTest.wrongArguments":276,"org.easymock.tests2.MockBuilderTest.testWithConstructor":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":19,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":251,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":397,"org.easymock.tests.UsageVarargTest.varargShortAccepted":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":381,"org.easymock.tests2.UsageConstraintsTest.cmpTo":118,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":253,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests2.CaptureTest.testCaptureFromStub":68,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":421,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":402,"org.easymock.tests.UsageTest.unexpectedCallWithArray":371,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":300,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":318,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":41,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":213,"org.easymock.tests2.CaptureTest.testCapture":66,"org.easymock.tests2.UsageConstraintsTest.constraints":109,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":301,"org.easymock.samples.ExampleTest.addAndChangeDocument":89,"org.easymock.tests.UsageStrictMockTest.testVerify":305,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":94,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":373,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":63,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":289,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":290,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":176,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":229}}]
