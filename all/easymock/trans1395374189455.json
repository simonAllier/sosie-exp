[{"transplant":{"position":"org.easymock.internal.Injector:114","sourceCode":"continue","type":"CtContinueImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,2,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[57,58,59,60,61],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[63,57,64,65,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[67,68,69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[113,114,115,116,117,87,8,13,15,118,119,120,20,25,28,31,121,122,123,92,124,125,126,127,128,129,102,130,131,132,133,134,135,69,136,137,138,139,140,141,142,143,144,145,55,146,147,148,149,150,151,107,152,153,154,155,156,157],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[3,4,158,159,160,161],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[162,163,164,165,166,167,168,169,170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[85,86,89,90,91,93,95,96,98,99,171,172,173,174,107,108,109,110,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[175,176,93,177,178,107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[61],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,179,19,20,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,180,2,49,50,51,181,52,53,54,145,55,146,147,148,149,150,151,56],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[0,180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[58,59,60,61],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[182,183,184,84,185,63,186,57,187,188,189,190,191,192,58,193,194,195,196,197,59,198,199,64,200,201,1,202,203,65,204,205,60,71,206,72,73,74,75,76,77,207,78,80,81,208,82,209,210,14,15,211,118,93,94,212,213,214,215,100,216,217,218,219,220,221,222,223,224,225,226,227,228,112,229],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[230,231,122,123,32,232,233,234,235,236,237,212,213,215,238,239,240,224,225,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[265,266,267,268,269,270],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,179,19,20,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,180,2,49,50,51,181,52,53,54,145,55,146,147,148,149,150,151,56],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":187,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":239,"org.easymock.tests2.UsageTest.argumentsOrdered":91,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":237,"org.easymock.tests2.StubTest.stubWithReturnValue":233,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":65,"org.easymock.tests2.SerializationTest.testAllMockedMethod":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":235,"org.easymock.tests.MockingTest.testPartialClassMocking":49,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":176,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests.MockClassControlTest.testToString":146,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":253,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":241,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":68,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":42,"org.easymock.tests.UsageExpectAndThrowTest.object":251,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":1,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":227,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":228,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":222,"org.easymock.tests2.UsageTest.wrongArguments":89,"org.easymock.tests.UsageStrictMockTest.range":95,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":126,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":83,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":119,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":33,"org.easymock.tests2.UsageConstraintsTest.testNull":189,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":252,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":10,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":26,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":151,"org.easymock.tests2.CaptureTest.testPrimitive":73,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":226,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":260,"org.easymock.tests.UsageTest.moreThanOneArgument":106,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":109,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":143,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":125,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":177,"org.easymock.tests2.CaptureTest.testCaptureNone":207,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":170,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":266,"org.easymock.tests.UsageUnorderedTest.message":112,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":171,"org.easymock.tests.UsageVerifyTest.twoReturns":99,"org.easymock.tests.UsageTest.argumentsOrdered":110,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":6,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":217,"org.easymock.tests2.CaptureTest.testCapture_2617107":72,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":165,"org.easymock.tests2.UsageConstraintsTest.any":194,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":25,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":140,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":221,"org.easymock.tests.UsageExpectAndThrowTest.longType":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":166,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":139,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":185,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":92,"org.easymock.tests2.SerializationTest.testClass":39,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":87,"org.easymock.tests.LimitationsTest.mockNativeMethod":54,"org.easymock.tests.ReplayStateInvalidUsageTest.times":141,"org.easymock.tests2.AnswerTest.answer":209,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":48,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":117,"org.easymock.tests2.CaptureTest.testAnd":71,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":15,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":267,"org.easymock.tests2.MockedExceptionTest.testMockedException":123,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":240,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":245,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":51,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":8,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":27,"org.easymock.tests.MockingTest.testNicePartialClassMocking":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":256,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":12,"org.easymock.tests2.CaptureTest.testCaptureLast":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":212,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":101,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":192,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":38,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":156,"org.easymock.tests.MockingTest.testTwoMocks":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":100,"org.easymock.tests2.CaptureTest.testCapture1_2446744":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":254,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":249,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":115,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":90,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":205,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":270,"org.easymock.tests.UsageThrowableTest.throwError":229,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":69,"org.easymock.samples.ExampleTest.removeNonExistingDocument":113,"org.easymock.tests.UsageStrictMockTest.differentMethods":96,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":137,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":269,"org.easymock.tests2.MockBuilderTest.testCreateMockString":31,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":172,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":145,"org.easymock.tests.UsageExpectAndThrowTest.floatType":243,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":199,"org.easymock.tests.UsageVerifyTest.twoThrows":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":43,"org.easymock.samples.PartialClassMockTest.testGetArea":5,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":136,"org.easymock.tests2.CompareToTest.testLessOrEqual":66,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":164,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":168,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":242,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":181,"org.easymock.tests2.UsageConstraintsTest.testNotNull":204,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":263,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":122,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":24,"org.easymock.tests2.MockBuilderTest.testCreateMock":28,"org.easymock.tests2.UsageTest.defaultResetToNice":121,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":250,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":175,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":63,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":224,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":124,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":264,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":59,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":36,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":197,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":127,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":268,"org.easymock.tests2.EasyMockSupportClassTest.testAll":41,"org.easymock.tests.MockClassControlTest.testEquals":150,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":258,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":178,"org.easymock.tests2.CaptureTest.testCaptureAll":206,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":154,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":215,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":37,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":35,"org.easymock.tests.MockNameTest.defaultName":111,"org.easymock.tests2.UsageConstraintsTest.testMatches":198,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":142,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":134,"org.easymock.tests2.CompareToTest.testGreateOrEqual":61,"org.easymock.tests.ObjectMethodsTest.testHashCode":130,"org.easymock.tests.UsageVarargTest.allKinds":216,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":97,"org.easymock.samples.BasicClassMockTest.testPrintContent":7,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":155,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":262,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":213,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":94,"org.easymock.tests2.UsageConstraintsTest.greaterThan":64,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":13,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":200,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":230,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":56,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":186,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":75,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":261,"org.easymock.tests2.UsageConstraintsTest.testSame":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":234,"org.easymock.tests2.CaptureTest.testCaptureFirst":82,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":138,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":157,"org.easymock.tests.GenericTest.testPackageScope":46,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":211,"org.easymock.tests2.CaptureTest.testCapture2_2446744":208,"org.easymock.tests2.UsageTest.moreThanOneArgument":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":29,"org.easymock.tests.GenericTest.testBridgedEquals":180,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":259,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":30,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":203,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":257,"org.easymock.tests2.UsageStrictMockTest.differentMethods":86,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":161,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":255,"org.easymock.tests2.MockedExceptionTest.testRealException":232,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":105,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":246,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":223,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":144,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":34,"org.easymock.tests2.UsageConstraintsTest.testContains":196,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":21,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":132,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":32,"org.easymock.tests2.UsageConstraintsTest.testFind":188,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":238,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":182,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":11,"org.easymock.tests.MockTypeTest.fromEasyMockClass":104,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":183,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":201,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":14,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":22,"org.easymock.tests2.UsageStrictMockTest.range":85,"org.easymock.tests2.UsageConstraintsTest.lessThan":60,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":214,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":62,"org.easymock.tests2.CaptureTest.testCaptureRightOne":80,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":265,"org.easymock.tests2.UsageConstraintsTest.testOr":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":9,"org.easymock.tests.UsageTest.wrongArguments":108,"org.easymock.tests2.MockBuilderTest.testWithConstructor":159,"org.easymock.tests.MockClassControlTest.testHashCode":149,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":55,"org.easymock.tests2.EasyMockSupportTest.testVerify":120,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":114,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":133,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":173,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":210,"org.easymock.tests2.UsageConstraintsTest.cmpTo":195,"org.easymock.tests2.CaptureTest.testCaptureMultiple":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":167,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":231,"org.easymock.tests.DefaultClassInstantiatorTest.object":128,"org.easymock.tests2.CaptureTest.testCaptureFromStub":81,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":135,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":23,"org.easymock.tests.UsageTest.unexpectedCallWithArray":107,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":102,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":174,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":248,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":93,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":160,"org.easymock.tests2.CaptureTest.testCapture":79,"org.easymock.tests2.UsageConstraintsTest.constraints":57,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":16,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":148,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":247,"org.easymock.tests.UsageStrictMockTest.testVerify":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":44,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":153,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":76,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":219,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":45,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":52,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":220}}]
