[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[3,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[6,7,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[13,38,39,40],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[25,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[86,87,88,89,90,91,92],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[93,94,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[95],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[10,11,113,114,12,13,14,15,115,116,117,118,119,16,120,17,18,121,19,20,122,123,124,38,125,21,22,23,24,126,39,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,3,144,145,146,26,47,147,54,55,107,27,28,29,148,149,30,40,31,32,33,34,35,150,151,36,37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[152],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[153],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,41,42,43,181,127,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,87,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,145,217,218,146,219,220,9,221,222,223,7,224,225,226,227,8,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,151,244,245,246,247,248,249,250,251,252,253,254,255,256,257,257,258,258,259],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[5,260],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[24,261,100,101,102,103,262,263,264,265,107,27,266,56,267,108,110,111,112,150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:62","sourceCode":"throw new java.lang.RuntimeException(java.lang.IllegalAccessException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[268,269,270,271,272,273,274],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:89","sourceCode":"if (!(org.easymock.internal.Injection.isMatched())) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[280,41,42,301,302,303,127,187,191,195,304,292,199,305,306,307,308,216,146,309,6,310,7,224,225,226,227,8,228,229,268,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,109,329,330,331,332,333,334,151,335],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[250,254],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[25,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,148,149,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,84,85],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[141],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[115,128,130,138],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[336,149,337,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:111","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.createTypeVariableMap(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[113,114,13,15,115,117,122,21,128,130,138],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:70","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : org.easymock.internal.InjectionPlan.getTestSubjectFields()) {\n    java.lang.reflect.Field.setAccessible(true);\n    java.lang.Object java.lang.Object;\n    try {\n        java.lang.Object = java.lang.reflect.Field.get(java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n    }\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass();\n    while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n        org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n        java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n    }\n}","type":"CtForEachImpl"},"failures":[275,276,277,279,281,282,283,286,287,288,289,291,293,294,295,298,299,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[113,115,128,130,138],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":114,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":57,"org.easymock.tests2.UsageTest.argumentsOrdered":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":260,"org.easymock.tests2.StubTest.stubWithReturnValue":25,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":86,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":300,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":125,"org.easymock.tests2.SerializationTest.testAllMockedMethod":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":51,"org.easymock.tests.MockingTest.testPartialClassMocking":238,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":98,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":250,"org.easymock.tests.MockClassControlTest.testToString":225,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":273,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":222,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":166,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":59,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":162,"org.easymock.tests.UsageExpectAndThrowTest.object":69,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":123,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":88,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":36,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":37,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":28,"org.easymock.tests2.UsageTest.wrongArguments":101,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":298,"org.easymock.samples.ConstructorCalledMockTest.testTax":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":331,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":302,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":243,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":199,"org.easymock.tests2.UsageConstraintsTest.testNull":13,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":70,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":229,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":188,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":205,"org.easymock.tests2.CaptureTest.testPrimitive":131,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":30,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":320,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":78,"org.easymock.tests.UsageTest.moreThanOneArgument":108,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":156,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":330,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":104,"org.easymock.tests2.CaptureTest.testCaptureNone":136,"org.easymock.tests.UsageUnorderedTest.message":150,"org.easymock.tests.UsageVerifyTest.twoReturns":267,"org.easymock.tests.UsageTest.argumentsOrdered":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":173,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":31,"org.easymock.tests2.CaptureTest.testCapture_2617107":130,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":92,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":285,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":149,"org.easymock.tests2.UsageConstraintsTest.any":118,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":187,"org.easymock.tests2.StubTest.stub":336,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":317,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":35,"org.easymock.tests.UsageExpectAndThrowTest.longType":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":52,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":247,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":316,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":126,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":280,"org.easymock.tests2.SerializationTest.testClass":196,"org.easymock.tests.ReplayStateInvalidUsageTest.times":318,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":292,"org.easymock.tests.LimitationsTest.mockNativeMethod":232,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":253,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":117,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":308,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":289,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":209,"org.easymock.tests2.CaptureTest.testAnd":128,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":146,"org.easymock.tests2.NameTest.nameForMocksControl":265,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":291,"org.easymock.tests2.MockedExceptionTest.testMockedException":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":161,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":58,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":240,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":63,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":4,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":211,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":189,"org.easymock.tests.MockingTest.testNicePartialClassMocking":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":74,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":215,"org.easymock.tests.LimitationsTest.mockFinalMethod":233,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":287,"org.easymock.tests2.CaptureTest.testCaptureLast":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":54,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":204,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":328,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":124,"org.easymock.tests.MockingTest.testTwoMocks":237,"org.easymock.tests2.CaptureTest.testCapture1_2446744":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":72,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":306,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":67,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":102,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":22,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":312,"org.easymock.tests.UsageThrowableTest.throwError":79,"org.easymock.samples.ExampleTest.removeNonExistingDocument":335,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":294,"org.easymock.tests.UsageStrictMockTest.differentMethods":266,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":277,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":245,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":286,"org.easymock.tests2.MockBuilderTest.testCreateMockString":195,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":7,"org.easymock.tests.UsageExpectAndThrowTest.floatType":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":163,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":158,"org.easymock.tests.UsageVerifyTest.twoThrows":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":172,"org.easymock.samples.PartialClassMockTest.testGetArea":259,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":313,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":32,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":220,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":167,"org.easymock.tests.LimitationsTest.privateConstructor":231,"org.easymock.tests2.UsageConstraintsTest.testNotNull":21,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":85,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":269,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":186,"org.easymock.tests2.UsageTest.defaultResetToNice":304,"org.easymock.tests2.MockBuilderTest.testCreateMock":191,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":175,"org.easymock.tests2.CallbackTest.callback":142,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":295,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":217,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":68,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":96,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":10,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":94,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":329,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":177,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":49,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":17,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":202,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":147,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":120,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":137,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":332,"org.easymock.tests.UsageThrowableTest.throwCheckedException":82,"org.easymock.tests.MockClassControlTest.testEquals":228,"org.easymock.tests2.EasyMockSupportClassTest.testAll":159,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":252,"org.easymock.tests.MockingTest.testStrictClassMocking":235,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":76,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":97,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":105,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":307,"org.easymock.tests2.CaptureTest.testCaptureAll":129,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":203,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":293,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":201,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":319,"org.easymock.tests2.UsageConstraintsTest.testMatches":18,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":268,"org.easymock.tests.ObjectMethodsTest.testHashCode":6,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":91,"org.easymock.tests2.NameTest.nameForNiceMock":264,"org.easymock.tests.UsageVarargTest.allKinds":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":327,"org.easymock.samples.BasicClassMockTest.testPrintContent":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":179,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":55,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":27,"org.easymock.tests2.UsageConstraintsTest.greaterThan":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":160,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":9,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":221,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":198,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":284,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":20,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":234,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":11,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":154,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":133,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":190,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":244,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":80,"org.easymock.tests2.UsageConstraintsTest.testSame":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":50,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":5,"org.easymock.tests2.CaptureTest.testCaptureFirst":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":152,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":164,"org.easymock.tests.GenericTest.testPackageScope":251,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":39,"org.easymock.tests2.UsageTest.moreThanOneArgument":100,"org.easymock.tests2.CaptureTest.testCapture2_2446744":140,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":270,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":283,"org.easymock.tests.GenericTest.testBridgedEquals":254,"org.easymock.tests2.NameTest.nameForMock":262,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":324,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":301,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":194,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":77,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":274,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":38,"org.easymock.tests2.UsageStrictMockTest.differentMethods":261,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":75,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":1,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":73,"org.easymock.tests2.MockedExceptionTest.testRealException":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":64,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":24,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":321,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":29,"org.easymock.tests.MockingTest.testNiceClassMocking":241,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":200,"org.easymock.tests.MockingTest.testClassMocking":236,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":333,"org.easymock.tests2.NameTest.nameForStrictMock":263,"org.easymock.tests2.UsageConstraintsTest.testContains":16,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":182,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":43,"org.easymock.tests2.UsageConstraintsTest.testFind":12,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":48,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":185,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":3,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":214,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":144,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":155,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":246,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":122,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":145,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":296,"org.easymock.tests2.UsageConstraintsTest.lessThan":23,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":207,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":279,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":310,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":26,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":271,"org.easymock.tests2.CaptureTest.testCaptureRightOne":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":168,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":153,"org.easymock.tests2.UsageConstraintsTest.testOr":15,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":106,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":212,"org.easymock.tests.UsageTest.wrongArguments":110,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":276,"org.easymock.tests.MockClassControlTest.testHashCode":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":165,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":224,"org.easymock.tests2.EasyMockSupportTest.testVerify":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":169,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":248,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":93,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":305,"org.easymock.tests2.UsageConstraintsTest.cmpTo":119,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":143,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":46,"org.easymock.tests.DefaultClassInstantiatorTest.object":151,"org.easymock.tests2.CaptureTest.testCaptureFromStub":139,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":311,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":184,"org.easymock.tests.UsageTest.unexpectedCallWithArray":109,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":170,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":81,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":290,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":275,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":227,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":219,"org.easymock.tests2.UsageConstraintsTest.constraints":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":65,"org.easymock.tests.UsageStrictMockTest.testVerify":323,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":0,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":299,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":325,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":134,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":33,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":242,"org.easymock.tests.LimitationsTest.abstractClass":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":34}}]
