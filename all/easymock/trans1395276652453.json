[{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[14,15],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[16,17,18,19,20,21,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[29,30,31,32,33],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,3,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:230","sourceCode":"throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[89],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[73,90,23,12,91,92,93,25,26,28],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[94,94,95,95,96,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[98,36,37,38,99,100,50,52,53,55,58,63,66,67,86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:117","failures":[101,102,103,104,15,105,106,74],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[107,108,109,110],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[111,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[34,35,112,113,39,114,115,116,117,118,46,119,120,121,122,123,124,125,126,127,128,51,53,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,56,58,59,159,160,161,162,163,164,165,166,167,168,29,169,170,171,172,173,61,174,62,64,175,176,177,178,68,69,30,31,32,70,179,180,181,182,183,184,185,186,187,71,188,72,107,189,3,4,190,5,191,6,7,192,193,194,195,196,197,198,73,108,199,9,200,201,109,10,202,203,14,204,205,206,207,208,209,210,211,212,213,214,215,75,216,217,218,76,77,219,220,78,221,222,223,224,225,226,227,84,86,87,228,229,230,231,232,233,234,235,11,23,24,91,25,26,27,13,236,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:218","sourceCode":"return ","type":"CtReturnImpl"},"failures":[237,238,239,240,241,34,35,112,113,39,114,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,42,115,269,116,117,118,46,119,120,121,101,270,271,122,123,124,125,272,50,126,127,273,274,128,51,52,53,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,275,150,151,152,153,154,155,156,157,276,277,278,279,280,281,158,282,283,56,58,59,159,160,161,162,163,284,285,286,287,288,289,164,165,166,167,168,29,102,94,94,95,95,61,174,62,64,175,176,177,178,68,69,30,31,32,70,179,180,181,182,183,184,185,186,187,71,188,72,107,189,3,4,190,5,191,6,7,192,193,194,195,196,197,198,73,108,199,9,200,201,109,10,202,203,103,290,291,104,14,15,292,293,204,294,105,106,205,206,207,208,209,74,210,295,296,211,297,298,299,212,213,214,215,75,216,218,76,77,219,220,78,223,224,225,226,227,84,86,87,300,228,229,230,231,232,233,234,235,11,23,24,91,25,26,27,13,301,236,28],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[302,212,213,303],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[16,17,18,19,20,21,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[268,304,305,306,116,117,118,307,308,156,309,310,311,312,158,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,29,94,95,329,330,181,182,184,185,186,331,187,332,333,71,188,72,334,335,292,293,204,303,336,337,338,223,339,340,341,342,343,344,345,346,229,230,231,232,234,235],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[347],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[94,95,348,349,16,350,96,351,352,353,354,97,212,214,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.RecordState:318","failures":[149,151],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[237,238,239,240,241,34,35,98,36,112,113,37,38,39,355,114,356,111,357,358,359,360,361,362,363,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,364,365,366,367,368,369,40,370,371,372,373,374,268,41,375,42,43,376,377,378,44,45,379,115,269,304,305,306,116,117,380,118,381,382,307,46,119,120,121,101,383,270,271,384,122,100,123,124,125,385,272,386,50,126,127,273,274,128,51,52,53,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,275,150,151,152,153,154,155,387,388,389,390,391,308,156,309,157,310,276,277,278,279,280,281,311,312,158,313,392,393,394,395,396,397,398,399,400,401,402,403,404,314,315,316,317,318,319,405,320,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,282,422,423,424,425,426,283,427,428,429,430,431,432,433,434,435,436,437,54,438,55,56,57,58,59,60,439,159,160,161,162,163,284,285,286,287,288,289,440,321,322,323,324,325,326,327,328,164,165,166,167,168,441,29,442,169,102,170,171,443,172,444,445,94,95,329,330,446,173,61,174,62,63,64,65,175,176,177,66,67,178,68,447,348,69,448,349,449,30,450,31,16,32,451,350,452,70,351,453,454,455,179,180,181,182,183,184,185,186,331,456,187,97,332,333,71,188,72,334,335,107,189,3,4,457,190,5,191,6,7,192,8,193,194,195,196,197,198,73,108,199,9,200,201,90,109,10,202,203,103,290,291,104,14,15,458,459,460,461,292,293,204,294,105,462,106,205,206,207,208,209,74,463,464,465,466,467,210,468,469,470,471,472,473,295,296,211,297,298,299,212,213,303,214,22,474,215,75,216,217,218,76,77,219,220,78,221,222,475,476,79,80,81,82,336,477,478,479,337,480,481,338,482,483,223,484,339,224,340,341,485,486,342,487,488,343,489,225,344,345,490,491,346,226,492,493,494,495,496,497,498,227,499,500,501,502,503,504,83,505,84,85,86,87,88,300,228,506,229,230,231,232,507,233,234,235,508,11,23,12,24,91,92,93,25,26,27,13,301,236,28],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[101,102,103,15,74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[98,509,510,55,511,512],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[513],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[16,350,353,354,514,17,18,19,515,20,21,513,212,214,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[16,17,18,19,20,21,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[456],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[112,113,42,46,125,51,275,407,58,59,286,287,175,176,6,199,86,87],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[212,213,303],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[98,509,510,55,511,512],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[374,55,511,196],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[238,132,138,145,146,168],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests2.UsageTest.argumentsOrdered":67,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":221,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":416,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":65,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":442,"org.easymock.tests2.DelegateToTest.testReturnException":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":277,"org.easymock.tests.MockingTest.testPartialClassMocking":116,"org.easymock.tests.MockClassControlTest.testToString":323,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":476,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":424,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":486,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":224,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":248,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":47,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":17,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":126,"org.easymock.tests2.UsageTest.wrongArguments":63,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":504,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":430,"org.easymock.samples.ExampleTest.answerVsDelegate":102,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":361,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":382,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":184,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":78,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":328,"org.easymock.tests2.CaptureTest.testPrimitive":24,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":128,"org.easymock.tests.UsageTest.moreThanOneArgument":35,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":267,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":239,"org.easymock.tests.UsageTest.argumentsOrdered":38,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":285,"org.easymock.tests.UsageVarargTest.varargIntAccepted":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":164,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":447,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":478,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":472,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":168,"org.easymock.tests.ReplayStateInvalidUsageTest.times":400,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":227,"org.easymock.tests2.DependencyTest.testClassMocking":454,"org.easymock.tests2.AnswerTest.answer":103,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":422,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":461,"org.easymock.tests2.CaptureTest.testAnd":11,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":358,"org.easymock.tests2.UsageTest.strictResetToDefault":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":333,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":349,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":238,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":218,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":289,"org.easymock.tests2.DelegateToTest.testDelegate":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":263,"org.easymock.tests.LimitationsTest.mockFinalMethod":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":391,"org.easymock.tests2.DependencyTest.testClassMockingSupport":455,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":385,"org.easymock.tests2.CaptureTest.testCapture1_2446744":91,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":456,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":459,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":394,"org.easymock.tests.UsageThrowableTest.throwError":149,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":360,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":473,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":440,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":241,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":493,"org.easymock.samples.PartialClassMockTest.testGetArea":29,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":395,"org.easymock.tests.MockingTest.testInterfaceMocking":380,"org.easymock.tests2.CompareToTest.testLessOrEqual":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":162,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":437,"org.easymock.tests2.UsageTest.niceToStrict":64,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":30,"org.easymock.tests2.MockBuilderTest.testCreateMock":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":490,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":501,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":511,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":257,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":76,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":357,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":247,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":41,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":428,"org.easymock.tests.UsageOverloadedMethodTest.overloading":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":346,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":197,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":140,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":123,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":196,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":27,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":367,"org.easymock.tests2.EasyMockSupportClassTest.testAll":223,"org.easymock.tests.MockClassControlTest.testEquals":327,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":309,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":460,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":389,"org.easymock.tests2.CaptureTest.testCaptureAll":23,"org.easymock.tests.MockNameTest.defaultName":379,"org.easymock.tests2.UsageConstraintsTest.testMatches":198,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":392,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":240,"org.easymock.samples.ExampleTest.voteForRemovals":172,"org.easymock.tests.UsageVarargTest.allKinds":374,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":51,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":390,"org.easymock.samples.BasicClassMockTest.testPrintContent":330,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":154,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":83,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":281,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":298,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":513,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":405,"org.easymock.tests2.UsageConstraintsTest.greaterThan":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":484,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":119,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":72,"org.easymock.samples.ExampleTest.voteForRemoval":170,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":320,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":206,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":334,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":89,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":362,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":479,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":331,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":268,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":216,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":276,"org.easymock.tests2.CaptureTest.testCaptureFirst":28,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":217,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":100,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":136,"org.easymock.tests2.UsageTest.moreThanOneArgument":62,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":208,"org.easymock.tests2.CaptureTest.testCapture2_2446744":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":423,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":70,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":373,"org.easymock.tests.GenericTest.testBridgedEquals":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":44,"org.easymock.tests.UsageExpectAndReturnTest.longType":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":387,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":215,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":266,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":90,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":243,"org.easymock.tests.UsageCallCountTest.tooManyCalls":45,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":491,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":503,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":153,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":230,"org.easymock.tests.MockingTest.testNiceClassMocking":307,"org.easymock.tests.MockingTest.testClassMocking":305,"org.easymock.tests2.UsageConstraintsTest.testContains":195,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":375,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":204,"org.easymock.tests2.UsageConstraintsTest.testFind":190,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":125,"org.easymock.tests.MockTypeTest.fromEasyMockClass":359,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":106,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":54,"org.easymock.tests.UsageExpectAndReturnTest.object":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":502,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":18,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":369,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":435,"org.easymock.tests.UsageTest.exactCallCountByLastCall":39,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":286,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":355,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":145,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":364,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":270,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":464,"org.easymock.tests.MockClassControlTest.testHashCode":326,"org.easymock.tests2.EasyMockSupportTest.testVerify":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":488,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":101,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":458,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":506,"org.easymock.tests.UsageVarargTest.varargCharAccepted":368,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":404,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":427,"org.easymock.tests2.UsageTest.openCallCountByLastCall":175,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":1,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":222,"org.easymock.tests.DefaultClassInstantiatorTest.object":314,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":245,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":433,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":99,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":343,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":497,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":463,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":71,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":146,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":226,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":324,"org.easymock.tests2.UsageTest.resumeIfFailure":178,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":111,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":279,"org.easymock.tests2.StubTest.stubWithReturnValue":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":138,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":109,"org.easymock.tests2.SerializationTest.testAllMockedMethod":303,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":282,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":354,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":512,"org.easymock.samples.SupportTest.voteForRemovals":173,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":308,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":466,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":260,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":302,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":283,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":290,"org.easymock.tests.UsageExpectAndThrowTest.object":258,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":356,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":200,"org.easymock.tests2.DelegateToTest.testWrongClass":297,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":160,"org.easymock.tests.UsageStrictMockTest.range":58,"org.easymock.samples.ConstructorCalledMockTest.testTax":94,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":480,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":259,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":31,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":402,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":429,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":509,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":163,"org.easymock.tests2.CaptureTest.testCaptureNone":26,"org.easymock.tests.UsageUnorderedTest.message":50,"org.easymock.tests.UsageVerifyTest.twoReturns":53,"org.easymock.tests.UsageVarargTest.varargByteAccepted":372,"org.easymock.tests2.ThreadingTest.testThreadSafe":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":344,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":377,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":436,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":329,"org.easymock.tests2.CaptureTest.testCapture_2617107":12,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":274,"org.easymock.tests2.UsageConstraintsTest.any":193,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":399,"org.easymock.tests2.StubTest.stub":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndThrowTest.longType":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":278,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":318,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":398,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":85,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":210,"org.easymock.tests2.SerializationTest.testClass":212,"org.easymock.tests.LimitationsTest.mockNativeMethod":158,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":148,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":496,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":88,"org.easymock.tests2.NameTest.nameForMocksControl":82,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":498,"org.easymock.tests2.MockedExceptionTest.testMockedException":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":339,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":113,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":462,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":118,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":252,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":181,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":32,"org.easymock.tests.MockingTest.testNicePartialClassMocking":117,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":514,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":494,"org.easymock.tests2.CaptureTest.testCaptureLast":25,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":272,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":235,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":201,"org.easymock.tests.MockingTest.testTwoMocks":306,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":508,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":256,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":66,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":202,"org.easymock.samples.ExampleTest.removeNonExistingDocument":444,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":500,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":396,"org.easymock.tests.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":465,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":316,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":207,"org.easymock.tests2.MockBuilderTest.testCreateMockString":453,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":321,"org.easymock.tests.UsageExpectAndThrowTest.floatType":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":340,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":483,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":104,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":474,"org.easymock.tests.UsageVerifyTest.twoThrows":52,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":225,"org.easymock.samples.ExampleTest.voteAgainstRemoval":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":161,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":188,"org.easymock.tests.LimitationsTest.privateConstructor":312,"org.easymock.tests2.UsageConstraintsTest.testNotNull":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":155,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":292,"org.easymock.tests2.UsageTest.defaultResetToNice":177,"org.easymock.samples.ExampleTest.voteAgainstRemovals":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":144,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":495,"org.easymock.tests.UsageVarargTest.differentLength":40,"org.easymock.tests2.CallbackTest.callback":74,"org.easymock.tests2.UsageConstraintsTest.equals":457,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":97,"org.easymock.tests.UsageTest.openCallCountByLastCall":112,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":273,"org.easymock.tests.UsageCallCountTest.tooFewCalls":43,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":431,"org.easymock.tests.UsageThrowableTest.throwCheckedException":152,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":510,"org.easymock.tests.MockingTest.testStrictClassMocking":304,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":234,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":499,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":231,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":401,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":233,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":15,"org.easymock.tests.ObjectMethodsTest.testHashCode":434,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":20,"org.easymock.tests2.NameTest.nameForNiceMock":81,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":209,"org.easymock.tests2.DependencyTest.testInterfaceMocking":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":19,"org.easymock.samples.ExampleTest.addDocument":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.DelegateToTest.testStubDelegate":211,"org.easymock.tests2.AnswerTest.stubAnswer":14,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":56,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":451,"org.easymock.tests.UsageVarargTest.varargLongAccepted":371,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":147,"org.easymock.tests.UsageExpectAndReturnTest.floatType":131,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":214,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":471,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":199,"org.easymock.tests.UsageThrowableTest.noUpperLimit":275,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":189,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":336,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":92,"org.easymock.tests2.SerializationTest.test":213,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":315,"org.easymock.tests2.UsageConstraintsTest.testSame":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":130,"org.easymock.samples.SupportTest.addDocument":446,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":507,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":341,"org.easymock.tests.GenericTest.testPackageScope":156,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":470,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":381,"org.easymock.tests2.NameTest.nameForMock":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":141,"org.easymock.tests2.UsageStrictMockTest.differentMethods":87,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":351,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":332,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":133,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":262,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":432,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":121,"org.easymock.tests2.MockedExceptionTest.testRealException":294,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":363,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":419,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":84,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":403,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":127,"org.easymock.tests2.NameTest.nameForStrictMock":80,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":449,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":105,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":185,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":337,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":48,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":317,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":69,"org.easymock.tests2.UsageStrictMockTest.range":86,"org.easymock.tests2.UsageConstraintsTest.lessThan":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":487,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":46,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":182,"org.easymock.tests.UsageTest.wrongArguments":36,"org.easymock.tests2.MockBuilderTest.testWithConstructor":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":485,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":142,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":319,"org.easymock.tests.UsageVarargTest.varargShortAccepted":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":378,"org.easymock.tests2.UsageConstraintsTest.cmpTo":194,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":409,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":176,"org.easymock.tests2.CaptureTest.testCaptureFromStub":301,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":393,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":448,"org.easymock.tests.UsageTest.unexpectedCallWithArray":98,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":376,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":96,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":143,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":57,"org.easymock.samples.ExampleTest.addAndChangeDocument":445,"org.easymock.tests.UsageStrictMockTest.testVerify":439,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":441,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":438,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":388,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":166,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":135,"org.easymock.tests.LimitationsTest.abstractClass":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":167,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":77,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":365}}]
