[{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:115","sourceCode":"break","type":"CtBreakImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[6,7,8],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,13,14,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,6,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,0,65,66,67,68,1,69,70,71,72,73,74,75,2,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,3,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,4,267,268,269,270,271,272,5,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:156","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[312,313,314],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[19,161,279,315,280,282,316,317,318],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,341,25,26,27,28,29,6,30,31,342,342,32,33,34,35,36,37,343,344,39,40,41,42,43,345,56,57,58,59,60,61,62,63,64,0,65,66,67,68,1,69,70,71,72,73,74,75,2,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,3,111,112,113,114,115,116,346,117,118,119,120,121,130,132,133,134,135,347,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,166,167,168,169,170,348,171,172,173,174,175,349,176,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,350,261,262,263,264,265,351,266,4,267,268,269,270,271,272,5,273,274,275,276,277,278,279,280,281,282,316,317,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,352,302,318,353,303,304,305,306,354,307,308,309,310,311],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[331,355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[206,207],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[9,7,356,357,249,260,358,350,359,261,262,263,264,265,351,360,266,289,292,293,361,309,310,311],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,341,25,26,27,28,29,6,30,31,342,342,32,33,34,35,36,37,343,344,39,40,41,42,43,345,56,57,58,59,60,61,62,63,64,0,65,66,67,68,1,69,70,71,72,73,74,75,2,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,3,111,112,113,114,115,116,346,117,118,119,120,121,130,132,133,134,135,347,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,166,167,168,169,170,348,171,172,173,174,175,349,176,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,350,261,262,263,264,265,351,266,4,267,268,269,270,271,272,5,273,274,275,276,277,278,279,280,281,282,316,317,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,352,302,318,353,303,304,305,306,354,307,308,309,310,311],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[32,33,34,35,36,37,64,73,74,76,77,78,79,80,3,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,164,194,195,196,197,302],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[362,363,364,365,345,65,110,3,111,173,175,349,268,304,306,354],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[249,366,367,278,368,369,370,371,372,373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[374,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[9,10,11,13,13,14,14,6,30,7,31,56,376,82,83,84,123,356,357,196,249,251,260,358,350,359,261,262,263,264,265,351,360,266,278,377,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,308,309,310,311],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[200,201,203,205,206,378,217,222,233,235,243],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":201,"org.easymock.tests2.UsageTest.argumentsOrdered":275,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":329,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":271,"org.easymock.tests2.StubTest.stubWithReturnValue":302,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":366,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":221,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":94,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":12,"org.easymock.tests2.SerializationTest.testAllMockedMethod":251,"org.easymock.tests2.DelegateToTest.testReturnException":252,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":33,"org.easymock.tests.MockingTest.testPartialClassMocking":82,"org.easymock.samples.SupportTest.voteForRemovals":17,"org.easymock.tests.MockClassControlTest.testToString":124,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":374,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":151,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":139,"org.easymock.tests.UsageExpectAndThrowTest.object":149,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":362,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":248,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":369,"org.easymock.tests2.DelegateToTest.testWrongClass":254,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":160,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":207,"org.easymock.tests2.UsageTest.wrongArguments":269,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":134,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests.UsageStrictMockTest.range":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":169,"org.easymock.samples.ExampleTest.answerVsDelegate":19,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":188,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":295,"org.easymock.tests2.UsageConstraintsTest.testNull":203,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":286,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":150,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":263,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":129,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":190,"org.easymock.tests2.CaptureTest.testPrimitive":236,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":137,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":69,"org.easymock.tests.UsageTest.moreThanOneArgument":65,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":158,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":59,"org.easymock.tests2.CaptureTest.testCaptureNone":241,"org.easymock.tests.UsageUnorderedTest.message":345,"org.easymock.tests.UsageVerifyTest.twoReturns":111,"org.easymock.tests.UsageVarargTest.varargByteAccepted":119,"org.easymock.tests2.ThreadingTest.testThreadSafe":227,"org.easymock.tests.UsageTest.argumentsOrdered":70,"org.easymock.tests.UsageVarargTest.varargIntAccepted":114,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":40,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":334,"org.easymock.tests2.CaptureTest.testCapture_2617107":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":105,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":338,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":136,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":262,"org.easymock.tests2.UsageConstraintsTest.any":208,"org.easymock.tests2.StubTest.stub":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":321,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":339,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":34,"org.easymock.tests.UsageExpectAndThrowTest.longType":142,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":312,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":50,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":305,"org.easymock.tests2.SerializationTest.testClass":249,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":226,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":232,"org.easymock.tests.ReplayStateInvalidUsageTest.times":52,"org.easymock.tests.LimitationsTest.mockNativeMethod":31,"org.easymock.tests2.AnswerTest.answer":279,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":104,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":259,"org.easymock.tests2.CaptureTest.testAnd":233,"org.easymock.tests2.UsageTest.strictResetToDefault":267,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":307,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":291,"org.easymock.tests2.MockedExceptionTest.testMockedException":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":58,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":185,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":1,"org.easymock.tests2.DelegateToTest.testDelegate":255,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":84,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":143,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":283,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":264,"org.easymock.tests.MockingTest.testNicePartialClassMocking":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":154,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":288,"org.easymock.tests2.CaptureTest.testCaptureLast":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":36,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":301,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":206,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":29,"org.easymock.tests.MockingTest.testTwoMocks":376,"org.easymock.tests2.CaptureTest.testCapture1_2446744":237,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":152,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":147,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":274,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":223,"org.easymock.tests.UsageThrowableTest.throwError":74,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":46,"org.easymock.samples.ExampleTest.removeNonExistingDocument":24,"org.easymock.tests.UsageStrictMockTest.differentMethods":349,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":48,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":229,"org.easymock.tests2.MockBuilderTest.testCreateMockString":266,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":61,"org.easymock.tests.UsageExpectAndThrowTest.floatType":141,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":214,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":280,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":310,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":106,"org.easymock.samples.ExampleTest.voteAgainstRemoval":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":330,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":293,"org.easymock.tests2.UsageTest.niceToStrict":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":140,"org.easymock.tests2.UsageConstraintsTest.testNotNull":222,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":261,"org.easymock.tests2.UsageTest.defaultResetToNice":273,"org.easymock.tests2.MockBuilderTest.testCreateMock":265,"org.easymock.samples.ExampleTest.voteAgainstRemovals":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":100,"org.easymock.tests.UsageVarargTest.differentLength":346,"org.easymock.tests2.CallbackTest.callback":318,"org.easymock.tests.UsageTest.openCallCountByLastCall":68,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":148,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":186,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":167,"org.easymock.tests.UsageCallCountTest.tooFewCalls":344,"org.easymock.tests.UsageOverloadedMethodTest.overloading":63,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":212,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":164,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":298,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":62,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":96,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":313,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":211,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":242,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":170,"org.easymock.tests.UsageThrowableTest.throwCheckedException":77,"org.easymock.tests2.EasyMockSupportClassTest.testAll":308,"org.easymock.tests.MockClassControlTest.testEquals":128,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":30,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":258,"org.easymock.tests2.CaptureTest.testCaptureAll":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":27,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":300,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":73,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":297,"org.easymock.tests2.UsageConstraintsTest.testMatches":213,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":299,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":60,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":44,"org.easymock.tests.ObjectMethodsTest.testHashCode":179,"org.easymock.samples.ExampleTest.voteForRemovals":23,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":231,"org.easymock.tests.UsageVarargTest.allKinds":121,"org.easymock.tests2.DependencyTest.testInterfaceMocking":247,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":371,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":28,"org.easymock.samples.ExampleTest.addDocument":22,"org.easymock.tests2.DelegateToTest.testStubDelegate":253,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":79,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":353,"org.easymock.tests2.AnswerTest.stubAnswer":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":37,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":373,"org.easymock.tests2.UsageConstraintsTest.greaterThan":215,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":131,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":294,"org.easymock.tests.UsageVarargTest.varargLongAccepted":118,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":328,"org.easymock.samples.ExampleTest.voteForRemoval":20,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":228,"org.easymock.tests.UsageExpectAndReturnTest.floatType":87,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":103,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":289,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":278,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":216,"org.easymock.tests.UsageThrowableTest.noUpperLimit":75,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":199,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":56,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests2.SerializationTest.test":250,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":238,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":326,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":183,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":2,"org.easymock.tests2.UsageConstraintsTest.testSame":204,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":86,"org.easymock.samples.SupportTest.addDocument":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":32,"org.easymock.tests2.CaptureTest.testCaptureFirst":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":184,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":277,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":49,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":166,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":92,"org.easymock.tests.GenericTest.testPackageScope":6,"org.easymock.tests2.UsageTest.moreThanOneArgument":268,"org.easymock.tests2.CaptureTest.testCapture2_2446744":245,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":230,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":120,"org.easymock.tests.GenericTest.testBridgedEquals":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":42,"org.easymock.tests.UsageExpectAndReturnTest.longType":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":25,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":181,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":97,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":157,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":220,"org.easymock.tests2.UsageStrictMockTest.differentMethods":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":57,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":89,"org.easymock.tests.UsageCallCountTest.tooManyCalls":43,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":153,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":133,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":343,"org.easymock.tests2.MockedExceptionTest.testRealException":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":332,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":304,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":144,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":78,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":135,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":296,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":358,"org.easymock.tests2.UsageConstraintsTest.testContains":210,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":38,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":196,"org.easymock.tests2.UsageConstraintsTest.testFind":202,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":64,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":316,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":287,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":348,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":317,"org.easymock.tests.UsageExpectAndReturnTest.object":95,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":363,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":217,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":290,"org.easymock.tests.ErrorMessageTest.testGetters":364,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":350,"org.easymock.tests2.UsageStrictMockTest.range":306,"org.easymock.tests2.UsageConstraintsTest.lessThan":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":370,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":116,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":180,"org.easymock.tests.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":327,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":182,"org.easymock.tests2.CaptureTest.testCaptureRightOne":243,"org.easymock.tests2.UsageConstraintsTest.testOr":205,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":368,"org.easymock.tests.UsageRangeTest.combination":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":284,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":101,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":112,"org.easymock.tests.UsageTest.wrongArguments":67,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":163,"org.easymock.tests.MockClassControlTest.testHashCode":127,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":123,"org.easymock.tests2.EasyMockSupportTest.testVerify":193,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":98,"org.easymock.tests.UsageVarargTest.varargShortAccepted":117,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":256,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":41,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":225,"org.easymock.tests2.UsageConstraintsTest.cmpTo":209,"org.easymock.tests.UsageVarargTest.varargCharAccepted":115,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":322,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":340,"org.easymock.tests2.UsageTest.openCallCountByLastCall":272,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":5,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":192,"org.easymock.tests.DefaultClassInstantiatorTest.object":81,"org.easymock.tests2.CaptureTest.testCaptureFromStub":244,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":45,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":359,"org.easymock.tests.UsageTest.unexpectedCallWithArray":66,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":178,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":146,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":76,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":172,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":375,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":99,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":292,"org.easymock.tests2.UsageConstraintsTest.constraints":200,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":126,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":174,"org.easymock.samples.ExampleTest.addAndChangeDocument":341,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":145,"org.easymock.tests.CapturesMatcherTest.test":342,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":102,"org.easymock.tests.UsageStrictMockTest.testVerify":177,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":311,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":125,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":26,"org.easymock.tests2.UsageTest.resumeIfFailure":276,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":239,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":377,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":107,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":356,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":108,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":365,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":113,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":187}}]
