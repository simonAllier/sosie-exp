[{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[12,13,14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[15,16,17,18,19,20],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[70,71,72,73,74,75,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[12,13],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:77","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[15],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[77,77,78,78,79,80,81,70,82,83,84,85,86,87,88,89,90,91,92,26,27,28,93,29,30,94,95,31,32,33,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,34,35,127,36,37,38,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,71,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,42,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,43,221,222,223,224,225,226,227,228,44,229,230,231,45,46,232,233,47,234,235,236,237,48,49,238,239,50,51,52,240,241,242,53,54,55,56,57,243,58,59,60,244,245,246,247,248,249,250,251,252,253,254,12,13,255,256,257,258,259,61,260,261,262,263,63,64,264,265,266,267,268,269,270,271,272,273,274,275,276,277,65,278,279,280,281,282,283,284,285,286,287,288,289,290,291,66,292,293,294,295,296,297,298,299,300,301,302,67,303,304,305,306,307,308,68,309,69,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,73,330,74,75,76,331,332,333,334],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"toStringMethod","finalizeMethod":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[51],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[65,283,313,315,323],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[335,336,337],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"substring"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[77,77,78,78,79,80,81,70,82,83,84,85,86,87,88,91,92,26,27,28,93,94,95,33,97,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,37,38,129,130,131,132,133,134,135,136,137,138,139,143,71,144,145,146,147,148,149,150,151,152,153,154,155,156,157,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,42,198,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,43,221,222,223,224,225,226,227,228,44,229,230,231,45,46,232,233,47,234,235,236,237,48,49,238,239,51,240,241,242,55,56,243,59,60,245,246,247,248,249,250,251,12,13,255,256,257,258,61,261,262,263,63,264,265,266,267,268,269,270,271,272,273,274,275,276,277,65,278,279,280,281,282,283,284,286,287,288,289,290,291,66,292,293,294,295,296,298,299,300,301,302,67,303,304,305,306,307,68,309,69,311,313,314,316,317,320,321,322,323,324,325,326,327,329,73,330,74,75,76,331,332,333,334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[338,339,29,35,340,341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[342],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1263","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[338,339,29,35,340,341],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[138,343,344,199,226],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[87,88,164,165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:110","sourceCode":"return ((org.easymock.internal.Invocation.(getMockAndMethodName()) + \"(\") + org.easymock.internal.ArgumentToString.(org.easymock.internal.ArgumentToString.argumentsToString(java.lang.Object[]))) + \")\"","type":"CtReturnImpl"},"failures":[21,22,26,27,29,30,31,32,35,37,38,345,42,50,53,54,59,60,64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":278,"org.easymock.tests2.UsageTest.argumentsOrdered":54,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":28,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":150,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":52,"org.easymock.tests2.StubTest.stubWithReturnValue":227,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":116,"org.easymock.tests2.SerializationTest.testAllMockedMethod":14,"org.easymock.tests2.DelegateToTest.testReturnException":73,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":148,"org.easymock.tests.MockingTest.testPartialClassMocking":104,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":341,"org.easymock.samples.SupportTest.voteForRemovals":79,"org.easymock.tests.MockClassControlTest.testToString":195,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":184,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":256,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":172,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":247,"org.easymock.tests.UsageExpectAndThrowTest.object":182,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":295,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":237,"org.easymock.tests2.DelegateToTest.testWrongClass":74,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":194,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":284,"org.easymock.tests2.UsageTest.wrongArguments":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":135,"org.easymock.samples.ConstructorCalledMockTest.testTax":77,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":11,"org.easymock.tests.UsageStrictMockTest.range":37,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":142,"org.easymock.samples.ExampleTest.answerVsDelegate":70,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":264,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":101,"org.easymock.tests2.UsageConstraintsTest.testNull":280,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":304,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":183,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":262,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":47,"org.easymock.tests2.CaptureTest.testPrimitive":316,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":139,"org.easymock.tests.UsageTest.moreThanOneArgument":93,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":191,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":141,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":218,"org.easymock.tests2.CaptureTest.testCaptureNone":321,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":131,"org.easymock.tests.UsageUnorderedTest.message":42,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":21,"org.easymock.tests.UsageVerifyTest.twoReturns":27,"org.easymock.tests2.ThreadingTest.testThreadSafe":271,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":211,"org.easymock.tests.UsageTest.argumentsOrdered":32,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":344,"org.easymock.tests2.CaptureTest.testCapture_2617107":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":153,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":259,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":138,"org.easymock.tests2.UsageConstraintsTest.any":286,"org.easymock.tests2.StubTest.stub":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":157,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":149,"org.easymock.tests.UsageExpectAndThrowTest.longType":175,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":335,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":58,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":311,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":327,"org.easymock.tests.LimitationsTest.mockNativeMethod":192,"org.easymock.tests2.AnswerTest.answer":246,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":126,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":168,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":285,"org.easymock.tests2.CaptureTest.testAnd":313,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":7,"org.easymock.tests2.UsageTest.strictResetToDefault":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":308,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":244,"org.easymock.tests2.MockedExceptionTest.testMockedException":332,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":8,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":231,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":222,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":215,"org.easymock.tests2.DelegateToTest.testDelegate":76,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":176,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":302,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":263,"org.easymock.tests.MockingTest.testNicePartialClassMocking":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":187,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":306,"org.easymock.tests2.CaptureTest.testCaptureLast":320,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":151,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":97,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":283,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":270,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":162,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":96,"org.easymock.tests2.CaptureTest.testCapture1_2446744":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":107,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":185,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":253,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":180,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":53,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":300,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":343,"org.easymock.tests.UsageThrowableTest.throwError":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":9,"org.easymock.tests.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":1,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":100,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":17,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":273,"org.easymock.tests2.MockBuilderTest.testCreateMockString":64,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":22,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":5,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":220,"org.easymock.tests.UsageExpectAndThrowTest.floatType":174,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":66,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":249,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":257,"org.easymock.samples.PartialClassMockTest.testGetArea":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":154,"org.easymock.samples.ExampleTest.voteAgainstRemoval":83,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":129,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":130,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":309,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":202,"org.easymock.tests2.UsageTest.niceToStrict":51,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":173,"org.easymock.tests2.UsageConstraintsTest.testNotNull":299,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":210,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":261,"org.easymock.tests2.UsageTest.defaultResetToNice":242,"org.easymock.tests2.MockBuilderTest.testCreateMock":62,"org.easymock.samples.ExampleTest.voteAgainstRemovals":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":122,"org.easymock.tests.UsageVarargTest.differentLength":23,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":6,"org.easymock.tests2.CallbackTest.callback":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":10,"org.easymock.tests.UsageTest.openCallCountByLastCall":94,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":340,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":181,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":45,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":276,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":137,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":140,"org.easymock.tests.UsageOverloadedMethodTest.overloading":170,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":290,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":144,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":118,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":169,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":336,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":289,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":322,"org.easymock.tests.UsageThrowableTest.throwCheckedException":207,"org.easymock.tests2.EasyMockSupportClassTest.testAll":255,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":189,"org.easymock.tests2.CaptureTest.testCaptureAll":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":160,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":269,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":328,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":266,"org.easymock.tests.MockNameTest.defaultName":90,"org.easymock.tests2.UsageConstraintsTest.testMatches":291,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":268,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":219,"org.easymock.samples.ExampleTest.voteForRemovals":84,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":275,"org.easymock.tests.UsageVarargTest.allKinds":89,"org.easymock.tests2.DependencyTest.testInterfaceMocking":236,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":161,"org.easymock.tests2.DelegateToTest.testStubDelegate":330,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":209,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":57,"org.easymock.tests2.AnswerTest.stubAnswer":250,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":75,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":3,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":152,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":127,"org.easymock.tests2.UsageConstraintsTest.greaterThan":292,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":221,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":69,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":128,"org.easymock.samples.ExampleTest.voteForRemoval":82,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":20,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":272,"org.easymock.tests.UsageExpectAndReturnTest.floatType":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":125,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":102,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":245,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":78,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":293,"org.easymock.tests.UsageThrowableTest.noUpperLimit":204,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":277,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":49,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":146,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":318,"org.easymock.tests2.SerializationTest.test":13,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":229,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":16,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":205,"org.easymock.tests2.UsageConstraintsTest.testSame":281,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":147,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":329,"org.easymock.tests2.CaptureTest.testCaptureFirst":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":230,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":56,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":114,"org.easymock.tests.GenericTest.testPackageScope":167,"org.easymock.tests2.CaptureTest.testCapture2_2446744":325,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":274,"org.easymock.tests2.UsageTest.moreThanOneArgument":239,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":214,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":63,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":40,"org.easymock.tests.UsageExpectAndReturnTest.longType":110,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":119,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":190,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":297,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":91,"org.easymock.tests2.UsageStrictMockTest.differentMethods":60,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":111,"org.easymock.tests.UsageCallCountTest.tooManyCalls":41,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":186,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":223,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":166,"org.easymock.tests2.MockedExceptionTest.testRealException":334,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":103,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":115,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":243,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":177,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":208,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":265,"org.easymock.tests2.UsageConstraintsTest.testContains":288,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":333,"org.easymock.tests2.UsageConstraintsTest.testFind":279,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":171,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":224,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":305,"org.easymock.tests.MockTypeTest.fromEasyMockClass":99,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":225,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":34,"org.easymock.tests.UsageExpectAndReturnTest.object":117,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":294,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":307,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":61,"org.easymock.tests2.UsageStrictMockTest.range":59,"org.easymock.tests2.UsageConstraintsTest.lessThan":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":233,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":2,"org.easymock.tests.UsageTest.exactCallCountByLastCall":33,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":342,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":133,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":44,"org.easymock.tests2.CaptureTest.testCaptureRightOne":323,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":212,"org.easymock.tests2.UsageConstraintsTest.testOr":282,"org.easymock.tests.UsageRangeTest.combination":43,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":67,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":123,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":71,"org.easymock.tests.UsageTest.wrongArguments":30,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":0,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":120,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":87,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":19,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":252,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":24,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":39,"org.easymock.tests2.UsageConstraintsTest.cmpTo":287,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":248,"org.easymock.tests2.UsageTest.openCallCountByLastCall":240,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":241,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":235,"org.easymock.tests.DefaultClassInstantiatorTest.object":15,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":86,"org.easymock.tests2.CaptureTest.testCaptureFromStub":324,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":260,"org.easymock.tests.UsageTest.unexpectedCallWithArray":29,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":200,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":25,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":206,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":121,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":197,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":68,"org.easymock.tests2.UsageConstraintsTest.constraints":65,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.samples.ExampleTest.addAndChangeDocument":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":124,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":258,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":159,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":319,"org.easymock.tests2.UsageTest.resumeIfFailure":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":155,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":113,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":145,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":46}}]
