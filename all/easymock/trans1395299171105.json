[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[83,84,85],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[86,87],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[21,89,90,91,92,93,44,45,46,94,95,96,97,98,79,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[99,100,101,23,68],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[102,103,104,105],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[106,107,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[109],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[110,111,112],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[16,17,113,100,101,114,23,24,28,115,116,117,118,90,119,120,92,121,68,69,122,94,123,124,125,126,98],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[127,0,128,71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[129,130,131,132],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[133,134,135,136,137,138,139,140,141,18,142,143,144,113,100,101,19,145,146,147,20,21,114,22,23,24,25,148,149,150,151,26,152,27,153,154,155,156,157,158,28,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,29,30,31,32,33,34,35,36,37,38,180,181,182,183,39,40,41,42,43,184,185,186,117,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,92,44,211,212,45,46,213,47,48,49,214,50,51,215,52,53,54,55,56,57,58,216,59,60,217,218,61,62,63,64,219,220,221,65,222,223,224,225,226,227,228,86,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,66,121,67,68,69,70,0,128,71,244,245,246,72,247,248,249,250,73,74,75,76,251,85,252,253,102,254,255,88,256,129,257,258,259,260,261,262,263,264,265,266,87,103,267,131,104,268,77,269,132,270,271,272,78,273,274,275,276,277,278,279,280,281,282,283,284,98,79,285,80,286,287,81,82,288,289,290,291,3,292,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","obj":"obj","targetField":"targetField"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[257],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[142,144,296,100,147,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,186,210,297,298,299,224,283],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[226],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[106,300,133,134,301,302,135,136,137,138,139,16,17,140,141,18,142,143,303,304,305,306,144,307,308,309,310,311,312,313,314,113,100,101,19,145,146,147,315,21,114,22,23,24,25,148,316,149,150,151,109,152,27,153,154,155,156,157,158,28,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,38,180,181,317,318,319,182,320,321,322,323,324,325,326,183,39,40,41,327,42,43,184,115,185,186,116,117,118,328,187,188,189,329,107,108,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,92,93,44,211,212,45,46,213,330,331,332,297,298,299,333,334,334,335,335,214,51,215,52,53,55,56,58,216,59,60,217,218,61,62,63,64,219,220,336,221,65,337,338,222,339,223,224,225,226,227,228,86,229,340,230,341,231,342,343,344,345,346,232,233,234,235,236,237,238,239,240,241,242,243,347,348,349,350,351,121,67,68,69,70,0,128,71,244,245,246,72,247,248,249,352,250,73,74,75,76,84,251,85,252,353,253,102,254,255,88,256,129,257,258,259,260,130,261,262,263,264,265,266,87,103,267,131,104,268,77,269,132,270,271,272,354,355,78,356,273,274,357,358,359,275,276,277,278,279,280,281,282,283,284,98,79,285,80,286,287,360,81,82,288,289,290,291,3,292,361,362,293,294,363],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[131,104],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[216,60,217,218,61,62,63,219,364,220,336,65],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[135,136,137,138,139,140,114,23,24,148,316,149,150,159,180,181,321,322,323,324,187,188,189,190,191,192,193,194,195,198,199,201,202,203,205,206,207,208,209,214,51,52,53,55,58,225,226,227,228,86,229,230,341,231,342,235,237,238,239,240,241,242,243,121,68,69,85,355,78,273,274,358,276,277,278,279,280,281,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[21,89,90,93,94,96],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[23,24,365,68,69],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[100,101,21,23,24,148,28,327,42,43,118,366,120,367,368,93,44,45,46,68,69,73,355,357,358,359,79,81,82,288],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[369,370,371,372,373,374,375,106,376,300,133,134,301,302,135,136,137,138,139,16,17,377,140,141,18,142,143,303,304,305,306,144,307,378,379,380,381,382,383,384,385,386,296,387,388,389,390,391,392,83,393,394,395,396,397,308,398,399,400,401,402,309,403,310,311,312,313,314,113,100,101,19,145,146,147,315,20,21,114,22,23,24,25,404,148,316,149,150,405,151,26,109,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,152,27,153,154,155,156,157,158,28,427,428,429,159,430,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,29,30,31,431,32,33,432,34,35,36,37,38,180,181,317,318,319,182,320,321,322,323,324,325,326,433,183,39,40,41,327,42,43,184,115,185,186,116,117,118,434,435,328,187,188,436,189,437,438,439,329,107,108,110,440,441,442,443,10,444,111,445,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,92,93,44,211,212,45,46,213,446,330,331,332,297,298,299,333,47,48,49,334,334,335,335,214,50,51,215,52,53,54,55,447,56,57,58,216,59,60,217,218,61,62,63,64,219,220,336,221,65,337,338,222,339,223,224,225,226,227,228,86,229,340,448,230,449,450,365,341,231,342,451,452,453,343,344,345,346,454,455,456,457,232,233,234,235,236,237,238,239,240,241,242,243,347,348,349,350,351,66,121,67,68,69,70,0,128,71,244,245,246,72,247,248,249,352,250,73,74,75,76,84,251,85,252,353,253,102,254,255,88,458,256,129,257,258,259,260,130,261,262,263,264,265,266,87,103,267,131,104,268,77,269,132,270,271,459,460,461,462,463,272,464,465,466,467,468,469,354,470,355,471,295,472,78,356,273,1,274,2,357,358,473,359,474,475,476,477,478,275,479,480,481,482,483,484,485,486,487,276,488,489,277,490,491,492,493,494,495,496,497,498,278,499,500,501,502,503,279,504,505,506,507,280,281,508,282,283,284,98,79,285,80,286,287,360,81,82,288,289,290,509,291,3,4,510,292,361,362,293,294,363],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[216,60,217,218,61,62,63,219,364,220,336,65],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[135,136,137,138,139,17,140,141,18,142,143,303,304,305,306,144,307,310,311,312,313,314,113,100,101,19,146,147,315,20,21,114,22,23,24,25,404,148,316,149,150,151,26,408,419,152,27,153,154,155,156,157,158,28,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,29,30,31,32,33,34,35,36,37,38,180,181,182,320,321,322,323,324,325,326,433,183,39,40,41,117,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,92,93,44,211,212,45,46,213,446,330,331,332,51,215,52,53,54,55,56,216,59,60,217,218,61,62,63,64,219,220,336,221,65,337,338,222,339,223,224,225,226,227,228,86,229,230,365,231,343,344,345,346,232,233,234,235,236,238,239,242,243,347,348,349,350,351,66,121,67,68,69,70,0,128,71,251,85,252,253,102,254,255,88,256,129,257,258,259,260,261,262,263,264,265,266,87,103,267,131,104,268,269,132,270,271,354,78,356,358,359,280,508,282,283,284,98,79,285,80,286,287,360,81,82,288,289,290,291,3,292,293,294,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":88,"org.easymock.tests2.UsageTest.argumentsOrdered":82,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":74,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":83,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":80,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":50,"org.easymock.tests2.DelegateToTest.testReturnException":251,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":304,"org.easymock.tests.MockingTest.testPartialClassMocking":187,"org.easymock.tests.MockClassControlTest.testToString":409,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":453,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":106,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":493,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":160,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":277,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":5,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":140,"org.easymock.tests2.UsageTest.wrongArguments":79,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":484,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":331,"org.easymock.samples.ExampleTest.answerVsDelegate":215,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":381,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":438,"org.easymock.tests2.UsageConstraintsTest.testNull":129,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":228,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":414,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":73,"org.easymock.tests2.CaptureTest.testPrimitive":217,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":179,"org.easymock.tests.UsageTest.moreThanOneArgument":92,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":323,"org.easymock.tests.UsageTest.argumentsOrdered":46,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":300,"org.easymock.tests.UsageVarargTest.varargIntAccepted":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":397,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":135,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":354,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":386,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":139,"org.easymock.tests.ReplayStateInvalidUsageTest.times":423,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":275,"org.easymock.tests2.DependencyTest.testClassMocking":506,"org.easymock.tests2.AnswerTest.answer":292,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":350,"org.easymock.tests2.CaptureTest.testAnd":216,"org.easymock.tests2.UsageTest.strictResetToDefault":284,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":295,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":322,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":247,"org.easymock.tests2.DelegateToTest.testDelegate":253,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":175,"org.easymock.tests.LimitationsTest.mockFinalMethod":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":314,"org.easymock.tests2.DependencyTest.testClassMockingSupport":507,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":16,"org.easymock.tests2.CaptureTest.testCapture1_2446744":218,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":173,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":348,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":417,"org.easymock.tests.UsageThrowableTest.throwError":152,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":380,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":469,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":368,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":505,"org.easymock.samples.PartialClassMockTest.testGetArea":214,"org.easymock.tests.MockingTest.testInterfaceMocking":436,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":136,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":494,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":161,"org.easymock.tests2.UsageTest.niceToStrict":285,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":78,"org.easymock.tests2.MockBuilderTest.testCreateMock":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":501,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":481,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":169,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":94,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":248,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":446,"org.easymock.tests.UsageOverloadedMethodTest.overloading":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":498,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":186,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":265,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":201,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":11,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":264,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":219,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":431,"org.easymock.tests.MockClassControlTest.testEquals":413,"org.easymock.tests2.EasyMockSupportClassTest.testAll":276,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":26,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":177,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":95,"org.easymock.tests2.CaptureTest.testCaptureAll":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":312,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":349,"org.easymock.tests.MockNameTest.defaultName":427,"org.easymock.tests2.UsageConstraintsTest.testMatches":266,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":324,"org.easymock.samples.ExampleTest.voteForRemovals":55,"org.easymock.tests.UsageVarargTest.allKinds":38,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":113,"org.easymock.samples.BasicClassMockTest.testPrintContent":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":313,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":157,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":351,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":307,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":353,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":111,"org.easymock.tests2.UsageConstraintsTest.greaterThan":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":488,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":316,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":342,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":445,"org.easymock.samples.ExampleTest.voteForRemoval":52,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":451,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":233,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":382,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":15,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":340,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":19,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":283,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":246,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":303,"org.easymock.tests2.CaptureTest.testCaptureFirst":65,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":72,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":289,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":118,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":197,"org.easymock.tests2.UsageTest.moreThanOneArgument":98,"org.easymock.tests2.CaptureTest.testCapture2_2446744":221,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":399,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":358,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":37,"org.easymock.tests.GenericTest.testBridgedEquals":406,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":42,"org.easymock.tests.UsageExpectAndReturnTest.longType":193,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":244,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":310,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":178,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":77,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":321,"org.easymock.tests.UsageCallCountTest.tooManyCalls":43,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":502,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":198,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":483,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":165,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":156,"org.easymock.tests.MockingTest.testNiceClassMocking":439,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":238,"org.easymock.tests.MockingTest.testClassMocking":435,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":433,"org.easymock.tests2.UsageConstraintsTest.testContains":263,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":222,"org.easymock.tests2.UsageConstraintsTest.testFind":256,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":147,"org.easymock.tests.MockTypeTest.fromEasyMockClass":379,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":291,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":315,"org.easymock.tests.UsageExpectAndReturnTest.object":200,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":482,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":250,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":6,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":372,"org.easymock.tests.UsageTest.exactCallCountByLastCall":213,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":388,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":133,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":375,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":4,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":29,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":206,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":185,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":460,"org.easymock.tests.MockClassControlTest.testHashCode":412,"org.easymock.tests2.EasyMockSupportTest.testVerify":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":496,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":134,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":184,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":347,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":366,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":508,"org.easymock.tests.UsageVarargTest.varargCharAccepted":32,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":110,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":403,"org.easymock.tests2.UsageTest.openCallCountByLastCall":286,"org.easymock.tests.DefaultClassInstantiatorTest.object":440,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":75,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":297,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":370,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":497,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":477,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":459,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":411,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":341,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":166,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":207,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":317,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":410,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":279,"org.easymock.tests2.UsageTest.resumeIfFailure":288,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":378,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":306,"org.easymock.tests2.StubTest.stubWithReturnValue":224,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":199,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":269,"org.easymock.tests2.SerializationTest.testAllMockedMethod":71,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":308,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":96,"org.easymock.samples.SupportTest.voteForRemovals":58,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":462,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":172,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":127,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":309,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":361,"org.easymock.tests.UsageExpectAndThrowTest.object":170,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":376,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":104,"org.easymock.tests2.DelegateToTest.testWrongClass":252,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":180,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":181,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.samples.ConstructorCalledMockTest.testTax":334,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":456,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":171,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":485,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":425,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":330,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":89,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":108,"org.easymock.tests2.CaptureTest.testCaptureNone":64,"org.easymock.tests.UsageUnorderedTest.message":28,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":367,"org.easymock.tests.UsageVerifyTest.twoReturns":101,"org.easymock.tests.UsageVarargTest.varargByteAccepted":36,"org.easymock.tests2.ThreadingTest.testThreadSafe":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":499,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":41,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":48,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":373,"org.easymock.tests2.CaptureTest.testCapture_2617107":60,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":97,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":142,"org.easymock.tests2.UsageConstraintsTest.any":261,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":422,"org.easymock.tests2.StubTest.stub":223,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndThrowTest.longType":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":305,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":10,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":421,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":67,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":272,"org.easymock.tests.LimitationsTest.mockNativeMethod":159,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":209,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":476,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":70,"org.easymock.tests2.NameTest.nameForMocksControl":346,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":478,"org.easymock.tests2.MockedExceptionTest.testMockedException":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":489,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":212,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":509,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":189,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":164,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":274,"org.easymock.tests.MockingTest.testNicePartialClassMocking":188,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":229,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":474,"org.easymock.tests2.CaptureTest.testCaptureLast":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":17,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":243,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":259,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":268,"org.easymock.tests.MockingTest.testTwoMocks":328,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":168,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":81,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":270,"org.easymock.samples.ExampleTest.removeNonExistingDocument":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":480,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":419,"org.easymock.tests.UsageStrictMockTest.differentMethods":24,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":461,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":442,"org.easymock.tests2.ConstraintsToStringTest.andToString":125,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":234,"org.easymock.tests2.MockBuilderTest.testCreateMockString":359,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":490,"org.easymock.tests.UsageExpectAndThrowTest.floatType":162,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":487,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":510,"org.easymock.tests.UsageVerifyTest.twoThrows":100,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":278,"org.easymock.samples.ExampleTest.voteAgainstRemoval":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":393,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":329,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":231,"org.easymock.tests.LimitationsTest.privateConstructor":429,"org.easymock.tests2.UsageConstraintsTest.testNotNull":132,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":337,"org.easymock.tests2.UsageTest.defaultResetToNice":360,"org.easymock.samples.ExampleTest.voteAgainstRemovals":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":475,"org.easymock.tests.UsageVarargTest.differentLength":432,"org.easymock.tests2.CallbackTest.callback":282,"org.easymock.tests2.UsageConstraintsTest.equals":458,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":449,"org.easymock.tests.UsageTest.openCallCountByLastCall":211,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":102,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":18,"org.easymock.tests.UsageCallCountTest.tooFewCalls":39,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":240,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":332,"org.easymock.tests.UsageThrowableTest.throwCheckedException":155,"org.easymock.tests.MockingTest.testStrictClassMocking":434,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":90,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":242,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":479,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":239,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":424,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":241,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":363,"org.easymock.tests.ObjectMethodsTest.testHashCode":371,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":236,"org.easymock.tests2.NameTest.nameForNiceMock":345,"org.easymock.tests2.DependencyTest.testInterfaceMocking":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":7,"org.easymock.samples.ExampleTest.addDocument":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":504,"org.easymock.tests2.DelegateToTest.testStubDelegate":85,"org.easymock.tests2.AnswerTest.stubAnswer":294,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":114,"org.easymock.tests.UsageVarargTest.varargLongAccepted":35,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":392,"org.easymock.tests.UsageExpectAndReturnTest.floatType":192,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":208,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":3,"org.easymock.tests2.ConstraintsToStringTest.orToString":122,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":335,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":467,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":116,"org.easymock.tests.UsageThrowableTest.noUpperLimit":27,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":267,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":254,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":454,"org.easymock.tests2.SerializationTest.test":128,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":61,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":12,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":441,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":191,"org.easymock.tests2.UsageConstraintsTest.testSame":257,"org.easymock.samples.SupportTest.addDocument":57,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":112,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":491,"org.easymock.tests.GenericTest.testPackageScope":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":466,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":437,"org.easymock.tests2.NameTest.nameForMock":343,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":202,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":473,"org.easymock.tests2.UsageStrictMockTest.differentMethods":69,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":450,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":194,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":174,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":369,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":150,"org.easymock.tests2.MockedExceptionTest.testRealException":339,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":383,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":395,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":121,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":141,"org.easymock.tests2.NameTest.nameForStrictMock":344,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":472,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":290,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":86,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":455,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":443,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":131,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":355,"org.easymock.tests2.UsageStrictMockTest.range":68,"org.easymock.tests2.UsageConstraintsTest.lessThan":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":8,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":495,"org.easymock.tests2.CaptureTest.testCaptureRightOne":220,"org.easymock.tests2.UsageConstraintsTest.testOr":258,"org.easymock.tests.UsageRangeTest.combination":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":226,"org.easymock.tests.UsageTest.wrongArguments":44,"org.easymock.tests2.MockBuilderTest.testWithConstructor":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":492,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":408,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":203,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":444,"org.easymock.tests.UsageVarargTest.varargShortAccepted":34,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":327,"org.easymock.tests2.UsageConstraintsTest.cmpTo":262,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":296,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":287,"org.easymock.tests2.CaptureTest.testCaptureFromStub":336,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":416,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":471,"org.easymock.tests.UsageTest.unexpectedCallWithArray":93,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":40,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":204,"org.easymock.tests2.CaptureTest.testCapture":364,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":22,"org.easymock.tests2.UsageConstraintsTest.constraints":255,"org.easymock.samples.ExampleTest.addAndChangeDocument":56,"org.easymock.tests2.ConstraintsToStringTest.notToString":123,"org.easymock.tests.UsageStrictMockTest.testVerify":404,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":47,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":20,"org.easymock.tests2.CompareToTest.testGreateThan":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":311,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":137,"org.easymock.tests.LimitationsTest.abstractClass":428,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":196,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":138,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":99,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":30,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":249}}]
