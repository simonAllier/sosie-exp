[{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:131","failures":[44],"status":-1,"binaryOperator":"(\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"result","java.lang.Integer.MAX_VALUE":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[46,46,47,47,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,30,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:60","sourceCode":"return int","type":"CtReturnImpl"},"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,7,8,9,106,10,12,13,14,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,17,18,133,19,20,134,48,49,50,135,136,51,23,137,138,52,53,54,55,56,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,57,58,25,171,172,173,174,175,176,177,178,179,64,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,26,27,197,198,28,29,199,200,201,202,30,203,31,32,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,65,66,236,237,67,68,69,70,238,239,240,241,71,242,72,73,243,74,75,244,245,246,247,76,77,78,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[68],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[275,276,277],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[81,46,47,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,7,8,9,106,10,11,12,278,279,13,14,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,17,18,133,19,20,134,48,280,49,50,135,136,51,281,282,283,284,285,286,287,24,137,288,289,290,291,138,292,52,53,54,55,56,293,294,295,296,297,140,141,142,143,298,144,145,146,147,299,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,300,300,170,57,58,25,301,171,172,302,303,304,305,306,59,60,61,62,63,173,175,176,177,178,179,64,180,181,182,183,184,185,186,307,187,188,189,190,191,192,193,194,195,196,26,27,197,198,308,309,310,28,29,199,200,201,202,30,203,31,32,204,205,210,211,212,213,311,312,313,314,214,215,216,217,218,219,220,315,221,222,316,223,224,317,225,318,226,227,228,229,230,231,232,233,234,319,320,235,65,66,236,237,67,68,69,70,238,239,240,241,71,242,72,73,243,74,75,244,245,246,321,247,76,77,78,248,249,250,251,252,253,322,254,323,255,256,257,258,259,260,261,262,324,263,264,265,266,267,268,79,325,269,270,271,272,326,273,327,328,274,329],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[81,46,47,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,7,8,9,106,10,11,12,278,279,13,14,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,17,18,133,19,20,134,48,280,49,50,135,136,51,281,282,283,284,285,286,287,24,137,288,289,290,291,138,292,52,53,54,55,56,293,294,295,296,297,140,141,142,143,298,144,145,146,147,299,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,57,58,25,301,171,172,302,303,304,305,306,59,60,61,62,63,173,175,176,177,330,178,179,64,180,181,182,183,184,185,186,307,187,188,189,190,191,192,193,194,195,196,26,27,197,198,308,309,310,28,29,199,200,201,202,30,203,31,32,204,205,210,211,212,213,311,312,313,314,214,215,216,217,218,219,220,315,221,222,316,223,224,317,225,318,226,227,228,229,230,231,232,233,234,319,320,235,65,66,236,237,67,68,69,70,238,239,240,241,71,242,72,73,243,74,75,244,245,246,321,247,76,77,78,248,249,250,251,252,253,322,254,323,255,256,257,258,259,260,261,262,324,263,264,265,266,267,268,79,325,269,270,271,272,326,273,327,328,274,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[84,222,223,224,331],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[273],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[46,46,47,47,84,93,94,332,333,334,108,109,110,137,146,147,335,170,336,205,214,216,217,218,219,220,315,337,221,338,222,316,223,224,317,225,331,318,226,227,228,229,231,232,248,249,251,252,253,322,254,323,255,256,257,339,340,341,274],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[342,343,344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[238],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":237,"org.easymock.tests2.UsageTest.argumentsOrdered":29,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":106,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":291,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":198,"org.easymock.tests2.StubTest.stubWithReturnValue":64,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":247,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":85,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":120,"org.easymock.tests2.SerializationTest.testAllMockedMethod":216,"org.easymock.tests2.DelegateToTest.testReturnException":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":289,"org.easymock.tests.MockingTest.testPartialClassMocking":108,"org.easymock.samples.SupportTest.voteForRemovals":83,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":41,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":162,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":150,"org.easymock.tests.UsageExpectAndThrowTest.object":160,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":245,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":193,"org.easymock.tests2.DelegateToTest.testWrongClass":326,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":57,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":58,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":49,"org.easymock.tests2.UsageTest.wrongArguments":27,"org.easymock.tests.UsageStrictMockTest.range":19,"org.easymock.samples.ConstructorCalledMockTest.testTax":46,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":283,"org.easymock.samples.ExampleTest.answerVsDelegate":87,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":307,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":226,"org.easymock.tests2.UsageConstraintsTest.testNull":68,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":251,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":161,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":223,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":188,"org.easymock.tests2.CaptureTest.testPrimitive":262,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":51,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests.UsageTest.moreThanOneArgument":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":169,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":282,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":61,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":0,"org.easymock.tests2.CaptureTest.testCaptureNone":266,"org.easymock.tests.UsageUnorderedTest.message":25,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests.UsageVarargTest.varargByteAccepted":103,"org.easymock.tests2.ThreadingTest.testThreadSafe":233,"org.easymock.tests.UsageTest.argumentsOrdered":14,"org.easymock.tests.UsageVarargTest.varargIntAccepted":97,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":143,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":93,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":42,"org.easymock.tests2.CaptureTest.testCapture_2617107":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":52,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":43,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":315,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":343,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":136,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":316,"org.easymock.tests2.UsageConstraintsTest.any":240,"org.easymock.tests2.StubTest.stub":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":290,"org.easymock.tests.UsageExpectAndThrowTest.longType":153,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":275,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":37,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":203,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":258,"org.easymock.tests2.SerializationTest.testClass":214,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":270,"org.easymock.tests.LimitationsTest.mockNativeMethod":170,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":335,"org.easymock.tests2.AnswerTest.answer":210,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":314,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":341,"org.easymock.tests2.CaptureTest.testAnd":259,"org.easymock.tests2.UsageTest.strictResetToDefault":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":323,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":204,"org.easymock.tests2.NameTest.nameForMocksControl":209,"org.easymock.tests2.MockedExceptionTest.testMockedException":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":60,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":184,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":279,"org.easymock.tests2.DelegateToTest.testDelegate":273,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":330,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":154,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":248,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":224,"org.easymock.tests.MockingTest.testNicePartialClassMocking":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":165,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":253,"org.easymock.tests2.CaptureTest.testCaptureLast":265,"org.easymock.tests2.CompareToTest.testCompareEqual":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":138,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":16,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":238,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":297,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":246,"org.easymock.tests.MockingTest.testTwoMocks":334,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":15,"org.easymock.tests2.CaptureTest.testCapture1_2446744":324,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":158,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":77,"org.easymock.tests.UsageThrowableTest.throwError":301,"org.easymock.tests.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":319,"org.easymock.tests2.ConstraintsToStringTest.andToString":40,"org.easymock.tests2.MockBuilderTest.testCreateMockString":318,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":63,"org.easymock.tests.UsageExpectAndThrowTest.floatType":152,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":243,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":211,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":219,"org.easymock.samples.PartialClassMockTest.testGetArea":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":53,"org.easymock.samples.ExampleTest.voteAgainstRemoval":89,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":256,"org.easymock.tests2.UsageTest.niceToStrict":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":151,"org.easymock.tests2.UsageConstraintsTest.testNotNull":76,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":306,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":222,"org.easymock.tests2.MockBuilderTest.testCreateMock":317,"org.easymock.tests2.UsageTest.defaultResetToNice":310,"org.easymock.samples.ExampleTest.voteAgainstRemovals":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":126,"org.easymock.tests.UsageVarargTest.differentLength":100,"org.easymock.tests2.CallbackTest.callback":194,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":3,"org.easymock.tests.UsageTest.openCallCountByLastCall":278,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":34,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":159,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":185,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":65,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":139,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":281,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":135,"org.easymock.tests.UsageCallCountTest.tooFewCalls":141,"org.easymock.tests.UsageOverloadedMethodTest.overloading":148,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":287,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":72,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":122,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":276,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":242,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":284,"org.easymock.tests.UsageThrowableTest.throwCheckedException":303,"org.easymock.tests2.EasyMockSupportClassTest.testAll":217,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":147,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":39,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":167,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":295,"org.easymock.tests2.CaptureTest.testCaptureAll":260,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":280,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":231,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":228,"org.easymock.tests2.UsageConstraintsTest.testMatches":73,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":230,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":62,"org.easymock.samples.ExampleTest.voteForRemovals":91,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":235,"org.easymock.tests2.NameTest.nameForNiceMock":208,"org.easymock.tests.UsageVarargTest.allKinds":105,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":7,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":296,"org.easymock.samples.BasicClassMockTest.testPrintContent":94,"org.easymock.samples.ExampleTest.addDocument":90,"org.easymock.tests2.DelegateToTest.testStubDelegate":272,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":305,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":201,"org.easymock.tests2.AnswerTest.stubAnswer":212,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":292,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":18,"org.easymock.tests2.UsageConstraintsTest.greaterThan":74,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":174,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":257,"org.easymock.tests.UsageVarargTest.varargLongAccepted":102,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":134,"org.easymock.samples.ExampleTest.voteForRemoval":88,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":234,"org.easymock.tests.UsageExpectAndReturnTest.floatType":113,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":129,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":344,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":322,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":205,"org.easymock.tests2.ConstraintsToStringTest.orToString":33,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":47,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":75,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":22,"org.easymock.tests.UsageThrowableTest.noUpperLimit":171,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":195,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":66,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":137,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":263,"org.easymock.tests2.SerializationTest.test":215,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":182,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":172,"org.easymock.tests2.UsageConstraintsTest.testSame":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":112,"org.easymock.samples.SupportTest.addDocument":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":288,"org.easymock.tests2.CaptureTest.testCaptureFirst":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":183,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":200,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":24,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":118,"org.easymock.tests.GenericTest.testPackageScope":146,"org.easymock.tests2.CaptureTest.testCapture2_2446744":325,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":320,"org.easymock.tests2.UsageTest.moreThanOneArgument":26,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":225,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":104,"org.easymock.tests2.NameTest.nameForMock":206,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":144,"org.easymock.tests.UsageExpectAndReturnTest.longType":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":293,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":180,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":331,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":123,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":168,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":321,"org.easymock.tests2.UsageStrictMockTest.differentMethods":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":59,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":115,"org.easymock.tests.UsageCallCountTest.tooManyCalls":145,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":1,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":164,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":176,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":140,"org.easymock.tests2.MockedExceptionTest.testRealException":329,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":119,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":4,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":304,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":50,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":227,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":337,"org.easymock.tests2.NameTest.nameForStrictMock":207,"org.easymock.tests2.UsageConstraintsTest.testContains":71,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":274,"org.easymock.tests2.UsageConstraintsTest.testFind":67,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":149,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":252,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":131,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":178,"org.easymock.tests.UsageExpectAndReturnTest.object":121,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":244,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":221,"org.easymock.tests2.UsageStrictMockTest.range":31,"org.easymock.tests2.UsageConstraintsTest.lessThan":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":187,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":99,"org.easymock.tests.UsageTest.exactCallCountByLastCall":107,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":48,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":181,"org.easymock.tests2.CaptureTest.testCaptureRightOne":268,"org.easymock.tests2.UsageConstraintsTest.testOr":70,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":5,"org.easymock.tests.UsageRangeTest.combination":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":249,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":127,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":286,"org.easymock.tests.UsageTest.wrongArguments":12,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":116,"org.easymock.tests2.EasyMockSupportTest.testVerify":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":124,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":36,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":285,"org.easymock.tests.UsageVarargTest.varargShortAccepted":101,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":311,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":298,"org.easymock.tests2.UsageConstraintsTest.cmpTo":241,"org.easymock.tests.UsageVarargTest.varargCharAccepted":98,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":202,"org.easymock.tests2.UsageTest.openCallCountByLastCall":308,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":309,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":190,"org.easymock.tests2.CaptureTest.testCaptureFromStub":79,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":338,"org.easymock.tests.UsageTest.unexpectedCallWithArray":11,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":6,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":302,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":125,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":255,"org.easymock.tests2.UsageConstraintsTest.constraints":236,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":133,"org.easymock.samples.ExampleTest.addAndChangeDocument":92,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":156,"org.easymock.tests2.ConstraintsToStringTest.notToString":35,"org.easymock.tests.CapturesMatcherTest.test":300,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":128,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":220,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":38,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":294,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":264,"org.easymock.tests2.UsageTest.resumeIfFailure":199,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":54,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":332,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":55,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":23,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":186,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":342}}]
