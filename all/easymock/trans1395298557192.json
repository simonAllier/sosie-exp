[{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:197","sourceCode":"java.lang.Thread = java.lang.Thread.java.lang.Thread.currentThread()","type":"CtAssignmentImpl"},"failures":[11,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[3,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[33,34],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[36,37],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[39,40,41,25,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,14,9,77,78,15,16,17,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,24,104,31,105,106,107,108,109,110,111,112,113,114,115],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[116,117,118,119,120,121],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[122,123,63,124,64,65,66,67,125,68,69,70,71,72,126,73,74,127,128,129,75,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,0,1,164,165,2,166,3,4,167,5,13,168,169,170,171,172,173,174,175,6,176,177,76,178,7,179,180,181,182,183,184,185,186,187,188,189,190,8,14,9,191,192,77,78,15,16,193,10,194,195,17,196,197,12,198,199,200,201,202,203,204,205,39,206,207,208,35,79,209,40,210,211,212,213,214,215,216,217,80,218,219,220,221,222,81,82,83,84,223,224,225,226,227,85,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,86,18,87,88,89,90,91,41,302,303,304,305,306,19,307,308,36,309,310,311,37,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,92,366,367,368,369,370,93,94,95,371,96,97,372,98,99,100,101,102,20,21,373,103,374,33,375,376,377,378,379,380,381,382,383,34,22,23,24,25,384,42,385,120,386,387,43,388,389,390,44,45,391,392,46,393,47,48,49,50,394,51,52,53,54,395,55,56,57,58,396,397,59,398,60,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,104,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,26,27,28,29,30,432,433,434,61,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,31,463,105,121,32,106,107,108,109,464,465,466,467,468,62,469,470,471,472,473,474,475,476,477,478,479,480,481,110,111,112,113,482,114,115],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[187,188,189,190,198,35,247,298,299,302,303,304,305,308,321,322,455,456,457,458,459],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[170,102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[122,122,123,123,69,70,126,128,75,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,483,224,484,225,226,227,85,228,229,230,232,233,234,485,486,235,236,237,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,259,260,487,488,489,490,491,492,283,284,297,298,299,308,36,309,310,311,37,312,313,314,315,316,317,319,322,351,356,357,358,359,360,361,362,363,364,365,92,366,367,103,403,408,421,422,423,424],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).startsWith(java.lang.String))","type":"CtReturnImpl"},"failures":[179],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:326","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[128,129,75,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[122,122,123,123,128,231,232,245,283,284],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[494],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[122,122,123,123,63,124,64,65,67,68,126,74,127,128,129,137,140,150,156,159,161,162,163,0,1,165,2,166,3,4,167,5,13,168,169,170,171,172,173,174,175,6,176,177,76,178,7,179,180,181,182,183,184,185,186,187,188,189,190,8,14,9,191,192,77,78,15,16,193,10,194,195,17,196,197,12,198,199,200,201,202,203,204,205,39,206,207,208,35,79,209,40,210,211,212,213,214,215,216,217,80,218,219,220,221,222,81,82,83,224,225,226,85,228,229,230,233,234,235,236,237,238,239,240,241,242,244,247,248,249,250,252,253,254,255,256,258,259,260,264,265,271,272,283,290,291,297,298,299,300,301,18,87,88,89,90,91,41,302,303,304,305,306,19,307,308,315,316,317,319,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,347,348,350,351,352,353,354,355,356,358,359,360,361,365,366,369,102,20,21,373,103,22,23,24,25,384,42,385,120,386,387,43,388,389,390,44,45,391,392,46,393,47,48,49,50,394,51,52,53,54,395,55,56,57,58,396,397,59,398,60,399,400,401,402,403,406,407,408,409,410,411,412,413,414,104,415,416,417,418,419,420,423,425,426,427,428,429,430,431,26,27,28,29,30,447,453,455,456,457,458,459,460,461,462,31,463,121,32,106,107,108,109,465,466,467,468,62,469,470,471,472,473,474,475,476,477,478,479,110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[124,127,159,161,181,183,184,186,425,444],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[128,129,75,493],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests2.UsageTest.argumentsOrdered":212,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":441,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":79,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":72,"org.easymock.tests2.DelegateToTest.testReturnException":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":466,"org.easymock.tests.MockingTest.testPartialClassMocking":316,"org.easymock.tests.MockClassControlTest.testToString":358,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":278,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":144,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":44,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":265,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":22,"org.easymock.tests2.UsageTest.wrongArguments":208,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":277,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":304,"org.easymock.samples.ExampleTest.answerVsDelegate":124,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":408,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":321,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":239,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":81,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":363,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":487,"org.easymock.tests2.CaptureTest.testPrimitive":191,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":384,"org.easymock.tests.UsageTest.moreThanOneArgument":385,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":58,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":477,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":470,"org.easymock.tests.UsageTest.argumentsOrdered":389,"org.easymock.tests.UsageVarargTest.varargIntAccepted":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":446,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":26,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":224,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":295,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":30,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":271,"org.easymock.tests.ReplayStateInvalidUsageTest.times":381,"org.easymock.tests2.DependencyTest.testClassMocking":262,"org.easymock.tests2.AnswerTest.answer":181,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":448,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":190,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":405,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":476,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":218,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":354,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":474,"org.easymock.tests2.DelegateToTest.testDelegate":205,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":395,"org.easymock.tests.LimitationsTest.mockFinalMethod":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":459,"org.easymock.tests2.DependencyTest.testClassMockingSupport":263,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":343,"org.easymock.tests2.CaptureTest.testCapture1_2446744":192,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":243,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":53,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":188,"org.easymock.tests.UsageThrowableTest.throwError":414,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":375,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":407,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":158,"org.easymock.samples.PartialClassMockTest.testGetArea":126,"org.easymock.tests.MockingTest.testInterfaceMocking":318,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":45,"org.easymock.tests2.UsageTest.niceToStrict":35,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":351,"org.easymock.tests2.ThreadingTest.testChangeDefault":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":85,"org.easymock.tests2.MockBuilderTest.testCreateMock":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":274,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":50,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":219,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":404,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":462,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":480,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":302,"org.easymock.tests.UsageOverloadedMethodTest.overloading":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":149,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":428,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":171,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":334,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":170,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":193,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":371,"org.easymock.tests2.EasyMockSupportClassTest.testAll":137,"org.easymock.tests.MockClassControlTest.testEquals":362,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":56,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":488,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":457,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":189,"org.easymock.tests2.CaptureTest.testCaptureAll":14,"org.easymock.tests.MockNameTest.defaultName":306,"org.easymock.tests2.UsageConstraintsTest.testMatches":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":478,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":374,"org.easymock.samples.ExampleTest.voteForRemovals":67,"org.easymock.tests.UsageVarargTest.allKinds":102,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":398,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":458,"org.easymock.samples.BasicClassMockTest.testPrintContent":70,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":419,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":469,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":292,"org.easymock.tests2.UsageConstraintsTest.greaterThan":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":353,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":250,"org.easymock.samples.ExampleTest.voteForRemoval":64,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":312,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":197,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":251,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":485,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":242,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":103,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":217,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":465,"org.easymock.tests2.CaptureTest.testCaptureFirst":17,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":80,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":214,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":330,"org.easymock.tests2.CaptureTest.testCapture2_2446744":195,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":198,"org.easymock.tests2.UsageTest.moreThanOneArgument":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":449,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":234,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":101,"org.easymock.tests.GenericTest.testBridgedEquals":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":114,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":38,"org.easymock.tests.UsageExpectAndReturnTest.longType":326,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":455,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":215,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":486,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":57,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":76,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":373,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":475,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":412,"org.easymock.tests.UsageCallCountTest.tooManyCalls":115,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":154,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":331,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":276,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":393,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":418,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":254,"org.easymock.tests.MockingTest.testNiceClassMocking":322,"org.easymock.tests.MockingTest.testClassMocking":314,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":484,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":481,"org.easymock.tests2.UsageConstraintsTest.testContains":169,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":299,"org.easymock.tests2.UsageConstraintsTest.testFind":165,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":59,"org.easymock.tests.MockTypeTest.fromEasyMockClass":406,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":463,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":161,"org.easymock.tests.UsageExpectAndReturnTest.object":333,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":222,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":97,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":349,"org.easymock.tests.UsageTest.exactCallCountByLastCall":390,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":471,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":368,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":284,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":339,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":427,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":286,"org.easymock.tests.MockClassControlTest.testHashCode":361,"org.easymock.tests2.EasyMockSupportTest.testVerify":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":147,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":472,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":461,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":187,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":223,"org.easymock.tests.UsageVarargTest.varargCharAccepted":96,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":454,"org.easymock.tests2.UsageTest.openCallCountByLastCall":209,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":83,"org.easymock.tests.DefaultClassInstantiatorTest.object":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":460,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":148,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":48,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":492,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":416,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":269,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":285,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":248,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":360,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":47,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":156,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":359,"org.easymock.tests2.UsageTest.resumeIfFailure":213,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":468,"org.easymock.tests2.StubTest.stubWithReturnValue":41,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":332,"org.easymock.tests2.SerializationTest.testAllMockedMethod":75,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":447,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":117,"org.easymock.samples.SupportTest.voteForRemovals":74,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":364,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":288,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":52,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":453,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":182,"org.easymock.tests.UsageExpectAndThrowTest.object":394,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":370,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":176,"org.easymock.tests2.DelegateToTest.testWrongClass":203,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":20,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":21,"org.easymock.samples.ConstructorCalledMockTest.testTax":122,"org.easymock.tests.UsageStrictMockTest.range":107,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":132,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":221,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":51,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":229,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":134,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":303,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":118,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":402,"org.easymock.tests2.CaptureTest.testCaptureNone":16,"org.easymock.tests.UsageUnorderedTest.message":31,"org.easymock.tests.UsageVerifyTest.twoReturns":399,"org.easymock.tests.UsageVarargTest.varargByteAccepted":100,"org.easymock.tests2.ThreadingTest.testThreadSafe":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":151,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":113,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":69,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":350,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":25,"org.easymock.tests2.UsageConstraintsTest.any":13,"org.easymock.tests2.StubTest.stub":91,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":380,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndThrowTest.longType":392,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":311,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":379,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":87,"org.easymock.tests2.SerializationTest.testClass":128,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":290,"org.easymock.tests.LimitationsTest.mockNativeMethod":423,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":342,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":366,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":491,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":268,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":90,"org.easymock.tests2.NameTest.nameForMocksControl":282,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":270,"org.easymock.tests2.MockedExceptionTest.testMockedException":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":139,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":43,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":46,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":319,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":236,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":230,"org.easymock.tests.MockingTest.testNicePartialClassMocking":317,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":241,"org.easymock.tests2.CaptureTest.testCaptureLast":15,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":266,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":344,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":260,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":177,"org.easymock.tests.MockingTest.testTwoMocks":315,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":261,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":323,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":49,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":211,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":179,"org.easymock.samples.ExampleTest.removeNonExistingDocument":125,"org.easymock.tests.UsageStrictMockTest.differentMethods":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":273,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":287,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":309,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":12,"org.easymock.tests2.MockBuilderTest.testCreateMockString":235,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":356,"org.easymock.tests.UsageExpectAndThrowTest.floatType":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":141,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":136,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":184,"org.easymock.tests.UsageVerifyTest.twoThrows":60,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":150,"org.easymock.samples.ExampleTest.voteAgainstRemoval":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":400,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":249,"org.easymock.tests.LimitationsTest.privateConstructor":422,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":420,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":297,"org.easymock.tests2.UsageTest.defaultResetToNice":210,"org.easymock.samples.ExampleTest.voteAgainstRemovals":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":338,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":267,"org.easymock.tests.UsageVarargTest.differentLength":372,"org.easymock.tests2.CallbackTest.callback":127,"org.easymock.tests2.UsageConstraintsTest.equals":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":245,"org.easymock.tests.UsageTest.openCallCountByLastCall":387,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":24,"org.easymock.tests.UsageCallCountTest.tooFewCalls":111,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":305,"org.easymock.tests.UsageThrowableTest.throwCheckedException":417,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":119,"org.easymock.tests.MockingTest.testStrictClassMocking":313,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":307,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":272,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":258,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":186,"org.easymock.tests.ObjectMethodsTest.testHashCode":348,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":494,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":199,"org.easymock.tests2.NameTest.nameForNiceMock":281,"org.easymock.tests2.DependencyTest.testInterfaceMocking":264,"org.easymock.samples.ExampleTest.addDocument":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":157,"org.easymock.tests2.DelegateToTest.testStubDelegate":202,"org.easymock.tests2.AnswerTest.stubAnswer":185,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":32,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":231,"org.easymock.tests.UsageVarargTest.varargLongAccepted":99,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndReturnTest.floatType":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":341,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":283,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":123,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":175,"org.easymock.tests.UsageThrowableTest.noUpperLimit":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":294,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":163,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":130,"org.easymock.tests2.SerializationTest.test":129,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":77,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":36,"org.easymock.tests2.UsageConstraintsTest.testSame":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":324,"org.easymock.samples.SupportTest.addDocument":73,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":257,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":142,"org.easymock.tests.GenericTest.testPackageScope":365,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":293,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":320,"org.easymock.tests2.NameTest.nameForMock":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":335,"org.easymock.tests2.UsageStrictMockTest.differentMethods":89,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":246,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":327,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":54,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":355,"org.easymock.tests2.MockedExceptionTest.testRealException":300,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":444,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":18,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":23,"org.easymock.tests2.NameTest.nameForStrictMock":280,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":227,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":159,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":240,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":131,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":310,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":225,"org.easymock.tests2.UsageStrictMockTest.range":88,"org.easymock.tests2.UsageConstraintsTest.lessThan":180,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":289,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":146,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":352,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":237,"org.easymock.tests.UsageTest.wrongArguments":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":143,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":357,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":433,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":336,"org.easymock.tests.UsageVarargTest.varargShortAccepted":98,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":37,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":482,"org.easymock.tests2.UsageConstraintsTest.cmpTo":168,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":61,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":40,"org.easymock.tests2.CaptureTest.testCaptureFromStub":194,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":33,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":226,"org.easymock.tests.UsageTest.unexpectedCallWithArray":120,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":121,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":112,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":337,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":106,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":68,"org.easymock.tests.UsageStrictMockTest.testVerify":464,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":71,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":456,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":78,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":490,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":28,"org.easymock.tests.LimitationsTest.abstractClass":421,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":329,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":29,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":220}}]
