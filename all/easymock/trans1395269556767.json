[{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:201","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[18],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[20,21,22,23],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[37,38,39,40],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[41,42],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[43,44,45,46,47,48,49,50,51,52,53,54,21],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[55,56,57,58,59,60,61,62,63,64,65],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[66,67,68,69,70,71],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[44,46,47,48,50,72,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[73,74,75,76,77,78,79,80,81,82,42,83,84,85,86,87,88,89,90,91,92,93,94,95,96,96,97,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,43,120,121,122,123,124,125,126,127,128,129,21,23,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[66,69,130,131,132,133],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[134,135,24,136,137,138,139,55,140,141,142,143,144,145,146,147,148,149,150,151,67,68,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,25,26,27,28,29,30,189,190,191,192,193,194,195,196,197,198,199,200,201,202,80,81,42,203,204,205,206,207,208,209,210,211,212,213,214,31,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,89,90,91,92,241,242,93,94,243,244,245,56,246,247,248,249,250,251,252,253,32,98,99,254,100,101,102,104,255,256,257,258,259,70,71,260,261,262,263,264,265,1,2,3,4,5,6,7,8,266,9,10,11,12,13,57,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,14,284,285,286,287,288,289,290,291,292,293,294,295,296,110,113,297,116,58,61,62,63,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,22,23,33,34,35,36,64,65],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[320,66,67,202,204,205,69,321,219,322,323,70,324,305,325],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[320,66,67,202,204,205,69,321,219,322,323,70,324,305,325],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[134,135,137,37,74,75,76,138,139,55,140,141,326,150,67,68,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,175,176,177,178,179,180,327,181,182,29,189,190,191,80,203,204,205,206,208,209,210,211,212,213,214,31,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,91,95,244,245,56,246,247,249,251,252,32,98,99,254,100,101,102,104,106,107,108,255,256,258,70,71,261,262,263,264,265,1,2,3,4,5,8,266,9,10,12,13,57,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,14,284,285,286,287,288,289,290,291,292,293,294,295,296,110,111,112,113,297,114,115,116,117,118,119,43,58,62,63,298,299,300,301,303,304,328,306,307,121,123,125,126,128,308,309,310,311,312,313,314,329,315,316,317,318,21,22,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[78,79,41,82,95,96,97,103,330,106,107,109,117,118,119,43,44,331,120,332,121,122,333,334,123,124,125,52,126,335,53,127,128,336,129,21,33],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[66],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[337,338,339,340,341,66,151,67,68,342,343,344,345,346,202,204,205,215,69,321,219,322,220,103,105,255,347,348,349,350,256,351,259,70,71,273,298,324,301,302,328,305,325,307,120,124,125,126,128,129,310,312,313,329,315],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[150,67,68,352,353,354,355,202,203,204,205,216,258,70,71,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[95,121,123,125,126,128,129],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[21,22,23],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":274,"org.easymock.tests2.UsageTest.argumentsOrdered":325,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":215,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":28,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":302,"org.easymock.tests2.StubTest.stubWithReturnValue":32,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":52,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":293,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":241,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":162,"org.easymock.tests2.SerializationTest.testAllMockedMethod":23,"org.easymock.tests2.DelegateToTest.testReturnException":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":26,"org.easymock.tests.MockingTest.testPartialClassMocking":74,"org.easymock.samples.SupportTest.voteForRemovals":244,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":133,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":41,"org.easymock.tests.MockClassControlTest.testToString":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":109,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":221,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":117,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":59,"org.easymock.tests.UsageExpectAndThrowTest.object":231,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":352,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":290,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":252,"org.easymock.tests2.DelegateToTest.testWrongClass":269,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":46,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":138,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":139,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":280,"org.easymock.tests2.UsageTest.wrongArguments":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":134,"org.easymock.tests.UsageStrictMockTest.range":67,"org.easymock.samples.ConstructorCalledMockTest.testTax":96,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":339,"org.easymock.samples.ExampleTest.answerVsDelegate":56,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":329,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":79,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":110,"org.easymock.tests2.UsageConstraintsTest.testNull":276,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":232,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":100,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":316,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":90,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":125,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":137,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":240,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests.UsageTest.moreThanOneArgument":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":338,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":130,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":146,"org.easymock.tests2.CaptureTest.testCaptureNone":266,"org.easymock.tests.UsageUnorderedTest.message":202,"org.easymock.tests.UsageVerifyTest.twoReturns":205,"org.easymock.tests.UsageVarargTest.varargByteAccepted":199,"org.easymock.tests2.ThreadingTest.testThreadSafe":261,"org.easymock.tests.UsageTest.argumentsOrdered":322,"org.easymock.tests.UsageVarargTest.varargIntAccepted":194,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":186,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":93,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":19,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":72,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":136,"org.easymock.tests2.UsageConstraintsTest.any":281,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":124,"org.easymock.tests2.StubTest.stub":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":179,"org.easymock.tests.UsageExpectAndThrowTest.longType":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":27,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":259,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":255,"org.easymock.tests2.SerializationTest.testClass":21,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":256,"org.easymock.tests.LimitationsTest.mockNativeMethod":91,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":82,"org.easymock.tests2.AnswerTest.answer":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":172,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":350,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":299,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":333,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":260,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":105,"org.easymock.tests2.MockedExceptionTest.testMockedException":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":181,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":218,"org.easymock.tests2.DelegateToTest.testDelegate":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":225,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":76,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":126,"org.easymock.tests.MockingTest.testNicePartialClassMocking":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":236,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":102,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":29,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":38,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":279,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":346,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":291,"org.easymock.tests.MockingTest.testTwoMocks":73,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":37,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":153,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":234,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":229,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":305,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":295,"org.easymock.tests.UsageThrowableTest.throwError":206,"org.easymock.tests.UsageStrictMockTest.differentMethods":68,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":263,"org.easymock.tests2.MockBuilderTest.testCreateMockString":129,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":83,"org.easymock.tests.UsageExpectAndThrowTest.floatType":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":148,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":286,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":61,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":331,"org.easymock.tests.UsageVerifyTest.twoThrows":204,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":118,"org.easymock.samples.PartialClassMockTest.testGetArea":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":176,"org.easymock.samples.ExampleTest.voteAgainstRemoval":247,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":18,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":107,"org.easymock.tests2.UsageTest.niceToStrict":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":222,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":77,"org.easymock.tests2.UsageConstraintsTest.testNotNull":294,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":213,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":33,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":15,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":123,"org.easymock.tests2.UsageTest.defaultResetToNice":328,"org.easymock.tests2.MockBuilderTest.testCreateMock":127,"org.easymock.samples.ExampleTest.voteAgainstRemovals":245,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":168,"org.easymock.tests2.CallbackTest.callback":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":330,"org.easymock.tests.UsageTest.openCallCountByLastCall":217,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":230,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":132,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":313,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":271,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":337,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":24,"org.easymock.tests.UsageCallCountTest.tooFewCalls":184,"org.easymock.tests.UsageOverloadedMethodTest.overloading":190,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":284,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":141,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":164,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":189,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":14,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":340,"org.easymock.tests.UsageThrowableTest.throwCheckedException":210,"org.easymock.tests.MockClassControlTest.testEquals":89,"org.easymock.tests2.EasyMockSupportClassTest.testAll":116,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":349,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":344,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":31,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":114,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":112,"org.easymock.tests2.UsageConstraintsTest.testMatches":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":297,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":147,"org.easymock.samples.ExampleTest.voteForRemovals":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":50,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":265,"org.easymock.tests.UsageVarargTest.allKinds":201,"org.easymock.tests2.DependencyTest.testInterfaceMocking":251,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":345,"org.easymock.samples.BasicClassMockTest.testPrintContent":94,"org.easymock.samples.ExampleTest.addDocument":248,"org.easymock.tests2.DelegateToTest.testStubDelegate":268,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":212,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":351,"org.easymock.tests2.AnswerTest.stubAnswer":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":30,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":150,"org.easymock.tests2.UsageConstraintsTest.greaterThan":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":51,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":335,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":327,"org.easymock.tests.UsageVarargTest.varargLongAccepted":198,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":108,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":152,"org.easymock.samples.ExampleTest.voteForRemoval":246,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":262,"org.easymock.tests.UsageExpectAndReturnTest.floatType":155,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":171,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":43,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":103,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":97,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":288,"org.easymock.tests.UsageThrowableTest.noUpperLimit":207,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":40,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":298,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":272,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":92,"org.easymock.tests2.SerializationTest.test":22,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":310,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":208,"org.easymock.tests2.UsageConstraintsTest.testSame":277,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":154,"org.easymock.samples.SupportTest.addDocument":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":25,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":311,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":307,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":160,"org.easymock.tests.GenericTest.testPackageScope":80,"org.easymock.tests2.UsageTest.moreThanOneArgument":300,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":264,"org.easymock.tests2.CaptureTest.testCapture2_2446744":12,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":128,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":200,"org.easymock.tests.GenericTest.testBridgedEquals":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":187,"org.easymock.tests.UsageExpectAndReturnTest.longType":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":342,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":308,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":165,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":336,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":237,"org.easymock.tests2.UsageStrictMockTest.differentMethods":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":157,"org.easymock.tests.UsageCallCountTest.tooManyCalls":188,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":235,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":142,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":182,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":183,"org.easymock.tests2.MockedExceptionTest.testRealException":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":161,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":54,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":258,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":211,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":135,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":111,"org.easymock.tests2.UsageConstraintsTest.testContains":283,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":35,"org.easymock.tests2.UsageConstraintsTest.testFind":275,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":191,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":334,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":64,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":17,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":101,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":341,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":65,"org.easymock.tests.UsageExpectAndReturnTest.object":163,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":353,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":289,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":104,"org.easymock.tests.ErrorMessageTest.testGetters":354,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":121,"org.easymock.tests2.UsageStrictMockTest.range":70,"org.easymock.tests2.UsageConstraintsTest.lessThan":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":315,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":47,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":143,"org.easymock.tests.UsageTest.exactCallCountByLastCall":220,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":214,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":309,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":49,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":173,"org.easymock.tests2.UsageConstraintsTest.testOr":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":44,"org.easymock.tests.UsageRangeTest.combination":180,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":169,"org.easymock.tests.UsageTest.wrongArguments":321,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":140,"org.easymock.tests2.MockBuilderTest.testWithConstructor":332,"org.easymock.tests.MockClassControlTest.testHashCode":88,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":84,"org.easymock.tests2.EasyMockSupportTest.testVerify":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":166,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":174,"org.easymock.tests.UsageVarargTest.varargShortAccepted":197,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":55,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":347,"org.easymock.tests2.UsageConstraintsTest.cmpTo":282,"org.easymock.tests.UsageVarargTest.varargCharAccepted":195,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":60,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":257,"org.easymock.tests2.UsageTest.openCallCountByLastCall":303,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":304,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":318,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":16,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":122,"org.easymock.tests.UsageTest.unexpectedCallWithArray":69,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":228,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":209,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":185,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":167,"org.easymock.tests2.UsageConstraintsTest.constraints":273,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":87,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":106,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":151,"org.easymock.samples.ExampleTest.addAndChangeDocument":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":227,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":170,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":242,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":119,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":343,"org.easymock.tests2.UsageTest.resumeIfFailure":306,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":177,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":78,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":159,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":178,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":355,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":314,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":193}}]
