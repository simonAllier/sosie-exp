[{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,1],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[2,3,13,4,5,6,7,14,8,9,10],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[0,16,17,1,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,11,83,84],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[85,86,73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[31,32,33,34,36,37],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[2,3,13,4,5,6,7,14,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[87,88,89,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[35,90,91],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[92,93,94,95],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[94],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[123,124,106],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[125,126,96,97,127,98,99,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,16,17,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,123,124,175,176,177,178,179,180,181,182,183,184,185,186,187,100,188,189,190,92,191,192,193,194,195,196,197,198,199,200,201,101,202,102,203,204,103,104,205,206,207,208,209,210,211,212,213,214,215,26,216,217,218,219,29,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,105,106,107,253,254,255,256,257,258,259,31,260,261,262,263,264,94,40,41,42,43,265,266,267,268,269,270,271,272,273,274,275,45,45,46,46,47,48,276,277,278,49,279,280,111,281,112,113,282,50,51,52,283,53,54,55,56,284,57,58,285,286,287,288,88,89,59,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,95,317,318,319,320,321,322,2,3,323,13,324,4,5,325,6,326,327,328,329,330,331,85,332,333,7,334,335,336,337,14,338,339,340,341,342,114,115,343,86,344,345,122,116,117,346,347,61,348,349,350,70,71,351,72,73,74,75,76,78,79,80,81,352,353,354,355,356,357,358,12,359,118,119,120,121,360,361,362,363,364,365,8,366,9,367,368,369,370,371,372,373,10,374,375,376],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[125,126,96,97,127,98,99,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,16,17,152,153,154,155,161,163,377,164,165,166,167,171,172,173,174,123,124,175,176,177,178,179,180,181,182,183,184,185,186,187,100,188,189,190,92,191,192,193,194,195,196,378,201,101,202,102,203,204,103,104,205,206,207,208,209,210,211,212,19,26,216,217,218,219,29,220,221,222,223,224,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,105,106,107,258,259,41,42,43,266,267,269,270,271,272,273,274,275,279,280,111,281,112,113,282,50,51,52,283,54,55,57,58,285,286,287,288,88,89,59,289,291,292,293,294,295,297,298,299,301,302,95,317,318,319,321,322,2,3,323,13,324,4,5,325,326,327,328,329,330,331,85,332,333,7,334,335,337,14,338,339,340,341,342,114,115,343,86,344,345,122,116,117,346,347,379,61,70,71,351,72,73,74,76,78,80,352,354,355,12,359,118,119,120,121,360,363,364,365,8,366,9,367,368,369,370,371,372,373,10,374,375,376],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[150,1,380,381,27,33,37,45,45,46,46,47,48,49,51,52,382,383,384,53,56,88,59,385,60,386,387,61,388,62,348,63,64,389,390,65,391,392,66,393,349,67,68,394,395,69,350,396,397,70,72,73,74,75,76,77,79,80,82,11,398,352,353,399,15,354,355,356,357,358,12,400,359,83,84],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[96,97,177,178,179,180,181,182,186,187,100,188,189,190,92,191,211,212,230,231,258,259,31,111,281,294,296,318,319,320,321,322,2,3,323,13,324,4,5,325,6,326,327,328,329,330,331,85,332,333,7,334,335,336,337,14,338,339,379,76,78,8,366,9,367,368,369,370,371,372,373,10,374,375,376],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:85","sourceCode":"return java.util.List<T>.get(0)","type":"CtReturnImpl"},"failures":[8,9,367,368,369,370,371,373,401,10,374,376],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[96,202,402,403,404,405],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[182,183,184,185,186,187,259,261,262,263,406,50,51,52,283],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[407,408,409],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[410,411],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[380],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.RecordState:108","failures":[159,171,173,174,123,124,175,176,186,92,201,204,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,106,267,317,341,345],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[100,109],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[125,126,96,97,127,98,99,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,412,413,414,16,17,152,153,154,155,156,158,159,161,162,163,377,164,165,166,167,168,169,170,171,172,173,174,123,124,175,176,177,178,179,180,181,182,183,184,185,186,187,100,188,189,190,92,191,192,193,194,195,196,200,410,415,416,378,417,418,419,420,421,422,411,201,101,202,102,203,204,103,104,205,206,207,208,209,210,211,212,18,19,20,21,22,23,24,25,26,216,217,218,219,29,220,221,222,223,224,225,226,227,228,229,230,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,105,106,107,258,259,31,41,42,43,265,266,267,268,269,270,271,272,273,274,423,275,45,45,46,46,47,48,276,277,278,49,279,280,111,281,112,113,282,50,51,52,283,53,54,55,56,284,57,58,285,286,287,288,88,89,59,289,290,291,292,293,294,295,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,95,317,318,319,320,321,322,2,3,323,13,324,4,5,325,326,327,328,329,330,331,85,332,333,7,334,335,336,337,14,338,339,340,341,342,114,115,343,86,344,345,122,116,117,346,347,61,348,349,350,70,71,351,72,73,74,75,76,78,79,80,81,352,353,354,355,356,357,358,12,359,118,119,120,121,360,363,364,365,8,366,9,367,368,369,370,371,372,373,10,374,375,376],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[87,88,89,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[125,126,96,97,127,98,99,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,424,412,413,414,425,426,0,16,17,150,1,151,152,153,154,155,156,157,158,159,160,161,162,163,377,164,165,166,167,168,169,170,171,172,173,174,123,124,175,176,177,178,179,180,181,182,183,184,185,186,187,100,188,189,190,92,191,192,193,194,195,196,197,198,199,200,410,415,416,378,417,418,419,420,421,422,411,201,101,202,102,203,204,103,104,205,206,207,208,209,210,427,380,428,429,381,430,431,211,212,213,214,215,18,19,20,21,22,23,24,25,26,216,217,218,219,27,28,29,30,220,221,222,432,223,224,225,226,227,228,229,230,231,232,433,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,105,106,107,253,254,255,256,257,258,259,31,32,33,34,35,36,37,434,260,435,261,262,263,436,437,438,439,440,441,442,406,443,444,445,446,447,448,449,93,264,450,451,452,453,454,94,455,38,39,40,41,42,456,43,457,458,44,265,266,267,268,269,270,271,272,273,274,423,275,45,45,46,46,47,48,276,277,278,49,279,280,111,281,112,113,282,50,51,52,283,53,54,55,56,284,57,58,285,286,287,288,88,89,59,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,459,460,461,462,463,316,464,465,466,467,468,469,95,317,318,470,319,471,472,473,474,475,320,476,477,478,479,480,481,321,322,2,3,482,323,13,324,4,5,325,6,326,327,328,329,330,331,85,332,333,7,334,335,336,337,14,338,339,340,385,341,342,114,115,343,86,344,345,122,116,117,346,347,379,60,386,387,61,388,62,348,63,64,389,390,65,391,392,66,393,349,67,68,394,395,69,350,396,397,70,71,351,72,73,74,75,76,483,77,78,79,80,81,82,11,352,353,399,15,354,355,356,357,484,358,12,359,83,84,485,486,118,119,120,121,360,361,362,363,364,365,8,366,9,367,368,369,370,371,372,373,10,374,375,376],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[96,97,98,99,129,111,112,113,72,74],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[2,3,323,13,324,4,5,325,6,326,7,334,14,338,8,366,9,367,10,374],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageTest.argumentsOrdered":117,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":201,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":313,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":445,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":86,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":268,"org.easymock.tests2.DelegateToTest.testReturnException":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":183,"org.easymock.tests.MockingTest.testPartialClassMocking":41,"org.easymock.tests.MockClassControlTest.testToString":20,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":390,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":233,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":348,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":108,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":290,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":188,"org.easymock.tests2.UsageTest.wrongArguments":115,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":481,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":154,"org.easymock.samples.ExampleTest.answerVsDelegate":270,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":381,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":458,"org.easymock.tests2.UsageConstraintsTest.testNull":13,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":72,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":25,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":312,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":382,"org.easymock.tests2.CaptureTest.testPrimitive":367,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":191,"org.easymock.tests.UsageTest.moreThanOneArgument":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":252,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":194,"org.easymock.tests.UsageTest.argumentsOrdered":104,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":253,"org.easymock.tests.UsageVarargTest.varargIntAccepted":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":177,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":352,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":408,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":438,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":181,"org.easymock.tests.ReplayStateInvalidUsageTest.times":420,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":320,"org.easymock.tests2.AnswerTest.answer":360,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":450,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":288,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":342,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":193,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":307,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":257,"org.easymock.tests2.DelegateToTest.testDelegate":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":248,"org.easymock.tests.LimitationsTest.mockFinalMethod":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":231,"org.easymock.tests2.CaptureTest.testCapture1_2446744":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":286,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":415,"org.easymock.tests.UsageThrowableTest.throwError":171,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":429,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":469,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":397,"org.easymock.samples.PartialClassMockTest.testGetArea":49,"org.easymock.tests.MockingTest.testInterfaceMocking":456,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":214,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":234,"org.easymock.tests2.UsageTest.niceToStrict":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":354,"org.easymock.tests2.MockBuilderTest.testCreateMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":394,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":478,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":404,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":242,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":199,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":163,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":152,"org.easymock.tests.UsageOverloadedMethodTest.overloading":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":69,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":159,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":330,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":141,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":265,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":90,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":329,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":373,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":432,"org.easymock.tests.MockClassControlTest.testEquals":24,"org.easymock.tests2.EasyMockSupportClassTest.testAll":61,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":17,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":250,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":383,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":287,"org.easymock.tests2.CaptureTest.testCaptureAll":366,"org.easymock.tests.MockNameTest.defaultName":427,"org.easymock.tests2.UsageConstraintsTest.testMatches":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":195,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":200,"org.easymock.samples.ExampleTest.voteForRemovals":274,"org.easymock.tests.UsageVarargTest.allKinds":230,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":105,"org.easymock.samples.BasicClassMockTest.testPrintContent":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":209,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":175,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":187,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":300,"org.easymock.tests2.UsageConstraintsTest.greaterThan":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":388,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":217,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":81,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":37,"org.easymock.samples.ExampleTest.voteForRemoval":271,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":82,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":292,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":400,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":430,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":75,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":26,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":341,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":305,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":182,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":296,"org.easymock.tests2.CaptureTest.testCaptureFirst":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":306,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":347,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":137,"org.easymock.tests2.UsageTest.moreThanOneArgument":114,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":294,"org.easymock.tests2.CaptureTest.testCapture2_2446744":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":451,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":12,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":229,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":169,"org.easymock.tests.UsageExpectAndReturnTest.longType":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":206,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":303,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":251,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":151,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":336,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":262,"org.easymock.tests.UsageCallCountTest.tooManyCalls":170,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":238,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":124,"org.easymock.tests.MockingTest.testNiceClassMocking":44,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":54,"org.easymock.tests.MockingTest.testClassMocking":39,"org.easymock.tests2.UsageConstraintsTest.testContains":328,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":377,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":52,"org.easymock.tests2.UsageConstraintsTest.testFind":323,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":267,"org.easymock.tests.MockTypeTest.fromEasyMockClass":428,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":125,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":319,"org.easymock.tests.UsageExpectAndReturnTest.object":140,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":311,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":224,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":414,"org.easymock.tests.UsageTest.exactCallCountByLastCall":205,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":434,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":254,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":385,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":146,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":220,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":158,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":460,"org.easymock.tests.MockClassControlTest.testHashCode":23,"org.easymock.tests2.EasyMockSupportTest.testVerify":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":392,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":156,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":285,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":379,"org.easymock.tests.UsageVarargTest.varargCharAccepted":223,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":455,"org.easymock.tests2.UsageTest.openCallCountByLastCall":344,"org.easymock.tests.DefaultClassInstantiatorTest.object":31,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":314,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":197,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":66,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":240,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":384,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":174,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":474,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":459,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":22,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":79,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":239,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":147,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":261,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":350,"org.easymock.tests2.UsageTest.resumeIfFailure":346,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":380,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":185,"org.easymock.tests2.StubTest.stubWithReturnValue":317,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":139,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":337,"org.easymock.tests2.SerializationTest.testAllMockedMethod":59,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":264,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":405,"org.easymock.samples.SupportTest.voteForRemovals":278,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":462,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":245,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":87,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":94,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":361,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":435,"org.easymock.tests.UsageExpectAndThrowTest.object":243,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":334,"org.easymock.tests2.DelegateToTest.testWrongClass":299,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":211,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":212,"org.easymock.tests.UsageStrictMockTest.range":98,"org.easymock.samples.ConstructorCalledMockTest.testTax":45,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":485,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":244,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":356,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":422,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":60,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":153,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":402,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":215,"org.easymock.tests2.CaptureTest.testCaptureNone":372,"org.easymock.tests.UsageUnorderedTest.message":100,"org.easymock.tests.UsageVerifyTest.twoReturns":107,"org.easymock.tests.UsageVarargTest.varargByteAccepted":228,"org.easymock.tests2.ThreadingTest.testThreadSafe":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":67,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":167,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":425,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":47,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":92,"org.easymock.tests2.UsageConstraintsTest.any":326,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":419,"org.easymock.tests2.StubTest.stub":95,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":184,"org.easymock.tests.UsageExpectAndThrowTest.longType":236,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":35,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":418,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":281,"org.easymock.tests2.SerializationTest.testClass":88,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":316,"org.easymock.tests.LimitationsTest.mockNativeMethod":29,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":150,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":149,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":473,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":282,"org.easymock.tests2.NameTest.nameForMocksControl":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":475,"org.easymock.tests2.MockedExceptionTest.testMockedException":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":62,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":204,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":470,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":43,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":237,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":70,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":357,"org.easymock.tests.MockingTest.testNicePartialClassMocking":42,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":74,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":471,"org.easymock.tests2.CaptureTest.testCaptureLast":371,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":232,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":58,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":335,"org.easymock.tests.MockingTest.testTwoMocks":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":241,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":116,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":338,"org.easymock.samples.ExampleTest.removeNonExistingDocument":423,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":477,"org.easymock.tests.UsageStrictMockTest.differentMethods":99,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":378,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":461,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":33,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":293,"org.easymock.tests2.MockBuilderTest.testCreateMockString":359,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":63,"org.easymock.tests.UsageExpectAndThrowTest.floatType":235,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":387,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":363,"org.easymock.tests.UsageVerifyTest.twoThrows":106,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":349,"org.easymock.samples.ExampleTest.voteAgainstRemoval":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":213,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":80,"org.easymock.tests.LimitationsTest.privateConstructor":28,"org.easymock.tests2.UsageConstraintsTest.testNotNull":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":176,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":50,"org.easymock.tests2.UsageTest.defaultResetToNice":122,"org.easymock.samples.ExampleTest.voteAgainstRemovals":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":145,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":472,"org.easymock.tests.UsageVarargTest.differentLength":225,"org.easymock.tests2.CallbackTest.callback":302,"org.easymock.tests2.UsageConstraintsTest.equals":482,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":483,"org.easymock.tests.UsageTest.openCallCountByLastCall":203,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":321,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":190,"org.easymock.tests.UsageCallCountTest.tooFewCalls":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":56,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":155,"org.easymock.tests.UsageThrowableTest.throwCheckedException":123,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":403,"org.easymock.tests.MockingTest.testStrictClassMocking":38,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":57,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":476,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":55,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":421,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":284,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":365,"org.easymock.tests.ObjectMethodsTest.testHashCode":413,"org.easymock.tests2.NameTest.nameForNiceMock":120,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":295,"org.easymock.tests2.DependencyTest.testInterfaceMocking":289,"org.easymock.samples.ExampleTest.addDocument":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.DelegateToTest.testStubDelegate":298,"org.easymock.tests2.AnswerTest.stubAnswer":364,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":97,"org.easymock.tests.UsageVarargTest.varargLongAccepted":227,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":148,"org.easymock.tests.UsageExpectAndReturnTest.floatType":132,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":340,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":467,"org.easymock.tests.UsageThrowableTest.noUpperLimit":172,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":333,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":322,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":83,"org.easymock.tests2.SerializationTest.test":89,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":369,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":91,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":131,"org.easymock.tests2.UsageConstraintsTest.testSame":324,"org.easymock.samples.SupportTest.addDocument":277,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":64,"org.easymock.tests.GenericTest.testPackageScope":16,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":466,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":457,"org.easymock.tests2.NameTest.nameForMock":118,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":142,"org.easymock.tests2.UsageStrictMockTest.differentMethods":113,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":77,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":134,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":247,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":424,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":219,"org.easymock.tests2.MockedExceptionTest.testRealException":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":431,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":448,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":111,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":411,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":189,"org.easymock.tests2.NameTest.nameForStrictMock":119,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":15,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":318,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":73,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":84,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":109,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":34,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":7,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":353,"org.easymock.tests2.UsageStrictMockTest.range":112,"org.easymock.tests2.UsageConstraintsTest.lessThan":339,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":463,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":391,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":4,"org.easymock.tests.UsageRangeTest.combination":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":71,"org.easymock.tests.UsageTest.wrongArguments":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":389,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":19,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":143,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":36,"org.easymock.tests.UsageVarargTest.varargShortAccepted":226,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":168,"org.easymock.tests2.UsageConstraintsTest.cmpTo":327,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":439,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":345,"org.easymock.tests2.CaptureTest.testCaptureFromStub":374,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":410,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":399,"org.easymock.tests.UsageTest.unexpectedCallWithArray":202,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":96,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":166,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":144,"org.easymock.tests2.CaptureTest.testCapture":401,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":127,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.samples.ExampleTest.addAndChangeDocument":275,"org.easymock.tests.UsageStrictMockTest.testVerify":129,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":276,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":207,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":136,"org.easymock.tests.LimitationsTest.abstractClass":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":180,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":110,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":309}}]
