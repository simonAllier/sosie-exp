[{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[46,47,48,49],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[50,51],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[52,53,54,55],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[59,60,61,62,63,64,65,66,67,68,69,10,10,11,11,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,58,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,12,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,13,14,152,153,15,154,155,156,157,158,2,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,56,174,175,176,177,178,3,16,179,180,181,182,183,184,185,186,6,187,188,189,190,191,192,193,194,195,196,197,198,199,17,18,19,20,21,22,23,24,25,26,200,201,202,203,204,205,206,207,208,209,210,211,212,213,27,28,214,215,216,217,218,219,220,53,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,29,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,57,254,255,256,257,258,259,47,48,49,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,8,54,304,305,306,307,308,309,310,311,312,30,313,314,315,316,317,318,319,320,321,322,323,31,324,32,33,325,326,34,35,36,37,327,328,329,330,331,38,332,39,40,55,41,42,333,334,335,336,337,43,44,45,338,339,340],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[326,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:86","sourceCode":"return org.easymock.internal.Results.getMainInterval().expectedCount()","type":"CtReturnImpl"},"failures":[99,154,155,156,158,159,162,163,3,16,180,181,281,282,283,284,302,303,307,308,30,314,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[341,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"result","java.lang.Integer.MAX_VALUE":"result"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[50,51],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:41","sourceCode":"java.lang.StringBuffer.append(((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[342],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[59,10,10,11,11,70,71,96,97,98,131,343,344,345,184,185,186,6,214,217,218,220,53,221,222,223,224,225,226,227,246,247,248,249,253,47,49,346,274,275,276,277,279,280,291,347,292,348,293,294,295,296,297,298,349,299,340],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,124,141,142,143,144,146,147,148,149,150,151,152,153,155,157,161,165,166,167,168,169,170,56,199,200,201,202,251,252,253,57,300,305,31],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[59,60,62,63,65,68,100,101,102,103,104,105,108,109,111,112,113,115,116,117,118,119,120,121,122,123,13,16,180,181,185,186,6,17,18,19,20,22,23,24,25,26,27,28,214,217,218,219,220,53,221,223,225,226,227,244,246,247,248,249,274,275,276,277,278,279,280,287,292,293,295,296,298,30,314,315,321,322,340],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[53,54,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[350,351],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[352,256],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[353],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[354,228,230,231,232,233,234,235,237,7,238,29,240],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[344],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":326,"org.easymock.tests2.UsageTest.argumentsOrdered":308,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":157,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":168,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":54,"org.easymock.tests2.StubTest.stubWithReturnValue":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":337,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":72,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":109,"org.easymock.tests2.SerializationTest.testAllMockedMethod":49,"org.easymock.tests2.DelegateToTest.testReturnException":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":166,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":187,"org.easymock.tests.MockingTest.testPartialClassMocking":185,"org.easymock.samples.SupportTest.voteForRemovals":68,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":50,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":95,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":85,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":46,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":247,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":73,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":188,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":255,"org.easymock.tests.UsageExpectAndThrowTest.object":83,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":334,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":322,"org.easymock.tests2.DelegateToTest.testWrongClass":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":27,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":28,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":328,"org.easymock.tests2.UsageTest.wrongArguments":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":13,"org.easymock.samples.ConstructorCalledMockTest.testTax":10,"org.easymock.tests.UsageStrictMockTest.range":180,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":134,"org.easymock.samples.ExampleTest.answerVsDelegate":61,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":267,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":274,"org.easymock.tests2.UsageConstraintsTest.testNull":35,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":220,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":295,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":269,"org.easymock.tests2.CaptureTest.testPrimitive":231,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":15,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":92,"org.easymock.tests.UsageTest.moreThanOneArgument":158,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":162,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":219,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":19,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":0,"org.easymock.tests2.CaptureTest.testCaptureNone":236,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":58,"org.easymock.tests.UsageUnorderedTest.message":99,"org.easymock.tests.UsageVerifyTest.twoReturns":156,"org.easymock.tests.UsageVarargTest.varargByteAccepted":211,"org.easymock.tests2.ThreadingTest.testThreadSafe":241,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":126,"org.easymock.tests.UsageTest.argumentsOrdered":163,"org.easymock.tests.UsageVarargTest.varargIntAccepted":205,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":193,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":70,"org.easymock.tests2.CaptureTest.testCapture_2617107":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":22,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":153,"org.easymock.tests2.UsageConstraintsTest.any":330,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":294,"org.easymock.tests2.StubTest.stub":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":26,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":143,"org.easymock.tests.UsageExpectAndThrowTest.longType":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":167,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":52,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":313,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":324,"org.easymock.tests2.SerializationTest.testClass":47,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":273,"org.easymock.tests.LimitationsTest.mockNativeMethod":214,"org.easymock.tests2.AnswerTest.answer":254,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":98,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":119,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":320,"org.easymock.tests2.CaptureTest.testAnd":228,"org.easymock.tests2.UsageTest.strictResetToDefault":301,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":316,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":224,"org.easymock.tests2.NameTest.nameForMocksControl":284,"org.easymock.tests2.MockedExceptionTest.testMockedException":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":122,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":161,"org.easymock.tests2.DelegateToTest.testDelegate":290,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":77,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":6,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":217,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":296,"org.easymock.tests.MockingTest.testNicePartialClassMocking":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":88,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":221,"org.easymock.tests2.CompareToTest.testCompareEqual":353,"org.easymock.tests2.CaptureTest.testCaptureLast":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":169,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":216,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":327,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":280,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":140,"org.easymock.tests.MockingTest.testTwoMocks":184,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":215,"org.easymock.tests2.CaptureTest.testCapture1_2446744":232,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":100,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":86,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":81,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":307,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":44,"org.easymock.tests.UsageThrowableTest.throwError":144,"org.easymock.tests.UsageStrictMockTest.differentMethods":181,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":243,"org.easymock.tests2.MockBuilderTest.testCreateMockString":299,"org.easymock.tests.UsageExpectAndThrowTest.floatType":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":21,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":55,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":257,"org.easymock.tests.UsageVerifyTest.twoThrows":155,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":248,"org.easymock.samples.PartialClassMockTest.testGetArea":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":23,"org.easymock.samples.ExampleTest.voteAgainstRemoval":63,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":94,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":93,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":74,"org.easymock.tests2.UsageTest.niceToStrict":8,"org.easymock.tests2.UsageConstraintsTest.testNotNull":43,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":151,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":293,"org.easymock.tests2.UsageTest.defaultResetToNice":306,"org.easymock.tests2.MockBuilderTest.testCreateMock":297,"org.easymock.samples.ExampleTest.voteAgainstRemovals":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":115,"org.easymock.tests.UsageVarargTest.differentLength":208,"org.easymock.tests2.CallbackTest.callback":250,"org.easymock.tests.UsageTest.openCallCountByLastCall":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":82,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":265,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":32,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":202,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":152,"org.easymock.tests.UsageCallCountTest.tooFewCalls":191,"org.easymock.tests.UsageOverloadedMethodTest.overloading":198,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":56,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":39,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":277,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":111,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":332,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":237,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":135,"org.easymock.tests.UsageThrowableTest.throwCheckedException":148,"org.easymock.tests2.EasyMockSupportClassTest.testAll":246,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":97,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":90,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":319,"org.easymock.tests2.CaptureTest.testCaptureAll":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":138,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":279,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":276,"org.easymock.tests2.UsageConstraintsTest.testMatches":40,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":278,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":20,"org.easymock.samples.ExampleTest.voteForRemovals":65,"org.easymock.tests2.NameTest.nameForNiceMock":283,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":245,"org.easymock.tests.UsageVarargTest.allKinds":213,"org.easymock.tests2.DependencyTest.testInterfaceMocking":321,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":154,"org.easymock.samples.BasicClassMockTest.testPrintContent":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":139,"org.easymock.samples.ExampleTest.addDocument":64,"org.easymock.tests2.DelegateToTest.testStubDelegate":287,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":150,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":311,"org.easymock.tests2.AnswerTest.stubAnswer":258,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":170,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":16,"org.easymock.tests2.UsageConstraintsTest.greaterThan":41,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":121,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":227,"org.easymock.tests.UsageVarargTest.varargLongAccepted":210,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":182,"org.easymock.samples.ExampleTest.voteForRemoval":62,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":242,"org.easymock.tests.UsageExpectAndReturnTest.floatType":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":222,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":11,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":42,"org.easymock.tests.UsageThrowableTest.noUpperLimit":145,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":174,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":300,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":33,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":131,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":233,"org.easymock.tests2.SerializationTest.test":48,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":262,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":146,"org.easymock.tests2.UsageConstraintsTest.testSame":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":101,"org.easymock.samples.SupportTest.addDocument":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":165,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":285,"org.easymock.tests2.CaptureTest.testCaptureFirst":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":263,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":310,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":176,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":107,"org.easymock.tests.GenericTest.testPackageScope":96,"org.easymock.tests2.UsageTest.moreThanOneArgument":302,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":244,"org.easymock.tests2.CaptureTest.testCapture2_2446744":239,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":129,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":298,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":212,"org.easymock.tests.GenericTest.testBridgedEquals":51,"org.easymock.tests2.NameTest.nameForMock":281,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":195,"org.easymock.tests.UsageExpectAndReturnTest.longType":103,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":136,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":349,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":112,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":336,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":125,"org.easymock.tests2.UsageStrictMockTest.differentMethods":315,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":17,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":104,"org.easymock.tests.UsageCallCountTest.tooManyCalls":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":87,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":123,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":190,"org.easymock.tests2.MockedExceptionTest.testRealException":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":352,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":78,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":149,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":275,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":347,"org.easymock.tests2.NameTest.nameForStrictMock":282,"org.easymock.tests2.UsageConstraintsTest.testContains":38,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":253,"org.easymock.tests2.UsageConstraintsTest.testFind":34,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":199,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":338,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":53,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":339,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":177,"org.easymock.tests.UsageExpectAndReturnTest.object":110,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":333,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":223,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":292,"org.easymock.tests2.UsageStrictMockTest.range":314,"org.easymock.tests2.UsageConstraintsTest.lessThan":45,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":268,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":207,"org.easymock.tests.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":12,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":261,"org.easymock.tests2.CaptureTest.testCaptureRightOne":238,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":9,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":127,"org.easymock.tests2.ConstraintsToStringTest.findToString":342,"org.easymock.tests2.UsageConstraintsTest.testOr":37,"org.easymock.tests.UsageRangeTest.combination":120,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":218,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":203,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":116,"org.easymock.tests.UsageTest.wrongArguments":159,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":173,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":343,"org.easymock.tests2.EasyMockSupportTest.testVerify":272,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":113,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":128,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":351,"org.easymock.tests.UsageVarargTest.varargShortAccepted":209,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":201,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":171,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":317,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":194,"org.easymock.tests2.UsageConstraintsTest.cmpTo":331,"org.easymock.tests.UsageVarargTest.varargCharAccepted":206,"org.easymock.tests2.CaptureTest.testCaptureMultiple":354,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":256,"org.easymock.tests2.CompareToTest.testLessThan":341,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":312,"org.easymock.tests2.UsageTest.openCallCountByLastCall":304,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":305,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":271,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":200,"org.easymock.tests2.CaptureTest.testCaptureFromStub":29,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":348,"org.easymock.tests.UsageTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":80,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":147,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":192,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":114,"org.easymock.tests2.CaptureTest.testCapture":7,"org.easymock.tests2.UsageConstraintsTest.constraints":325,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":225,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":179,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":79,"org.easymock.samples.ExampleTest.addAndChangeDocument":66,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":117,"org.easymock.tests.UsageStrictMockTest.testVerify":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":141,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":249,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":137,"org.easymock.tests2.UsageTest.resumeIfFailure":309,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":234,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":24,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":344,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":25,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":266,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":204}}]
