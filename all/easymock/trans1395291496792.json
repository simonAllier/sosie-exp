[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,32,33,33,34],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[35],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[36,37,38,39,40,41,42,43,44],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,36,69,70,71,72,73,13,74,21,22,75,76,77,78,79,80,81,82,83,84,29,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[86,87,48,88,51,89,90,91,92,93,94,95,96,97,3,98,99,100,101,102,103,104,36,37,105,106,107,38,39,108,40,109,110,111,35,112,113,69,114,115,41,116,117,118,119,120,121,122,123,124,125,42,126,43,127,128,129,130,131,132,133,44,134,135,136,137,138],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[36,37,106,38,39,40,41,120,42,43,44],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[139,140,141],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[142,45,46,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,47,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,1,181,182,183,184,185,186,2,187,188,189,190,191,192,139,193,194,195,86,87,196,197,198,48,199,200,201,202,203,204,49,205,206,207,208,88,209,210,211,212,213,214,215,216,217,218,219,50,220,51,89,52,53,54,221,222,90,91,92,93,94,223,224,225,226,227,228,229,230,231,232,233,234,235,236,95,96,97,3,98,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,55,264,56,57,265,266,58,59,60,267,268,269,270,271,272,61,62,63,0,273,274,6,275,7,276,277,278,279,8,280,281,282,283,284,285,286,287,4,288,289,290,291,292,293,294,295,296,99,100,297,298,299,300,301,302,303,304,101,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,9,10,365,64,366,367,368,369,370,371,372,373,374,375,376,377,65,378,102,66,67,68,379,11,380,381,103,104,36,37,382,105,106,107,38,39,108,40,109,110,111,35,112,113,69,114,115,41,116,117,118,119,120,121,122,383,70,384,385,386,71,72,387,388,73,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,12,405,13,14,406,15,16,407,17,408,18,19,20,74,21,409,22,23,410,411,412,123,124,413,125,75,414,415,76,77,78,416,417,418,79,80,81,82,419,420,421,422,423,424,425,426,427,428,429,42,126,43,127,128,129,130,131,132,133,44,134,135,136,5,430,431,432,83,137,433,434,435,436,437,438,439,24,440,441,442,443,444,445,446,447,448,25,449,450,451,452,453,26,454,455,456,84,457,458,459,460,27,461,138,28,462,463,29,30,85,464,31,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,32,33,34,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:120","sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[139,140,141],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[279,353,372],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[9,10,11,394,399,400,405,406,408,20,490,409,491,492,434,435,436,437,438,439,24,440,441,442,443,444,445,446,447,448,25,449,450,451,452,453,26,454,455,32,33],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[88,51,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[42,43,127,128,129,130,131,133,493,44,134,136],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[92,477,481,483,484,486],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[112,117,122],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[45,46,146,147,149,47,48,199,200,201,203,204,205,206,207,208,88,210,211,220,51,89,52,53,54,221,228,229,230,231,232,233,234,235,236,95,96,97,3,241,242,246,247,249,254,259,57,58,59,60,270,271,272,62,63,273,274,299,320,322,323,325,329,330,332,337,342,352,360,362,364,9,64,371,378,102,66,67,68,379,11,380,381,37,106,39,108,109,110,35,69,41,116,117,118,119,120,383,70,384,385,386,71,72,388,73,389,390,391,392,393,394,395,397,398,399,16,17,18,411,75,414,76,77,78,79,80,82,419,422,42,126,43,127,129,130,131,132,133,44,136,137,433,437,24,25,26,456,84,457,458,459,460,138,30,467,468,476,477,478,479,480,34,481,482,483,484,485,486,488,489],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[146,147,149,47,158,159,160,89,53,54,90,91,92,93,94,223,224,225,226,95,99,100,299,327,328,329,330,331,332,335,336,338,339,340,342,343,344,345,346,361,9,102,67,68,392,393,394,395,397,398,399,13,16,17,18,21,137,437,24,25,26,456,84,457,458,459,460,138,29,30,85,467,468,477,34,481,483,484,486],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[155,183,48,245,251,257,261,263,55,328,334,340,344,346,128,135],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[494,11,380,381],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[495],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[190,193],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[496,497,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[499,500,501,502,503,9,10,11,408,20],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[0,6,7,8,9,10,365,11,12,405,13,14,406,15,16,407,17,408,18,19,20,74,21,409,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[173,87,238,239,240,301,302,303,304,101,305,23,410,411,412,430],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[420,421],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[146,147,149,91,299,361,9,392,393,394,395,397,398,399,13,16,17,18,21,137,437,24,25,26,456,457,458,460,34],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Any:36","failures":[86,87,48,89,90,91,92,93,94,95,96,97,3,98,99,100,101,102,38,109,126,131,132,136],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"failures":[290,317,319,137],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[188,194,504],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:77","failures":[498],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[39,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:217","failures":[45,46,89,231,60,102,75,82,419],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[139,140,141],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[290,317,319,137],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[141],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.Capture:83","failures":[505],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[3,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":37,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.UsageTest.argumentsOrdered":80,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":389,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":176,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":78,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":480,"org.easymock.tests2.DelegateToTest.testReturnException":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":302,"org.easymock.tests.MockingTest.testPartialClassMocking":146,"org.easymock.tests.MockClassControlTest.testToString":311,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":425,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":184,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":443,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":244,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":468,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":499,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":108,"org.easymock.tests2.UsageTest.wrongArguments":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":95,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":284,"org.easymock.samples.ExampleTest.answerVsDelegate":482,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":8,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":151,"org.easymock.tests2.UsageConstraintsTest.testNull":106,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":73,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":316,"org.easymock.tests2.CaptureTest.testPrimitive":127,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":98,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":263,"org.easymock.tests.UsageTest.moreThanOneArgument":264,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":457,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":225,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":153,"org.easymock.tests.UsageTest.argumentsOrdered":59,"org.easymock.tests.UsageVarargTest.varargIntAccepted":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":90,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":12,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":471,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":357,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":168,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":94,"org.easymock.tests.ReplayStateInvalidUsageTest.times":293,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":371,"org.easymock.tests2.DependencyTest.testClassMocking":465,"org.easymock.tests2.AnswerTest.answer":419,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":182,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":404,"org.easymock.tests2.CaptureTest.testAnd":42,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":277,"org.easymock.tests2.UsageTest.strictResetToDefault":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":463,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":159,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":157,"org.easymock.tests2.DelegateToTest.testDelegate":364,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":259,"org.easymock.tests.LimitationsTest.mockFinalMethod":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":165,"org.easymock.tests2.DependencyTest.testClassMockingSupport":466,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":241,"org.easymock.tests2.CaptureTest.testCapture1_2446744":128,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":402,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":4,"org.easymock.tests.UsageThrowableTest.throwError":229,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":279,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":209,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":358,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":227,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":455,"org.easymock.samples.PartialClassMockTest.testGetArea":34,"org.easymock.tests.MockingTest.testInterfaceMocking":148,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":91,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":444,"org.easymock.tests2.UsageTest.niceToStrict":77,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":245,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":166,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":16,"org.easymock.tests2.MockBuilderTest.testCreateMock":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":451,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":374,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":253,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":71,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":276,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":308,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":282,"org.easymock.tests.UsageOverloadedMethodTest.overloading":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":448,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":112,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":323,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":338,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":140,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":35,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":133,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":202,"org.easymock.tests2.EasyMockSupportClassTest.testAll":437,"org.easymock.tests.MockClassControlTest.testEquals":315,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":274,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":403,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":163,"org.easymock.tests2.CaptureTest.testCaptureAll":126,"org.easymock.tests.MockNameTest.defaultName":237,"org.easymock.tests2.UsageConstraintsTest.testMatches":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":226,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":286,"org.easymock.samples.ExampleTest.voteForRemovals":486,"org.easymock.tests.UsageVarargTest.allKinds":88,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":142,"org.easymock.samples.BasicClassMockTest.testPrintContent":479,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":164,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":235,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":354,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":363,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":503,"org.easymock.tests2.UsageConstraintsTest.greaterThan":114,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":438,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":158,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":85,"org.easymock.samples.ExampleTest.voteForRemoval":483,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":195,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":464,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":432,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":27,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":75,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":228,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":384,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":301,"org.easymock.tests2.CaptureTest.testCaptureFirst":136,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":385,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":82,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":334,"org.easymock.tests2.UsageTest.moreThanOneArgument":415,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":137,"org.easymock.tests2.CaptureTest.testCapture2_2446744":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":183,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":21,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":208,"org.easymock.tests.GenericTest.testBridgedEquals":275,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":62,"org.easymock.tests.UsageExpectAndReturnTest.longType":330,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":161,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":383,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":262,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":118,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":213,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":223,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":239,"org.easymock.tests.UsageCallCountTest.tooManyCalls":63,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":335,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":234,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":393,"org.easymock.tests.MockingTest.testNiceClassMocking":152,"org.easymock.tests.MockingTest.testClassMocking":144,"org.easymock.tests2.UsageConstraintsTest.testContains":111,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":268,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":411,"org.easymock.tests2.UsageConstraintsTest.testFind":105,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":212,"org.easymock.tests.MockTypeTest.fromEasyMockClass":278,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":125,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":50,"org.easymock.tests.UsageExpectAndReturnTest.object":337,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":388,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":500,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":204,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":217,"org.easymock.tests.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":171,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":154,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":317,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":199,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":343,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":322,"org.easymock.tests.MockClassControlTest.testHashCode":314,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":348,"org.easymock.tests2.EasyMockSupportTest.testVerify":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":446,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":155,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":307,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":401,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":123,"org.easymock.tests.UsageVarargTest.varargCharAccepted":203,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":188,"org.easymock.tests2.CaptureTest.testCaptureMultiple":505,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":187,"org.easymock.tests2.UsageTest.openCallCountByLastCall":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":496,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":390,"org.easymock.tests.DefaultClassInstantiatorTest.object":189,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":306,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":447,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":347,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":29,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":313,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":250,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":344,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":26,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":312,"org.easymock.tests2.UsageTest.resumeIfFailure":81,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":7,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":304,"org.easymock.tests2.StubTest.stubWithReturnValue":430,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":408,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":119,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":336,"org.easymock.tests2.SerializationTest.testAllMockedMethod":381,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":181,"org.easymock.samples.SupportTest.voteForRemovals":477,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":256,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":494,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":2,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":420,"org.easymock.tests.UsageExpectAndThrowTest.object":254,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":319,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":116,"org.easymock.tests2.DelegateToTest.testWrongClass":362,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":99,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":100,"org.easymock.samples.ConstructorCalledMockTest.testTax":32,"org.easymock.tests.UsageStrictMockTest.range":53,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":474,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":387,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":255,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":434,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":58,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":295,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":283,"org.easymock.tests2.CaptureTest.testCaptureNone":132,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":198,"org.easymock.tests.UsageUnorderedTest.message":48,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":495,"org.easymock.tests.UsageVerifyTest.twoReturns":46,"org.easymock.tests.UsageVarargTest.varargByteAccepted":207,"org.easymock.tests2.ThreadingTest.testThreadSafe":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":449,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":272,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":478,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":218,"org.easymock.tests2.CaptureTest.testCapture_2617107":43,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":3,"org.easymock.tests2.UsageConstraintsTest.any":109,"org.easymock.tests2.StubTest.stub":5,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":186,"org.easymock.tests.UsageExpectAndThrowTest.longType":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":303,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":139,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":291,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":66,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":352,"org.easymock.tests.LimitationsTest.mockNativeMethod":299,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":6,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":346,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":368,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":379,"org.easymock.tests2.NameTest.nameForMocksControl":429,"org.easymock.tests2.MockedExceptionTest.testMockedException":410,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":439,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":266,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":413,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":149,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":248,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":456,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":18,"org.easymock.tests.MockingTest.testNicePartialClassMocking":147,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":460,"org.easymock.tests2.CaptureTest.testCaptureLast":131,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":242,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":399,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":39,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":117,"org.easymock.tests.MockingTest.testTwoMocks":145,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":327,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":252,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":79,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":121,"org.easymock.samples.ExampleTest.removeNonExistingDocument":487,"org.easymock.tests.UsageStrictMockTest.differentMethods":54,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":349,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":191,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":83,"org.easymock.tests2.MockBuilderTest.testCreateMockString":22,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":440,"org.easymock.tests.UsageExpectAndThrowTest.floatType":246,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":436,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":422,"org.easymock.tests.UsageVerifyTest.twoThrows":45,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":365,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":25,"org.easymock.samples.ExampleTest.voteAgainstRemoval":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":177,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":196,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":30,"org.easymock.tests.LimitationsTest.privateConstructor":298,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":492,"org.easymock.tests2.UsageConstraintsTest.testNotNull":120,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":23,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":236,"org.easymock.tests2.UsageTest.defaultResetToNice":418,"org.easymock.samples.ExampleTest.voteAgainstRemovals":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":342,"org.easymock.tests.UsageVarargTest.differentLength":49,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":367,"org.easymock.tests2.CallbackTest.callback":64,"org.easymock.tests2.UsageConstraintsTest.equals":382,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":28,"org.easymock.tests.UsageTest.openCallCountByLastCall":265,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":103,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":97,"org.easymock.tests.UsageCallCountTest.tooFewCalls":270,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":395,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":285,"org.easymock.tests.UsageThrowableTest.throwCheckedException":233,"org.easymock.tests.MockingTest.testStrictClassMocking":143,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":398,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":87,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":394,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":372,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":397,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":424,"org.easymock.tests.ObjectMethodsTest.testHashCode":216,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":433,"org.easymock.tests2.NameTest.nameForNiceMock":428,"org.easymock.tests2.DependencyTest.testInterfaceMocking":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":501,"org.easymock.samples.ExampleTest.addDocument":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.DelegateToTest.testStubDelegate":361,"org.easymock.tests2.AnswerTest.stubAnswer":423,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":89,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":19,"org.easymock.tests.UsageVarargTest.varargLongAccepted":206,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":175,"org.easymock.tests.UsageExpectAndReturnTest.floatType":329,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":345,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":9,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":33,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":115,"org.easymock.tests.UsageThrowableTest.noUpperLimit":230,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":104,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":469,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":129,"org.easymock.tests2.SerializationTest.test":380,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":141,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":190,"org.easymock.tests2.UsageConstraintsTest.testSame":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":328,"org.easymock.samples.SupportTest.addDocument":476,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":504,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":396,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":441,"org.easymock.tests.GenericTest.testPackageScope":273,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":170,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":355,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":150,"org.easymock.tests2.NameTest.nameForMock":426,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":339,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":409,"org.easymock.tests2.UsageStrictMockTest.differentMethods":68,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":462,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":258,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":214,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":160,"org.easymock.tests2.MockedExceptionTest.testRealException":412,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":281,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":179,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":102,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":96,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":296,"org.easymock.tests2.NameTest.nameForStrictMock":427,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":15,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":497,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":459,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":473,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":41,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":192,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":13,"org.easymock.tests2.UsageStrictMockTest.range":67,"org.easymock.tests2.UsageConstraintsTest.lessThan":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":351,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":174,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":445,"org.easymock.tests2.CaptureTest.testCaptureRightOne":44,"org.easymock.tests2.UsageConstraintsTest.testOr":38,"org.easymock.tests.UsageRangeTest.combination":47,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":84,"org.easymock.tests.UsageTest.wrongArguments":57,"org.easymock.tests2.MockBuilderTest.testWithConstructor":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":442,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":340,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":193,"org.easymock.tests.UsageVarargTest.varargShortAccepted":205,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":61,"org.easymock.tests2.UsageConstraintsTest.cmpTo":110,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":169,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":417,"org.easymock.tests2.CaptureTest.testCaptureFromStub":134,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":287,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":14,"org.easymock.tests.UsageTest.unexpectedCallWithArray":56,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":271,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":341,"org.easymock.tests2.CaptureTest.testCapture":493,"org.easymock.tests2.UsageConstraintsTest.constraints":36,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":52,"org.easymock.samples.ExampleTest.addAndChangeDocument":488,"org.easymock.tests.UsageStrictMockTest.testVerify":222,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":489,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":162,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":92,"org.easymock.tests.LimitationsTest.abstractClass":297,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":93,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":72,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":200}}]
