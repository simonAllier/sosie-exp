[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[17,18,18,19,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,4,5,184,6,185,7,8,186,9,187,188,189,190,191,192,193,194,195,10,196,197,198,199,11,200,201,202,203,204,205,206,207,208,12,209,13,210,211,212,213,214,215,216,14,217,218,219,220,221,222,223,224,2,225,3,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[17,292,293,294,18,18,19,19,295,296,20,21,22,23,24,297,25,298,26,299,27,28,300,301,29,30,31,32,33,302,34,303,35,304,305,306,36,307,37,38,39,40,41,42,308,309,43,310,311,312,313,314,315,44,45,316,317,0,318,319,320,321,322,323,324,325,326,46,47,48,49,50,51,52,53,327,54,328,329,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,330,77,331,332,333,334,335,336,337,338,339,15,78,79,340,80,341,342,343,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,344,345,346,347,348,349,350,351,352,353,354,109,355,356,357,358,359,360,361,362,110,111,112,113,114,115,116,117,118,119,120,363,364,365,366,367,368,369,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,370,145,146,371,147,372,148,149,150,151,152,153,373,154,374,155,156,157,158,159,160,375,161,162,163,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,1,392,393,394,395,396,164,397,398,399,400,401,165,402,166,167,168,169,170,171,172,173,174,175,176,177,403,404,405,406,407,178,179,180,181,182,183,4,5,408,184,6,185,7,8,186,9,187,188,189,190,191,192,193,194,195,10,196,197,198,199,11,200,201,409,410,411,412,413,414,202,415,416,417,418,419,420,203,204,205,206,207,421,422,423,424,425,208,426,427,428,429,430,431,12,209,13,210,211,212,213,214,215,216,14,217,218,219,432,433,220,221,222,223,224,2,225,3,226,227,228,229,230,231,434,435,436,232,437,438,439,233,440,234,441,235,442,443,236,444,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,445,446,252,253,254,255,256,257,258,447,259,260,261,262,263,264,265,266,448,267,449,450,268,269,270,271,451,452,272,273,274,275,276,277,278,279,280,281,453,454,455,456,457,282,458,283,284,285,286,287,459,460,461,288,462,463,289,464,465,466,467,468,469,470,471,472,290,473,474,475,476,477,291,478,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[18,18,19,19,222,442,251,445,261,449,268,271,274,278,461,462,467,472,478,479],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[481,107,108,158,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[37,38,39,40,41,42,65,148,149,150,389,178,179,180,181,280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[432,433],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[119],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[482],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[188,267,483],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[17,292,293,18,18,19,19,34,303,35,36,326,15,78,79,80,356,357,358,359,364,367,381,180,222,224,435,232,437,233,440,234,235,443,236,237,251,260,261,263,264,265,266,267,268,269,270,271,452,272,273,274,275,277,278,288,289,290,291],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:229","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[222,223,224],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[484,485,486],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[45,46,47,48,49,50,101,102,103,104,105,114,115,118,141,142,143,156,382,386,387,395,399,182,191,194,195,201,280,283],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[55,59,60,63,106,108,156,238,244,245,250,252,283],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[109,6,198,206],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[256,257],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[17,292,293,294,18,19,295,296,20,21,22,23,24,297,25,26,29,30,31,32,33,34,303,36,37,38,39,40,41,42,43,310,311,312,313,314,315,44,326,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,344,345,346,348,349,350,351,352,353,354,109,110,112,113,114,115,116,117,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,372,151,152,153,373,154,374,155,156,157,158,159,160,166,167,168,169,170,171,172,173,174,175,176,177,403,178,179,180,181,182,183,4,5,184,6,185,7,8,186,187,188,189,190,191,192,193,194,195,10,196,197,198,199,11,200,201,202,203,204,205,206,207,208,12,209,13,210,211,212,213,214,215,216,14,217,218,219,220,221,222,223,224,225,3,226,228,229,230,231,434,435,232,233,440,234,235,443,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,458,283,284,285,286,287,288,289,290,291],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":55,"org.easymock.tests2.UsageTest.argumentsOrdered":248,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":1,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":243,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":294,"org.easymock.tests2.DelegateToTest.testReturnException":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":38,"org.easymock.tests.MockingTest.testPartialClassMocking":78,"org.easymock.tests.MockClassControlTest.testToString":357,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":453,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":467,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":121,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":289,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":221,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":186,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":114,"org.easymock.tests2.UsageTest.wrongArguments":241,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":431,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":153,"org.easymock.samples.ExampleTest.answerVsDelegate":22,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":367,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":342,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":263,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":175,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":362,"org.easymock.tests2.CaptureTest.testPrimitive":210,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":118,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":140,"org.easymock.tests.UsageTest.moreThanOneArgument":56,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":48,"org.easymock.tests.UsageTest.argumentsOrdered":62,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":299,"org.easymock.tests.UsageVarargTest.varargIntAccepted":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":101,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":419,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":105,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":208,"org.easymock.tests.ReplayStateInvalidUsageTest.times":322,"org.easymock.tests2.DependencyTest.testClassMocking":432,"org.easymock.tests2.AnswerTest.answer":252,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":397,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":434,"org.easymock.tests2.CaptureTest.testAnd":12,"org.easymock.tests2.UsageTest.strictResetToDefault":239,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":438,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":112,"org.easymock.tests2.DelegateToTest.testDelegate":228,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":136,"org.easymock.tests.LimitationsTest.mockFinalMethod":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":33,"org.easymock.tests2.DependencyTest.testClassMockingSupport":433,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":119,"org.easymock.tests2.CaptureTest.testCapture1_2446744":211,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":230,"org.easymock.tests.UsageThrowableTest.throwError":69,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":317,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":366,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":420,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":479,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":0,"org.easymock.tests.MockingTest.testInterfaceMocking":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":102,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":468,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":122,"org.easymock.tests2.UsageTest.niceToStrict":242,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":233,"org.easymock.tests2.MockBuilderTest.testCreateMock":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":475,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":428,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":130,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":171,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":68,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":151,"org.easymock.tests.UsageOverloadedMethodTest.overloading":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":472,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":191,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":146,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":51,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":92,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":190,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":216,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":347,"org.easymock.tests2.EasyMockSupportClassTest.testAll":288,"org.easymock.tests.MockClassControlTest.testEquals":361,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":303,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":486,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":31,"org.easymock.tests2.CaptureTest.testCaptureAll":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":231,"org.easymock.tests.MockNameTest.defaultName":329,"org.easymock.tests2.UsageConstraintsTest.testMatches":192,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":49,"org.easymock.samples.ExampleTest.voteForRemovals":25,"org.easymock.tests.UsageVarargTest.allKinds":109,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":32,"org.easymock.samples.BasicClassMockTest.testPrintContent":293,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":75,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":42,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":227,"org.easymock.tests2.UsageConstraintsTest.greaterThan":194,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":111,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":271,"org.easymock.samples.ExampleTest.voteForRemoval":23,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":337,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":451,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":204,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":266,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":238,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":326,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":168,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":37,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":2,"org.easymock.tests2.CaptureTest.testCaptureFirst":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":169,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":250,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":88,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":206,"org.easymock.tests2.CaptureTest.testCapture2_2446744":218,"org.easymock.tests2.UsageTest.moreThanOneArgument":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":398,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":236,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":354,"org.easymock.tests.GenericTest.testBridgedEquals":304,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":314,"org.easymock.tests.UsageExpectAndReturnTest.longType":84,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":29,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":139,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":141,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":198,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":46,"org.easymock.tests.UsageCallCountTest.tooManyCalls":315,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":89,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":74,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":273,"org.easymock.tests.MockingTest.testNiceClassMocking":343,"org.easymock.tests.MockingTest.testClassMocking":339,"org.easymock.tests2.UsageConstraintsTest.testContains":189,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":309,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":180,"org.easymock.tests2.UsageConstraintsTest.testFind":184,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":53,"org.easymock.tests.MockTypeTest.fromEasyMockClass":365,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":154,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":259,"org.easymock.tests.UsageExpectAndReturnTest.object":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":174,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":349,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":379,"org.easymock.tests.UsageTest.exactCallCountByLastCall":63,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":27,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":327,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":445,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":97,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":145,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":411,"org.easymock.tests.MockClassControlTest.testHashCode":360,"org.easymock.tests2.EasyMockSupportTest.testVerify":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":470,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":484,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":28,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":67,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":229,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":409,"org.easymock.tests.UsageVarargTest.varargCharAccepted":348,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":330,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":402,"org.easymock.tests2.UsageTest.openCallCountByLastCall":244,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":177,"org.easymock.tests.DefaultClassInstantiatorTest.object":77,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":66,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":471,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":128,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":424,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":410,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":269,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":359,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":127,"org.easymock.tests.CapturesMatcherTest.test":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":98,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":148,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":291,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":358,"org.easymock.tests2.UsageTest.resumeIfFailure":249,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":40,"org.easymock.tests2.StubTest.stubWithReturnValue":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":441,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":90,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":199,"org.easymock.tests2.SerializationTest.testAllMockedMethod":224,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":164,"org.easymock.samples.SupportTest.voteForRemovals":20,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":413,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":133,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":165,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":253,"org.easymock.tests.UsageExpectAndThrowTest.object":131,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":328,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":196,"org.easymock.tests2.DelegateToTest.testWrongClass":226,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":142,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":143,"org.easymock.tests.UsageStrictMockTest.range":158,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":406,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":173,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":272,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":459,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":152,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":163,"org.easymock.tests2.CaptureTest.testCaptureNone":215,"org.easymock.tests.UsageUnorderedTest.message":44,"org.easymock.tests.UsageVerifyTest.twoReturns":108,"org.easymock.tests.UsageVarargTest.varargByteAccepted":353,"org.easymock.tests2.ThreadingTest.testThreadSafe":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":473,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":312,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":292,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":380,"org.easymock.tests2.CaptureTest.testCapture_2617107":13,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":117,"org.easymock.tests2.UsageConstraintsTest.any":187,"org.easymock.tests2.StubTest.stub":279,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":321,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndThrowTest.longType":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":39,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":334,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":320,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests2.SerializationTest.testClass":222,"org.easymock.tests.LimitationsTest.mockNativeMethod":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":100,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":35,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":423,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":287,"org.easymock.tests2.NameTest.nameForMocksControl":457,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":425,"org.easymock.tests2.MockedExceptionTest.testMockedException":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":463,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":60,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":447,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":125,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":80,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":260,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":235,"org.easymock.tests.MockingTest.testNicePartialClassMocking":79,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":265,"org.easymock.tests2.CompareToTest.testCompareEqual":483,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":421,"org.easymock.tests2.CaptureTest.testCaptureLast":214,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":120,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":278,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":197,"org.easymock.tests.MockingTest.testTwoMocks":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":129,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":247,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":200,"org.easymock.samples.ExampleTest.removeNonExistingDocument":298,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":427,"org.easymock.tests.UsageStrictMockTest.differentMethods":159,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":318,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":412,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":332,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":205,"org.easymock.tests2.MockBuilderTest.testCreateMockString":237,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":464,"org.easymock.tests.UsageExpectAndThrowTest.floatType":123,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":255,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":446,"org.easymock.tests.UsageVerifyTest.twoThrows":107,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":290,"org.easymock.samples.ExampleTest.voteAgainstRemoval":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":392,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":161,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":270,"org.easymock.tests.LimitationsTest.privateConstructor":306,"org.easymock.tests2.UsageConstraintsTest.testNotNull":11,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":178,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":76,"org.easymock.tests2.UsageTest.defaultResetToNice":246,"org.easymock.samples.ExampleTest.voteAgainstRemovals":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":96,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":422,"org.easymock.tests.UsageVarargTest.differentLength":350,"org.easymock.tests2.CallbackTest.callback":281,"org.easymock.tests2.UsageConstraintsTest.equals":408,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":449,"org.easymock.tests.UsageTest.openCallCountByLastCall":59,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":182,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":116,"org.easymock.tests.UsageCallCountTest.tooFewCalls":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":275,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":373,"org.easymock.tests.UsageThrowableTest.throwCheckedException":73,"org.easymock.tests.MockingTest.testStrictClassMocking":338,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":426,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":274,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":323,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":276,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":257,"org.easymock.tests.ObjectMethodsTest.testHashCode":378,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":482,"org.easymock.tests2.NameTest.nameForNiceMock":456,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":207,"org.easymock.tests2.DependencyTest.testInterfaceMocking":220,"org.easymock.samples.ExampleTest.addDocument":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":478,"org.easymock.tests2.DelegateToTest.testStubDelegate":3,"org.easymock.tests2.AnswerTest.stubAnswer":256,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":156,"org.easymock.tests.UsageVarargTest.varargLongAccepted":352,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":99,"org.easymock.tests.UsageExpectAndReturnTest.floatType":83,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":251,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":418,"org.easymock.tests.UsageThrowableTest.noUpperLimit":70,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":195,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":183,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":404,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":212,"org.easymock.tests2.SerializationTest.test":223,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":331,"org.easymock.tests2.UsageConstraintsTest.testSame":185,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":82,"org.easymock.samples.SupportTest.addDocument":296,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":465,"org.easymock.tests.GenericTest.testPackageScope":34,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":417,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":341,"org.easymock.tests2.NameTest.nameForMock":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":93,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":444,"org.easymock.tests2.UsageStrictMockTest.differentMethods":286,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":450,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":135,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":376,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":113,"org.easymock.tests2.MockedExceptionTest.testRealException":181,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":369,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":394,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":283,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":115,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":325,"org.easymock.tests2.NameTest.nameForStrictMock":455,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":439,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":258,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":264,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":405,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":333,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":232,"org.easymock.tests2.UsageStrictMockTest.range":285,"org.easymock.tests2.UsageConstraintsTest.lessThan":201,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":469,"org.easymock.tests2.CaptureTest.testCaptureRightOne":14,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":261,"org.easymock.tests.UsageTest.wrongArguments":58,"org.easymock.tests2.MockBuilderTest.testWithConstructor":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":466,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":356,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":86,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":383,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":335,"org.easymock.tests.UsageVarargTest.varargShortAccepted":351,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":313,"org.easymock.tests2.UsageConstraintsTest.cmpTo":188,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":385,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":245,"org.easymock.tests2.CaptureTest.testCaptureFromStub":217,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":316,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":437,"org.easymock.tests.UsageTest.unexpectedCallWithArray":57,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":95,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.samples.ExampleTest.addAndChangeDocument":26,"org.easymock.tests.UsageStrictMockTest.testVerify":375,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":295,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":374,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":30,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":103,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":87,"org.easymock.tests.LimitationsTest.abstractClass":305,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":104,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":481,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":172,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":345}}]
