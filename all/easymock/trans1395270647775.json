[{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[6,7],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[8,9,10,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[12,13,14,15],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[17,18,19,20,21,22,23,0,24,25,26,27,28,29,30,31,32,33,34,35,36,12,13,37,14,15,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,7,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,16,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,3,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,261,262,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,9,10,11,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[17,18,19,20,21,81,110,111,114,184,188,189,198,203,220,226,227,231,245,246,247,248,249,261,261,262,262,304,305,309,310,311,312,318,320,321,323,324,330,331,332,420,426,443],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append(((org.easymock.internal.ErrorMessage.getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[23,24,27,28,446,6,447,7,115,116,117,3,220,222,223,269,270,276,277,448,449,450,451,420,422,423],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","matches":"matches","this":"this"}},{"position":"org.easymock.internal.MocksControl:189","failures":[22,0,24,27,28,29,7,116,117,146,147,148,149,150,208,209,210,211,218,3,221,222,223,267,270,271,272,275,276,277,279,452,283,284,453,454,455,295,299,306,339,340,341,342,361,378,379,380,381,456,411,418,421,422,423],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[457,458,459,460,461,462,463,464,9,375],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[465,466,282,300,301,467,468,469],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[470,471,457,472,473,474,475,375,428,476,477],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[310,311,315,316,325,326,330,331],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Contains:40","failures":[478],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[17,18,19,20,21,22,23,0,24,25,26,27,28,29,30,31,32,479,480,481,33,482,34,483,35,36,12,13,37,14,15,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,7,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,16,172,173,174,175,176,484,177,178,179,180,181,182,485,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,3,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,486,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,452,470,280,487,471,281,282,283,284,457,453,488,285,286,454,473,455,489,490,287,288,289,290,291,292,293,294,295,491,296,297,298,299,300,301,302,303,492,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,9,10,11,374,375,493,376,377,378,494,379,380,495,381,456,382,383,384,385,496,448,449,450,451,386,497,498,499,387,388,389,390,500,501,391,502,392,393,503,394,395,504,505,396,397,398,399,400,506,401,507,508,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,509,510,428,429,511,430,431,476,477,432,433,434,435,436,437,438,439,440,441,442,443,444,445],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[22,26,116,140,267,274],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[479,34,70,85,86,87,89,152,153,154,155,164,217,237,238,239,240,241,242,243,244,251,261,261,262,262,263,264,452,280,487,282,283,284,453,286,454,455,289,290,292,293,294,295,296,299,300,301,302,492,345,9,11,374,391,393,400,403,509,510,428,429,431,476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:115","sourceCode":"for (final org.easymock.internal.MethodSerializationWrapper org.easymock.internal.MethodSerializationWrapper : java.util.Set<org.easymock.internal.MethodSerializationWrapper>) {\n    try {\n        java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n    }\n}","type":"CtForEachImpl"},"failures":[9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[17,18,19,20,21,22,23,0,24,25,26,27,28,29,30,31,32,479,33,482,34,483,35,36,12,13,37,14,15,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,7,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,16,172,173,174,175,176,484,177,178,179,180,181,182,485,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,3,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,261,262,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,452,470,280,487,471,281,282,283,284,457,453,285,286,454,473,455,489,490,287,288,289,290,291,292,293,294,295,491,296,297,298,299,300,301,302,303,492,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,9,10,11,374,375,493,376,377,378,494,379,380,495,381,456,382,383,384,385,496,448,449,450,451,386,387,388,389,390,500,501,391,502,392,393,503,394,395,504,505,396,397,398,399,400,506,401,507,508,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,509,510,428,429,430,431,476,432,433,434,435,436,437,438,439,440,441,442,443,444,445],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[457,285,459,460,461,512,464,9,374,375],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[181,513,514],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[357,358,360,363,364,367,407,408,410,413,414,417],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[272,293,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[515,516,517],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name"}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[457,285,459,460,461,512,464,9,374,375],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[8,9,10,11],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[178,182],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[151,155],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[306,307,310,312,313,315,325,330,432,434,442],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[518],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":307,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":22,"org.easymock.tests2.UsageTest.argumentsOrdered":277,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":383,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":194,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":272,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":252,"org.easymock.tests2.DelegateToTest.testReturnException":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":157,"org.easymock.tests.MockingTest.testPartialClassMocking":86,"org.easymock.tests.MockClassControlTest.testToString":239,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":496,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":31,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":504,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":393,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":38,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":446,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":288,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":459,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":314,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":110,"org.easymock.tests2.UsageTest.wrongArguments":270,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":417,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":210,"org.easymock.samples.ExampleTest.answerVsDelegate":254,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":34,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":91,"org.easymock.tests2.UsageConstraintsTest.testNull":310,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":292,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":244,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":382,"org.easymock.tests2.CaptureTest.testPrimitive":435,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":114,"org.easymock.tests.UsageTest.moreThanOneArgument":23,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":57,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":19,"org.easymock.tests.UsageTest.argumentsOrdered":28,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":232,"org.easymock.tests.UsageVarargTest.varargIntAccepted":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":463,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":452,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":366,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":249,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":411,"org.easymock.tests.ReplayStateInvalidUsageTest.times":173,"org.easymock.tests2.DependencyTest.testClassMocking":489,"org.easymock.tests2.AnswerTest.answer":333,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":342,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":481,"org.easymock.tests2.CaptureTest.testAnd":432,"org.easymock.tests2.UsageTest.strictResetToDefault":268,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":471,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":18,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":95,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":379,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":236,"org.easymock.tests2.DelegateToTest.testDelegate":373,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":53,"org.easymock.tests.LimitationsTest.mockFinalMethod":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":150,"org.easymock.tests2.DependencyTest.testClassMockingSupport":490,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":107,"org.easymock.tests2.CaptureTest.testCapture1_2446744":436,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":491,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":51,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":340,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":168,"org.easymock.tests.UsageThrowableTest.throwError":138,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":482,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":486,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":21,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":405,"org.easymock.samples.PartialClassMockTest.testGetArea":251,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":169,"org.easymock.tests.MockingTest.testInterfaceMocking":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":246,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":505,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":39,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":217,"org.easymock.tests2.UsageTest.niceToStrict":271,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":184,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":282,"org.easymock.tests2.MockBuilderTest.testCreateMock":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":507,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":414,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":47,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":380,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":480,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":71,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":208,"org.easymock.tests.UsageOverloadedMethodTest.overloading":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":399,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":100,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":129,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":104,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":513,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":319,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":441,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":61,"org.easymock.tests2.EasyMockSupportClassTest.testAll":391,"org.easymock.tests.MockClassControlTest.testEquals":243,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":153,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":55,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":467,"org.easymock.tests2.CaptureTest.testCaptureAll":433,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":148,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":341,"org.easymock.tests.MockNameTest.defaultName":80,"org.easymock.tests2.UsageConstraintsTest.testMatches":321,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":20,"org.easymock.samples.ExampleTest.voteForRemovals":258,"org.easymock.tests.UsageVarargTest.allKinds":69,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":149,"org.easymock.samples.BasicClassMockTest.testPrintContent":264,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":144,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":363,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":372,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":485,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":464,"org.easymock.tests2.UsageConstraintsTest.greaterThan":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":502,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":94,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":302,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":183,"org.easymock.samples.ExampleTest.voteForRemoval":255,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":303,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":351,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":483,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":499,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":295,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":70,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":267,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":378,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":500,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":156,"org.easymock.tests2.CaptureTest.testCaptureFirst":445,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":494,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":279,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":103,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":125,"org.easymock.tests2.CaptureTest.testCapture2_2446744":444,"org.easymock.tests2.UsageTest.moreThanOneArgument":269,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":353,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":202,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":68,"org.easymock.tests.GenericTest.testBridgedEquals":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":78,"org.easymock.tests.UsageExpectAndReturnTest.longType":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":146,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":376,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":56,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":231,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":328,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":54,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":12,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":17,"org.easymock.tests.UsageCallCountTest.tooManyCalls":79,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":508,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":43,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":510,"org.easymock.tests.MockingTest.testNiceClassMocking":92,"org.easymock.tests.MockingTest.testClassMocking":84,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":466,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":72,"org.easymock.tests2.UsageConstraintsTest.testContains":318,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":345,"org.easymock.tests2.UsageConstraintsTest.testFind":309,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":106,"org.easymock.tests.MockTypeTest.fromEasyMockClass":33,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":218,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":349,"org.easymock.tests.UsageExpectAndReturnTest.object":128,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":456,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":460,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":63,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":215,"org.easymock.tests.UsageTest.exactCallCountByLastCall":29,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":189,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":30,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":233,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":375,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":134,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":58,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":99,"org.easymock.tests.MockClassControlTest.testHashCode":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":357,"org.easymock.tests2.EasyMockSupportTest.testVerify":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":397,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":234,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":97,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":14,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":339,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":427,"org.easymock.tests.UsageVarargTest.varargCharAccepted":62,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":484,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":207,"org.easymock.tests2.UsageTest.openCallCountByLastCall":273,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":516,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":384,"org.easymock.tests.DefaultClassInstantiatorTest.object":177,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":37,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":398,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":45,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":469,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":409,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":356,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":241,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":300,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":44,"org.easymock.tests.CapturesMatcherTest.test":518,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":135,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":403,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":240,"org.easymock.tests2.UsageTest.resumeIfFailure":278,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":479,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":497,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":159,"org.easymock.tests2.StubTest.stubWithReturnValue":426,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":457,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":127,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":329,"org.easymock.tests2.SerializationTest.testAllMockedMethod":11,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":200,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.samples.SupportTest.voteForRemovals":266,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":359,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":50,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":8,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":206,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":334,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":32,"org.easymock.tests.UsageExpectAndThrowTest.object":48,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":326,"org.easymock.tests2.DelegateToTest.testWrongClass":371,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":226,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":227,"org.easymock.tests.UsageStrictMockTest.range":222,"org.easymock.samples.ConstructorCalledMockTest.testTax":261,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":388,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":381,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":509,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":49,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":390,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":175,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":209,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":1,"org.easymock.tests2.CaptureTest.testCaptureNone":440,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":230,"org.easymock.tests.UsageUnorderedTest.message":7,"org.easymock.tests.UsageVerifyTest.twoReturns":117,"org.easymock.tests.UsageVarargTest.varargByteAccepted":67,"org.easymock.tests2.ThreadingTest.testThreadSafe":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":506,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":76,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":216,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":263,"org.easymock.tests2.CaptureTest.testCapture_2617107":434,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":204,"org.easymock.tests2.UsageConstraintsTest.any":316,"org.easymock.tests2.StubTest.stub":425,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":172,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":158,"org.easymock.tests.UsageExpectAndThrowTest.longType":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":205,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":181,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":16,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":421,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":361,"org.easymock.tests.LimitationsTest.mockNativeMethod":164,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":137,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":468,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":408,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":424,"org.easymock.tests2.NameTest.nameForMocksControl":451,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":410,"org.easymock.tests2.MockedExceptionTest.testMockedException":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":392,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":42,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":89,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":348,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":289,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":453,"org.easymock.tests.MockingTest.testNicePartialClassMocking":87,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":458,"org.easymock.tests2.CaptureTest.testCaptureLast":439,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":406,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":108,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":476,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":313,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":327,"org.easymock.tests.MockingTest.testTwoMocks":85,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":46,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":276,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":331,"org.easymock.samples.ExampleTest.removeNonExistingDocument":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":413,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":170,"org.easymock.tests.UsageStrictMockTest.differentMethods":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":358,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":179,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":352,"org.easymock.tests2.MockBuilderTest.testCreateMockString":455,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":503,"org.easymock.tests.UsageExpectAndThrowTest.floatType":40,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":501,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":336,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":493,"org.easymock.tests.UsageVerifyTest.twoThrows":116,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":400,"org.easymock.samples.ExampleTest.voteAgainstRemoval":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":195,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":228,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":301,"org.easymock.tests.LimitationsTest.privateConstructor":163,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":475,"org.easymock.tests2.UsageConstraintsTest.testNotNull":330,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":145,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":343,"org.easymock.tests2.UsageTest.defaultResetToNice":275,"org.easymock.samples.ExampleTest.voteAgainstRemovals":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":196,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":407,"org.easymock.tests.UsageVarargTest.differentLength":64,"org.easymock.tests2.CallbackTest.callback":355,"org.easymock.tests2.UsageConstraintsTest.equals":308,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":297,"org.easymock.tests.UsageTest.openCallCountByLastCall":25,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":304,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":112,"org.easymock.tests.UsageCallCountTest.tooFewCalls":74,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":429,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":211,"org.easymock.tests.UsageThrowableTest.throwCheckedException":142,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests.MockingTest.testStrictClassMocking":83,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":431,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":82,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":428,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":412,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":430,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":338,"org.easymock.tests.ObjectMethodsTest.testHashCode":214,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":462,"org.easymock.tests2.NameTest.nameForNiceMock":450,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":354,"org.easymock.tests2.DependencyTest.testInterfaceMocking":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":461,"org.easymock.samples.ExampleTest.addDocument":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":404,"org.easymock.tests2.DelegateToTest.testStubDelegate":370,"org.easymock.tests2.AnswerTest.stubAnswer":337,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":220,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":488,"org.easymock.tests.UsageVarargTest.varargLongAccepted":66,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":136,"org.easymock.tests.UsageExpectAndReturnTest.floatType":120,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":374,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":262,"org.easymock.tests.UsageThrowableTest.noUpperLimit":139,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":101,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":365,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":305,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":386,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":437,"org.easymock.tests2.SerializationTest.test":10,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":514,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":119,"org.easymock.tests2.UsageConstraintsTest.testSame":311,"org.easymock.samples.SupportTest.addDocument":265,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":511,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":394,"org.easymock.tests.GenericTest.testPackageScope":152,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":188,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":364,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":90,"org.easymock.tests2.NameTest.nameForMock":448,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":130,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":473,"org.easymock.tests2.UsageStrictMockTest.differentMethods":423,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":298,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":122,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":52,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":212,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":96,"org.easymock.tests2.MockedExceptionTest.testRealException":346,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":35,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":198,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":197,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":111,"org.easymock.tests2.NameTest.nameForStrictMock":449,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":281,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":517,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":347,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":293,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":387,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":180,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":6,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":325,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":280,"org.easymock.tests2.UsageStrictMockTest.range":422,"org.easymock.tests2.UsageConstraintsTest.lessThan":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":360,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":465,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":192,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":377,"org.easymock.tests2.CaptureTest.testCaptureRightOne":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":396,"org.easymock.tests2.UsageConstraintsTest.testOr":312,"org.easymock.tests.UsageRangeTest.combination":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":290,"org.easymock.tests.UsageTest.wrongArguments":24,"org.easymock.tests2.MockBuilderTest.testWithConstructor":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":395,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":131,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":182,"org.easymock.tests.UsageVarargTest.varargShortAccepted":65,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":77,"org.easymock.tests2.UsageConstraintsTest.cmpTo":317,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":187,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":274,"org.easymock.tests2.CaptureTest.testCaptureFromStub":443,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":167,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":487,"org.easymock.tests.UsageTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":75,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":472,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":132,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":221,"org.easymock.tests2.UsageConstraintsTest.constraints":306,"org.easymock.samples.ExampleTest.addAndChangeDocument":260,"org.easymock.tests2.ConstraintsToStringTest.containsToString":478,"org.easymock.tests.UsageStrictMockTest.testVerify":225,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":250,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":147,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":438,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":247,"org.easymock.tests.LimitationsTest.abstractClass":162,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":124,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":495,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":447,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":59}}]
