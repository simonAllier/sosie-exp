[{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:135","sourceCode":"final java.io.DataOutputStream java.io.DataOutputStream = new java.io.DataOutputStream(java.io.ByteArrayOutputStream)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[12,13,14,15,16,17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"e":"e"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[19,20],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,9,50,51,52,10,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[99,100,101],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[102,102,103,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,57,120,79,80,81,82,121,99,122,123,124,125,126,127,88,128,129,89,90,91,92,93,94,95,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[102,103,4,7,131,8,132],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[133,134,135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[136],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[137],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[22,23,138,24,25,139,26,140,141,142,143,144,145,27,28,146,147,104,105,148,130,106,107,108,109,0,149,150,151,110,152,111,112,153,113,114,154,155,156,157,158,115,116,117,30,31,32,159,13,160,161,162,163,164,14,15,16,165,17,166,34,35,36,37,38,39,40,42,167,168,169,44,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,45,46,185,186,187,47,188,189,190,119,48,49,9,50,51,52,10,191,192,193,194,195,196,197,198,199,200,201,202,53,54,55,56,203,204,19,205,57,206,58,59,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,60,61,62,63,64,65,231,232,66,67,233,68,69,70,234,71,72,73,74,75,76,77,78,235,236,237,238,83,85,86,239,240,241,242,243,244,245,246,247,248,249,250,122,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,87,88,128,274,275,129,89,90,91,92,93,276,277,278,279,280,281,282,283,284,285,94,95,286,287,96,288,97,98,289],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[290,291,171,292,119,293,294,295,296,297,21,274,298,299,300,301,276,302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[303],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[305,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[22,102,103,23,138,24,25,139,26,140,141,142,143,144,145,27,28,146,307,147,104,105,148,130,106,107,108,109,0,149,150,151,110,152,111,112,153,113,114,154,155,156,157,158,115,116,117,308,309,310,311,312,29,30,313,31,32,314,33,315,159,13,160,161,162,163,164,14,15,16,165,118,17,166,34,35,36,37,38,39,316,40,317,41,42,43,167,168,169,44,170,290,291,171,292,172,173,174,175,176,177,178,179,180,137,181,182,183,184,45,46,185,186,187,47,188,189,190,119,48,49,9,50,51,52,10,191,192,193,194,195,196,197,318,198,199,200,201,202,53,54,55,56,203,204,19,20,319,205,57,206,58,59,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,60,61,62,63,64,65,231,232,66,67,233,68,69,70,234,71,72,73,74,75,76,77,78,79,80,81,82,121,235,236,237,320,83,85,86,239,240,321,241,242,243,244,245,246,247,322,323,324,325,326,250,122,297,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,327,269,270,271,272,273,87,88,128,274,275,129,328,329,330,331,89,90,91,92,93,298,299,300,301,276,302,277,278,279,280,281,282,283,332,284,285,94,95,333,286,287,96,288,97,98,289],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[52,11,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[161],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[159,13,160,161,162,163,164,14,16,165,118,17,166,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"actual"}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:64","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[146,147,104,105,148,130,106,107,108,109,0,149,334,150,151,110,152,111,112,153,113,114,154,155,156,157,158,115,116,117,159,13,160,161,162,163,164,14,15,16,165,118,17,166,40,44,335,57,250,122,297,273,88,128,274,275,129,89,90,91,92,93,276,94,95,287,96],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"failures":[104,105,148,130,106,107,108,109,0,149,150,151,110,152,111,112,153,113,114,154,155,156,158,115,116,117,30,159,13,161,162,14,15,16,165,118,17,166,35,38,40,41,42,43,167,168,169,170,171,172,173,174,175,177,179,180,137,183,184,45,46,186,119,191,192,193,194,195,196,197,318,198,199,200,201,203,57,58,59,208,209,65,231,232,233,68,69,70,234,81,121,238,99,83,84,85,86,239,240,242,243,246,122,251,253,254,255,256,257,258,262,263,88,128,129,92,100,277,279,96,97,98,101,336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[337,338,339,340,321,287],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[102,103,341,7,8,342,343,132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[344,345],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[19,20],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[15,346,165,166],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[23,138,24,25,139,26,140,28,146,147,104,105,148,130,106,107,108,109,0,149,150,151,110,152,111,112,153,113,114,154,155,156,157,158,115,116,117,308,309,310,311,312,30,313,159,13,160,161,162,163,164,14,15,16,165,118,17,166,34,35,36,37,38,39,316,40,317,42,167,168,169,44,170,290,291,171,292,173,174,175,176,177,178,179,180,137,181,182,183,184,45,185,187,47,188,189,190,119,49,9,52,10,203,204,19,20,205,57,206,58,59,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,60,61,62,63,64,65,231,232,66,67,233,68,69,70,234,71,72,73,74,75,76,77,78,347,79,80,81,82,121,235,236,237,238,348,83,85,86,239,240,241,242,243,244,245,246,247,322,323,324,325,326,250,122,297,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,87,88,128,274,275,129,328,329,330,331,89,90,91,92,93,298,299,300,301,276,302,277,278,279,280,281,282,283,284,285,94,95,286,287,96,288,97,98,289],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[349,350],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[22,102,103,23,138,24,25,139,26,351,140,141,142,143,144,145,27,28,1,352,353,354,355,356,357,146,307,147,104,105,148,130,358,106,107,108,109,0,149,334,150,151,110,152,111,112,153,113,114,154,155,156,157,158,115,116,117,308,309,310,311,312,4,29,359,5,360,30,313,31,6,32,341,361,314,33,8,315,159,13,160,161,162,163,164,14,15,16,165,118,17,166,34,35,36,37,38,39,316,362,40,132,363,317,41,42,43,364,365,167,168,169,44,170,290,291,171,292,366,367,368,369,370,172,371,372,373,374,375,376,173,174,175,176,177,178,179,180,137,181,182,183,184,377,378,45,46,185,335,379,380,381,382,383,186,384,385,386,387,388,389,390,187,47,188,391,189,392,393,394,395,396,397,398,190,119,48,49,9,50,399,51,52,10,11,191,192,193,194,195,196,197,318,198,199,200,201,202,400,401,402,53,403,404,54,405,406,407,408,409,410,411,412,413,55,414,415,416,417,418,56,419,420,203,421,422,204,19,20,319,205,57,206,58,59,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,293,294,295,423,60,61,62,63,64,65,231,232,66,67,233,68,69,70,234,71,72,73,74,75,424,425,426,76,77,427,78,428,429,430,120,431,432,433,347,434,435,436,437,438,296,439,79,80,81,82,121,440,441,442,443,444,445,446,447,235,448,236,237,449,238,320,450,348,451,99,83,84,85,86,239,240,321,241,242,243,244,245,246,247,452,248,249,453,454,322,323,324,325,326,455,456,344,457,458,459,345,460,461,250,462,463,464,122,297,465,251,252,253,254,255,256,257,258,305,259,260,466,306,261,262,263,123,467,468,469,124,125,470,21,471,472,473,474,475,476,126,477,478,479,480,127,481,482,483,484,264,265,266,485,267,268,327,269,270,271,272,273,486,487,488,489,490,491,492,493,494,495,87,496,88,128,274,275,129,328,329,330,331,89,90,91,92,93,497,100,498,499,500,501,502,503,504,298,299,300,301,276,302,277,278,279,505,506,280,281,282,283,332,284,285,94,95,333,286,287,96,288,97,98,289,507,508,101,336],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":130,"org.easymock.tests2.UsageTest.argumentsOrdered":182,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":239,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":200,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":473,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":178,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":141,"org.easymock.tests2.DelegateToTest.testReturnException":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":299,"org.easymock.tests.MockingTest.testPartialClassMocking":76,"org.easymock.tests.MockClassControlTest.testToString":488,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":353,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":127,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":211,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":46,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":149,"org.easymock.tests2.UsageTest.wrongArguments":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":88,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":389,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":330,"org.easymock.samples.ExampleTest.answerVsDelegate":138,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":445,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":429,"org.easymock.tests2.UsageConstraintsTest.testNull":107,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":37,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":493,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":199,"org.easymock.tests2.CaptureTest.testPrimitive":161,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":230,"org.easymock.tests.UsageTest.moreThanOneArgument":240,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":81,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":452,"org.easymock.tests.UsageTest.argumentsOrdered":245,"org.easymock.tests.UsageVarargTest.varargIntAccepted":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":477,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":89,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":312,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":394,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":375,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":468,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":93,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":134,"org.easymock.tests.ReplayStateInvalidUsageTest.times":437,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":186,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":343,"org.easymock.tests2.DependencyTest.testClassMocking":377,"org.easymock.tests2.AnswerTest.answer":203,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":479,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":311,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":442,"org.easymock.tests2.CaptureTest.testAnd":159,"org.easymock.tests2.UsageTest.strictResetToDefault":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":5,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":80,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":85,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":195,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":454,"org.easymock.tests2.DelegateToTest.testDelegate":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":226,"org.easymock.tests.LimitationsTest.mockFinalMethod":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":326,"org.easymock.tests2.DependencyTest.testClassMockingSupport":378,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":450,"org.easymock.tests2.CaptureTest.testCapture1_2446744":162,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":309,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":432,"org.easymock.tests.UsageThrowableTest.throwError":251,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":444,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":423,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":121,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":342,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":420,"org.easymock.samples.PartialClassMockTest.testGetArea":22,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":433,"org.easymock.tests.MockingTest.testInterfaceMocking":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":90,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":101,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":409,"org.easymock.tests2.UsageTest.niceToStrict":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":123,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":303,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":30,"org.easymock.tests2.MockBuilderTest.testCreateMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":416,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":220,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":337,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":196,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":441,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":464,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":505,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":328,"org.easymock.tests.UsageOverloadedMethodTest.overloading":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":111,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":68,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":261,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":152,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":136,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":16,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":485,"org.easymock.tests.MockClassControlTest.testEquals":492,"org.easymock.tests2.EasyMockSupportClassTest.testAll":53,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":228,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":131,"org.easymock.tests2.CaptureTest.testCaptureAll":13,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":324,"org.easymock.tests.MockNameTest.defaultName":465,"org.easymock.tests2.UsageConstraintsTest.testMatches":112,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":82,"org.easymock.samples.ExampleTest.voteForRemovals":26,"org.easymock.tests.UsageVarargTest.allKinds":273,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":277,"org.easymock.samples.BasicClassMockTest.testPrintContent":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":325,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":257,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":319,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":372,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":460,"org.easymock.tests2.UsageConstraintsTest.greaterThan":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":84,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":43,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":461,"org.easymock.samples.ExampleTest.voteForRemoval":24,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":168,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":364,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":316,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":247,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":193,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":298,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":390,"org.easymock.tests2.CaptureTest.testCaptureFirst":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":194,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":184,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":232,"org.easymock.tests2.UsageTest.moreThanOneArgument":175,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":44,"org.easymock.tests2.CaptureTest.testCapture2_2446744":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":480,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":33,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":272,"org.easymock.tests.GenericTest.testBridgedEquals":306,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":284,"org.easymock.tests.UsageExpectAndReturnTest.longType":63,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":229,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":157,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":99,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":79,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":294,"org.easymock.tests.UsageCallCountTest.tooManyCalls":285,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":135,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":388,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":216,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":256,"org.easymock.tests.MockingTest.testNiceClassMocking":430,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":49,"org.easymock.tests.MockingTest.testClassMocking":425,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":506,"org.easymock.tests2.UsageConstraintsTest.testContains":110,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":171,"org.easymock.tests2.UsageConstraintsTest.testFind":106,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":263,"org.easymock.tests.MockTypeTest.fromEasyMockClass":443,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":147,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":333,"org.easymock.tests.UsageExpectAndReturnTest.object":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":198,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":268,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":502,"org.easymock.tests.UsageTest.exactCallCountByLastCall":246,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":125,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":497,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":248,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":72,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":264,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":236,"org.easymock.tests.MockClassControlTest.testHashCode":491,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":367,"org.easymock.tests2.EasyMockSupportTest.testVerify":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":411,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":133,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":249,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":463,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":308,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":335,"org.easymock.tests.UsageVarargTest.varargCharAccepted":267,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":455,"org.easymock.tests2.CaptureTest.testCaptureMultiple":12,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":484,"org.easymock.tests2.UsageTest.openCallCountByLastCall":179,"org.easymock.tests.DefaultClassInstantiatorTest.object":456,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":201,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":462,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":412,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":218,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":366,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":490,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":41,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":217,"org.easymock.tests.CapturesMatcherTest.test":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":293,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":56,"org.easymock.tests2.UsageTest.resumeIfFailure":183,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":301,"org.easymock.tests2.StubTest.stubWithReturnValue":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":67,"org.easymock.tests2.SerializationTest.testAllMockedMethod":210,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":478,"org.easymock.samples.SupportTest.voteForRemovals":27,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":338,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":223,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":483,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":421,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":498,"org.easymock.tests.UsageExpectAndThrowTest.object":221,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":155,"org.easymock.tests2.DelegateToTest.testWrongClass":188,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":94,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":95,"org.easymock.samples.ConstructorCalledMockTest.testTax":102,"org.easymock.tests.UsageStrictMockTest.range":97,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":397,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":48,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":304,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":222,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":400,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":244,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":329,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":339,"org.easymock.tests2.CaptureTest.testCaptureNone":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":336,"org.easymock.tests.UsageUnorderedTest.message":250,"org.easymock.tests.UsageVerifyTest.twoReturns":279,"org.easymock.tests.UsageVarargTest.varargByteAccepted":271,"org.easymock.tests2.ThreadingTest.testThreadSafe":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":414,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":283,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":503,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":142,"org.easymock.tests2.CaptureTest.testCapture_2617107":160,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":481,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":275,"org.easymock.tests2.UsageConstraintsTest.any":150,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":436,"org.easymock.tests2.StubTest.stub":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":482,"org.easymock.tests.UsageExpectAndThrowTest.longType":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":300,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":459,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":435,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":206,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":172,"org.easymock.tests2.SerializationTest.testClass":208,"org.easymock.tests.LimitationsTest.mockNativeMethod":87,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":466,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":75,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":381,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":207,"org.easymock.tests2.NameTest.nameForMocksControl":357,"org.easymock.tests2.MockedExceptionTest.testMockedException":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":404,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":243,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":78,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":215,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":307,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":34,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":32,"org.easymock.tests.MockingTest.testNicePartialClassMocking":77,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":39,"org.easymock.tests2.CaptureTest.testCaptureLast":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":348,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":10,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":156,"org.easymock.tests.MockingTest.testTwoMocks":426,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":219,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":181,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":116,"org.easymock.samples.ExampleTest.removeNonExistingDocument":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":385,"org.easymock.tests.UsageStrictMockTest.differentMethods":98,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":368,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":457,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":350,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":169,"org.easymock.tests2.MockBuilderTest.testCreateMockString":315,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":405,"org.easymock.tests.UsageExpectAndThrowTest.floatType":213,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":204,"org.easymock.tests.UsageVerifyTest.twoThrows":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":352,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":55,"org.easymock.samples.ExampleTest.voteAgainstRemoval":25,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":474,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":42,"org.easymock.tests.LimitationsTest.privateConstructor":495,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":3,"org.easymock.tests2.UsageConstraintsTest.testNotNull":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":258,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":290,"org.easymock.tests2.UsageTest.defaultResetToNice":137,"org.easymock.samples.ExampleTest.voteAgainstRemovals":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":71,"org.easymock.tests.UsageVarargTest.differentLength":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":380,"org.easymock.tests2.CallbackTest.callback":185,"org.easymock.tests2.UsageConstraintsTest.equals":358,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":132,"org.easymock.tests.UsageTest.openCallCountByLastCall":242,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":274,"org.easymock.tests.UsageCallCountTest.tooFewCalls":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":331,"org.easymock.tests.UsageThrowableTest.throwCheckedException":255,"org.easymock.tests.MockingTest.testStrictClassMocking":424,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":340,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":52,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":384,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":9,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":438,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":51,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":20,"org.easymock.tests.ObjectMethodsTest.testHashCode":501,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":170,"org.easymock.tests2.NameTest.nameForNiceMock":356,"org.easymock.tests2.DependencyTest.testInterfaceMocking":45,"org.easymock.samples.ExampleTest.addDocument":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":419,"org.easymock.tests2.DelegateToTest.testStubDelegate":47,"org.easymock.tests2.AnswerTest.stubAnswer":19,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":96,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":341,"org.easymock.tests.UsageVarargTest.varargLongAccepted":270,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndReturnTest.floatType":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":103,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":114,"org.easymock.tests.UsageThrowableTest.noUpperLimit":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":374,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":105,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":392,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":163,"org.easymock.tests2.SerializationTest.test":209,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":344,"org.easymock.tests2.UsageConstraintsTest.testSame":108,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":61,"org.easymock.samples.SupportTest.addDocument":145,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":399,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":406,"org.easymock.tests.GenericTest.testPackageScope":259,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":124,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":373,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":428,"org.easymock.tests2.NameTest.nameForMock":354,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":69,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":8,"org.easymock.tests2.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":225,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":499,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":86,"org.easymock.tests2.MockedExceptionTest.testRealException":292,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":447,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":476,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":57,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":439,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":128,"org.easymock.tests2.NameTest.nameForStrictMock":355,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":360,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":146,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":396,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":458,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":154,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":29,"org.easymock.tests2.UsageStrictMockTest.range":58,"org.easymock.tests2.UsageConstraintsTest.lessThan":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":410,"org.easymock.tests2.CaptureTest.testCaptureRightOne":165,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":349,"org.easymock.tests2.UsageConstraintsTest.testOr":109,"org.easymock.tests.UsageRangeTest.combination":83,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":35,"org.easymock.tests.UsageTest.wrongArguments":241,"org.easymock.tests2.MockBuilderTest.testWithConstructor":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":407,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":487,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":70,"org.easymock.tests.UsageVarargTest.varargShortAccepted":269,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":345,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":332,"org.easymock.tests2.UsageConstraintsTest.cmpTo":151,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":469,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":180,"org.easymock.tests2.CaptureTest.testCaptureFromStub":118,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":431,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":359,"org.easymock.tests.UsageTest.unexpectedCallWithArray":321,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":287,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":282,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":234,"org.easymock.tests2.CaptureTest.testCapture":346,"org.easymock.tests2.UsageConstraintsTest.constraints":148,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":288,"org.easymock.samples.ExampleTest.addAndChangeDocument":140,"org.easymock.tests.UsageStrictMockTest.testVerify":507,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":144,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":323,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":91,"org.easymock.tests.LimitationsTest.abstractClass":494,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":92,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":197,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":265}}]
