[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:58","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[26,7,27,28,29,8,9,10,30,31,32,33,34,35,36,37,38,11,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[82],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:191","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:106","sourceCode":"return org.easymock.IAnswer<?>.answer()","type":"CtReturnImpl"},"failures":[83,84,85,86,87,88,89,90,91,0,1,92,93,2,3,4,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,25,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,5,140,141,6,142,143,7,29,9,32,144,145,82,146,147,148,149,150,151,152,153,154,155,156,157,158,159,35,11,39,40,41,160,161,162,163,164,165,166,167,168,46,47,48,169,170,49,50,51,52,171,53,54,55,172,60,63,73,79,173,174,175,176,177,178,179,180,181,182,183,184,185,12,186,187,13,14,15,188,189,190,191,192,16,193,194,195,196,197,17,18,19,198,199,200,201,202,203,204,205,206,207,208,209,20,22,23,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,24,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[124,125,273,126,127,274,275,128,129,130,131,132,133,134,276],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[55,172,56,277],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[108],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[88,88,89,89,90,278,279,280,281,139,5,141,6,142,143,7,27,28,29,8,9,10,30,31,32,33,282,35,283,36,37,38,11,39,40,41,42,43,44,284,285,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,286,287,288,289,290,291,292,183,293,294,295,296,297,298,299,300,301,302,303,304,305,215,216,217,306,307,308,309,310,311,221,312,313,314,315,316,317,318,319,320,321],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[322,323],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[324,325,326,327,328,329,330,98,331,332,333,334,335,336,337,338,339,340,341,170,342,343,344,345,346,347],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[102,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[349,2,350,3,4,351,101,114,8,10,149,153,154,157,36,44,160,162,352,163,353,354,355,168,356,357,358,359,177,360,361,13,362,14,15,363,20,210,211,212,364,365,366,367,368,222,223,369,370,371,226,372,373,374,375,376],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[92,93,349,2,350,99,100,101,102,103,104,105,106,107,108,348,109,110,111,25,112,113,114,115,116,117,118,119,377,120,121,122,123,124,125,273,126,127,274,275,128,129,130,131,132,133,134,135,378,7,29,146,148,361,13,208,209,213,214,379,380,227,228,229,230,231,24,232,233,234,235,236,237,376,263],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[3,352,354,355,361,14,211,212,381,382,383,369,370,371,376],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[384,385],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[83,85,86,87,91,229,238],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[83,85,86,87,90,91,0,1,2,3,4,98,99,100,101,102,103,104,105,106,107,108,109,110,111,25,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,137,139,5,140,141,6,142,7,8,9,10,32,144,145,82,146,147,148,149,150,151,152,153,154,155,156,157,158,159,36,11,40,41,44,160,161,162,163,164,165,166,167,168,48,170,49,50,51,52,171,53,54,55,172,60,63,73,79,174,178,183,294,13,14,15,188,189,190,191,192,16,193,194,195,196,197,17,18,19,198,199,200,201,202,203,20,21,22,23,386,210,212,213,215,216,217,387,388,218,219,220,221,222,223,224,225,226,227,228,229,230,231,24,232,235,236,237,263,264,265,266,267,268,269,389],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[34,390],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[166],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","name":"name","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[391],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[83,84,85,86,392,87,393,88,89,324,90,325,394,91,278,279,0,1,92,395,93,349,396,2,350,3,4,98,99,100,101,102,103,104,105,106,107,108,109,110,111,25,112,113,114,115,116,117,118,119,120,121,122,123,124,125,273,126,127,274,275,128,129,130,131,132,133,134,135,136,137,138,139,140,141,6,142,7,9,32,144,145,82,146,147,148,149,150,151,152,153,154,156,157,158,159,397,11,40,41,44,45,160,161,162,352,163,353,164,165,354,355,168,48,170,49,50,51,52,171,53,54,55,172,56,60,63,73,79,173,174,175,176,177,178,183,293,184,185,12,186,187,360,398,361,13,362,14,15,188,189,190,191,192,16,193,194,195,196,197,17,18,19,198,199,200,201,202,203,204,205,206,207,208,209,20,210,211,212,213,214,215,216,217,219,220,221,365,399,400,222,223,383,369,224,225,370,371,226,401,402,403,404,405,406,407,408,409,380,227,228,229,230,231,321,24,232,233,234,235,236,237,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,376,263,410,264,265,266,267,268,269],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[55,172,56,277],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":102,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":222,"org.easymock.tests2.UsageTest.argumentsOrdered":355,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":342,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":353,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":325,"org.easymock.tests2.DelegateToTest.testReturnException":173,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":205,"org.easymock.tests.MockingTest.testPartialClassMocking":215,"org.easymock.tests.MockClassControlTest.testToString":315,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":67,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":63,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":243,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":373,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":1,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":24,"org.easymock.tests2.UsageTest.wrongArguments":352,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":181,"org.easymock.samples.ExampleTest.answerVsDelegate":84,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":309,"org.easymock.tests2.UsageConstraintsTest.testNull":104,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":141,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":157,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":320,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":286,"org.easymock.tests2.CaptureTest.testPrimitive":126,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":235,"org.easymock.tests.UsageTest.moreThanOneArgument":223,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":262,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":12,"org.easymock.tests.UsageTest.argumentsOrdered":371,"org.easymock.tests.UsageVarargTest.varargIntAccepted":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":227,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":35,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":346,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":231,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":98,"org.easymock.tests2.AnswerTest.answer":135,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":97,"org.easymock.tests2.CaptureTest.testAnd":124,"org.easymock.tests2.UsageTest.strictResetToDefault":161,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":152,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":22,"org.easymock.tests2.DelegateToTest.testDelegate":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":258,"org.easymock.tests.LimitationsTest.mockFinalMethod":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":208,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":242,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":379,"org.easymock.tests2.CaptureTest.testCapture1_2446744":127,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":95,"org.easymock.tests.UsageThrowableTest.throwError":263,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":81,"org.easymock.samples.PartialClassMockTest.testGetArea":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":228,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":387,"org.easymock.tests2.UsageTest.niceToStrict":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":244,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":307,"org.easymock.tests2.ThreadingTest.testChangeDefault":34,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":11,"org.easymock.tests2.MockBuilderTest.testCreateMock":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":76,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":252,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":153,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":179,"org.easymock.tests.UsageOverloadedMethodTest.overloading":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":78,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":112,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":272,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":17,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":218,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":25,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":130,"org.easymock.tests2.EasyMockSupportClassTest.testAll":60,"org.easymock.tests.MockClassControlTest.testEquals":319,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":293,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":260,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":287,"org.easymock.tests2.CaptureTest.testCaptureAll":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":240,"org.easymock.tests2.UsageConstraintsTest.testMatches":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":186,"org.easymock.samples.ExampleTest.voteForRemovals":87,"org.easymock.tests.UsageVarargTest.allKinds":380,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":241,"org.easymock.samples.BasicClassMockTest.testPrintContent":279,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":268,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":209,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":323,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":343,"org.easymock.tests2.UsageConstraintsTest.greaterThan":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":61,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":21,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":10,"org.easymock.samples.ExampleTest.voteForRemoval":85,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":302,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":145,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":30,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":284,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":143,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":160,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":321,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":150,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":204,"org.easymock.tests2.CaptureTest.testCaptureFirst":134,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":151,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":194,"org.easymock.tests2.UsageTest.moreThanOneArgument":162,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":146,"org.easymock.tests2.CaptureTest.testCapture2_2446744":133,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":44,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":409,"org.easymock.tests.GenericTest.testBridgedEquals":295,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":367,"org.easymock.tests.UsageExpectAndReturnTest.longType":191,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":238,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":261,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":285,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":184,"org.easymock.tests.UsageCallCountTest.tooManyCalls":368,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":77,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":195,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":248,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":267,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":50,"org.easymock.tests.MockingTest.testNiceClassMocking":306,"org.easymock.tests.MockingTest.testClassMocking":304,"org.easymock.tests2.UsageConstraintsTest.testContains":111,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":283,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":48,"org.easymock.tests2.UsageConstraintsTest.testFind":103,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":220,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":93,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":360,"org.easymock.tests.UsageExpectAndReturnTest.object":197,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":7,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":334,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":156,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":405,"org.easymock.tests.UsageTest.exactCallCountByLastCall":226,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":33,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":401,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":200,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":271,"org.easymock.tests.MockClassControlTest.testHashCode":318,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":338,"org.easymock.tests2.EasyMockSupportTest.testVerify":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":70,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":270,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":94,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":378,"org.easymock.tests.UsageVarargTest.varargCharAccepted":404,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":396,"org.easymock.tests2.UsageTest.openCallCountByLastCall":164,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":159,"org.easymock.tests.DefaultClassInstantiatorTest.object":296,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":250,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":265,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":337,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":8,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":249,"org.easymock.tests.CapturesMatcherTest.test":276,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":79,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":316,"org.easymock.tests2.UsageTest.resumeIfFailure":167,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":207,"org.easymock.tests2.StubTest.stubWithReturnValue":178,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":120,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":196,"org.easymock.tests2.SerializationTest.testAllMockedMethod":56,"org.easymock.samples.SupportTest.voteForRemovals":91,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":255,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":277,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":385,"org.easymock.tests.UsageExpectAndThrowTest.object":253,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":118,"org.easymock.tests2.DelegateToTest.testWrongClass":175,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":237,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":88,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":254,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":57,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":180,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":388,"org.easymock.tests2.CaptureTest.testCaptureNone":129,"org.easymock.tests.UsageUnorderedTest.message":376,"org.easymock.tests.UsageVerifyTest.twoReturns":212,"org.easymock.tests.UsageVarargTest.varargByteAccepted":408,"org.easymock.tests2.ThreadingTest.testThreadSafe":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":74,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":400,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":278,"org.easymock.tests2.CaptureTest.testCapture_2617107":273,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":234,"org.easymock.tests2.UsageConstraintsTest.any":109,"org.easymock.tests2.StubTest.stub":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":206,"org.easymock.tests.UsageExpectAndThrowTest.longType":246,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":300,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":350,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":170,"org.easymock.tests2.SerializationTest.testClass":55,"org.easymock.tests.LimitationsTest.mockNativeMethod":221,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":203,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":294,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":290,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":328,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":351,"org.easymock.tests2.NameTest.nameForMocksControl":359,"org.easymock.tests2.MockedExceptionTest.testMockedException":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":62,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":225,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":395,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":217,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":247,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":139,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":41,"org.easymock.tests.MockingTest.testNicePartialClassMocking":216,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":142,"org.easymock.tests2.CaptureTest.testCaptureLast":128,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":326,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":107,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":54,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":119,"org.easymock.tests.MockingTest.testTwoMocks":305,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":251,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":354,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":122,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":390,"org.easymock.tests.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":339,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":298,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":82,"org.easymock.tests2.MockBuilderTest.testCreateMockString":45,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":64,"org.easymock.tests.UsageExpectAndThrowTest.floatType":245,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":59,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":136,"org.easymock.tests.UsageVerifyTest.twoThrows":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":73,"org.easymock.samples.ExampleTest.voteAgainstRemoval":86,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":9,"org.easymock.tests.LimitationsTest.privateConstructor":311,"org.easymock.tests2.UsageConstraintsTest.testNotNull":121,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":269,"org.easymock.tests2.UsageTest.defaultResetToNice":166,"org.easymock.samples.ExampleTest.voteAgainstRemovals":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":199,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":327,"org.easymock.tests.UsageVarargTest.differentLength":372,"org.easymock.tests2.CallbackTest.callback":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":27,"org.easymock.tests.UsageTest.openCallCountByLastCall":224,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":233,"org.easymock.tests.UsageCallCountTest.tooFewCalls":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":182,"org.easymock.tests.UsageThrowableTest.throwCheckedException":266,"org.easymock.tests.MockingTest.testStrictClassMocking":303,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":53,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":214,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":331,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":171,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":138,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":147,"org.easymock.tests2.NameTest.nameForNiceMock":358,"org.easymock.tests2.DependencyTest.testInterfaceMocking":0,"org.easymock.samples.ExampleTest.addDocument":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":75,"org.easymock.tests2.DelegateToTest.testStubDelegate":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.AnswerTest.stubAnswer":137,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests.UsageVarargTest.varargLongAccepted":407,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":363,"org.easymock.tests.UsageExpectAndReturnTest.floatType":190,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":202,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":32,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":89,"org.easymock.tests.UsageThrowableTest.noUpperLimit":410,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":345,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":100,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":280,"org.easymock.tests2.SerializationTest.test":172,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":274,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":297,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":189,"org.easymock.tests2.UsageConstraintsTest.testSame":105,"org.easymock.samples.SupportTest.addDocument":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":65,"org.easymock.tests.GenericTest.testPackageScope":183,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":344,"org.easymock.tests2.NameTest.nameForMock":356,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":18,"org.easymock.tests2.UsageStrictMockTest.differentMethods":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":28,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":192,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":257,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":23,"org.easymock.tests2.MockedExceptionTest.testRealException":169,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":381,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":232,"org.easymock.tests2.NameTest.nameForStrictMock":357,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":38,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":6,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":281,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":117,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":299,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":374,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":36,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":123,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":288,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":341,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":282,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":149,"org.easymock.tests2.CaptureTest.testCaptureRightOne":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":69,"org.easymock.tests2.UsageConstraintsTest.testOr":106,"org.easymock.tests.UsageRangeTest.combination":20,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":5,"org.easymock.tests.UsageTest.wrongArguments":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":66,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":16,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":19,"org.easymock.tests.UsageVarargTest.varargShortAccepted":406,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":301,"org.easymock.tests2.UsageConstraintsTest.cmpTo":110,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":165,"org.easymock.tests2.CaptureTest.testCaptureFromStub":132,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":37,"org.easymock.tests.UsageTest.unexpectedCallWithArray":383,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":399,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":198,"org.easymock.tests2.UsageConstraintsTest.constraints":101,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":362,"org.easymock.samples.ExampleTest.addAndChangeDocument":393,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":324,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":398,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":239,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":229,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":289,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":193,"org.easymock.tests.LimitationsTest.abstractClass":310,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":230,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":154,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":375}}]
