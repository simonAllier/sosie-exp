[{"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,1,2,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,0,223,224,225,226,227,228,229,230,231,232,233,234,3,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[251,252,253],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[254,255,256,257,258,259,260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[262,263,35,67,264,265],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[262,263,267,34,35,36,39,40,67,157,158,163,164,264,268,265,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[70,71,170,171,270],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[271,272,273,274,275,276,277],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[278,279,280,281,282],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[283,284,285,286,287],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[67,68,70,71,288,168,170,171,226,228],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[289,118,290,232,233,234,3,235,236,237,238,239,240,291,241,242,243,244,245],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[292,251],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[293,294,295,199],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[5,5,6,6,9,18,19,296,297,298,299,300,42,43,44,301,79,302,94,95,303,304,305,306,118,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,172,271,177,179,324,325,326,180,327,328,181,329,330,331,332,333,334,335,336,337,182,338,339,340,341,342,183,343,344,345,346,347,348,349,184,350,185,186,351,352,187,353,188,189,190,191,192,194,195,224,354,226,227,228,355,229,356,357,270,358,230,359,360,361,362,363,364,365,287,366,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result","bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[367],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.Injection:74","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[4,7,8,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,36,39,40,368,369,66,67,69,70,71,370,76,79,371,92,93,372,373,95,121,123,143,148,149,150,151,158,160,163,164,167,169,170,171,374,179,184,375,233,234,236,237,238,239,244],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"matched":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[212],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests2.UsageTest.argumentsOrdered":164,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":83,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":160,"org.easymock.tests2.StubTest.stubWithReturnValue":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":272,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":221,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":54,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":10,"org.easymock.tests2.SerializationTest.testAllMockedMethod":179,"org.easymock.tests2.DelegateToTest.testReturnException":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":81,"org.easymock.tests.MockingTest.testPartialClassMocking":42,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":265,"org.easymock.samples.SupportTest.voteForRemovals":8,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":302,"org.easymock.tests.MockClassControlTest.testToString":310,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":361,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":332,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":367,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":98,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":181,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":294,"org.easymock.tests.UsageExpectAndThrowTest.object":108,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":219,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":273,"org.easymock.tests2.DelegateToTest.testWrongClass":248,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":119,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":120,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":208,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":74,"org.easymock.tests2.UsageTest.wrongArguments":158,"org.easymock.tests.UsageStrictMockTest.range":70,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.samples.ExampleTest.answerVsDelegate":12,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":297,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":189,"org.easymock.tests2.UsageConstraintsTest.testNull":204,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":109,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":315,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":148,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":185,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":324,"org.easymock.tests.UsageTest.moreThanOneArgument":34,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":39,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":117,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":225,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":132,"org.easymock.tests2.CaptureTest.testCaptureNone":239,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":284,"org.easymock.tests.UsageUnorderedTest.message":121,"org.easymock.tests.UsageVerifyTest.twoReturns":32,"org.easymock.tests.UsageVarargTest.varargByteAccepted":27,"org.easymock.tests2.ThreadingTest.testThreadSafe":196,"org.easymock.tests.UsageTest.argumentsOrdered":40,"org.easymock.tests.UsageVarargTest.varargIntAccepted":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":338,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":93,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":18,"org.easymock.tests2.CaptureTest.testCapture_2617107":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":86,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":269,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":77,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":350,"org.easymock.tests2.UsageConstraintsTest.any":209,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":82,"org.easymock.tests.UsageExpectAndThrowTest.longType":101,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":320,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":169,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":231,"org.easymock.tests2.SerializationTest.testClass":177,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":245,"org.easymock.tests.LimitationsTest.mockNativeMethod":118,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":303,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":64,"org.easymock.tests2.AnswerTest.answer":173,"org.easymock.tests2.CaptureTest.testAnd":232,"org.easymock.tests2.UsageTest.strictResetToDefault":156,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":374,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":270,"org.easymock.tests2.MockedExceptionTest.testMockedException":366,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":144,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":38,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":266,"org.easymock.tests2.DelegateToTest.testDelegate":249,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":44,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":102,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":137,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":186,"org.easymock.tests.MockingTest.testNicePartialClassMocking":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":113,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":228,"org.easymock.tests.LimitationsTest.mockFinalMethod":307,"org.easymock.tests2.CaptureTest.testCaptureLast":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":369,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":207,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":195,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":220,"org.easymock.tests.MockingTest.testTwoMocks":300,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":368,"org.easymock.tests2.CaptureTest.testCapture1_2446744":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":106,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":163,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":0,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":286,"org.easymock.tests.UsageThrowableTest.throwError":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":259,"org.easymock.tests.UsageStrictMockTest.differentMethods":71,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":318,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":198,"org.easymock.tests2.MockBuilderTest.testCreateMockString":188,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":329,"org.easymock.tests.UsageExpectAndThrowTest.floatType":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":134,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":326,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":174,"org.easymock.tests.UsageVerifyTest.twoThrows":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":182,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":87,"org.easymock.samples.ExampleTest.voteAgainstRemoval":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":279,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":333,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":323,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":99,"org.easymock.tests2.UsageTest.niceToStrict":159,"org.easymock.tests.LimitationsTest.privateConstructor":306,"org.easymock.tests2.UsageConstraintsTest.testNotNull":222,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":287,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":129,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":184,"org.easymock.tests2.MockBuilderTest.testCreateMock":352,"org.easymock.samples.ExampleTest.voteAgainstRemovals":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":340,"org.easymock.tests2.CallbackTest.callback":154,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":356,"org.easymock.tests.UsageTest.openCallCountByLastCall":37,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":107,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":145,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":201,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":76,"org.easymock.tests.UsageCallCountTest.tooFewCalls":371,"org.easymock.tests.UsageOverloadedMethodTest.overloading":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":337,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":213,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":56,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":212,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":240,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":285,"org.easymock.tests.UsageThrowableTest.throwCheckedException":126,"org.easymock.tests.MockClassControlTest.testEquals":314,"org.easymock.tests2.EasyMockSupportClassTest.testAll":180,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":95,"org.easymock.tests.MockingTest.testStrictClassMocking":298,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":268,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":115,"org.easymock.tests2.CaptureTest.testCaptureAll":233,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":194,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":73,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":191,"org.easymock.tests2.UsageConstraintsTest.testMatches":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":193,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":133,"org.easymock.samples.ExampleTest.voteForRemovals":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":276,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":200,"org.easymock.tests.UsageVarargTest.allKinds":29,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":30,"org.easymock.tests2.DependencyTest.testInterfaceMocking":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":275,"org.easymock.samples.BasicClassMockTest.testPrintContent":19,"org.easymock.samples.ExampleTest.addDocument":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":343,"org.easymock.tests2.DelegateToTest.testStubDelegate":247,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":128,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":166,"org.easymock.tests2.AnswerTest.stubAnswer":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":85,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":68,"org.easymock.tests2.UsageConstraintsTest.greaterThan":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":327,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":359,"org.easymock.tests.UsageVarargTest.varargLongAccepted":26,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":370,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":278,"org.easymock.samples.ExampleTest.voteForRemoval":13,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":360,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":63,"org.easymock.tests.UsageExpectAndReturnTest.floatType":47,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":355,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":172,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":256,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":217,"org.easymock.tests.UsageThrowableTest.noUpperLimit":123,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":202,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":79,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":362,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":236,"org.easymock.tests2.SerializationTest.test":178,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":351,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":142,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":124,"org.easymock.tests2.UsageConstraintsTest.testSame":205,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":325,"org.easymock.samples.SupportTest.addDocument":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":80,"org.easymock.tests2.CaptureTest.testCaptureFirst":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":143,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":165,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":330,"org.easymock.tests.GenericTest.testPackageScope":94,"org.easymock.tests2.CaptureTest.testCapture2_2446744":243,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":199,"org.easymock.tests2.UsageTest.moreThanOneArgument":157,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":187,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":28,"org.easymock.tests.GenericTest.testBridgedEquals":304,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":372,"org.easymock.tests.UsageExpectAndReturnTest.longType":48,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":140,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":353,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":57,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":116,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":114,"org.easymock.tests2.UsageStrictMockTest.differentMethods":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":130,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":357,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":49,"org.easymock.tests.UsageCallCountTest.tooManyCalls":373,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":112,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":103,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":127,"org.easymock.tests.MockingTest.testNiceClassMocking":301,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":190,"org.easymock.tests.MockingTest.testClassMocking":299,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":346,"org.easymock.tests2.UsageConstraintsTest.testContains":211,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":250,"org.easymock.tests2.UsageConstraintsTest.testFind":2,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":97,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":349,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":136,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":227,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":65,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":138,"org.easymock.tests.UsageExpectAndReturnTest.object":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":363,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":319,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":218,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":229,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":347,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":260,"org.easymock.tests2.UsageStrictMockTest.range":170,"org.easymock.tests2.UsageConstraintsTest.lessThan":223,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":274,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":24,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":254,"org.easymock.tests.UsageTest.exactCallCountByLastCall":41,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":72,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":334,"org.easymock.tests2.CaptureTest.testCaptureRightOne":241,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":293,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":283,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":267,"org.easymock.tests2.UsageConstraintsTest.testOr":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":271,"org.easymock.tests.UsageRangeTest.combination":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":354,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":61,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":20,"org.easymock.tests.UsageTest.wrongArguments":36,"org.easymock.tests.MockClassControlTest.testHashCode":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":331,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":50,"org.easymock.tests2.EasyMockSupportTest.testVerify":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":335,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":321,"org.easymock.tests.UsageVarargTest.varargShortAccepted":25,"org.easymock.tests2.UsageConstraintsTest.cmpTo":210,"org.easymock.tests.UsageVarargTest.varargCharAccepted":23,"org.easymock.tests2.CaptureTest.testCaptureMultiple":290,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":282,"org.easymock.tests2.UsageTest.openCallCountByLastCall":161,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":162,"org.easymock.tests.DefaultClassInstantiatorTest.object":316,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":150,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":292,"org.easymock.tests2.CaptureTest.testCaptureFromStub":242,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":348,"org.easymock.tests.UsageTest.unexpectedCallWithArray":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":105,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":125,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":92,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":59,"org.easymock.tests2.CaptureTest.testCapture":291,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":358,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":312,"org.easymock.tests2.UsageConstraintsTest.constraints":203,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.samples.ExampleTest.addAndChangeDocument":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":104,"org.easymock.tests.CapturesMatcherTest.test":289,"org.easymock.tests.UsageStrictMockTest.testVerify":288,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":62,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":251,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":4,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":311,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":183,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":237,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":88,"org.easymock.tests.LimitationsTest.abstractClass":305,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":296,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":89,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":146}}]
