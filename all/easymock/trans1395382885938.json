[{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5,0,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[7,8,9,10,11],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[13,4,14,15,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[19,20,21,22],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[25,26,27,28,29,30,31,32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[34,35,36,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","value":"delegateTo","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,8,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[86,87,88,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[90,91,92,93,94,95,96,97,34,98,99,100,101,102,103,104,105,43,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,48,49,122,50,51,52,53,54,55,123,124,12,125,126,127,128,129,130,131,132,133,134,135,8,9,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,56,57,151,152,60,61,63,68,73,153,154,155,35,78,156,157,158,159,160,161,10,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,81,17,178,179,180,3,181,182,183,184,1,185,186,187,188,189,190,191,192,193,194,195,196,197,198,14,199,200,201,202,203,204,205,206,207,208,209,210,20,21,22,36,37,38,211,212,24,213,214,83,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,11,253,254,255,256,257,258],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"shouldFillInStackTrace"}},{"transplant":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[259,260,261],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[262],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":17,"org.easymock.tests2.UsageTest.argumentsOrdered":221,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":42,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":218,"org.easymock.tests2.StubTest.stubWithReturnValue":85,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":192,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":93,"org.easymock.tests2.SerializationTest.testAllMockedMethod":22,"org.easymock.tests2.DelegateToTest.testReturnException":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":40,"org.easymock.tests.MockingTest.testPartialClassMocking":123,"org.easymock.samples.SupportTest.voteForRemovals":96,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":70,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":19,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":58,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":0,"org.easymock.tests.UsageExpectAndThrowTest.object":68,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":210,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":189,"org.easymock.tests2.DelegateToTest.testWrongClass":37,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":153,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":154,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":181,"org.easymock.tests2.UsageTest.wrongArguments":216,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":149,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.samples.ExampleTest.answerVsDelegate":34,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":237,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":23,"org.easymock.tests2.UsageConstraintsTest.testNull":179,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":69,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":24,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":174,"org.easymock.tests2.CaptureTest.testPrimitive":200,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":77,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":118,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":229,"org.easymock.tests2.CaptureTest.testCaptureNone":205,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":28,"org.easymock.tests.UsageUnorderedTest.message":112,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests.UsageVarargTest.varargByteAccepted":144,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":86,"org.easymock.tests.UsageTest.argumentsOrdered":119,"org.easymock.tests.UsageVarargTest.varargIntAccepted":138,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":109,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":91,"org.easymock.tests2.CaptureTest.testCapture_2617107":199,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":31,"org.easymock.tests2.UsageConstraintsTest.any":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":134,"org.easymock.tests.UsageExpectAndThrowTest.longType":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":32,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":41,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":252,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests2.SerializationTest.testClass":20,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":197,"org.easymock.tests.LimitationsTest.mockNativeMethod":105,"org.easymock.tests2.AnswerTest.answer":224,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":182,"org.easymock.tests2.CaptureTest.testAnd":198,"org.easymock.tests2.UsageTest.strictResetToDefault":215,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":254,"org.easymock.tests2.NameTest.nameForMocksControl":248,"org.easymock.tests2.MockedExceptionTest.testMockedException":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":169,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":47,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":88,"org.easymock.tests2.DelegateToTest.testDelegate":38,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":62,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":12,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":227,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":213,"org.easymock.tests.MockingTest.testNicePartialClassMocking":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":73,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":232,"org.easymock.tests2.CaptureTest.testCaptureLast":204,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":43,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":243,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":190,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":152,"org.easymock.tests2.CaptureTest.testCapture1_2446744":201,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":66,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":220,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":261,"org.easymock.tests.UsageThrowableTest.throwError":49,"org.easymock.tests.UsageStrictMockTest.differentMethods":162,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":147,"org.easymock.tests.UsageExpectAndThrowTest.floatType":60,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":186,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":225,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":257,"org.easymock.samples.PartialClassMockTest.testGetArea":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":131,"org.easymock.samples.ExampleTest.voteAgainstRemoval":99,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":30,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":235,"org.easymock.tests2.UsageTest.niceToStrict":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":59,"org.easymock.tests2.ThreadingTest.testChangeDefault":259,"org.easymock.tests2.UsageConstraintsTest.testNotNull":193,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":79,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":55,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":212,"org.easymock.tests2.UsageTest.defaultResetToNice":219,"org.easymock.samples.ExampleTest.voteAgainstRemovals":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":129,"org.easymock.tests.UsageVarargTest.differentLength":141,"org.easymock.tests2.CallbackTest.callback":244,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":67,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":170,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":56,"org.easymock.tests.UsageCallCountTest.tooFewCalls":107,"org.easymock.tests.UsageOverloadedMethodTest.overloading":116,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":78,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":185,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":240,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":115,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":206,"org.easymock.tests.UsageThrowableTest.throwCheckedException":52,"org.easymock.tests2.EasyMockSupportClassTest.testAll":255,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":104,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":75,"org.easymock.tests2.CaptureTest.testCaptureAll":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":242,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":48,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":241,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":226,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":113,"org.easymock.samples.ExampleTest.voteForRemovals":101,"org.easymock.tests2.NameTest.nameForNiceMock":247,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":196,"org.easymock.tests.UsageVarargTest.allKinds":146,"org.easymock.tests2.DependencyTest.testInterfaceMocking":209,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":135,"org.easymock.samples.BasicClassMockTest.testPrintContent":92,"org.easymock.samples.ExampleTest.addDocument":100,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":54,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":249,"org.easymock.tests2.AnswerTest.stubAnswer":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":44,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":160,"org.easymock.tests2.UsageConstraintsTest.greaterThan":187,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":236,"org.easymock.tests.UsageVarargTest.varargLongAccepted":143,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":29,"org.easymock.samples.ExampleTest.voteForRemoval":98,"org.easymock.tests.UsageExpectAndReturnTest.floatType":125,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":223,"org.easymock.tests.UsageThrowableTest.noUpperLimit":122,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":114,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":202,"org.easymock.tests2.SerializationTest.test":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":167,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":50,"org.easymock.tests2.UsageConstraintsTest.testSame":180,"org.easymock.samples.SupportTest.addDocument":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":39,"org.easymock.tests2.CaptureTest.testCaptureFirst":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":5,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":168,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":222,"org.easymock.tests.GenericTest.testPackageScope":103,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":195,"org.easymock.tests2.CaptureTest.testCapture2_2446744":16,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":87,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":214,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":145,"org.easymock.tests2.NameTest.nameForMock":245,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":110,"org.easymock.tests.UsageExpectAndReturnTest.longType":126,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":165,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":76,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":191,"org.easymock.tests2.UsageStrictMockTest.differentMethods":253,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":74,"org.easymock.tests.UsageCallCountTest.tooManyCalls":111,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":72,"org.easymock.tests2.MockedExceptionTest.testRealException":82,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":251,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":63,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":238,"org.easymock.tests2.NameTest.nameForStrictMock":246,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":81,"org.easymock.tests2.UsageConstraintsTest.testFind":178,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":45,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":231,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":157,"org.easymock.tests.UsageExpectAndReturnTest.object":128,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":188,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":233,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":211,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":173,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":140,"org.easymock.tests.UsageTest.exactCallCountByLastCall":120,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":166,"org.easymock.tests2.CaptureTest.testCaptureRightOne":207,"org.easymock.tests2.UsageConstraintsTest.testOr":18,"org.easymock.tests.UsageRangeTest.combination":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":228,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":136,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":35,"org.easymock.tests.UsageTest.wrongArguments":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":127,"org.easymock.tests2.EasyMockSupportTest.testVerify":177,"org.easymock.tests.UsageVarargTest.varargShortAccepted":142,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":155,"org.easymock.tests2.UsageConstraintsTest.cmpTo":184,"org.easymock.tests.UsageVarargTest.varargCharAccepted":139,"org.easymock.tests2.CaptureTest.testCaptureMultiple":4,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":33,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":84,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":176,"org.easymock.tests2.CaptureTest.testCaptureFromStub":15,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":51,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":159,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":108,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":262,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":234,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":161,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":64,"org.easymock.samples.ExampleTest.addAndChangeDocument":102,"org.easymock.tests.CapturesMatcherTest.test":13,"org.easymock.tests.UsageStrictMockTest.testVerify":164,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":258,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":158,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":133,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":7,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":171}}]
