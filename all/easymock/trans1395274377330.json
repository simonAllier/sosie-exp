[{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[199,200,201,202,95,130,203,131,204,205,206,207,135,136,208,209,210,196],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[201,202,109,113,211,130,203,212,213,214,205,215,216,217,218,219,220,221,222,135,223,224,225,226,227,228,229,230,231,136,232,233,234,235,236,137,237,238,239,240,196],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[8,241,242,243,42,244,43,46,47,116,117,122,123,245,246,247,248],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[249,250,251,252,253,203,214],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[254,255,107,110,138,140,256,141,257],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[1,6,9,11,12,21,22,23,24,25,26,29,30,32,33,34,36,37,38,39,40,258,49,50,51,52,53,259,260,55,56,57,60,61,84,261,85,86,262,263,264,265,90,92,93,94,95,96,98,99,101,103,104,107,108,109,110,111,112,113,128,130,266,131,132,133,134,220,135,136,137,138,267,139,140,256,141,257,268,209,269,149],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[254],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[5,8,11,270,244,43,46,47,88,89,103,117,122,123],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[24,30,37,38,53,263],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[271,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[0,306,307,308,309,310,311,312,313,314,315,316,317,318,199,319,320,200,254,321,1,2,322,3,4,5,295,296,297,298,299,323,300,301,302,303,304,305,324,325,6,326,7,327,8,9,10,11,12,13,328,14,329,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,330,331,332,333,258,334,41,42,244,43,44,45,46,47,48,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,49,50,51,52,53,363,364,365,366,367,368,369,370,371,372,54,373,374,375,376,377,378,379,380,381,382,383,384,385,386,259,387,388,389,390,391,392,393,260,394,395,396,55,56,397,57,398,399,400,401,402,403,404,405,406,407,58,59,408,409,410,411,412,413,414,415,416,417,60,61,418,419,420,421,422,423,424,425,255,426,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,261,85,86,87,88,89,427,428,429,430,431,432,433,434,435,436,437,438,439,262,263,264,265,440,90,91,92,93,441,94,442,443,201,202,95,444,445,446,447,448,96,449,450,451,452,453,97,454,455,456,457,458,459,460,461,98,99,100,462,101,102,103,104,105,463,106,464,465,466,467,468,469,470,107,108,109,110,471,111,112,113,211,114,115,116,117,118,119,120,121,472,122,123,473,124,474,475,125,476,126,477,127,128,129,130,203,478,479,480,481,482,483,484,212,266,485,213,486,131,271,132,214,133,204,205,206,134,216,207,217,218,219,220,221,222,135,223,224,225,226,227,228,229,230,231,136,232,233,234,235,236,137,237,238,138,267,139,140,256,141,272,487,257,208,488,489,268,209,269,490,210,142,491,492,143,144,145,146,493,147,494,148,149,150,495,151,152,153,154,155,156,157,158,496,497,159,160,498,499,500,161,501,162,163,164,165,502,503,166,504,167,168,505,506,507,508,509,510,511,169,512,513,514,515,516,517,518,519,520,521,170,171,172,173,522,174,175,176,177,178,179,523,180,181,182,183,184,185,186,187,188,189,190,191,524,192,193,194,195,196,197,525,198],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[152,154,160,172,173,175,177,178,523,189,193],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[155],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:105","failures":[0,306,307,308,309,310,311,312,313,314,315,316,317,318,1,2,322,3,4,5,295,296,297,298,299,323,300,301,302,303,304,305,7,327,8,9,10,11,12,13,328,14,329,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,330,331,332,333,258,334,41,42,244,43,44,45,46,47,48,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,49,50,51,52,53,363,364,365,366,367,368,369,370,371,372,54,373,374,375,376,377,378,379,380,381,382,383,384,385,386,259,387,388,389,390,391,392,393,260,397,398,399,401,402,403,404,405,406,407,58,59,408,409,413,414,416,417,60,61,418,426,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,261,85,86,87,88,89,427,428,429,430,262,263,264,265,440,90,91,92,93,441,94,442,443,444,445,448,96,449,450,451,452,453,97,454,455,456,457,458,459,98,99,100,462,101,102,103,104,105,463,106,469,470,111,114,115,116,117,118,119,120,121,472,122,123,473,124,474,475,125,476,126,477,127,128,129,479,480,481,482,483,139,142,491,492,143,144,145,146,493,147,494,148,149,150,495,151,152,153,154,155,156,157,158,496,497,159,160,498,499,500,161,501,162,163,164,165,502,503,166,504,167,168,505,506,507,508,509,510,511,169,512,513,514,515,516,517,518,519,520,521,170,171,172,173,522,174,175,176,177,178,179,523,180,181,182,183,184,185,186,187,188,189,190,191,524,192,193,194,195,197,198],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[11,526,88,89,103],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[183],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[321,393,415,421,422,423,464,109,112,132],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[308,309,360,361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[308,309,360,361],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[201,202,95,207,135,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[249,250,251,252,253,203,214],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[199,319,320,254,324,325,6,326,362,394,395,396,55,56,57,400,419,420,421,422,423,424,425,255,432,433,434,435,436,437,439,201,202,95,446,447,464,468,107,108,109,110,112,113,474,475,125,217,220,222,223,224,227,230,232,233,236,138,267,140,256,141,272,257,488,489,268,209,269,490,210,525],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[319,320,200,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[199],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[127],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[0,306,312,313,314,315,316,317,318,319,320,1,2,322,3,4,5,6,7,327,8,9,10,11,12,13,14,329,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,244,43,44,45,46,47,48,362,49,50,51,52,53,363,364,365,366,367,368,370,371,373,374,375,376,378,379,380,381,382,383,384,385,55,56,57,401,402,403,404,405,406,60,61,426,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,427,428,429,430,262,263,264,265,440,90,91,92,93,441,94,443,201,202,95,444,445,446,447,448,96,97,98,99,100,462,101,102,103,104,105,463,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,472,122,123,473,124,474,475,125,476,126,477,128,129,130,484,266,131,271,132,133,206,134,207,220,135,136,137,138,267,139,140,256,141,272,257,489,268,209,269,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,496,497,159,160,498,499,500,161,501,162,163,164,165,502,503,166,504,167,168,505,169,518,519,520,521,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,524,192,193,194,195,196,197,525,198],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[527,528],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[9,12,13,332,42,54,68,72,73,75,78,87,88,89,101,104,105,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[529,196,197,525],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[152,153,154,155,160,498,172,173,174,175,176,177,178,179,523,180,189,190,193,194],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[336,343,347,352,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[480],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[530,184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":173,"org.easymock.tests2.UsageTest.argumentsOrdered":123,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":41,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":345,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":119,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":444,"org.easymock.tests2.DelegateToTest.testReturnException":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":402,"org.easymock.tests.MockingTest.testPartialClassMocking":55,"org.easymock.tests.MockClassControlTest.testToString":421,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":479,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":226,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":64,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":99,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":249,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":179,"org.easymock.tests2.UsageTest.wrongArguments":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":1,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":517,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":429,"org.easymock.samples.ExampleTest.answerVsDelegate":91,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":415,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":399,"org.easymock.tests2.UsageConstraintsTest.testNull":175,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":140,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":504,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":255,"org.easymock.tests2.CaptureTest.testPrimitive":155,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":4,"org.easymock.tests.UsageTest.moreThanOneArgument":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":83,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":264,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":407,"org.easymock.tests.UsageTest.argumentsOrdered":47,"org.easymock.tests.UsageVarargTest.varargIntAccepted":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":49,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":484,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":253,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":458,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":53,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":278,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":169,"org.easymock.tests.ReplayStateInvalidUsageTest.times":302,"org.easymock.tests2.DependencyTest.testClassMocking":460,"org.easymock.tests2.AnswerTest.answer":142,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":523,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":521,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":412,"org.easymock.tests2.CaptureTest.testAnd":152,"org.easymock.tests2.UsageTest.strictResetToDefault":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":489,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":164,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":85,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":409,"org.easymock.tests2.DelegateToTest.testDelegate":151,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":277,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":79,"org.easymock.tests.LimitationsTest.mockFinalMethod":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":405,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":367,"org.easymock.tests2.DependencyTest.testClassMockingSupport":461,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":330,"org.easymock.tests2.CaptureTest.testCapture1_2446744":156,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":519,"org.easymock.tests.UsageThrowableTest.throwError":14,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":297,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":414,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":459,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":440,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":238,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":281,"org.easymock.samples.PartialClassMockTest.testGetArea":95,"org.easymock.tests.MockingTest.testInterfaceMocking":397,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":50,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":259,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":393,"org.easymock.tests2.UsageTest.niceToStrict":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":131,"org.easymock.tests2.MockBuilderTest.testCreateMock":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":234,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":514,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":73,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":245,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":165,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":411,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":309,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":427,"org.easymock.tests.UsageOverloadedMethodTest.overloading":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":236,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":184,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":371,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":426,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":32,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":183,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":159,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":377,"org.easymock.tests.MockClassControlTest.testEquals":425,"org.easymock.tests2.EasyMockSupportClassTest.testAll":220,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":320,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":81,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":520,"org.easymock.tests2.CaptureTest.testCaptureAll":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":365,"org.easymock.tests.MockNameTest.defaultName":418,"org.easymock.tests2.UsageConstraintsTest.testMatches":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":265,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":295,"org.easymock.samples.ExampleTest.voteForRemovals":94,"org.easymock.tests.UsageVarargTest.allKinds":385,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":87,"org.easymock.samples.BasicClassMockTest.testPrintContent":447,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":366,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":19,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":100,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":495,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":406,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":438,"org.easymock.tests2.UsageConstraintsTest.greaterThan":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":261,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":269,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":282,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":439,"org.easymock.samples.ExampleTest.voteForRemoval":92,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":490,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":477,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":416,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":272,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":274,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":362,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":162,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":401,"org.easymock.tests2.CaptureTest.testCaptureFirst":500,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":163,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":124,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":28,"org.easymock.tests2.CaptureTest.testCapture2_2446744":499,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":128,"org.easymock.tests2.UsageTest.moreThanOneArgument":116,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":353,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":384,"org.easymock.tests.GenericTest.testBridgedEquals":254,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":317,"org.easymock.tests.UsageExpectAndReturnTest.longType":24,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":363,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":82,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":524,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":360,"org.easymock.tests.UsageCallCountTest.tooManyCalls":318,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":516,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":69,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":18,"org.easymock.tests.MockingTest.testNiceClassMocking":400,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":108,"org.easymock.tests.MockingTest.testClassMocking":395,"org.easymock.tests2.UsageConstraintsTest.testContains":182,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":311,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":125,"org.easymock.tests2.UsageConstraintsTest.testFind":174,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":63,"org.easymock.tests.MockTypeTest.fromEasyMockClass":413,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":147,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":7,"org.easymock.tests.UsageExpectAndReturnTest.object":31,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":257,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":515,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":250,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":379,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":391,"org.easymock.tests.UsageTest.exactCallCountByLastCall":48,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":58,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":333,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":203,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":37,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":374,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":450,"org.easymock.tests.MockClassControlTest.testHashCode":424,"org.easymock.tests2.EasyMockSupportTest.testVerify":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":229,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":59,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":518,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":506,"org.easymock.tests.UsageVarargTest.varargCharAccepted":378,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":431,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":358,"org.easymock.tests2.UsageTest.openCallCountByLastCall":120,"org.easymock.tests.DefaultClassInstantiatorTest.object":432,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":168,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":307,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":389,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":230,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":510,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":449,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":423,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":268,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":70,"org.easymock.tests.CapturesMatcherTest.test":527,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":38,"org.easymock.tests.ReplayStateInvalidCallsTest.times":286,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":359,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":287,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":137,"org.easymock.tests2.UsageTest.resumeIfFailure":473,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":410,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":404,"org.easymock.tests2.StubTest.stubWithReturnValue":106,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":214,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":30,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":192,"org.easymock.tests2.SerializationTest.testAllMockedMethod":525,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":351,"org.easymock.samples.SupportTest.voteForRemovals":96,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":247,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":452,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":76,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":529,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":357,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":491,"org.easymock.tests.UsageExpectAndThrowTest.object":74,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":334,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":190,"org.easymock.tests2.DelegateToTest.testWrongClass":150,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":60,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":284,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":61,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.samples.ConstructorCalledMockTest.testTax":201,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":469,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":503,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":107,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":75,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":132,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":217,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":428,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":241,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":276,"org.easymock.tests2.CaptureTest.testCaptureNone":497,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":387,"org.easymock.tests.UsageUnorderedTest.message":5,"org.easymock.tests.UsageVerifyTest.twoReturns":89,"org.easymock.tests.UsageVarargTest.varargByteAccepted":383,"org.easymock.tests2.ThreadingTest.testThreadSafe":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":232,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":315,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":446,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":392,"org.easymock.tests2.CaptureTest.testCapture_2617107":154,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":248,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":355,"org.easymock.tests2.UsageConstraintsTest.any":180,"org.easymock.tests2.StubTest.stub":463,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":403,"org.easymock.tests.UsageExpectAndThrowTest.longType":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":356,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":436,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":300,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":102,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":97,"org.easymock.tests2.SerializationTest.testClass":196,"org.easymock.tests.LimitationsTest.mockNativeMethod":6,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":40,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":509,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":292,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":105,"org.easymock.tests2.NameTest.nameForMocksControl":483,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":511,"org.easymock.tests2.MockedExceptionTest.testMockedException":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":222,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":45,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":493,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":57,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":68,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":138,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":133,"org.easymock.tests.MockingTest.testNicePartialClassMocking":56,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":141,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":507,"org.easymock.tests2.CaptureTest.testCaptureLast":496,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":331,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":178,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":113,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":291,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":191,"org.easymock.tests.MockingTest.testTwoMocks":396,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":288,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":211,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":72,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":122,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":194,"org.easymock.samples.ExampleTest.removeNonExistingDocument":442,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":513,"org.easymock.tests.UsageStrictMockTest.differentMethods":12,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":299,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":451,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":434,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":127,"org.easymock.tests2.MockBuilderTest.testCreateMockString":207,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":419,"org.easymock.tests.UsageExpectAndThrowTest.floatType":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":223,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":219,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":143,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":478,"org.easymock.tests.UsageVerifyTest.twoThrows":88,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":136,"org.easymock.samples.ExampleTest.voteAgainstRemoval":93,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":346,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":209,"org.easymock.tests.LimitationsTest.privateConstructor":325,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":240,"org.easymock.tests2.UsageConstraintsTest.testNotNull":193,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":474,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":20,"org.easymock.tests2.UsageTest.defaultResetToNice":472,"org.easymock.samples.ExampleTest.voteAgainstRemovals":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":508,"org.easymock.tests.UsageVarargTest.differentLength":380,"org.easymock.tests2.CallbackTest.callback":198,"org.easymock.tests2.UsageConstraintsTest.equals":522,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":208,"org.easymock.tests.UsageTest.openCallCountByLastCall":44,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":322,"org.easymock.tests.UsageCallCountTest.tooFewCalls":313,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":110,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":430,"org.easymock.tests.UsageThrowableTest.throwCheckedException":17,"org.easymock.tests.MockingTest.testStrictClassMocking":394,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":242,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":112,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":512,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":109,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":303,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":111,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":145,"org.easymock.tests2.CompareToTest.testGreateOrEqual":530,"org.easymock.tests.ObjectMethodsTest.testHashCode":390,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":252,"org.easymock.tests2.NameTest.nameForNiceMock":482,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":129,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":290,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":285,"org.easymock.tests2.DependencyTest.testInterfaceMocking":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":251,"org.easymock.samples.ExampleTest.addDocument":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":233,"org.easymock.tests2.DelegateToTest.testStubDelegate":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":237,"org.easymock.tests2.AnswerTest.stubAnswer":144,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":9,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":204,"org.easymock.tests.UsageVarargTest.varargLongAccepted":382,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":344,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":39,"org.easymock.tests.UsageExpectAndReturnTest.floatType":23,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":130,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":202,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":457,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":188,"org.easymock.tests.UsageThrowableTest.noUpperLimit":329,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":171,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":464,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":157,"org.easymock.tests2.SerializationTest.test":197,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":433,"org.easymock.tests2.UsageConstraintsTest.testSame":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":22,"org.easymock.samples.SupportTest.addDocument":448,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":471,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":275,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":224,"org.easymock.tests.GenericTest.testPackageScope":319,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":456,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":398,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":273,"org.easymock.tests2.NameTest.nameForMock":480,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":33,"org.easymock.tests2.UsageStrictMockTest.differentMethods":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":216,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":488,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":25,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":78,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":388,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":86,"org.easymock.tests2.MockedExceptionTest.testRealException":476,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":348,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":2,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":305,"org.easymock.tests2.NameTest.nameForStrictMock":481,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":486,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":146,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":256,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":468,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":435,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":189,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":266,"org.easymock.tests2.UsageStrictMockTest.range":103,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":279,"org.easymock.tests2.UsageConstraintsTest.lessThan":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":453,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":343,"org.easymock.tests2.CaptureTest.testCaptureRightOne":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":228,"org.easymock.tests2.UsageConstraintsTest.testOr":177,"org.easymock.tests.UsageRangeTest.combination":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":267,"org.easymock.tests.UsageTest.wrongArguments":43,"org.easymock.tests2.MockBuilderTest.testWithConstructor":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":225,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":26,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":336,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":437,"org.easymock.tests.UsageVarargTest.varargShortAccepted":381,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":316,"org.easymock.tests2.UsageConstraintsTest.cmpTo":181,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":293,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":492,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":338,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":121,"org.easymock.tests2.CaptureTest.testCaptureFromStub":498,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":296,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":485,"org.easymock.tests.UsageTest.unexpectedCallWithArray":244,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":289,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":314,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":215,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":35,"org.easymock.tests2.CaptureTest.testCapture":528,"org.easymock.tests2.UsageConstraintsTest.constraints":172,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":10,"org.easymock.samples.ExampleTest.addAndChangeDocument":443,"org.easymock.tests.UsageStrictMockTest.testVerify":328,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":445,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":364,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":51,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":27,"org.easymock.tests.LimitationsTest.abstractClass":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":52,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":54,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":526,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":502,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":375}}]
