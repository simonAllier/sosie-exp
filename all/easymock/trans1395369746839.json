[{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[2,3,4],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[14,15,16,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[0,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,12,70,71,18,19,20,72,73,21,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,30,31,32,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,33,183,184,185,186,187,188,189,190,191,192,193,194,195,196,38,40,197,198],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[43,199,130,133,200,201,202,203,204,205],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[82,88,117,206,124],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[207,208,0,1,209,210,41,42,211,43,44,212,45,213,46,47,48,49,50,51,52,53,54,55,56,57,214,58,59,215,60,61,62,63,64,65,216,66,217,67,68,69,12,70,218,71,219,220,221,222,18,223,19,20,224,72,73,21,225,74,226,75,76,77,227,228,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,229,102,103,104,105,230,231,106,107,108,109,110,111,112,113,114,115,116,117,118,206,119,120,232,233,121,122,123,124,234,125,126,235,236,237,238,127,128,129,130,131,132,133,134,239,240,135,241,14,136,242,243,244,137,245,246,138,139,247,140,141,248,142,249,250,251,252,253,254,255,256,257,258,143,259,260,261,262,263,264,265,266,267,268,145,146,147,148,149,269,150,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,152,291,153,154,155,156,157,158,159,160,161,292,293,294,30,295,31,32,296,297,297,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,33,298,299,183,184,300,301,185,34,186,188,189,190,191,302,17,192,193,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,194,195,196,38,39,40,197,198,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[6,7,8,329,9,10,11,330,331,332],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[333,334],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[155,156,39],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[335,336,337,210,338,41,339,42,211,43,44,212,45,340,213,58,215,60,61,63,64,65,216,66,217,67,68,69,12,106,107,108,109,128,129,130,131,133,134,135,242,242,243,243,137,250,251,341,269,150,270,151,342,159,160,161,193,343,205],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[344,345,346],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[347,348,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[351],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[352,353,354,355],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[210,48,52,55,61,62,68,69,222,18,223,19,20,224,72,21,225,226,227,228,83,97,22,23,24,344,345,25,356,26,357,27,358,112,359,266,267,360,144,268,28,29,293,294,30,31,32,296,361,33,298,299,183,300,301,34,362,346,35,363,36,364,37,38,39,40,324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[215,60,61,63,64,65,66,365,217,69,366,367,199,368,369,106,370,371,372,373,374,375,376,377,128,131,240,135,250,251,378,341,200,201,202,379,380,381,269,150,270,382,383,384,342,385,386,387,388,389,390,391,392,393,394,193,395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":83,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":182,"org.easymock.tests2.UsageTest.argumentsOrdered":228,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":56,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":226,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":244,"org.easymock.tests2.DelegateToTest.testReturnException":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":304,"org.easymock.tests.MockingTest.testPartialClassMocking":159,"org.easymock.tests.MockClassControlTest.testToString":200,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":350,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":271,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":6,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":190,"org.easymock.tests2.UsageTest.wrongArguments":225,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":311,"org.easymock.samples.ExampleTest.answerVsDelegate":247,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":205,"org.easymock.tests2.UsageConstraintsTest.testNull":85,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":63,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":55,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":381,"org.easymock.tests2.CaptureTest.testPrimitive":119,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":192,"org.easymock.tests.UsageTest.moreThanOneArgument":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":290,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":262,"org.easymock.tests.UsageTest.argumentsOrdered":301,"org.easymock.tests.UsageVarargTest.varargIntAccepted":320,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":10,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":210,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":149,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":345,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests2.AnswerTest.answer":207,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":238,"org.easymock.tests2.CaptureTest.testAnd":117,"org.easymock.tests2.UsageTest.strictResetToDefault":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":261,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":50,"org.easymock.tests2.DelegateToTest.testDelegate":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":286,"org.easymock.tests.LimitationsTest.mockFinalMethod":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":317,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":28,"org.easymock.tests2.CaptureTest.testCapture1_2446744":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":236,"org.easymock.tests.UsageThrowableTest.throwError":152,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":264,"org.easymock.samples.PartialClassMockTest.testGetArea":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":146,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":348,"org.easymock.tests2.UsageTest.niceToStrict":74,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":373,"org.easymock.tests2.ThreadingTest.testChangeDefault":334,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":42,"org.easymock.tests2.MockBuilderTest.testCreateMock":212,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":23,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":280,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":51,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":309,"org.easymock.tests.UsageOverloadedMethodTest.overloading":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":377,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":94,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":173,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":194,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":93,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":123,"org.easymock.tests2.EasyMockSupportClassTest.testAll":106,"org.easymock.tests.MockClassControlTest.testEquals":380,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":288,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":356,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":335,"org.easymock.tests2.CaptureTest.testCaptureAll":118,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":315,"org.easymock.tests2.UsageConstraintsTest.testMatches":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":263,"org.easymock.samples.ExampleTest.voteForRemovals":142,"org.easymock.tests.UsageVarargTest.allKinds":328,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":38,"org.easymock.samples.BasicClassMockTest.testPrintContent":251,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":316,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":157,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":308,"org.easymock.tests2.UsageConstraintsTest.greaterThan":97,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":11,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":187,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":69,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":392,"org.easymock.samples.ExampleTest.voteForRemoval":140,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":113,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":366,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":216,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":48,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":303,"org.easymock.tests2.CaptureTest.testCaptureFirst":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":49,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":79,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":169,"org.easymock.tests2.CaptureTest.testCapture2_2446744":125,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":115,"org.easymock.tests2.UsageTest.moreThanOneArgument":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":45,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":327,"org.easymock.tests.GenericTest.testBridgedEquals":382,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":257,"org.easymock.tests.UsageExpectAndReturnTest.longType":165,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":289,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":340,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":229,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":354,"org.easymock.tests.UsageCallCountTest.tooManyCalls":258,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":346,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":156,"org.easymock.tests.MockingTest.testNiceClassMocking":385,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":129,"org.easymock.tests.MockingTest.testClassMocking":384,"org.easymock.tests2.UsageConstraintsTest.testContains":92,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":338,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":135,"org.easymock.tests2.UsageConstraintsTest.testFind":84,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":196,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":231,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests.UsageExpectAndReturnTest.object":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":7,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":322,"org.easymock.tests.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":143,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":364,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":332,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":178,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":318,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":266,"org.easymock.tests.MockClassControlTest.testHashCode":379,"org.easymock.tests2.EasyMockSupportTest.testVerify":214,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":265,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":235,"org.easymock.tests.UsageVarargTest.varargCharAccepted":321,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":222,"org.easymock.tests2.UsageTest.openCallCountByLastCall":75,"org.easymock.tests.DefaultClassInstantiatorTest.object":386,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":57,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":37,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":374,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":154,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":67,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":277,"org.easymock.tests.CapturesMatcherTest.test":297,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":109,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":25,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":201,"org.easymock.tests2.UsageTest.resumeIfFailure":78,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":306,"org.easymock.tests2.StubTest.stubWithReturnValue":136,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":330,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":171,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":102,"org.easymock.tests2.SerializationTest.testAllMockedMethod":215,"org.easymock.samples.SupportTest.voteForRemovals":138,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":357,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":283,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":16,"org.easymock.tests.UsageExpectAndThrowTest.object":281,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":100,"org.easymock.tests2.DelegateToTest.testWrongClass":219,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":197,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":198,"org.easymock.tests.UsageStrictMockTest.range":31,"org.easymock.samples.ConstructorCalledMockTest.testTax":242,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":282,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":43,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":310,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":362,"org.easymock.tests2.CaptureTest.testCaptureNone":122,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":349,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":3,"org.easymock.tests.UsageUnorderedTest.message":34,"org.easymock.tests.UsageVerifyTest.twoReturns":40,"org.easymock.tests.UsageVarargTest.varargByteAccepted":326,"org.easymock.tests2.ThreadingTest.testThreadSafe":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":375,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":255,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":250,"org.easymock.tests2.CaptureTest.testCapture_2617107":206,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":358,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":17,"org.easymock.tests2.UsageConstraintsTest.any":90,"org.easymock.tests2.StubTest.stub":14,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":355,"org.easymock.tests.UsageExpectAndThrowTest.longType":274,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":305,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":390,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":13,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":223,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":70,"org.easymock.tests.LimitationsTest.mockNativeMethod":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":181,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":151,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":337,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":224,"org.easymock.tests2.MockedExceptionTest.testMockedException":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":370,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":184,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":275,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":44,"org.easymock.tests.MockingTest.testNicePartialClassMocking":160,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":65,"org.easymock.tests2.CaptureTest.testCaptureLast":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":5,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":29,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":134,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":88,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":101,"org.easymock.tests.MockingTest.testTwoMocks":342,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":279,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":227,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":104,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":333,"org.easymock.tests.UsageStrictMockTest.differentMethods":32,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":388,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":4,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":114,"org.easymock.tests2.ConstraintsToStringTest.andToString":26,"org.easymock.tests2.MockBuilderTest.testCreateMockString":213,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":378,"org.easymock.tests.UsageExpectAndThrowTest.floatType":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":371,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":96,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":208,"org.easymock.tests.UsageVerifyTest.twoThrows":39,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":108,"org.easymock.samples.ExampleTest.voteAgainstRemoval":141,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":347,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":68,"org.easymock.tests.LimitationsTest.privateConstructor":394,"org.easymock.tests2.UsageConstraintsTest.testNotNull":103,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":239,"org.easymock.tests2.UsageTest.defaultResetToNice":77,"org.easymock.samples.ExampleTest.voteAgainstRemovals":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":177,"org.easymock.tests.UsageVarargTest.differentLength":323,"org.easymock.tests2.CallbackTest.callback":209,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":363,"org.easymock.tests.UsageTest.openCallCountByLastCall":183,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":302,"org.easymock.tests.UsageCallCountTest.tooFewCalls":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":312,"org.easymock.tests.UsageThrowableTest.throwCheckedException":155,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":35,"org.easymock.tests.MockingTest.testStrictClassMocking":383,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":259,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":130,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":132,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":1,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":9,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":116,"org.easymock.tests2.DependencyTest.testInterfaceMocking":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":8,"org.easymock.samples.ExampleTest.addDocument":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":376,"org.easymock.tests2.DelegateToTest.testStubDelegate":71,"org.easymock.tests2.AnswerTest.stubAnswer":0,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":30,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":351,"org.easymock.tests.UsageVarargTest.varargLongAccepted":325,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":180,"org.easymock.tests.UsageExpectAndReturnTest.floatType":164,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.tests2.ConstraintsToStringTest.orToString":22,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":243,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":98,"org.easymock.tests.UsageThrowableTest.noUpperLimit":291,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":81,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":199,"org.easymock.tests2.SerializationTest.test":59,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":232,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":163,"org.easymock.tests2.UsageConstraintsTest.testSame":86,"org.easymock.samples.SupportTest.addDocument":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":372,"org.easymock.tests.GenericTest.testPackageScope":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":174,"org.easymock.tests2.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":365,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":166,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":285,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":189,"org.easymock.tests2.MockedExceptionTest.testRealException":241,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":331,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":191,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":368,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":389,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":41,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.UsageConstraintsTest.lessThan":105,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":47,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":329,"org.easymock.tests2.CaptureTest.testCaptureRightOne":124,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":2,"org.easymock.tests2.UsageConstraintsTest.testOr":87,"org.easymock.tests.UsageRangeTest.combination":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":61,"org.easymock.tests.UsageTest.wrongArguments":299,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":341,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":175,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":391,"org.easymock.tests.UsageVarargTest.varargShortAccepted":324,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":256,"org.easymock.tests2.UsageConstraintsTest.cmpTo":91,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":76,"org.easymock.tests2.CaptureTest.testCaptureFromStub":234,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":339,"org.easymock.tests.UsageTest.unexpectedCallWithArray":298,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":176,"org.easymock.tests2.UsageConstraintsTest.constraints":82,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.samples.ExampleTest.addAndChangeDocument":249,"org.easymock.tests2.ConstraintsToStringTest.notToString":24,"org.easymock.tests.UsageStrictMockTest.testVerify":361,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":245,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":314,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":147,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":336,"org.easymock.tests.LimitationsTest.abstractClass":393,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":168,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":148,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":52,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":319}}]
