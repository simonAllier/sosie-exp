[{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"(\"isA(\" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:99","failures":[7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[19,20,21,22,23,24,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[63,64],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,7,112,8,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,9,153,154,19,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,26,27,175,176,177,178,179,180,28,181,182,183,184,185,186,187,188,189,6,190,191,192,193,194,195,196,10,197,198,199,200,201,202,63,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,25,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,49,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,50,414,51,52,53,54,55,56,415,12,416,417,418,419,420,421,422,57,423,424,425,426,427,428,429,58,430,431,432,433,434,435,436,437,438,439,440,441,59,442,4,443,444,60,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,5,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,61,476,477,478,479,480,481,482,483,484,485,486,487,62,488,489,13,14,490,15,491,16,492,493,494,495,17,496,497,18,498],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[154],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[86,87,89,90,91,92,94,95,96,97,98,99,100,101,102,125,126,127,147,499,149,150,152,9,153,154,155,157,158,159,500,161,213,214,215,216,219,220,501,502,232,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,25,303,304,305,306,307,308,309,310,316,338,339,340,341,342,343,344,345,346,352,357,448,449,450,451,452,454,457,458,478,479,480,481,482,483,485,492,493,494,494,495,495,17],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,7,112,8,113,114,115,116,117,118,119,120,503,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,9,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,26,27,175,176,177,178,179,180,28,181,182,183,184,185,186,187,188,189,6,190,191,192,193,194,195,196,10,197,198,199,200,201,202,63,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,504,505,506,507,508,264,265,266,267,25,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,49,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,50,414,51,52,53,54,55,56,12,416,417,418,419,420,421,422,57,423,424,425,426,427,428,429,58,430,431,432,433,434,435,436,437,438,439,440,441,59,442,4,443,444,60,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,5,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,61,476,478,479,480,481,482,483,485,486,487,62,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,488,489,13,14,490,15,491,16,492,493,494,495,17,496,497,18,498],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[177,182,183,226,531,363,49,396,425,4,443,445,446,5,463],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[264,265,266,532],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[125,126,127,128,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,384,49,50,51,52,53,54,55,56,57,426,427,428,429,58,430,59,60,475,61,62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[207,209,229,231],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:314","failures":[369,370,468,469],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[98,102,149,159],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[203],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[180,28,187,188,190,192,193,198,201,203,210,226,227,395,12,435,444,60,463,464,62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:317","failures":[369,370,468,469],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[147],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[186,63,205,64],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[133,135,143,188,189,191,193,194,196,204,209],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:114","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>(java.util.Set<org.easymock.internal.MethodSerializationWrapper>.size())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[482,533,534],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[136],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[535],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[186,63,205,64],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[536,537,538],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[264,265,266,532],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[504,505,507],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[479,483],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[19,539,267,25],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[95,156,540,160,541,542,494,495],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[144,26,186,187,190,191,192,193,198,200,201,63,203,209,210,211,224,279,283,284,293,298,347,348,349,350,351,383,385,386,387,388,389,419,431,432,461,473,474,476,494,494,495,495],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[79,86,87,88,89,90,91,94,98,99,100,103,104,105,106,107,108,109,110,111,7,112,8,114,119,123,124,127,131,132,133,134,135,136,137,140,141,142,143,146,147,149,9,154,155,159,167,27,175,178,181,185,189,190,191,192,194,195,10,197,199,200,202,63,204,205,206,207,208,209,213,214,215,216,218,219,220,224,226,227,242,245,255,261,264,265,267,271,273,275,276,277,319,320,322,327,332,340,343,347,348,349,350,351,360,31,32,34,39,44,383,384,49,396,50,51,52,53,54,55,56,12,420,421,422,57,423,424,58,431,432,433,447,451,452,454,461,463,464,473,474,476,478,486,487,488,489,13,14,15,17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[543,544],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","bridgeMethod":"bridgeMethod","candidateMethods":"candidateMethods","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[479,480,481,483,485],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":189,"org.easymock.tests2.UsageTest.argumentsOrdered":183,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":59,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":289,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":179,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":498,"org.easymock.tests2.DelegateToTest.testReturnException":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":427,"org.easymock.tests.MockingTest.testPartialClassMocking":451,"org.easymock.tests.MockClassControlTest.testToString":305,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":65,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":471,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":29,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":245,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":132,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":530,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":20,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":473,"org.easymock.tests2.UsageTest.wrongArguments":177,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":366,"org.easymock.samples.ExampleTest.answerVsDelegate":489,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":357,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":456,"org.easymock.tests2.UsageConstraintsTest.testNull":191,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":89,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":7,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":310,"org.easymock.tests2.CaptureTest.testPrimitive":136,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":476,"org.easymock.tests.UsageTest.moreThanOneArgument":442,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":48,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":387,"org.easymock.tests.UsageTest.argumentsOrdered":446,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":390,"org.easymock.tests.UsageVarargTest.varargIntAccepted":373,"org.easymock.tests.InvocationTest.testEquals":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":347,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":24,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":84,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":234,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":351,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":514,"org.easymock.tests.ReplayStateInvalidUsageTest.times":410,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":167,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":542,"org.easymock.tests2.DependencyTest.testClassMocking":129,"org.easymock.tests2.AnswerTest.answer":114,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":73,"org.easymock.tests2.CaptureTest.testAnd":133,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":354,"org.easymock.tests2.UsageTest.strictResetToDefault":175,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":107,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":394,"org.easymock.tests2.DelegateToTest.testDelegate":275,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":513,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":44,"org.easymock.tests.LimitationsTest.mockFinalMethod":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":401,"org.easymock.tests2.DependencyTest.testClassMockingSupport":130,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":276,"org.easymock.tests2.CaptureTest.testCapture1_2446744":137,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":93,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":42,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":71,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":404,"org.easymock.tests.UsageThrowableTest.throwError":50,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":356,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":415,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":389,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":541,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":263,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":517,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.MockingTest.testInterfaceMocking":453,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":348,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":361,"org.easymock.tests2.UsageTest.niceToStrict":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":250,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":316,"org.easymock.tests2.ThreadingTest.testChangeDefault":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":279,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":9,"org.easymock.tests2.MockBuilderTest.testCreateMock":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":258,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":170,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":38,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":108,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":433,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":364,"org.easymock.tests.UsageOverloadedMethodTest.overloading":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":260,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":57,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":200,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":486,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":328,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":533,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":199,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":142,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":374,"org.easymock.tests2.EasyMockSupportClassTest.testAll":242,"org.easymock.tests.MockClassControlTest.testEquals":309,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":344,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":538,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":399,"org.easymock.tests2.CaptureTest.testCaptureAll":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":72,"org.easymock.tests.MockNameTest.defaultName":337,"org.easymock.tests2.UsageConstraintsTest.testMatches":201,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":388,"org.easymock.samples.ExampleTest.voteForRemovals":15,"org.easymock.tests.UsageVarargTest.allKinds":382,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":395,"org.easymock.samples.BasicClassMockTest.testPrintContent":493,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":400,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":55,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":430,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":81,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":274,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":484,"org.easymock.tests2.UsageConstraintsTest.greaterThan":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":243,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":416,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":100,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":518,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":485,"org.easymock.samples.ExampleTest.voteForRemoval":13,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":121,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":101,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":535,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":92,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":510,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":458,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":105,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":426,"org.easymock.tests2.CaptureTest.testCaptureFirst":146,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":106,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":324,"org.easymock.tests2.UsageTest.moreThanOneArgument":176,"org.easymock.tests2.CaptureTest.testCapture2_2446744":145,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":123,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":297,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":381,"org.easymock.tests.GenericTest.testBridgedEquals":346,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":440,"org.easymock.tests.UsageExpectAndReturnTest.longType":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":397,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":103,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":47,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":419,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":207,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":45,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":468,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":385,"org.easymock.tests.UsageCallCountTest.tooManyCalls":441,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":259,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":325,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":34,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":54,"org.easymock.tests.MockingTest.testNiceClassMocking":457,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":214,"org.easymock.tests.MockingTest.testClassMocking":449,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":499,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":434,"org.easymock.tests2.UsageConstraintsTest.testContains":198,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":127,"org.easymock.tests2.UsageConstraintsTest.testFind":190,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":62,"org.easymock.tests.MockTypeTest.fromEasyMockClass":355,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":459,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":231,"org.easymock.tests.UsageExpectAndReturnTest.object":327,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":21,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":376,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":314,"org.easymock.tests.UsageTest.exactCallCountByLastCall":447,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":284,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":391,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":333,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":371,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":75,"org.easymock.tests.MockClassControlTest.testHashCode":308,"org.easymock.tests2.EasyMockSupportTest.testVerify":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":252,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":536,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":392,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":420,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":70,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":212,"org.easymock.tests.UsageVarargTest.varargCharAccepted":375,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":477,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":302,"org.easymock.tests2.UsageTest.openCallCountByLastCall":180,"org.easymock.tests.DefaultClassInstantiatorTest.object":478,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":8,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":368,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":312,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":531,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":253,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":165,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":74,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":516,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":98,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":35,"org.easymock.tests.CapturesMatcherTest.test":544,"org.easymock.tests.ReplayStateInvalidCallsTest.times":522,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":334,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":467,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":523,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":537,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":261,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":306,"org.easymock.tests2.UsageTest.resumeIfFailure":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":352,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":429,"org.easymock.tests2.StubTest.stubWithReturnValue":26,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":19,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":208,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":326,"org.easymock.tests2.SerializationTest.testAllMockedMethod":266,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":295,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":18,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":342,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":77,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":41,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":532,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":301,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":115,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":472,"org.easymock.tests.UsageExpectAndThrowTest.object":39,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":205,"org.easymock.tests2.DelegateToTest.testWrongClass":273,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":520,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":431,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":432,"org.easymock.samples.ConstructorCalledMockTest.testTax":494,"org.easymock.tests.UsageStrictMockTest.range":463,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":237,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":213,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":154,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":445,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":365,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":2,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":512,"org.easymock.tests2.CaptureTest.testCaptureNone":141,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":362,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":505,"org.easymock.tests.UsageUnorderedTest.message":363,"org.easymock.tests.UsageVerifyTest.twoReturns":396,"org.easymock.tests.UsageVarargTest.varargByteAccepted":380,"org.easymock.tests2.ThreadingTest.testThreadSafe":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":256,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":438,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":492,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":315,"org.easymock.tests2.CaptureTest.testCapture_2617107":135,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":278,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":299,"org.easymock.tests2.UsageConstraintsTest.any":10,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":409,"org.easymock.tests2.StubTest.stub":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":428,"org.easymock.tests.UsageExpectAndThrowTest.longType":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":300,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":482,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":408,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":225,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":79,"org.easymock.tests2.SerializationTest.testClass":264,"org.easymock.tests.LimitationsTest.mockNativeMethod":340,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":336,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":345,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":164,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":528,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":228,"org.easymock.tests2.NameTest.nameForMocksControl":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":166,"org.easymock.tests2.MockedExceptionTest.testMockedException":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":244,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":60,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":454,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":33,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":230,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":155,"org.easymock.tests.MockingTest.testNicePartialClassMocking":452,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":91,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":162,"org.easymock.tests2.CaptureTest.testCaptureLast":140,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":277,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":527,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":194,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":220,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":206,"org.easymock.tests.MockingTest.testTwoMocks":450,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":524,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":221,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":37,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":182,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":210,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":508,"org.easymock.samples.ExampleTest.removeNonExistingDocument":491,"org.easymock.tests.UsageStrictMockTest.differentMethods":464,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":406,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":169,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":76,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":507,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":480,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":122,"org.easymock.tests2.MockBuilderTest.testCreateMockString":161,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":303,"org.easymock.tests.UsageExpectAndThrowTest.floatType":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":246,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":241,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":117,"org.easymock.tests.UsageVerifyTest.twoThrows":49,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":268,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":255,"org.easymock.samples.ExampleTest.voteAgainstRemoval":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":360,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":99,"org.easymock.tests.LimitationsTest.privateConstructor":339,"org.easymock.tests2.UsageConstraintsTest.testNotNull":209,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":56,"org.easymock.tests2.UsageTest.defaultResetToNice":181,"org.easymock.samples.ExampleTest.voteAgainstRemovals":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":291,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":332,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":163,"org.easymock.tests.UsageVarargTest.differentLength":377,"org.easymock.tests2.CallbackTest.callback":269,"org.easymock.tests2.UsageConstraintsTest.equals":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":95,"org.easymock.tests.UsageTest.openCallCountByLastCall":444,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":186,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":475,"org.easymock.tests.UsageCallCountTest.tooFewCalls":436,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":367,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":506,"org.easymock.tests.UsageThrowableTest.throwCheckedException":53,"org.easymock.tests.MockingTest.testStrictClassMocking":448,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":3,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":384,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":168,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":215,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":411,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":218,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":119,"org.easymock.tests.ObjectMethodsTest.testHashCode":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":23,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":526,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":124,"org.easymock.tests2.NameTest.nameForNiceMock":68,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":521,"org.easymock.tests2.DependencyTest.testInterfaceMocking":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":22,"org.easymock.samples.ExampleTest.addDocument":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":262,"org.easymock.tests2.DelegateToTest.testStubDelegate":272,"org.easymock.tests2.AnswerTest.stubAnswer":118,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":461,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":156,"org.easymock.tests.UsageVarargTest.varargLongAccepted":379,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":288,"org.easymock.tests.UsageExpectAndReturnTest.floatType":319,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":335,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":267,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":495,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":423,"org.easymock.tests.UsageThrowableTest.noUpperLimit":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":83,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":203,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":187,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":232,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":138,"org.easymock.tests2.SerializationTest.test":265,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":534,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":479,"org.easymock.tests2.UsageConstraintsTest.testSame":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":318,"org.easymock.samples.SupportTest.addDocument":497,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":217,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":511,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":247,"org.easymock.tests.GenericTest.testPackageScope":343,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":82,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":455,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":509,"org.easymock.tests2.NameTest.nameForMock":66,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":329,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":160,"org.easymock.tests2.UsageStrictMockTest.differentMethods":227,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":96,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":321,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":43,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":311,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":418,"org.easymock.tests2.MockedExceptionTest.testRealException":128,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":359,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":293,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":539,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":292,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":474,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":413,"org.easymock.tests2.NameTest.nameForStrictMock":67,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":152,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":229,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":90,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":236,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":481,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":204,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":149,"org.easymock.tests2.UsageStrictMockTest.range":226,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":515,"org.easymock.tests2.UsageConstraintsTest.lessThan":211,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":501,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":78,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":287,"org.easymock.tests2.CaptureTest.testCaptureRightOne":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":251,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":504,"org.easymock.tests2.UsageConstraintsTest.testOr":193,"org.easymock.tests.UsageRangeTest.combination":12,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":87,"org.easymock.tests.UsageTest.wrongArguments":443,"org.easymock.tests2.MockBuilderTest.testWithConstructor":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":248,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":304,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":330,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":483,"org.easymock.tests.UsageVarargTest.varargShortAccepted":378,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":439,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":529,"org.easymock.tests2.UsageConstraintsTest.cmpTo":197,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":116,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":519,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":282,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":28,"org.easymock.tests2.CaptureTest.testCaptureFromStub":144,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":403,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":150,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":525,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":437,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":540,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":331,"org.easymock.tests2.CaptureTest.testCapture":543,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":462,"org.easymock.tests2.UsageConstraintsTest.constraints":188,"org.easymock.samples.ExampleTest.addAndChangeDocument":16,"org.easymock.tests.UsageStrictMockTest.testVerify":466,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":496,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":460,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":398,"org.easymock.tests2.CompareToTest.testGreateThan":64,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":139,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":502,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":323,"org.easymock.tests.LimitationsTest.abstractClass":338,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":109,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":372}}]
