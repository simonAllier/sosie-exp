[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:286","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[12,13],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,0,43,1,44,45,46,47,48],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:85","failures":[49,49,50,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,14,112,113,114,115,116,117,15,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,9,145,146,147,148,149,150,151,152,153,154,155,11,156,157,158,159,160,161,162,163,164,16,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,17,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,18,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,253,254,255,256,40,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,41,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,42,295,0,296,43,1,44,45,46,47,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,48,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[281,338,339,340,341,342],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[164,343],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[344,345,346,347],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[180],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[56,152,153,154,203,204],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[187],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[172,179,196,292],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:95","sourceCode":"return java.util.List<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[49,49,50,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,14,112,113,114,115,116,117,15,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,9,145,146,147,148,149,150,151,152,153,154,155,348,11,156,157,158,159,160,161,162,163,164,16,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,17,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,18,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,253,254,255,256,40,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,41,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,42,295,0,296,43,1,44,45,46,47,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,48,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[51,72,75,76,349,136,137,350,138,139,140,141,142,143,144,11,160,161,162,351,352,353],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[3,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[354],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:163","failures":[49,50,355,356,357],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ONCE"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[187],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[49,49,50,50,51,355,76,349,356,358,138,2,359,3,142,357,144,9,10,360,11,160,161,12,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[49,49,50,50,51,53,54,66,67,69,70,71,72,73,74,75,76,77,80,136,137,138,139,140,141,142,143,144,9,145,146,147,148,150,151,11,157,159,160,161,162,361,209,210,211,265,307,308,309,353,315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[49,50,9,363,364],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[67,77,82,84,85,86,87,88,107,14,113,114,115,116,119,120,121,122,124,128,132,137,140,142,147,150,158,163,176,190,365,366,207,208,212,214,215,216,217,218,219,239,241,242,245,246,247,367,368,39,253,254,255,257,258,259,369,352,370,266,267,268,272,278,371,372,373,287,293,294,42,295],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[374,154,155,375],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[190],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[67,74,77,349,82,84,85,86,87,88,89,90,91,92,107,376,14,113,114,115,116,119,120,121,122,124,126,128,129,131,132,136,137,350,140,141,142,143,144,146,147,150,151,158,377,163,176,190,365,366,207,208,212,214,215,216,217,218,219,239,241,242,245,246,247,367,368,39,253,254,255,257,258,259,351,369,378,352,379,370,266,267,268,272,278,371,372,373,287,293,294,42,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[11,156,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"position":"org.easymock.ConstructorArgs:77","failures":[380,364],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":177,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":39,"org.easymock.tests2.UsageTest.argumentsOrdered":120,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":313,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":116,"org.easymock.tests2.StubTest.stubWithReturnValue":16,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":327,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":197,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":52,"org.easymock.tests2.SerializationTest.testAllMockedMethod":157,"org.easymock.tests2.DelegateToTest.testReturnException":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":311,"org.easymock.tests.MockingTest.testPartialClassMocking":209,"org.easymock.samples.SupportTest.voteForRemovals":64,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":12,"org.easymock.tests.MockClassControlTest.testToString":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":349,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":31,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":19,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":160,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":374,"org.easymock.tests.UsageExpectAndThrowTest.object":29,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":202,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":4,"org.easymock.tests2.DelegateToTest.testWrongClass":167,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":225,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":226,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":183,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":221,"org.easymock.tests2.UsageTest.wrongArguments":114,"org.easymock.tests.UsageStrictMockTest.range":217,"org.easymock.samples.ConstructorCalledMockTest.testTax":49,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":262,"org.easymock.samples.ExampleTest.answerVsDelegate":56,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":130,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":145,"org.easymock.tests2.UsageConstraintsTest.testNull":179,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":69,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":30,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":271,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":140,"org.easymock.tests2.CaptureTest.testPrimitive":96,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":224,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests.UsageTest.moreThanOneArgument":253,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":237,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":38,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":261,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":68,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":299,"org.easymock.tests2.CaptureTest.testCaptureNone":101,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":345,"org.easymock.tests.UsageUnorderedTest.message":293,"org.easymock.tests.UsageVerifyTest.twoReturns":295,"org.easymock.tests.UsageVarargTest.varargByteAccepted":290,"org.easymock.tests2.ThreadingTest.testThreadSafe":169,"org.easymock.tests.UsageTest.argumentsOrdered":258,"org.easymock.tests.UsageVarargTest.varargIntAccepted":284,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":244,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":371,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":53,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":302,"org.easymock.tests2.CaptureTest.testCapture_2617107":95,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":18,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":139,"org.easymock.tests2.UsageConstraintsTest.any":184,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":234,"org.easymock.tests2.StubTest.stub":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":312,"org.easymock.tests.UsageExpectAndThrowTest.longType":22,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":233,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":85,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":158,"org.easymock.tests.LimitationsTest.mockNativeMethod":315,"org.easymock.tests.ReplayStateInvalidUsageTest.times":235,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":107,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":353,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":337,"org.easymock.tests2.AnswerTest.answer":152,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":111,"org.easymock.tests2.CaptureTest.testAnd":93,"org.easymock.tests2.UsageTest.strictResetToDefault":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":358,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":74,"org.easymock.tests2.NameTest.nameForMocksControl":92,"org.easymock.tests2.MockedExceptionTest.testMockedException":79,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":298,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":127,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":40,"org.easymock.tests2.DelegateToTest.testDelegate":168,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":23,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":66,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":141,"org.easymock.tests.MockingTest.testNicePartialClassMocking":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":34,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":71,"org.easymock.tests2.CaptureTest.testCaptureLast":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":48,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":368,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":151,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":252,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":195,"org.easymock.tests.MockingTest.testTwoMocks":361,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":367,"org.easymock.tests2.CaptureTest.testCapture1_2446744":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":32,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":27,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":109,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":199,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":347,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":229,"org.easymock.tests.UsageThrowableTest.throwError":0,"org.easymock.samples.ExampleTest.removeNonExistingDocument":61,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":231,"org.easymock.tests.UsageStrictMockTest.differentMethods":218,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":378,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":339,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":171,"org.easymock.tests2.MockBuilderTest.testCreateMockString":144,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":301,"org.easymock.tests.UsageExpectAndThrowTest.floatType":21,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":190,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":153,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":360,"org.easymock.tests.UsageVerifyTest.twoThrows":42,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":161,"org.easymock.samples.PartialClassMockTest.testGetArea":51,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":303,"org.easymock.samples.ExampleTest.voteAgainstRemoval":58,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":76,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":372,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":20,"org.easymock.tests2.UsageTest.niceToStrict":115,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":380,"org.easymock.tests2.UsageConstraintsTest.testNotNull":198,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":47,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":364,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":138,"org.easymock.tests2.UsageTest.defaultResetToNice":118,"org.easymock.tests2.MockBuilderTest.testCreateMock":142,"org.easymock.samples.ExampleTest.voteAgainstRemovals":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":333,"org.easymock.tests.UsageVarargTest.differentLength":287,"org.easymock.tests2.CallbackTest.callback":163,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":355,"org.easymock.tests.UsageTest.openCallCountByLastCall":256,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":28,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":128,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":174,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":223,"org.easymock.tests.UsageCallCountTest.tooFewCalls":242,"org.easymock.tests.UsageOverloadedMethodTest.overloading":277,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":17,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":329,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":148,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":187,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":102,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":263,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":346,"org.easymock.tests.UsageThrowableTest.throwCheckedException":44,"org.easymock.tests.MockClassControlTest.testEquals":270,"org.easymock.tests2.EasyMockSupportClassTest.testAll":159,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":309,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":250,"org.easymock.tests2.CaptureTest.testCaptureAll":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":110,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":317,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":150,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":376,"org.easymock.tests.MockNameTest.defaultName":373,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":147,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":236,"org.easymock.tests2.UsageConstraintsTest.testMatches":189,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":149,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":300,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":227,"org.easymock.tests.ObjectMethodsTest.testHashCode":279,"org.easymock.samples.ExampleTest.voteForRemovals":60,"org.easymock.tests2.NameTest.nameForNiceMock":91,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":173,"org.easymock.tests.UsageVarargTest.allKinds":292,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":294,"org.easymock.tests2.DependencyTest.testInterfaceMocking":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":251,"org.easymock.samples.BasicClassMockTest.testPrintContent":54,"org.easymock.samples.ExampleTest.addDocument":59,"org.easymock.tests2.DelegateToTest.testStubDelegate":166,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":46,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":82,"org.easymock.tests2.AnswerTest.stubAnswer":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":314,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":8,"org.easymock.tests2.UsageConstraintsTest.greaterThan":191,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":359,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":273,"org.easymock.tests.UsageVarargTest.varargLongAccepted":289,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":77,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":219,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":342,"org.easymock.samples.ExampleTest.voteForRemoval":57,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":336,"org.easymock.tests.UsageExpectAndReturnTest.floatType":320,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":379,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":72,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":9,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":50,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":366,"org.easymock.tests.UsageThrowableTest.noUpperLimit":296,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":192,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":307,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":14,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":175,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":98,"org.easymock.tests2.SerializationTest.test":156,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":3,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":362,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":125,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":319,"org.easymock.tests2.UsageConstraintsTest.testSame":180,"org.easymock.samples.SupportTest.addDocument":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":310,"org.easymock.tests2.CaptureTest.testCaptureFirst":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":126,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":232,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":208,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":325,"org.easymock.tests.GenericTest.testPackageScope":308,"org.easymock.tests2.CaptureTest.testCapture2_2446744":105,"org.easymock.tests2.UsageTest.moreThanOneArgument":113,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":172,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":143,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":291,"org.easymock.tests.GenericTest.testBridgedEquals":13,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":246,"org.easymock.tests2.NameTest.nameForMock":89,"org.easymock.tests.UsageExpectAndReturnTest.longType":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":248,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":330,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":37,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":357,"org.easymock.tests2.UsageStrictMockTest.differentMethods":87,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":297,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":322,"org.easymock.tests.UsageCallCountTest.tooManyCalls":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":33,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":275,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":241,"org.easymock.tests2.MockedExceptionTest.testRealException":81,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":326,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":84,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":24,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":238,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":222,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":45,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":146,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":240,"org.easymock.tests2.NameTest.nameForStrictMock":90,"org.easymock.tests2.UsageConstraintsTest.testContains":186,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":80,"org.easymock.tests2.UsageConstraintsTest.testFind":178,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":41,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":203,"org.easymock.tests.MockTypeTest.fromEasyMockClass":369,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":70,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":212,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":204,"org.easymock.tests.UsageExpectAndReturnTest.object":328,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":340,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":193,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":73,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":137,"org.easymock.tests2.UsageStrictMockTest.range":86,"org.easymock.tests2.UsageConstraintsTest.lessThan":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":131,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":5,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":280,"org.easymock.tests.UsageTest.exactCallCountByLastCall":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":316,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":7,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":124,"org.easymock.tests2.CaptureTest.testCaptureRightOne":103,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":344,"org.easymock.tests2.UsageConstraintsTest.testOr":181,"org.easymock.tests.UsageRangeTest.combination":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":334,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":67,"org.easymock.tests.UsageTest.wrongArguments":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":206,"org.easymock.tests2.MockBuilderTest.testWithConstructor":356,"org.easymock.tests.MockClassControlTest.testHashCode":269,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":265,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":323,"org.easymock.tests2.EasyMockSupportTest.testVerify":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":331,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":341,"org.easymock.tests.UsageVarargTest.varargShortAccepted":288,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":205,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":108,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":348,"org.easymock.tests2.UsageConstraintsTest.cmpTo":185,"org.easymock.tests.UsageVarargTest.varargCharAccepted":285,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":83,"org.easymock.tests2.UsageTest.openCallCountByLastCall":117,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":15,"org.easymock.tests.DefaultClassInstantiatorTest.object":281,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":134,"org.easymock.tests2.CaptureTest.testCaptureFromStub":104,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":228,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":350,"org.easymock.tests.UsageTest.unexpectedCallWithArray":254,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":278,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":26,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":243,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":332,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":268,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":216,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":75,"org.easymock.tests2.UsageConstraintsTest.constraints":176,"org.easymock.samples.ExampleTest.addAndChangeDocument":62,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":335,"org.easymock.tests.UsageStrictMockTest.testVerify":220,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":65,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":267,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":249,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":99,"org.easymock.tests2.UsageTest.resumeIfFailure":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":304,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":351,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":305,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":207,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":129}}]
