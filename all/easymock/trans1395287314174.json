[{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[0,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[12,13,14,15,0,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,4,5,43,44,45,46,47,10,11],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[12,12,13,13,100,101,102,103,104,105,106,107,108,0,1,19,22,32,38,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,62,124,125,126,127,128,48,129,130,131,132,133,134,135,136,137,138,139,140,50,141,52,53,56,142,57,59,60,143,61,144,145,146,147,148,149,150,151,152,153,154,63,155,156,157,158,64,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,45,191,192,193,46,194,195,196,10,197,198,199,200,201,202,203,204,205,65,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,66,246,67,247,248,68,249,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,250,251,89,252,90,253,254,255,256,257,258,259,91,260,92,93,94,95,96,97,261,262,263,98,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,99,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[61],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[295],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[0,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[296,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[298,299],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret","clazz":"clazz"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[116,300,147,301],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[111,127,129,302],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[205,66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[0,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:772","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[120],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[12,13,100,101,102,103,303,104,105,304,305,306,307,106,308,107,108,0,1,2,19,22,32,38,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,62,124,125,126,127,128,48,129,130,300,131,132,133,134,135,138,139,140,309,310,311,312,50,141,51,52,53,54,55,56,142,57,59,60,143,61,144,145,146,147,148,150,151,152,154,63,155,156,313,157,314,158,64,159,315,316,160,161,162,163,164,165,166,167,168,169,170,171,172,173,317,318,174,175,319,176,177,320,178,321,179,180,181,182,183,184,322,185,323,186,187,188,189,190,45,191,192,193,46,194,195,196,10,197,198,199,200,201,324,325,202,326,203,204,327,205,65,328,329,330,331,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,234,235,236,332,333,334,335,336,337,338,339,340,341,342,301,239,240,242,243,244,245,66,246,67,247,343,344,248,68,345,346,249,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,250,251,89,252,90,253,347,347,91,260,92,93,94,95,96,97,261,262,263,98,348,265,266,267,268,269,349,350,351,352,353,275,354,355,356,276,357,277,278,358,279,280,281,282,99,283,289,290,291,292,293,294,359,360,361,362,363,364],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cl":"cl","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[12,13,100,101,102,103,303,104,366,105,304,305,306,307,106,308,107,108,0,1,2,367,368,369,370,371,372,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,109,373,110,111,112,113,114,374,115,116,117,118,119,120,375,121,122,123,62,124,125,126,127,128,48,129,130,300,131,132,133,134,135,136,137,138,139,140,309,310,311,312,50,141,51,52,53,54,55,56,142,57,59,60,143,61,144,376,145,146,147,148,149,150,151,152,153,154,63,155,156,313,157,314,158,64,159,315,316,160,161,162,163,164,165,166,167,168,169,170,171,172,173,317,377,378,379,380,381,382,383,318,174,384,385,175,319,176,177,295,5,320,178,321,179,180,181,182,183,184,322,386,185,387,388,323,186,187,188,389,390,189,190,45,191,391,192,193,46,47,392,393,194,195,394,395,396,296,397,196,398,399,400,401,402,403,404,405,406,407,408,10,11,409,410,411,297,412,197,413,414,415,416,417,418,198,199,200,201,324,325,202,326,203,204,327,205,65,328,329,330,331,419,206,207,420,421,422,423,424,425,426,427,428,429,208,209,430,210,431,432,433,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,365,231,434,435,436,437,438,439,440,232,233,234,235,441,442,443,444,445,446,447,448,298,236,332,237,299,449,238,450,333,334,335,451,336,337,338,339,340,341,342,301,239,240,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,241,242,474,475,476,477,478,479,480,481,482,483,484,485,243,244,245,66,246,67,247,343,344,248,68,345,346,249,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,250,251,89,252,90,253,254,255,256,486,487,488,489,490,491,492,493,257,258,259,91,260,92,93,94,95,96,97,494,495,261,496,262,497,263,98,498,264,348,265,266,267,268,269,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,270,515,516,517,518,519,271,520,349,350,351,352,353,272,273,274,275,354,355,356,276,357,277,278,358,521,279,280,281,282,99,283,284,285,286,287,288,289,290,291,292,293,522,523,294,359,360,361,362,363,364],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[127,302],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[63,64,67,68,90,92],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[524,525,526,527,343,356],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[0,1,2,3],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[12,12,13,13,100,101,102,103,104,105,106,107,108,0,1,2,19,22,32,38,109,110,111,112,113,114,115,116,117,118,119,120,375,121,122,123,62,124,125,126,127,128,48,129,130,300,131,132,133,134,135,136,137,138,139,140,310,311,312,50,141,51,52,53,54,55,56,142,57,59,60,143,61,144,145,146,147,148,149,150,151,152,153,154,63,155,156,313,157,314,158,64,159,315,316,160,161,162,163,164,165,166,167,168,169,170,171,172,173,317,318,174,175,319,176,177,320,178,321,179,180,181,182,183,184,322,185,186,187,188,189,190,45,191,192,193,46,194,195,196,405,406,407,408,10,197,198,199,200,201,324,202,326,203,204,327,205,65,329,330,331,206,207,420,429,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,365,231,232,233,234,235,236,237,238,301,239,240,241,242,243,244,245,66,246,67,247,343,344,248,68,345,346,249,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,250,251,89,252,90,253,254,255,256,257,258,259,91,260,92,93,94,95,96,97,261,262,497,263,98,498,264,348,265,266,267,268,269,270,271,349,350,351,352,353,272,273,274,275,354,356,276,357,277,278,358,279,280,281,282,99,283,284,285,286,287,288,289,290,291,292,293,522,294,359,360,361,362,363,364],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[356],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[0,4,528,6,7,8,529,530,9,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[106,0,318,531,174,384,175,319,176,177,320,178,532,321,322,237,486,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":114,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":67,"org.easymock.tests2.UsageTest.argumentsOrdered":316,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":172,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":509,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":314,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":307,"org.easymock.tests2.DelegateToTest.testReturnException":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":280,"org.easymock.tests.MockingTest.testPartialClassMocking":208,"org.easymock.tests.MockClassControlTest.testToString":443,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":404,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":517,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":26,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":69,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":195,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":473,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":6,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":243,"org.easymock.tests2.UsageTest.wrongArguments":313,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":403,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":330,"org.easymock.samples.ExampleTest.answerVsDelegate":101,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":491,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":432,"org.easymock.tests2.UsageConstraintsTest.testNull":116,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":182,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":448,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":171,"org.easymock.tests2.CaptureTest.testPrimitive":52,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":88,"org.easymock.tests.UsageTest.moreThanOneArgument":247,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":291,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":284,"org.easymock.tests.UsageTest.argumentsOrdered":346,"org.easymock.tests.UsageVarargTest.varargIntAccepted":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":514,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":265,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":530,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":318,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":369,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":269,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":457,"org.easymock.tests.ReplayStateInvalidUsageTest.times":482,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":196,"org.easymock.tests2.DependencyTest.testClassMocking":392,"org.easymock.tests2.AnswerTest.answer":135,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":515,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":312,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":488,"org.easymock.tests2.CaptureTest.testAnd":50,"org.easymock.tests2.UsageTest.strictResetToDefault":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":234,"org.easymock.tests2.DelegateToTest.testDelegate":154,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":288,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":456,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":84,"org.easymock.tests.LimitationsTest.mockFinalMethod":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":353,"org.easymock.tests2.DependencyTest.testClassMockingSupport":393,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":365,"org.easymock.tests2.CaptureTest.testCapture1_2446744":53,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":82,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":310,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":476,"org.easymock.tests.UsageThrowableTest.throwError":91,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":490,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":418,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":293,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":40,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":460,"org.easymock.samples.PartialClassMockTest.testGetArea":106,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":477,"org.easymock.tests.MockingTest.testInterfaceMocking":430,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":266,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":255,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":440,"org.easymock.tests2.UsageTest.niceToStrict":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":70,"org.easymock.tests2.ThreadingTest.testChangeDefault":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":499,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":175,"org.easymock.tests2.MockBuilderTest.testCreateMock":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":35,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":400,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":524,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":78,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":167,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":487,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":274,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":522,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":328,"org.easymock.tests.UsageOverloadedMethodTest.overloading":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":31,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":124,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":222,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":250,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":57,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":451,"org.easymock.tests.MockClassControlTest.testEquals":447,"org.easymock.tests2.EasyMockSupportClassTest.testAll":19,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":332,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":86,"org.easymock.tests2.CaptureTest.testCaptureAll":141,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":351,"org.easymock.tests.MockNameTest.defaultName":419,"org.easymock.tests2.UsageConstraintsTest.testMatches":125,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":474,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":292,"org.easymock.samples.ExampleTest.voteForRemovals":104,"org.easymock.tests.UsageVarargTest.allKinds":301,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":252,"org.easymock.samples.BasicClassMockTest.testPrintContent":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":352,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":96,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":414,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":283,"org.easymock.tests2.UsageConstraintsTest.greaterThan":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":233,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":188,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":461,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":426,"org.easymock.samples.ExampleTest.voteForRemoval":102,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":389,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":145,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":492,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":322,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":453,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":242,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":506,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":164,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":279,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":149,"org.easymock.tests2.CaptureTest.testCaptureFirst":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":505,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":165,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":218,"org.easymock.tests2.UsageTest.moreThanOneArgument":156,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":147,"org.easymock.tests2.CaptureTest.testCapture2_2446744":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":516,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":178,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":342,"org.easymock.tests.GenericTest.testBridgedEquals":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":363,"org.easymock.tests.UsageExpectAndReturnTest.longType":214,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":349,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":532,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":87,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":241,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":85,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":289,"org.easymock.tests.UsageCallCountTest.tooManyCalls":364,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":74,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":95,"org.easymock.tests.MockingTest.testNiceClassMocking":433,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":190,"org.easymock.tests.MockingTest.testClassMocking":428,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":531,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":523,"org.easymock.tests2.UsageConstraintsTest.testContains":123,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":200,"org.easymock.tests2.UsageConstraintsTest.testFind":115,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":89,"org.easymock.tests.MockTypeTest.fromEasyMockClass":489,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":110,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":354,"org.easymock.tests.UsageExpectAndReturnTest.object":221,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":7,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":337,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":438,"org.easymock.tests.UsageTest.exactCallCountByLastCall":249,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":504,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":449,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":285,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":227,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":333,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":263,"org.easymock.tests.MockClassControlTest.testHashCode":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":410,"org.easymock.tests2.EasyMockSupportTest.testVerify":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":29,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":286,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":262,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":309,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":377,"org.easymock.tests.UsageVarargTest.varargCharAccepted":336,"org.easymock.tests2.CaptureTest.testCaptureMultiple":49,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":520,"org.easymock.tests2.UsageTest.openCallCountByLastCall":158,"org.easymock.tests.DefaultClassInstantiatorTest.object":420,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":173,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":272,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":30,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":76,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":409,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":459,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":445,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":186,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":75,"org.easymock.tests.CapturesMatcherTest.test":347,"org.easymock.tests.ReplayStateInvalidCallsTest.times":465,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":228,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":257,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":466,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":38,"org.easymock.tests2.UsageTest.resumeIfFailure":160,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":486,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":282,"org.easymock.tests2.StubTest.stubWithReturnValue":65,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":4,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":131,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":220,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":270,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":525,"org.easymock.samples.SupportTest.voteForRemovals":107,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":298,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":81,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":271,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":136,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":450,"org.easymock.tests.UsageExpectAndThrowTest.object":79,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":129,"org.easymock.tests2.DelegateToTest.testWrongClass":152,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":463,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":239,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":240,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests.UsageStrictMockTest.range":277,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":371,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":169,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":189,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":80,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":176,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":16,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":329,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":526,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":455,"org.easymock.tests2.CaptureTest.testCaptureNone":142,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":256,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":379,"org.easymock.tests.UsageUnorderedTest.message":275,"org.easymock.tests.UsageVerifyTest.twoReturns":253,"org.easymock.tests.UsageVarargTest.varargByteAccepted":341,"org.easymock.tests2.ThreadingTest.testThreadSafe":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":33,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":361,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":439,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":304,"org.easymock.tests2.CaptureTest.testCapture_2617107":51,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":518,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":66,"org.easymock.tests2.UsageConstraintsTest.any":121,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":481,"org.easymock.tests2.StubTest.stub":205,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":519,"org.easymock.tests.UsageExpectAndThrowTest.longType":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":281,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":424,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":480,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":326,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":197,"org.easymock.tests.LimitationsTest.mockNativeMethod":261,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":230,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":237,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":396,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":471,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":327,"org.easymock.tests2.NameTest.nameForMocksControl":408,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":380,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":397,"org.easymock.tests2.MockedExceptionTest.testMockedException":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":21,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":73,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":210,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":373,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":179,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":177,"org.easymock.tests.MockingTest.testNicePartialClassMocking":209,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":528,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":394,"org.easymock.tests2.CaptureTest.testCaptureLast":56,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":231,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":470,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":119,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":46,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":130,"org.easymock.tests.MockingTest.testTwoMocks":429,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":467,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":47,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":77,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":315,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":133,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":383,"org.easymock.samples.ExampleTest.removeNonExistingDocument":366,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":478,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":399,"org.easymock.tests.UsageStrictMockTest.differentMethods":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":411,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":422,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":382,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":146,"org.easymock.tests2.MockBuilderTest.testCreateMockString":321,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":23,"org.easymock.tests.UsageExpectAndThrowTest.floatType":71,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":18,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":138,"org.easymock.tests.UsageVerifyTest.twoThrows":90,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":32,"org.easymock.samples.ExampleTest.voteAgainstRemoval":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":510,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":254,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":187,"org.easymock.tests.LimitationsTest.privateConstructor":495,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":15,"org.easymock.tests2.UsageConstraintsTest.testNotNull":132,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":97,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":198,"org.easymock.tests2.UsageTest.defaultResetToNice":159,"org.easymock.samples.ExampleTest.voteAgainstRemovals":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":511,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":226,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":395,"org.easymock.tests.UsageVarargTest.differentLength":338,"org.easymock.tests2.CallbackTest.callback":108,"org.easymock.tests2.UsageConstraintsTest.equals":374,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":387,"org.easymock.tests.UsageTest.openCallCountByLastCall":248,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":245,"org.easymock.tests.UsageCallCountTest.tooFewCalls":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":191,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":331,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":381,"org.easymock.tests.UsageThrowableTest.throwCheckedException":94,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":527,"org.easymock.tests.MockingTest.testStrictClassMocking":427,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":193,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":398,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":45,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":483,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":192,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":140,"org.easymock.tests.ObjectMethodsTest.testHashCode":437,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":529,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":469,"org.easymock.tests2.NameTest.nameForNiceMock":407,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":148,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":464,"org.easymock.tests2.DependencyTest.testInterfaceMocking":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":8,"org.easymock.samples.ExampleTest.addDocument":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":34,"org.easymock.tests2.DelegateToTest.testStubDelegate":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":39,"org.easymock.tests2.AnswerTest.stubAnswer":139,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":276,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":295,"org.easymock.tests.UsageVarargTest.varargLongAccepted":340,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":508,"org.easymock.tests.UsageExpectAndReturnTest.floatType":213,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":229,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":10,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":416,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":128,"org.easymock.tests.UsageThrowableTest.noUpperLimit":260,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":112,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":367,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":54,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":421,"org.easymock.tests2.UsageConstraintsTest.testSame":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":212,"org.easymock.samples.SupportTest.addDocument":308,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":391,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":454,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":24,"org.easymock.tests.GenericTest.testPackageScope":236,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":503,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":415,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":431,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":452,"org.easymock.tests2.NameTest.nameForMock":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":223,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":44,"org.easymock.tests2.UsageStrictMockTest.differentMethods":204,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":388,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":215,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":83,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":235,"org.easymock.tests2.MockedExceptionTest.testRealException":201,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":513,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":512,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":202,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":485,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":244,"org.easymock.tests2.NameTest.nameForStrictMock":406,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":385,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":109,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":183,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":370,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":423,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":48,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":174,"org.easymock.tests2.UsageStrictMockTest.range":203,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":458,"org.easymock.tests2.UsageConstraintsTest.lessThan":134,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":507,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":28,"org.easymock.tests2.CaptureTest.testCaptureRightOne":59,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":378,"org.easymock.tests2.UsageConstraintsTest.testOr":118,"org.easymock.tests.UsageRangeTest.combination":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":180,"org.easymock.tests.UsageTest.wrongArguments":344,"org.easymock.tests2.MockBuilderTest.testWithConstructor":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":25,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":500,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":224,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":425,"org.easymock.tests.UsageVarargTest.varargShortAccepted":339,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":362,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":472,"org.easymock.tests2.UsageConstraintsTest.cmpTo":122,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":137,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":502,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":64,"org.easymock.tests2.CaptureTest.testCaptureFromStub":60,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":475,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":384,"org.easymock.tests.UsageTest.unexpectedCallWithArray":343,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":468,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":356,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":360,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":43,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":225,"org.easymock.tests2.CaptureTest.testCapture":58,"org.easymock.tests2.UsageConstraintsTest.constraints":113,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":357,"org.easymock.samples.ExampleTest.addAndChangeDocument":105,"org.easymock.tests.UsageStrictMockTest.testVerify":521,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":306,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":355,"org.easymock.tests2.CompareToTest.testGreateThan":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":350,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":267,"org.easymock.tests.LimitationsTest.abstractClass":494,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":217,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":168,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":334}}]
