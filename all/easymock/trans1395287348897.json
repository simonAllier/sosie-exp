[{"position":"org.easymock.internal.MockBuilder:223","failures":[0],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[41,42,43,44,45,46],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[47,48,49,50,51,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[53,54,55,56,57,58,59,51,60,52,61,62,63,39,64,65],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[53,54,55,56,58,59,51,60,52,61,62,63,39,64,65],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[67],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[68,69,70],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[71,72,73,74,75,76],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[77,78,79,80,81,82,83,84],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[85,86],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,0,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,93,178,179,180,181,94,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,77,78,79,80,81,82,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,1,234,235,236,237,238,239,240,241,242,243,244,53,245,246,97,98,99,100,101,102,0,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,247,248,249,250,251,252,253,254,255,2,256,257,54,258,259,260,3,261,55,56,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,291,292,292,293,294,295,296,297,298,83,299,300,301,302,303,304,4,305,5,6,7,8,9,10,67,306,307,308,41,309,310,311,312,11,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,85,379,380,381,382,383,384,385,386,387,388,389,390,391,392,33,34,35,59,393,394,395,396,397,398,399,51,400,401,60,402,403,404,405,36,406,52,61,407,37,62,63,408,409,410,411,412,413,414,415,38,416,417,418,419,420,421,71,72,73,74,422,75,423,76,424,425,426,42,427,428,429,430,431,43,432,433,434,435,436,437,44,45,438,439,440,86,441,442,39,64,443,46,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,84,40,460,461,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[252,275,364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","type":"type","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[94,182,183,462],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[139,154,157,166,205,206,207,82,211,217,218,223,257,279,280,281,304,11,12,18,24,28,30,391,59,406,424,429,434,44,438],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[159],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[175,224,284,287,463,464,347,348,349,365],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,66,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,93,178,179,180,181,94,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,77,78,79,80,81,82,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,1,234,235,236,237,238,239,240,241,242,243,244,53,245,246,97,98,99,100,101,102,0,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,247,248,249,465,250,251,252,253,254,466,467,255,2,256,257,54,258,259,260,3,261,55,56,262,263,264,265,266,267,268,269,270,271,272,468,273,274,275,276,277,469,470,278,279,471,280,281,282,283,284,285,286,287,288,289,290,291,291,292,292,293,294,295,296,297,298,83,299,300,301,302,303,304,4,305,5,6,7,8,9,10,67,306,307,308,41,472,309,473,310,311,312,11,313,314,315,474,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,464,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,85,379,380,381,382,383,384,385,386,475,387,476,388,389,390,477,478,479,32,480,481,482,483,484,485,486,487,488,489,490,491,391,492,493,494,495,496,392,497,33,34,35,59,393,394,395,396,397,398,399,51,400,401,60,402,403,404,405,36,406,52,61,407,37,62,63,408,409,410,411,412,413,414,415,38,416,417,418,419,420,421,71,72,73,74,422,75,423,76,424,425,426,42,427,428,429,430,431,43,432,433,434,435,436,437,44,45,438,439,440,86,441,442,39,64,443,46,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,84,40,460,461,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[141,142,144,146,147,149,159,164,210,212,220],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[94,182,183,462],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[167,169,170,172,173,174,175,177,178,179,181,183,184,185,187,188,189,190,192,194,195,196,197,198,199,200,224,225,234,235,236,97,98,100,102,0,103,104,105,107,108,109,110,112,113,114,115,116,117,118,282,283,285,287,289,290,294,324,325,326,327,328,345,346,347,348,349,350,351,352,362,365,386,475,387,476,405,71,72,73,74,422,75,76,448,449,450,451,452,454,457],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[93,94,193,238,239,291,291,292,292],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[141,142,144,146,147,149,159,164,210,212,220],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[233,338,377,491,392],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[478,484,488,492,493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:129","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"failures":[122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,173,174,175,177,178,179,181,94,182,183,184,185,186,187,188,189,190,192,195,196,197,198,201,202,203,204,205,206,207,208,209,77,78,79,80,81,82,210,211,212,213,214,215,216,217,218,219,220,221,222,223,231,232,233,1,234,235,236,237,238,241,242,243,244,53,245,246,100,0,112,118,251,2,256,257,54,258,259,260,3,261,55,56,262,263,264,265,266,267,268,269,274,279,280,281,282,283,284,285,286,287,288,289,290,291,291,292,292,293,294,295,296,297,298,83,299,300,301,302,303,304,4,305,5,6,7,8,9,10,67,306,307,308,41,472,309,473,310,311,312,11,313,314,315,316,317,318,319,320,321,322,323,325,326,327,329,330,331,332,333,334,335,336,337,338,339,341,342,343,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,368,369,370,371,372,373,374,375,376,377,378,85,379,380,381,382,383,384,385,387,388,389,390,391,392,33,34,35,59,393,394,395,396,397,398,399,51,400,401,60,402,403,404,405,36,406,52,61,407,37,62,63,408,409,410,411,412,413,414,415,38,416,417,418,419,420,71,424,425,426,42,427,428,429,430,431,43,432,433,434,435,436,437,44,45,438,439,440,86,442,39,64,443,46,444,445,446,450,451,452,454,458,459,84,40,460,461,65],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":142,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":36,"org.easymock.tests2.UsageTest.argumentsOrdered":56,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":136,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":486,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":259,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":293,"org.easymock.tests2.DelegateToTest.testReturnException":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":413,"org.easymock.tests.MockingTest.testPartialClassMocking":451,"org.easymock.tests.MockClassControlTest.testToString":347,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":121,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":494,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":106,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":0,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":12,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":232,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":148,"org.easymock.tests2.UsageTest.wrongArguments":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":335,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":255,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":419,"org.easymock.samples.ExampleTest.answerVsDelegate":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":365,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":456,"org.easymock.tests2.UsageConstraintsTest.testNull":144,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":187,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":135,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":352,"org.easymock.tests2.CaptureTest.testPrimitive":213,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":339,"org.easymock.tests.UsageTest.moreThanOneArgument":406,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":31,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":444,"org.easymock.tests.UsageTest.argumentsOrdered":63,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":370,"org.easymock.tests.UsageVarargTest.varargIntAccepted":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":491,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":67,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":470,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":41,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":251,"org.easymock.tests.ReplayStateInvalidUsageTest.times":382,"org.easymock.tests2.DependencyTest.testClassMocking":229,"org.easymock.tests2.AnswerTest.answer":264,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":492,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":204,"org.easymock.tests2.CaptureTest.testAnd":210,"org.easymock.tests2.UsageTest.strictResetToDefault":256,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":331,"org.easymock.tests2.DelegateToTest.testDelegate":82,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":27,"org.easymock.tests.LimitationsTest.mockFinalMethod":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":397,"org.easymock.tests2.DependencyTest.testClassMockingSupport":230,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":440,"org.easymock.tests2.CaptureTest.testCapture1_2446744":214,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":191,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":202,"org.easymock.tests.UsageThrowableTest.throwError":4,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":377,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":364,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":463,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":120,"org.easymock.samples.PartialClassMockTest.testGetArea":294,"org.easymock.tests.MockingTest.testInterfaceMocking":453,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":306,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":389,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":13,"org.easymock.tests2.UsageTest.niceToStrict":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":92,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":173,"org.easymock.tests2.MockBuilderTest.testCreateMock":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":115,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":254,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":21,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":131,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":417,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":89,"org.easymock.tests.UsageOverloadedMethodTest.overloading":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":111,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":154,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":433,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":311,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":153,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":219,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":474,"org.easymock.tests2.EasyMockSupportClassTest.testAll":100,"org.easymock.tests.MockClassControlTest.testEquals":351,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":203,"org.easymock.tests2.CaptureTest.testCaptureAll":211,"org.easymock.tests.MockNameTest.defaultName":447,"org.easymock.tests2.UsageConstraintsTest.testMatches":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":445,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":375,"org.easymock.samples.ExampleTest.voteForRemovals":302,"org.easymock.tests.UsageVarargTest.allKinds":323,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":396,"org.easymock.samples.BasicClassMockTest.testPrintContent":290,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":9,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":416,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":276,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":423,"org.easymock.tests2.UsageConstraintsTest.greaterThan":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":101,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":330,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":198,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":76,"org.easymock.samples.ExampleTest.voteForRemoval":299,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":199,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":206,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":366,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":190,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":405,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":483,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":128,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":412,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":77,"org.easymock.tests2.CaptureTest.testCaptureFirst":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":482,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":129,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":263,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":65,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":430,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":208,"org.easymock.tests2.CaptureTest.testCapture2_2446744":222,"org.easymock.tests2.UsageTest.moreThanOneArgument":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":493,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":179,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":322,"org.easymock.tests.GenericTest.testBridgedEquals":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":90,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":87,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":360,"org.easymock.tests.UsageExpectAndReturnTest.longType":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":393,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":126,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":30,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":162,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":310,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":443,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":410,"org.easymock.tests.UsageCallCountTest.tooManyCalls":361,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":431,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":467,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":8,"org.easymock.tests.MockingTest.testNiceClassMocking":457,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":283,"org.easymock.tests.MockingTest.testClassMocking":449,"org.easymock.tests2.UsageConstraintsTest.testContains":152,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":354,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":236,"org.easymock.tests2.UsageConstraintsTest.testFind":143,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":11,"org.easymock.tests.MockTypeTest.fromEasyMockClass":363,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":398,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":280,"org.easymock.tests.UsageExpectAndReturnTest.object":432,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":134,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":317,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":343,"org.easymock.tests.UsageTest.exactCallCountByLastCall":408,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":91,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":481,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":472,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":239,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":44,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":313,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":84,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":271,"org.easymock.tests.MockClassControlTest.testHashCode":350,"org.easymock.tests2.EasyMockSupportTest.testVerify":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":109,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":372,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":458,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":34,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":201,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":228,"org.easymock.tests.UsageVarargTest.varargCharAccepted":316,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":421,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":497,"org.easymock.tests2.UsageTest.openCallCountByLastCall":260,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":137,"org.easymock.tests.DefaultClassInstantiatorTest.object":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":95,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":33,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":341,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":19,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":6,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":196,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":349,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":45,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":118,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":348,"org.easymock.tests2.UsageTest.resumeIfFailure":262,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":415,"org.easymock.tests2.StubTest.stubWithReturnValue":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":176,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":163,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":43,"org.easymock.tests2.SerializationTest.testAllMockedMethod":183,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":391,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":48,"org.easymock.samples.SupportTest.voteForRemovals":297,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":468,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":24,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":462,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":392,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":265,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":473,"org.easymock.tests.UsageExpectAndThrowTest.object":22,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":160,"org.easymock.tests2.DelegateToTest.testWrongClass":80,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":368,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":369,"org.easymock.tests.UsageStrictMockTest.range":60,"org.easymock.samples.ConstructorCalledMockTest.testTax":291,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":226,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":133,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":282,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":88,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":23,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":175,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":97,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":418,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":49,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":390,"org.easymock.tests2.CaptureTest.testCaptureNone":218,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":68,"org.easymock.tests.UsageUnorderedTest.message":59,"org.easymock.tests.UsageVerifyTest.twoReturns":64,"org.easymock.tests.UsageVarargTest.varargByteAccepted":321,"org.easymock.tests2.ThreadingTest.testThreadSafe":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":113,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":358,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":289,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":344,"org.easymock.tests2.CaptureTest.testCapture_2617107":212,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":495,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":338,"org.easymock.tests2.UsageConstraintsTest.any":150,"org.easymock.tests2.StubTest.stub":233,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":381,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":414,"org.easymock.tests.UsageExpectAndThrowTest.longType":15,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":422,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":380,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":244,"org.easymock.tests2.SerializationTest.testClass":94,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":274,"org.easymock.tests.LimitationsTest.mockNativeMethod":387,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":439,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":249,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":246,"org.easymock.tests2.NameTest.nameForMocksControl":125,"org.easymock.tests2.MockedExceptionTest.testMockedException":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":102,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":37,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":471,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":454,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":16,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":184,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":177,"org.easymock.tests.MockingTest.testNicePartialClassMocking":452,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":189,"org.easymock.tests2.CompareToTest.testCompareEqual":498,"org.easymock.tests2.CaptureTest.testCaptureLast":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":247,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":86,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":147,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":288,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":161,"org.easymock.tests.MockingTest.testTwoMocks":450,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":20,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":55,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":165,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":70,"org.easymock.samples.ExampleTest.removeNonExistingDocument":303,"org.easymock.tests.UsageStrictMockTest.differentMethods":402,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":253,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":272,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":69,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":73,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":207,"org.easymock.tests2.MockBuilderTest.testCreateMockString":181,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":103,"org.easymock.tests.UsageExpectAndThrowTest.floatType":14,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":99,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":267,"org.easymock.tests.UsageVerifyTest.twoThrows":39,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":240,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":112,"org.easymock.samples.ExampleTest.voteAgainstRemoval":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":487,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":388,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":197,"org.easymock.tests.LimitationsTest.privateConstructor":475,"org.easymock.tests2.UsageConstraintsTest.testNotNull":164,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":10,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":234,"org.easymock.tests2.UsageTest.defaultResetToNice":261,"org.easymock.samples.ExampleTest.voteAgainstRemovals":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":488,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":248,"org.easymock.tests.UsageVarargTest.differentLength":318,"org.easymock.tests2.CallbackTest.callback":281,"org.easymock.tests2.UsageConstraintsTest.equals":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":193,"org.easymock.tests.UsageTest.openCallCountByLastCall":407,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":337,"org.easymock.tests.UsageCallCountTest.tooFewCalls":356,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":420,"org.easymock.tests.UsageThrowableTest.throwCheckedException":7,"org.easymock.tests.MockingTest.testStrictClassMocking":448,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":50,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":287,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":252,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":284,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":383,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":286,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":269,"org.easymock.tests.ObjectMethodsTest.testHashCode":342,"org.easymock.tests2.NameTest.nameForNiceMock":124,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":209,"org.easymock.tests2.DependencyTest.testInterfaceMocking":231,"org.easymock.samples.ExampleTest.addDocument":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":119,"org.easymock.tests2.DelegateToTest.testStubDelegate":79,"org.easymock.tests2.AnswerTest.stubAnswer":268,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":400,"org.easymock.tests.UsageVarargTest.varargLongAccepted":320,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":485,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":438,"org.easymock.tests.UsageExpectAndReturnTest.floatType":426,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":238,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":469,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":158,"org.easymock.tests.UsageThrowableTest.noUpperLimit":305,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":140,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":224,"org.easymock.tests2.SerializationTest.test":182,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":215,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":425,"org.easymock.tests2.UsageConstraintsTest.testSame":145,"org.easymock.samples.SupportTest.addDocument":296,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":104,"org.easymock.tests.GenericTest.testPackageScope":325,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":480,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":277,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":455,"org.easymock.tests2.NameTest.nameForMock":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":434,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":180,"org.easymock.tests2.UsageStrictMockTest.differentMethods":245,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":194,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":427,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":26,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":340,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":332,"org.easymock.tests2.MockedExceptionTest.testRealException":237,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":490,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":227,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":489,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":243,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":336,"org.easymock.tests2.NameTest.nameForStrictMock":123,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":172,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":96,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":279,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":188,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":225,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":159,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":74,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":169,"org.easymock.tests2.UsageStrictMockTest.range":53,"org.easymock.tests2.UsageConstraintsTest.lessThan":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":484,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":108,"org.easymock.tests2.CaptureTest.testCaptureRightOne":220,"org.easymock.tests2.UsageConstraintsTest.testOr":146,"org.easymock.tests.UsageRangeTest.combination":329,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":185,"org.easymock.tests.UsageTest.wrongArguments":61,"org.easymock.tests2.MockBuilderTest.testWithConstructor":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":105,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":478,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":435,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":75,"org.easymock.tests.UsageVarargTest.varargShortAccepted":319,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":359,"org.easymock.tests2.UsageConstraintsTest.cmpTo":151,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":32,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests2.CaptureTest.testCaptureFromStub":221,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":376,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":170,"org.easymock.tests.UsageTest.unexpectedCallWithArray":52,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":357,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":436,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":401,"org.easymock.tests2.UsageConstraintsTest.constraints":141,"org.easymock.samples.ExampleTest.addAndChangeDocument":304,"org.easymock.tests.UsageStrictMockTest.testVerify":404,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":295,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":394,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":307,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":429,"org.easymock.tests.LimitationsTest.abstractClass":386,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":132,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":314}}]
