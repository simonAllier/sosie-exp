[{"position":"org.easymock.internal.MockBuilder:210","failures":[0,1,2,3,4,5,5,6,6],"status":-1,"binaryOperator":"(this.org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[7,8,9],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[10,11,12,13,14,15,16,1,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[88,89,18,90],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[88,89,91,92,93,94,95,96,97,98,99,100,0,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,10,155,11,12,156,157,158,159,13,160,161,14,162,163,164,165,166,167,168,169,170,15,171,172,173,174,175,16,176,177,1,2,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,17,18,19,20,21,22,215,216,23,3,217,218,24,25,26,219,90,220,221,222,27,223,28,29,30,31,224,32,33,34,225,226,227,228,229,35,36,230,231,37,232,233,234,38,235,39,236,40,237,4,238,41,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,42,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,43,44,45,46,47,48,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,7,8,322,323,324,9,325,326,49,327,328,329,330,331,332,333,334,335,336,337,50,338,51,52,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,53,54,55,56,362,363,364,365,366,367,368,57,58,369,59,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,60,61,62,63,64,65,393,394,66,67,395,68,69,70,396,71,72,73,74,75,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,76,77,78,79,80,443,444,81,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,82,480,481,482,83,483,5,6,84,484,85,86,485,87,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[196],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[207],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[89,91,92,93,94,96,0,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,129,136,137,138,139,140,146,153,154,10,155,11,12,156,13,14,15,16,1,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,17,18,19,20,21,22,23,24,25,26,220,221,222,27,223,28,29,30,31,32,33,34,226,227,35,36,37,38,39,40,41,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,42,269,270,271,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,43,44,45,46,47,48,307,49,327,328,329,330,331,332,333,334,335,336,337,50,338,51,52,339,340,341,342,343,344,345,346,347,348,358,359,360,53,54,55,56,362,363,364,368,57,58,59,373,374,375,376,377,378,388,389,390,391,392,60,61,62,63,64,65,393,394,66,67,395,68,69,70,396,71,72,73,74,75,397,398,399,401,402,403,404,405,406,407,408,409,411,412,413,414,416,417,434,440,442,76,77,78,79,80,81,446,447,449,450,451,452,453,454,455,456,457,458,459,460,462,463,464,476,477,478,479,82,480,481,482,83,483,5,5,6,6,84,484,85,86,485,87,487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[357],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[361],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[488,489,337,490,491,448],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[221,222],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[124,125,126,127,128,129,130,131,132,133,134,135,141,142,143,144,145,146,147,148,149,150,151,152,482,483],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:205","failures":[0,136,14,15,16,1,2,178,215,3,24,25,90,230,231,37,232,233,234,38,235,39,236,40,237,4,238,41,239,240,357,360,379,384,83,5,6],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[488,489,337,490,491,448],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[492,105,115,116,493],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[94,96,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,10,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,23,43,44,49,327,328,329,330,337,50,377,391,392,408,442,76,77,78,79,80],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[119,120],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[186,205,208,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[0,101,102,495],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"genericType","type":"type","this":"this"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[0,102,136,137,138,157,158,13,161,14,162,163,164,166,167,168,169,15,171,172,173,174,175,16,1,2,178,179,183,17,18,20,21,22,215,23,3,217,218,24,25,26,219,90,28,29,30,31,33,34,230,231,37,232,233,234,38,235,39,236,40,4,238,41,239,240,296,7,8,322,323,324,9,326,349,350,351,352,353,354,355,356,357,358,359,360,361,366,367,368,57,58,59,372,379,384,443,444,81,445,480,481,83,5,6],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:324","failures":[345,346,477],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[3,231,496,239,5,6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[104,106,114,188,189,192,194,195,197,207,212],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[0,102,136,137,138,157,158,159,13,160,161,14,162,163,164,165,166,167,168,169,170,15,171,172,173,174,175,16,176,177,1,2,179,180,181,183,17,18,20,21,22,215,23,3,217,218,24,25,26,219,90,28,29,30,31,33,34,228,229,230,37,232,234,38,235,39,40,4,238,41,240,296,7,8,322,323,324,9,326,349,350,351,352,353,354,355,356,357,358,359,360,361,366,367,368,57,58,59,372,379,384,443,444,81,445,480,481,83,5,5,6,6],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[0,215,230,37,38,235,39,40,238,41,240,360,388,83],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,101,104,105,106,107,108,111,112,113,114,116,117,118,122,123,129,138,140,146,10,11,12,13,14,15,16,1,186,187,188,189,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,17,18,19,20,21,22,23,24,25,26,220,221,222,27,223,28,29,30,31,32,33,34,227,35,36,37,38,39,40,41,241,242,243,245,247,248,249,252,253,254,255,256,257,258,259,260,261,262,263,264,265,268,42,269,271,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,43,44,45,46,47,48,49,327,330,50,51,52,341,343,344,345,346,347,348,358,57,58,59,377,391,392,60,61,62,63,64,65,393,394,66,67,395,68,69,70,396,71,72,73,74,75,76,77,78,79,80,81,446,447,450,451,454,455,457,458,460,462,463,464,476,477,478,82,83,84,484,85,86,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[190,250,452],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"o"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":189,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":446,"org.easymock.tests2.UsageTest.argumentsOrdered":251,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":264,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":428,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":246,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":482,"org.easymock.tests2.DelegateToTest.testReturnException":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":374,"org.easymock.tests.MockingTest.testPartialClassMocking":57,"org.easymock.tests.MockClassControlTest.testToString":351,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":88,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":165,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":276,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":36,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":49,"org.easymock.tests2.UsageTest.wrongArguments":244,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":274,"org.easymock.samples.ExampleTest.answerVsDelegate":484,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":384,"org.easymock.tests2.UsageConstraintsTest.testNull":192,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":371,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":263,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":356,"org.easymock.tests2.CaptureTest.testPrimitive":107,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":330,"org.easymock.tests.UsageTest.moreThanOneArgument":447,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":295,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":19,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":55,"org.easymock.tests.UsageTest.argumentsOrdered":453,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":300,"org.easymock.tests.UsageVarargTest.varargIntAccepted":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":433,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":76,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":230,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":151,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":80,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests.ReplayStateInvalidUsageTest.times":317,"org.easymock.tests2.DependencyTest.testClassMocking":228,"org.easymock.tests2.AnswerTest.answer":118,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":435,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":100,"org.easymock.tests2.CaptureTest.testAnd":104,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":381,"org.easymock.tests2.UsageTest.strictResetToDefault":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":218,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":258,"org.easymock.tests2.DelegateToTest.testDelegate":271,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":304,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":291,"org.easymock.tests.LimitationsTest.mockFinalMethod":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":377,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":469,"org.easymock.tests2.DependencyTest.testClassMockingSupport":229,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":363,"org.easymock.tests2.CaptureTest.testCapture1_2446744":108,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":216,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":98,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":311,"org.easymock.tests.UsageThrowableTest.throwError":341,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":383,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":152,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":177,"org.easymock.samples.PartialClassMockTest.testGetArea":83,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":312,"org.easymock.tests.MockingTest.testInterfaceMocking":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":77,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":298,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":166,"org.easymock.tests2.UsageTest.niceToStrict":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":38,"org.easymock.tests2.MockBuilderTest.testCreateMock":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":173,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":132,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":488,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":285,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":259,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":380,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":390,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":409,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":272,"org.easymock.tests.UsageOverloadedMethodTest.overloading":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":170,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":458,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":202,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":68,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":201,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":113,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":400,"org.easymock.tests2.EasyMockSupportClassTest.testAll":13,"org.easymock.tests.MockClassControlTest.testEquals":355,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":467,"org.easymock.tests2.CaptureTest.testCaptureAll":105,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":99,"org.easymock.tests.MockNameTest.defaultName":387,"org.easymock.tests2.UsageConstraintsTest.testMatches":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":56,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":309,"org.easymock.samples.ExampleTest.voteForRemovals":87,"org.easymock.tests.UsageVarargTest.allKinds":408,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":476,"org.easymock.samples.BasicClassMockTest.testPrintContent":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":468,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":347,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":153,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":148,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":378,"org.easymock.tests2.UsageConstraintsTest.greaterThan":205,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":160,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":46,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":26,"org.easymock.samples.ExampleTest.voteForRemoval":85,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":326,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":219,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":221,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":385,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":215,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":241,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":296,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":256,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":373,"org.easymock.tests2.CaptureTest.testCaptureFirst":117,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":257,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":253,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":394,"org.easymock.tests2.CaptureTest.testCapture2_2446744":116,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":27,"org.easymock.tests2.UsageTest.moreThanOneArgument":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":436,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":41,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":407,"org.easymock.tests.GenericTest.testBridgedEquals":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":416,"org.easymock.tests.UsageExpectAndReturnTest.longType":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":465,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":294,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":210,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":53,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":333,"org.easymock.tests.UsageCallCountTest.tooManyCalls":417,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":134,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":281,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":346,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":29,"org.easymock.tests.MockingTest.testNiceClassMocking":372,"org.easymock.tests.MockingTest.testClassMocking":367,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":410,"org.easymock.tests2.UsageConstraintsTest.testContains":200,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":138,"org.easymock.tests2.UsageConstraintsTest.testFind":191,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":464,"org.easymock.tests.MockTypeTest.fromEasyMockClass":382,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":96,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":335,"org.easymock.tests.UsageExpectAndReturnTest.object":395,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":262,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":402,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":473,"org.easymock.tests.UsageTest.exactCallCountByLastCall":454,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":301,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":306,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":2,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":72,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":457,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":142,"org.easymock.tests.MockClassControlTest.testHashCode":354,"org.easymock.tests2.EasyMockSupportTest.testVerify":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":168,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":302,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":455,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":389,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":97,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":103,"org.easymock.tests.UsageVarargTest.varargCharAccepted":401,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":321,"org.easymock.tests2.CaptureTest.testCaptureMultiple":492,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":441,"org.easymock.tests2.UsageTest.openCallCountByLastCall":247,"org.easymock.tests.DefaultClassInstantiatorTest.object":7,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":265,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":388,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":169,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":283,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":127,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":141,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":282,"org.easymock.tests.CapturesMatcherTest.test":493,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":16,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":352,"org.easymock.tests2.UsageTest.resumeIfFailure":252,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":379,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":376,"org.easymock.tests2.StubTest.stubWithReturnValue":227,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":236,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":67,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":211,"org.easymock.tests2.SerializationTest.testAllMockedMethod":102,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":434,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":489,"org.easymock.samples.SupportTest.voteForRemovals":82,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":357,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":144,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":288,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":440,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":119,"org.easymock.tests.UsageExpectAndThrowTest.object":286,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":308,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":208,"org.easymock.tests2.DelegateToTest.testWrongClass":269,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":43,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":44,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests.UsageStrictMockTest.range":51,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":184,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":261,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":28,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":287,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":39,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":157,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":273,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":490,"org.easymock.tests2.CaptureTest.testCaptureNone":112,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":299,"org.easymock.tests.UsageUnorderedTest.message":442,"org.easymock.tests.UsageVerifyTest.twoReturns":478,"org.easymock.tests.UsageVarargTest.varargByteAccepted":406,"org.easymock.tests2.ThreadingTest.testThreadSafe":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":171,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":414,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":480,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":474,"org.easymock.tests2.CaptureTest.testCapture_2617107":106,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":438,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":329,"org.easymock.tests2.UsageConstraintsTest.any":198,"org.easymock.tests2.StubTest.stub":226,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":316,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndThrowTest.longType":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":375,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":324,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":315,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":155,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":146,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":81,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":75,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":360,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":126,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":156,"org.easymock.tests2.NameTest.nameForMocksControl":93,"org.easymock.tests2.MockedExceptionTest.testMockedException":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":161,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":451,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":59,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":280,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":40,"org.easymock.tests.MockingTest.testNicePartialClassMocking":58,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":22,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":124,"org.easymock.tests2.CaptureTest.testCaptureLast":111,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":364,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":34,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":195,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":209,"org.easymock.tests.MockingTest.testTwoMocks":368,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":284,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":250,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":213,"org.easymock.samples.ExampleTest.removeNonExistingDocument":486,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":131,"org.easymock.tests.UsageStrictMockTest.differentMethods":52,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":313,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":143,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":322,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":222,"org.easymock.tests2.MockBuilderTest.testCreateMockString":240,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":162,"org.easymock.tests.UsageExpectAndThrowTest.floatType":278,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":159,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":121,"org.easymock.tests.UsageVerifyTest.twoThrows":477,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":178,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":15,"org.easymock.samples.ExampleTest.voteAgainstRemoval":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":429,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":297,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":25,"org.easymock.tests.LimitationsTest.privateConstructor":444,"org.easymock.tests2.UsageConstraintsTest.testNotNull":212,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":348,"org.easymock.tests2.UsageTest.defaultResetToNice":249,"org.easymock.samples.ExampleTest.voteAgainstRemovals":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":71,"org.easymock.tests.UsageVarargTest.differentLength":403,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":125,"org.easymock.tests2.CallbackTest.callback":140,"org.easymock.tests2.UsageConstraintsTest.equals":190,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":3,"org.easymock.tests.UsageTest.openCallCountByLastCall":450,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":186,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":328,"org.easymock.tests.UsageCallCountTest.tooFewCalls":412,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":31,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":275,"org.easymock.tests.UsageThrowableTest.throwCheckedException":345,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":491,"org.easymock.tests.MockingTest.testStrictClassMocking":366,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":392,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":130,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":30,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":32,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":123,"org.easymock.tests.ObjectMethodsTest.testHashCode":472,"org.easymock.tests2.NameTest.nameForNiceMock":92,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":223,"org.easymock.tests2.DependencyTest.testInterfaceMocking":35,"org.easymock.samples.ExampleTest.addDocument":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":176,"org.easymock.tests2.DelegateToTest.testStubDelegate":42,"org.easymock.tests2.AnswerTest.stubAnswer":122,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":50,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":237,"org.easymock.tests.UsageVarargTest.varargLongAccepted":405,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.floatType":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":1,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":150,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":206,"org.easymock.tests.UsageThrowableTest.noUpperLimit":342,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":187,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":179,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":109,"org.easymock.tests2.SerializationTest.test":101,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":61,"org.easymock.tests2.UsageConstraintsTest.testSame":193,"org.easymock.samples.SupportTest.addDocument":479,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":224,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":163,"org.easymock.tests.GenericTest.testPackageScope":358,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":149,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":370,"org.easymock.tests2.NameTest.nameForMock":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":69,"org.easymock.tests2.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":239,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":217,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":290,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":470,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":48,"org.easymock.tests2.MockedExceptionTest.testRealException":139,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":431,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":320,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":327,"org.easymock.tests2.NameTest.nameForStrictMock":91,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":234,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":94,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":183,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":207,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":323,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":37,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests2.UsageConstraintsTest.lessThan":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":426,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":167,"org.easymock.tests2.CaptureTest.testCaptureRightOne":114,"org.easymock.tests2.UsageConstraintsTest.testOr":194,"org.easymock.tests.UsageRangeTest.combination":45,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.UsageTest.wrongArguments":449,"org.easymock.tests2.MockBuilderTest.testWithConstructor":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":164,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":70,"org.easymock.tests.UsageVarargTest.varargShortAccepted":404,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":9,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":415,"org.easymock.tests2.UsageConstraintsTest.cmpTo":199,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":421,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":248,"org.easymock.tests2.CaptureTest.testCaptureFromStub":115,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":310,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":232,"org.easymock.tests.UsageTest.unexpectedCallWithArray":448,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":337,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":413,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":496,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":396,"org.easymock.tests2.UsageConstraintsTest.constraints":188,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":338,"org.easymock.samples.ExampleTest.addAndChangeDocument":487,"org.easymock.tests.UsageStrictMockTest.testVerify":340,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":483,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":336,"org.easymock.tests2.CompareToTest.testGreateThan":494,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":466,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":78,"org.easymock.tests.LimitationsTest.abstractClass":443,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":393,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":79,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":260}}]
