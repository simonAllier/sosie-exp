[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5,6,7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[8,9,10,4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,5,31,32,6,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,0,1,2,162,3,163,164,8,165,166,167,168,169,170,9,171,172,173,174,10,175,176,177,178,179,180,4,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,7,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[23,83,84,507,126,508,509,510,511,512],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[401,403,412,413,415],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[340,513,514],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"position":"org.easymock.internal.Range:52","failures":[30,41,43,44,47,48,50,51,53,111,112,113,114,168,169,173,174,185,186,209,218,220,221,227,247,287,288,290,291,292,293,294,295,324,326,329,335,385,431,442,444,456,457,458,485,486,488,489,503,504],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[165,170],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[515,516,517],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[518],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[23,25,54,57,74,75,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,117,118,119,120,121,122,123,124,126,127,128,129,145,146,148,149,150,151,153,154,155,156,157,158,159,160,161,188,189,190,235,235,236,236,237,238,239,258,263,286,519,336,337,338,339,340,341,520,342,356,358,359,443,444,445,446,447,448,449,450,451,452,455,494,495,496,498],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:382","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n    if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n        java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[16,23,24,25,30,32,6,36,37,38,40,41,42,43,44,45,46,47,48,50,51,52,53,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,79,80,81,83,88,91,101,107,115,116,121,123,124,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,153,158,163,164,8,165,167,168,169,170,9,171,173,174,10,175,176,177,178,179,180,4,181,182,183,184,185,186,187,190,197,205,206,207,209,210,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,237,238,239,243,245,246,247,253,254,255,256,257,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,323,324,325,326,328,329,330,331,332,333,334,335,358,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,383,384,385,386,387,388,389,390,391,392,429,431,432,433,435,436,438,439,440,441,442,444,445,456,457,458,464,466,467,469,479,481,482,484,485,486,487,488,489,490,495,496,498,503,504],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[131,133,141,9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[337,341],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[443,447],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[173,243],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[52,115,409,480,481,482],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,5,31,32,6,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,8,165,166,167,168,169,170,9,171,172,173,174,10,175,176,177,178,179,180,4,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,7,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[16,23,24,6,36,37,41,42,43,45,47,48,49,52,53,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,79,80,81,83,88,91,101,107,116,118,121,123,124,128,131,132,134,135,138,139,140,141,143,144,145,146,147,148,149,150,153,157,158,159,163,164,8,165,167,168,169,170,9,171,173,174,10,175,176,177,178,179,180,4,181,182,184,185,186,187,190,197,206,210,212,213,214,215,218,220,221,224,226,228,229,231,237,241,242,243,245,246,247,253,254,257,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,291,292,295,330,331,332,333,334,358,383,385,386,387,388,389,390,391,392,401,403,412,413,415,417,444,446,456,458,469,479,480,481,482,486,488,489,495,496,498],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[16,23,24,25,30,6,36,37,41,42,43,45,46,47,48,49,50,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,79,80,81,83,88,91,101,107,116,118,121,123,124,127,128,129,131,132,134,135,138,139,140,141,143,144,145,146,147,148,149,150,153,156,157,158,159,163,164,8,165,167,168,169,170,9,171,172,173,174,10,175,176,177,178,179,180,4,181,182,184,185,186,187,190,197,206,210,212,213,214,215,218,219,220,221,222,224,225,226,227,228,229,230,231,232,237,238,243,244,245,246,247,248,253,254,257,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,295,296,330,331,332,333,334,335,358,360,383,384,385,386,387,388,389,390,391,392,444,445,448,456,457,458,459,469,470,479,480,481,482,486,487,488,489,490,495,496,498,502],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[41,188,189,190,191,244,247,255,256,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,383,385,386,387,388,389,390,425,426,427,428,430,457],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.RecordState:314","failures":[297,298,472,473],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,5,31,32,6,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,521,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,522,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,523,118,119,524,120,121,122,123,507,124,125,126,127,128,525,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,8,165,166,167,168,169,170,9,171,172,173,174,10,175,176,177,178,179,180,4,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,519,336,337,338,339,340,341,520,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,7,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,526,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[23,83,84,507,126,508,509,510,511,512],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[443],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[116,142,163,164,167,168,169,170,10,176,177,179,180,185,186,187,218,235,236,243,253,254,257,330,331,332,333,334,344,391,392,393,397,398,406,411,459,460,461,462,463,486],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[23,83,84,507,126,508,509,510,511,512],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[132,133,135,136,137,138,139,144,178,183],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[173,243],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[23,24,25,527],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":165,"org.easymock.tests2.UsageTest.argumentsOrdered":51,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":287,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":70,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":402,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":46,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":225,"org.easymock.tests2.DelegateToTest.testReturnException":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":426,"org.easymock.tests.MockingTest.testPartialClassMocking":495,"org.easymock.tests.MockClassControlTest.testToString":450,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":110,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":95,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":360,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":37,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":508,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":171,"org.easymock.tests2.UsageTest.wrongArguments":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":253,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":250,"org.easymock.samples.ExampleTest.answerVsDelegate":227,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":263,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":500,"org.easymock.tests2.UsageConstraintsTest.testNull":168,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":148,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":455,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":69,"org.easymock.tests2.CaptureTest.testPrimitive":134,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":257,"org.easymock.tests.UsageTest.moreThanOneArgument":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":379,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":461,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":502,"org.easymock.tests.UsageTest.argumentsOrdered":294,"org.easymock.tests.UsageVarargTest.varargIntAccepted":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":330,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":117,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":56,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":202,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":334,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":304,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":16,"org.easymock.tests.ReplayStateInvalidUsageTest.times":352,"org.easymock.tests2.DependencyTest.testClassMocking":34,"org.easymock.tests2.AnswerTest.answer":30,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":409,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":29,"org.easymock.tests2.CaptureTest.testAnd":131,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":260,"org.easymock.tests2.UsageTest.strictResetToDefault":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":524,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":460,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":481,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":64,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":506,"org.easymock.tests2.DelegateToTest.testDelegate":209,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":375,"org.easymock.tests.LimitationsTest.mockFinalMethod":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":478,"org.easymock.tests2.DependencyTest.testClassMockingSupport":35,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":380,"org.easymock.tests2.CaptureTest.testCapture1_2446744":135,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":27,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":346,"org.easymock.tests.UsageThrowableTest.throwError":383,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":262,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":526,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":109,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":307,"org.easymock.samples.PartialClassMockTest.testGetArea":237,"org.easymock.tests.MockingTest.testInterfaceMocking":497,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":331,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":241,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":96,"org.easymock.tests2.UsageTest.niceToStrict":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":361,"org.easymock.tests2.ThreadingTest.testChangeDefault":211,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":121,"org.easymock.tests2.MockBuilderTest.testCreateMock":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":19,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":369,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":65,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":259,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":473,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":248,"org.easymock.tests.UsageOverloadedMethodTest.overloading":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":100,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":467,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":176,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":277,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":513,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":175,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":140,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":434,"org.easymock.tests.MockClassControlTest.testEquals":454,"org.easymock.tests2.EasyMockSupportClassTest.testAll":88,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":445,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":377,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":476,"org.easymock.tests2.CaptureTest.testCaptureAll":132,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":28,"org.easymock.tests.MockNameTest.defaultName":343,"org.easymock.tests2.UsageConstraintsTest.testMatches":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":462,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":344,"org.easymock.samples.ExampleTest.voteForRemovals":231,"org.easymock.tests.UsageVarargTest.allKinds":442,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":456,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":477,"org.easymock.samples.BasicClassMockTest.testPrintContent":239,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":389,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":430,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":199,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":208,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":520,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":512,"org.easymock.tests2.UsageConstraintsTest.greaterThan":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":89,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":480,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":159,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":308,"org.easymock.samples.ExampleTest.voteForRemoval":228,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":342,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":160,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":212,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":264,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":521,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":151,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":300,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":41,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":286,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":62,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":425,"org.easymock.tests2.CaptureTest.testCaptureFirst":144,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":63,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":53,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":273,"org.easymock.tests2.CaptureTest.testCapture2_2446744":143,"org.easymock.tests2.UsageTest.moreThanOneArgument":43,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":410,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":128,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":441,"org.easymock.tests.GenericTest.testBridgedEquals":447,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":328,"org.easymock.tests.UsageExpectAndReturnTest.longType":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":474,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":378,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":183,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":252,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":459,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":297,"org.easymock.tests.UsageCallCountTest.tooManyCalls":329,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":274,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":365,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":388,"org.easymock.tests.MockingTest.testNiceClassMocking":501,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":75,"org.easymock.tests.MockingTest.testClassMocking":493,"org.easymock.tests2.UsageConstraintsTest.testContains":10,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":322,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":190,"org.easymock.tests2.UsageConstraintsTest.testFind":167,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":247,"org.easymock.tests.MockTypeTest.fromEasyMockClass":261,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":483,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":40,"org.easymock.tests.UsageExpectAndReturnTest.object":276,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":20,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":518,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":509,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":436,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":422,"org.easymock.tests.UsageTest.exactCallCountByLastCall":295,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":503,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":84,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":431,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":282,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":466,"org.easymock.tests.MockClassControlTest.testHashCode":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":193,"org.easymock.tests2.EasyMockSupportTest.testVerify":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":98,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":504,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":472,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":464,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":26,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":130,"org.easymock.tests.UsageVarargTest.varargCharAccepted":435,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":519,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastCall":47,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":515,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":71,"org.easymock.tests.DefaultClassInstantiatorTest.object":336,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":471,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":99,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":367,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":386,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":14,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":192,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":452,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":157,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":306,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":366,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":283,"org.easymock.tests.ReplayStateInvalidCallsTest.times":312,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":296,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":313,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":107,"org.easymock.tests2.UsageTest.resumeIfFailure":52,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":258,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":55,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":428,"org.easymock.tests2.StubTest.stubWithReturnValue":116,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":507,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":275,"org.easymock.tests2.SerializationTest.testAllMockedMethod":25,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":408,"org.easymock.samples.SupportTest.voteForRemovals":224,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":443,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":195,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":372,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":527,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":414,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":5,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":418,"org.easymock.tests.UsageExpectAndThrowTest.object":370,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":181,"org.easymock.tests2.DelegateToTest.testWrongClass":207,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":391,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":310,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":392,"org.easymock.tests.UsageStrictMockTest.range":488,"org.easymock.samples.ConstructorCalledMockTest.testTax":235,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":58,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":67,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":371,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":85,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":293,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":249,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":302,"org.easymock.tests2.CaptureTest.testCaptureNone":139,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":242,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":1,"org.easymock.tests.UsageUnorderedTest.message":335,"org.easymock.tests.UsageVerifyTest.twoReturns":458,"org.easymock.tests.UsageVarargTest.varargByteAccepted":440,"org.easymock.tests2.ThreadingTest.testThreadSafe":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":102,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":326,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":423,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":238,"org.easymock.tests2.CaptureTest.testCapture_2617107":133,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":256,"org.easymock.tests2.UsageConstraintsTest.any":173,"org.easymock.tests2.StubTest.stub":115,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndThrowTest.longType":363,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":340,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":350,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":219,"org.easymock.tests2.SerializationTest.testClass":23,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":197,"org.easymock.tests.LimitationsTest.mockNativeMethod":358,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":446,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":285,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":13,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":318,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":222,"org.easymock.tests2.NameTest.nameForMocksControl":114,"org.easymock.tests2.MockedExceptionTest.testMockedException":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":90,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":292,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":498,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":39,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":364,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":145,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":124,"org.easymock.tests.MockingTest.testNicePartialClassMocking":496,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":150,"org.easymock.tests2.CaptureTest.testCaptureLast":138,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":11,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":381,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":81,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":317,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":182,"org.easymock.tests.MockingTest.testTwoMocks":494,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":314,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":82,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":368,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":50,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":186,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":3,"org.easymock.samples.ExampleTest.removeNonExistingDocument":232,"org.easymock.tests.UsageStrictMockTest.differentMethods":489,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":18,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":194,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":162,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":338,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":213,"org.easymock.tests2.MockBuilderTest.testCreateMockString":129,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":92,"org.easymock.tests.UsageExpectAndThrowTest.floatType":362,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":32,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":522,"org.easymock.tests.UsageVerifyTest.twoThrows":457,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":101,"org.easymock.samples.ExampleTest.voteAgainstRemoval":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":403,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":240,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":158,"org.easymock.tests.LimitationsTest.privateConstructor":357,"org.easymock.tests2.UsageConstraintsTest.testNotNull":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":390,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":188,"org.easymock.tests2.UsageTest.defaultResetToNice":49,"org.easymock.samples.ExampleTest.voteAgainstRemovals":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":281,"org.easymock.tests.UsageVarargTest.differentLength":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":12,"org.easymock.tests2.CallbackTest.callback":73,"org.easymock.tests2.UsageConstraintsTest.equals":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":154,"org.easymock.tests.UsageTest.openCallCountByLastCall":291,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":255,"org.easymock.tests.UsageCallCountTest.tooFewCalls":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":251,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":2,"org.easymock.tests.UsageThrowableTest.throwCheckedException":387,"org.easymock.tests.MockingTest.testStrictClassMocking":492,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":80,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":244,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":17,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":76,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":79,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":33,"org.easymock.tests.ObjectMethodsTest.testHashCode":421,"org.easymock.tests2.NameTest.nameForNiceMock":113,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":215,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":316,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":311,"org.easymock.tests2.DependencyTest.testInterfaceMocking":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":510,"org.easymock.samples.ExampleTest.addDocument":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":108,"org.easymock.tests2.DelegateToTest.testStubDelegate":206,"org.easymock.tests2.AnswerTest.stubAnswer":6,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":486,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":125,"org.easymock.tests.UsageVarargTest.varargLongAccepted":439,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndReturnTest.floatType":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":83,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":236,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":468,"org.easymock.tests.UsageThrowableTest.noUpperLimit":384,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":201,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":164,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":54,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":136,"org.easymock.tests2.SerializationTest.test":24,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":514,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":337,"org.easymock.tests2.UsageConstraintsTest.testSame":169,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":267,"org.easymock.samples.SupportTest.addDocument":223,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":78,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":301,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":93,"org.easymock.tests.GenericTest.testPackageScope":444,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":200,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":499,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":299,"org.easymock.tests2.NameTest.nameForMock":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":278,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":525,"org.easymock.tests2.UsageStrictMockTest.differentMethods":221,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":155,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":374,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":419,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":482,"org.easymock.tests2.MockedExceptionTest.testRealException":191,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":405,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":254,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":355,"org.easymock.tests2.NameTest.nameForStrictMock":112,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":120,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":516,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":38,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":149,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":57,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":4,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":339,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":118,"org.easymock.tests2.UsageStrictMockTest.range":220,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":305,"org.easymock.tests2.UsageConstraintsTest.lessThan":187,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":61,"org.easymock.tests2.CaptureTest.testCaptureRightOne":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":97,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests2.UsageConstraintsTest.testOr":170,"org.easymock.tests.UsageRangeTest.combination":479,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":146,"org.easymock.tests.UsageTest.wrongArguments":290,"org.easymock.tests2.MockBuilderTest.testWithConstructor":523,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":94,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":279,"org.easymock.tests.UsageVarargTest.varargShortAccepted":438,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":341,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":327,"org.easymock.tests2.UsageConstraintsTest.cmpTo":174,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":319,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":31,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":396,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":48,"org.easymock.tests2.CaptureTest.testCaptureFromStub":142,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":345,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":119,"org.easymock.tests.UsageTest.unexpectedCallWithArray":289,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":315,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":485,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":325,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":280,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":487,"org.easymock.tests2.UsageConstraintsTest.constraints":8,"org.easymock.samples.ExampleTest.addAndChangeDocument":233,"org.easymock.tests.UsageStrictMockTest.testVerify":491,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":234,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":484,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":475,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":332,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":272,"org.easymock.tests.LimitationsTest.abstractClass":356,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":333,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":66}}]
