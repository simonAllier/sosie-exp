[{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[4,5,5,6,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[63,64,65,66,67,68,69,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[71,44,72,45],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[4,73,63,74,75,76,77,78,79,80,81,82,5,5,6,6,7,8,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,9,10,11,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,0,138,139,140,141,2,142,143,12,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,13,14,15,16,17,18,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,19,181,182,20,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,64,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,21,22,23,217,24,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,3,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,25,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,26,302,303,304,305,27,28,306,29,30,31,32,307,33,308,309,34,35,36,37,310,38,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,39,333,334,40,335,336,337,338,339,340,341,342,343,41,344,345,346,347,348,42,349,350,65,351,352,43,353,66,354,355,67,356,68,44,72,45,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,46,47,48,49,382,50,51,383,384,385,386,387,388,389,390,391,392,393,52,53,54,394,55,56,57,58,395,59,60,61,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,1,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,69,470,70,62,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[110,111],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[35,36,472,473,474,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[30,405,459],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[356,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.RecordState:318","failures":[165,168],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[466],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[475,476],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[462],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[461],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,111,12,144,145,146,147,148,149,150,13,14,15,16,17,18,163,164,215,216,21,220,300,301,26,302,27,28,29,30,31,33,309,34,37,310,38,330,39,334,335,336,339,342,344,345,348,352,43,45,46,49,396,397],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[44,477,478,479,480,481,482,395,62,471],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methods":"methods","list":"candidateMethods"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[110,111],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:232","sourceCode":"if (org.easymock.internal.Injection != null) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n} ","type":"CtIfImpl"},"failures":[376,436],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[4,5,5,6,6,7,8,9,10,11,12,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:201","failures":[4,5,5,6,6,110,11,19,20,32,308,35,36,38,40,41,42,351,44,52,53,54,394,55,57,58,483,395,60,61,62,471],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[449],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[63,201,389,391,393],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:229","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,111,12,144,145,146,147,148,149,150,13,14,15,16,17,18,163,164,215,216,21,220,300,301,26,302,27,28,29,30,31,33,309,34,37,310,38,330,39,334,335,336,339,342,344,345,348,352,43,45,46,49,396,397],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (this.int)) + \" and \") + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[113,178,179,180,186,188,191,192,208,209,211,212,384,385,386,387,402,403,409,410,415,417,418],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"maximum","maximum":"maximum"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[104,105,106,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":445,"org.easymock.tests2.UsageTest.argumentsOrdered":410,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":185,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":367,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":231,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":405,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":83,"org.easymock.tests2.DelegateToTest.testReturnException":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":195,"org.easymock.tests.MockingTest.testPartialClassMocking":22,"org.easymock.tests.MockClassControlTest.testToString":15,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":383,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":338,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":40,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":84,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":427,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":477,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":452,"org.easymock.tests2.UsageTest.wrongArguments":403,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":173,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":153,"org.easymock.samples.ExampleTest.answerVsDelegate":63,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":20,"org.easymock.tests2.UsageConstraintsTest.testNull":448,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":219,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":29,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":164,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":366,"org.easymock.tests2.CaptureTest.testPrimitive":314,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":177,"org.easymock.tests.UsageTest.moreThanOneArgument":186,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":103,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":258,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":140,"org.easymock.tests.UsageTest.argumentsOrdered":192,"org.easymock.tests.UsageVarargTest.varargIntAccepted":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":278,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":52,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":440,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":282,"org.easymock.tests.ReplayStateInvalidUsageTest.times":274,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":375,"org.easymock.tests2.DependencyTest.testClassMocking":424,"org.easymock.tests2.AnswerTest.answer":66,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":423,"org.easymock.tests2.CaptureTest.testAnd":311,"org.easymock.tests2.UsageTest.strictResetToDefault":401,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":257,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":361,"org.easymock.tests2.DelegateToTest.testDelegate":393,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":99,"org.easymock.tests.LimitationsTest.mockFinalMethod":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":159,"org.easymock.tests2.DependencyTest.testClassMockingSupport":425,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":303,"org.easymock.tests2.CaptureTest.testCapture1_2446744":315,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":97,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":421,"org.easymock.tests.UsageThrowableTest.throwError":165,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":268,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":182,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":441,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":350,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.MockingTest.testInterfaceMocking":217,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":279,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":105,"org.easymock.tests2.UsageTest.niceToStrict":404,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":221,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":55,"org.easymock.tests2.MockBuilderTest.testCreateMock":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":346,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":93,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":285,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":244,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":151,"org.easymock.tests.UsageOverloadedMethodTest.overloading":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":348,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":457,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":125,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":253,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":456,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":320,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":289,"org.easymock.tests.MockClassControlTest.testEquals":163,"org.easymock.tests2.EasyMockSupportClassTest.testAll":39,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":10,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":101,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":472,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":422,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":157,"org.easymock.tests2.CaptureTest.testCaptureAll":312,"org.easymock.tests.MockNameTest.defaultName":112,"org.easymock.tests2.UsageConstraintsTest.testMatches":458,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":259,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":266,"org.easymock.samples.ExampleTest.voteForRemovals":77,"org.easymock.tests.UsageVarargTest.allKinds":297,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":158,"org.easymock.samples.BasicClassMockTest.testPrintContent":8,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":171,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":437,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":199,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":481,"org.easymock.tests2.UsageConstraintsTest.greaterThan":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":135,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":37,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":150,"org.easymock.samples.ExampleTest.voteForRemoval":74,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":310,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":326,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":183,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":32,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":400,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":12,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":228,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":359,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":194,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":388,"org.easymock.tests2.CaptureTest.testCaptureFirst":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":360,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":412,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":121,"org.easymock.tests2.UsageTest.moreThanOneArgument":402,"org.easymock.tests2.CaptureTest.testCapture2_2446744":323,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":3,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":60,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":296,"org.easymock.tests.GenericTest.testBridgedEquals":111,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":251,"org.easymock.tests.UsageExpectAndReturnTest.longType":117,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":155,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":357,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":102,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":465,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":139,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":100,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":161,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":256,"org.easymock.tests.UsageCallCountTest.tooManyCalls":252,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":347,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":380,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":89,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":170,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":47,"org.easymock.tests.MockingTest.testNiceClassMocking":220,"org.easymock.tests.MockingTest.testClassMocking":216,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":474,"org.easymock.tests2.UsageConstraintsTest.testContains":455,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":245,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":43,"org.easymock.tests2.UsageConstraintsTest.testFind":447,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":255,"org.easymock.tests.MockTypeTest.fromEasyMockClass":181,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":70,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":206,"org.easymock.tests.UsageExpectAndReturnTest.object":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":365,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":478,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":291,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":264,"org.easymock.tests.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":226,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":141,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":107,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":471,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":130,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":286,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":201,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":431,"org.easymock.tests.MockClassControlTest.testHashCode":18,"org.easymock.tests2.EasyMockSupportTest.testVerify":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":341,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":2,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":64,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":420,"org.easymock.tests.UsageVarargTest.varargCharAccepted":290,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":243,"org.easymock.tests2.UsageTest.openCallCountByLastCall":406,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":476,"org.easymock.tests.DefaultClassInstantiatorTest.object":144,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":368,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":283,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":262,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":430,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":35,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":90,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":42,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":16,"org.easymock.tests2.UsageTest.resumeIfFailure":411,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":197,"org.easymock.tests2.StubTest.stubWithReturnValue":429,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":482,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":466,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":123,"org.easymock.tests2.SerializationTest.testAllMockedMethod":45,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":237,"org.easymock.samples.SupportTest.voteForRemovals":81,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":110,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":433,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":96,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":71,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":242,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":354,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":109,"org.easymock.tests.UsageExpectAndThrowTest.object":94,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":463,"org.easymock.tests2.DelegateToTest.testWrongClass":391,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":298,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":299,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests.UsageStrictMockTest.range":211,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":398,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":46,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":475,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":57,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":191,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":152,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":106,"org.easymock.tests2.CaptureTest.testCaptureNone":319,"org.easymock.tests.UsageUnorderedTest.message":113,"org.easymock.tests.UsageVerifyTest.twoReturns":180,"org.easymock.tests.UsageVarargTest.varargByteAccepted":295,"org.easymock.tests2.ThreadingTest.testThreadSafe":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":344,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":249,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":7,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":265,"org.easymock.tests2.CaptureTest.testCapture_2617107":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":240,"org.easymock.tests2.UsageConstraintsTest.any":1,"org.easymock.tests2.StubTest.stub":428,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":273,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":162,"org.easymock.tests.UsageExpectAndThrowTest.longType":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":241,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":148,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":272,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":416,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":435,"org.easymock.tests2.SerializationTest.testClass":44,"org.easymock.tests.LimitationsTest.mockNativeMethod":26,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":133,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":11,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":473,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":372,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":419,"org.easymock.tests2.NameTest.nameForMocksControl":387,"org.easymock.tests2.MockedExceptionTest.testMockedException":352,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":334,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":190,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":470,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":24,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":88,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":27,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":58,"org.easymock.tests.MockingTest.testNicePartialClassMocking":23,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":31,"org.easymock.tests2.CaptureTest.testCaptureLast":318,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":370,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":304,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":451,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":51,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":464,"org.easymock.tests.MockingTest.testTwoMocks":21,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":92,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":409,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":468,"org.easymock.samples.ExampleTest.removeNonExistingDocument":78,"org.easymock.tests.UsageStrictMockTest.differentMethods":212,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":432,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":146,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":327,"org.easymock.tests2.MockBuilderTest.testCreateMockString":61,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":13,"org.easymock.tests.UsageExpectAndThrowTest.floatType":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":335,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":332,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":67,"org.easymock.tests.UsageVerifyTest.twoThrows":179,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":41,"org.easymock.samples.ExampleTest.voteAgainstRemoval":75,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":232,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":36,"org.easymock.tests.LimitationsTest.privateConstructor":301,"org.easymock.tests2.UsageConstraintsTest.testNotNull":467,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":172,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":351,"org.easymock.tests2.UsageTest.defaultResetToNice":408,"org.easymock.samples.ExampleTest.voteAgainstRemovals":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":233,"org.easymock.tests.UsageVarargTest.differentLength":292,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":371,"org.easymock.tests2.CallbackTest.callback":65,"org.easymock.tests2.UsageConstraintsTest.equals":446,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":308,"org.easymock.tests.UsageTest.openCallCountByLastCall":189,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":175,"org.easymock.tests.UsageCallCountTest.tooFewCalls":247,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":49,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":154,"org.easymock.tests.UsageThrowableTest.throwCheckedException":169,"org.easymock.tests.MockingTest.testStrictClassMocking":215,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":138,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":50,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":376,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":275,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":382,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":68,"org.easymock.tests.ObjectMethodsTest.testHashCode":263,"org.easymock.tests2.NameTest.nameForNiceMock":386,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":329,"org.easymock.tests2.DependencyTest.testInterfaceMocking":426,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":479,"org.easymock.samples.ExampleTest.addDocument":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":345,"org.easymock.tests2.DelegateToTest.testStubDelegate":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.AnswerTest.stubAnswer":356,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":209,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":483,"org.easymock.tests.UsageVarargTest.varargLongAccepted":294,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":132,"org.easymock.tests.UsageExpectAndReturnTest.floatType":116,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":62,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":461,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":439,"org.easymock.tests.UsageThrowableTest.noUpperLimit":166,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":443,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":396,"org.easymock.tests2.SerializationTest.test":72,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":316,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":145,"org.easymock.tests2.UsageConstraintsTest.testSame":449,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":115,"org.easymock.samples.SupportTest.addDocument":80,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":336,"org.easymock.tests.GenericTest.testPackageScope":9,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":225,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":438,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":218,"org.easymock.tests2.NameTest.nameForMock":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":126,"org.easymock.tests2.UsageStrictMockTest.differentMethods":418,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":309,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":118,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":98,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":261,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":137,"org.easymock.tests2.MockedExceptionTest.testRealException":353,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":184,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":235,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":174,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":277,"org.easymock.tests2.NameTest.nameForStrictMock":385,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":394,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":30,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":397,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":462,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":147,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":53,"org.easymock.tests2.UsageStrictMockTest.range":417,"org.easymock.tests2.UsageConstraintsTest.lessThan":469,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":434,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":229,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":358,"org.easymock.tests2.CaptureTest.testCaptureRightOne":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":340,"org.easymock.tests2.UsageConstraintsTest.testOr":450,"org.easymock.tests.UsageRangeTest.combination":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":28,"org.easymock.tests.UsageTest.wrongArguments":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":337,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":14,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":222,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":149,"org.easymock.tests.UsageVarargTest.varargShortAccepted":293,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":250,"org.easymock.tests2.UsageConstraintsTest.cmpTo":454,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":224,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":407,"org.easymock.tests2.CaptureTest.testCaptureFromStub":322,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":267,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":54,"org.easymock.tests.UsageTest.unexpectedCallWithArray":187,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":208,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":248,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":128,"org.easymock.tests2.UsageConstraintsTest.constraints":444,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":210,"org.easymock.samples.ExampleTest.addAndChangeDocument":79,"org.easymock.tests.UsageStrictMockTest.testVerify":214,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":82,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":207,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":156,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":280,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":120,"org.easymock.tests.LimitationsTest.abstractClass":300,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":281,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":363}}]
