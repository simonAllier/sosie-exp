[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[38,39,40,41,42],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[43,44,45,46,47,48,49,50,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[53],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,3,107,108,109,110,111,112,113,114,115,116,117,36],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[57,59,67,74,75,77,79,80,82,92,97],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[50,118,119,120],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[121,122,123,124,125,126,127,128,129,130,131,54,132,133,134,135,136,137,138,139,140,43,141,55,56,50,118,119,142,0,143,144,145,146,57,58,59,60,61,62,63,64,65,66,67,68,69,70,1,147,148,149,150,151,152,2,153,154,155,156,157,38,158,39,40,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,159,160,161,162,163,164,165,166,167,168,100,169,37,170,171,172,173,174,175,176,177,178,179,41,180,181,182,183,184,101,185,186,187,188,189,190,191,192,193,194,195,102,103,196,197,198,199,200,201,202,203,204,205,206,104,105,106,3,107,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,207,208,209,210,24,211,25,26,27,28,29,30,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,108,109,232,233,234,235,236,110,111,112,113,114,237,238,239,240,241,242,243,244,245,115,246,247,248,249,250,31,251,252,32,33,253,254,255,256,34,257,258,259,260,261,262,263,264,116,117,265,266,267,268,269,270,36,271],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:2124","failures":[126,127,128,55,56,41],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1065","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[94,95],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[272,72,90,96],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[144,145,273,274,275,276,277,278,279,280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[50,118,119,120],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[186,214,216,230,231,116],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,281],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[121,122,123,124,125,282,126,127,128,129,130,131,54,132,133,134,135,283,284,285,286,287,288,289,290,291,292,293,294,295,296,136,137,138,139,140,43,141,55,56,50,118,119,142,0,297,143,144,298,299,145,146,57,58,59,60,61,62,63,64,65,66,67,68,69,70,1,147,148,149,150,151,152,2,153,154,155,156,157,38,158,39,40,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,163,164,165,166,167,168,300,100,169,301,37,302,170,303,171,172,274,304,305,173,174,306,175,176,177,178,307,308,309,310,311,312,313,179,41,180,181,182,183,184,314,315,316,317,318,319,101,186,187,188,189,190,191,192,194,195,102,103,196,197,198,199,203,204,205,206,320,321,322,104,105,106,3,107,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,207,208,209,210,24,211,25,26,27,28,29,30,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,108,109,232,233,234,235,236,110,111,112,113,114,237,238,239,240,241,323,242,243,244,245,115,246,248,249,250,31,251,324,252,32,33,253,254,255,256,34,257,258,259,260,261,262,263,116,117,325,42,35,326,266,267,268,269,270,36,271],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[327,328],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[43,329,50,119,297,143,144,298,145,146,163,164,166,167,168,300,100,169,301,37,302,170,303,330,171,172,274,304,305,173,174,177,307,308,309,310,312,313,314,314,315,315,319,191,192,331,207,332,208,209,210,266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"searchType"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[333,334,102,335,336,254],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[333,334,102,335,336,254],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[91],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1421","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[54,133,134,148,101,103,197,198,338,339,340,341,250,31,251,253],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[125,282,126,342,343,127,128,129,54,133,134,283,284,285,286,287,288,289,290,291,292,293,294,295,136,137,138,139,140,43,141,55,56,50,118,142,0,297,143,144,298,299,145,146,57,58,60,61,64,65,66,67,68,69,70,1,147,148,150,152,2,153,156,157,344,38,158,39,345,40,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,163,164,165,166,167,168,100,301,37,302,303,171,274,304,173,306,175,176,177,178,307,308,309,310,179,41,180,181,183,184,314,314,315,315,317,319,101,346,347,348,186,187,188,189,190,349,350,351,191,331,103,197,198,352,353,354,203,355,356,104,105,106,3,107,357,358,359,360,361,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,207,208,209,210,24,211,25,26,27,28,29,30,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,108,109,362,110,111,112,113,114,246,247,248,249,250,31,251,363,324,252,32,33,253,256,34,259,264,116,117,325,42,35,265,266,267,268,269,270,36,271],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[54,133,134,148,149,154,155,159,160,161,162,101,102,103,197,198,31,251,253,255,257,258],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:190","failures":[125,282,126,54,133,134,283,284,285,286,287,288,289,290,291,292,293,294,295,136,137,138,140,50,118,0,57,58,60,61,64,65,66,67,68,69,70,1,147,148,150,152,2,153,156,157,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,164,167,100,301,37,302,171,306,177,188,190,103,197,198,353,354,104,105,107,24,25,26,27,28,29,30,217,218,219,222,223,224,225,226,108,362,113,246,247,248,249,250,251,363,252,32,33,253,256,34,259,265],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[50,118,119,120],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[125,282,126,127,128,129,131,54,132,133,134,135,283,284,286,287,288,289,292,293,294,295,296,136,138,139,140,43,141,55,56,50,118,119,142,0,297,143,144,298,299,145,146,57,58,59,60,62,63,64,65,66,67,70,1,147,148,150,151,152,2,157,38,158,39,40,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,163,165,166,168,171,274,304,306,177,308,309,310,311,312,313,179,41,180,181,182,183,184,316,317,318,319,101,192,195,103,196,197,198,199,203,204,205,206,321,322,104,105,106,3,107,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,207,208,209,210,24,211,25,26,27,28,29,30,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,108,110,111,112,113,114,237,238,239,240,241,242,243,244,245,115,246,248,249,250,31,251,252,32,33,253,256,34,259,116,117,266],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[364,90],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[80],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":75,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests2.UsageTest.argumentsOrdered":155,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":294,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":270,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":151,"org.easymock.tests2.StubTest.stubWithReturnValue":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":51,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":318,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":221,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":96,"org.easymock.tests2.SerializationTest.testAllMockedMethod":119,"org.easymock.tests2.DelegateToTest.testReturnException":38,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":268,"org.easymock.tests.MockingTest.testPartialClassMocking":208,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":334,"org.easymock.samples.SupportTest.voteForRemovals":317,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":327,"org.easymock.tests.MockClassControlTest.testToString":276,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":16,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":120,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":356,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":308,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":4,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":342,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":53,"org.easymock.tests.UsageExpectAndThrowTest.object":14,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":338,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":282,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":93,"org.easymock.tests2.DelegateToTest.testWrongClass":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":45,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":116,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":117,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":104,"org.easymock.tests2.UsageTest.wrongArguments":149,"org.easymock.samples.ConstructorCalledMockTest.testTax":314,"org.easymock.tests.UsageStrictMockTest.range":197,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":262,"org.easymock.samples.ExampleTest.answerVsDelegate":41,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":291,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":297,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":280,"org.easymock.tests2.UsageConstraintsTest.testNull":77,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":15,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":166,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":293,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":274,"org.easymock.tests2.CaptureTest.testPrimitive":60,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":107,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests.UsageTest.moreThanOneArgument":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":23,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":261,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":165,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":188,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":354,"org.easymock.tests2.CaptureTest.testCaptureNone":65,"org.easymock.tests.UsageUnorderedTest.message":101,"org.easymock.tests.UsageVerifyTest.twoReturns":251,"org.easymock.tests.UsageVarargTest.varargByteAccepted":244,"org.easymock.tests2.ThreadingTest.testThreadSafe":136,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":357,"org.easymock.tests.UsageTest.argumentsOrdered":258,"org.easymock.tests.UsageVarargTest.varargIntAccepted":239,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":206,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":312,"org.easymock.tests2.CaptureTest.testCapture_2617107":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":110,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":3,"org.easymock.tests2.UsageConstraintsTest.any":83,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":172,"org.easymock.tests2.StubTest.stub":142,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":269,"org.easymock.tests.UsageExpectAndThrowTest.longType":7,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":132,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":306,"org.easymock.tests2.SerializationTest.testClass":50,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":283,"org.easymock.tests.LimitationsTest.mockNativeMethod":207,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":331,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":231,"org.easymock.tests2.AnswerTest.answer":126,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":82,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":124,"org.easymock.tests2.CaptureTest.testAnd":57,"org.easymock.tests2.UsageTest.strictResetToDefault":147,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":169,"org.easymock.tests2.NameTest.nameForMocksControl":162,"org.easymock.tests2.MockedExceptionTest.testMockedException":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":248,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":34,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":361,"org.easymock.tests2.DelegateToTest.testDelegate":40,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":210,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":8,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":304,"org.easymock.tests.MockingTest.testNicePartialClassMocking":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":19,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":168,"org.easymock.tests2.CaptureTest.testCaptureLast":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":36,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":264,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":80,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":236,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":94,"org.easymock.tests.MockingTest.testTwoMocks":332,"org.easymock.tests2.CaptureTest.testCapture1_2446744":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":12,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":122,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":154,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":98,"org.easymock.tests.UsageThrowableTest.throwError":24,"org.easymock.tests.UsageStrictMockTest.differentMethods":198,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":185,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":138,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":279,"org.easymock.tests2.MockBuilderTest.testCreateMockString":174,"org.easymock.tests.UsageExpectAndThrowTest.floatType":6,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":190,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":89,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":127,"org.easymock.tests.UsageVerifyTest.twoThrows":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":309,"org.easymock.samples.PartialClassMockTest.testGetArea":319,"org.easymock.tests2.CompareToTest.testLessOrEqual":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":111,"org.easymock.samples.ExampleTest.voteAgainstRemoval":181,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":353,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":352,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":37,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":5,"org.easymock.tests2.UsageTest.niceToStrict":150,"org.easymock.tests2.UsageConstraintsTest.testNotNull":97,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":30,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":175,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":171,"org.easymock.tests2.MockBuilderTest.testCreateMock":305,"org.easymock.tests2.UsageTest.defaultResetToNice":153,"org.easymock.samples.ExampleTest.voteAgainstRemovals":179,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":227,"org.easymock.tests.UsageVarargTest.differentLength":323,"org.easymock.tests2.CallbackTest.callback":141,"org.easymock.tests2.UsageConstraintsTest.equals":337,"org.easymock.tests.UsageTest.openCallCountByLastCall":256,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":13,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":289,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":106,"org.easymock.tests.UsageCallCountTest.tooFewCalls":204,"org.easymock.tests.UsageOverloadedMethodTest.overloading":252,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":87,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":35,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":324,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":223,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":86,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":263,"org.easymock.tests.UsageThrowableTest.throwCheckedException":27,"org.easymock.tests2.EasyMockSupportClassTest.testAll":307,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":192,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":336,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":21,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":329,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":234,"org.easymock.tests2.CaptureTest.testCaptureAll":58,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":109,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":145,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":144,"org.easymock.tests2.UsageConstraintsTest.testMatches":88,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":299,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":189,"org.easymock.samples.ExampleTest.voteForRemovals":183,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":140,"org.easymock.tests2.NameTest.nameForNiceMock":161,"org.easymock.tests.UsageVarargTest.allKinds":115,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":250,"org.easymock.tests2.DependencyTest.testInterfaceMocking":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":47,"org.easymock.samples.BasicClassMockTest.testPrintContent":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":235,"org.easymock.samples.ExampleTest.addDocument":182,"org.easymock.tests2.DelegateToTest.testStubDelegate":158,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":29,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":130,"org.easymock.tests2.AnswerTest.stubAnswer":128,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":271,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":103,"org.easymock.tests2.UsageConstraintsTest.greaterThan":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":49,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":302,"org.easymock.tests.UsageVarargTest.varargLongAccepted":243,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":199,"org.easymock.samples.ExampleTest.voteForRemoval":180,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":137,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":230,"org.easymock.tests.UsageExpectAndReturnTest.floatType":214,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":43,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":315,"org.easymock.tests.UsageThrowableTest.noUpperLimit":211,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":91,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":266,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":73,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":273,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":62,"org.easymock.tests2.SerializationTest.test":118,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":52,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":286,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":213,"org.easymock.tests2.UsageConstraintsTest.testSame":78,"org.easymock.samples.SupportTest.addDocument":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":267,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":344,"org.easymock.tests2.CaptureTest.testCaptureFirst":70,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":287,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":219,"org.easymock.tests.GenericTest.testPackageScope":191,"org.easymock.tests2.CaptureTest.testCapture2_2446744":69,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":139,"org.easymock.tests2.UsageTest.moreThanOneArgument":148,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":360,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":173,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":245,"org.easymock.tests.GenericTest.testBridgedEquals":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":321,"org.easymock.tests2.NameTest.nameForMock":159,"org.easymock.tests.UsageExpectAndReturnTest.longType":215,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":232,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":22,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":363,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":95,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":20,"org.easymock.tests2.UsageStrictMockTest.differentMethods":134,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":186,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":216,"org.easymock.tests.UsageCallCountTest.tooManyCalls":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":18,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":249,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":203,"org.easymock.tests2.MockedExceptionTest.testRealException":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":220,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":54,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":9,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":105,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":143,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":202,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests2.NameTest.nameForStrictMock":160,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":177,"org.easymock.tests2.UsageConstraintsTest.testFind":76,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":32,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":167,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":194,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":56,"org.easymock.tests.UsageExpectAndReturnTest.object":222,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":339,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":100,"org.easymock.tests.ErrorMessageTest.testGetters":340,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":303,"org.easymock.tests2.UsageStrictMockTest.range":133,"org.easymock.tests2.UsageConstraintsTest.lessThan":99,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":292,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":46,"org.easymock.tests.UsageTest.exactCallCountByLastCall":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":108,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":48,"org.easymock.tests2.CaptureTest.testCaptureRightOne":67,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":358,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":246,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":44,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":237,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":164,"org.easymock.tests.UsageTest.wrongArguments":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":42,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":193,"org.easymock.tests2.EasyMockSupportTest.testVerify":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":217,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":225,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":359,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":347,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":325,"org.easymock.tests.UsageVarargTest.varargShortAccepted":242,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":121,"org.easymock.tests2.UsageConstraintsTest.cmpTo":84,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":71,"org.easymock.tests.UsageVarargTest.varargCharAccepted":240,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":343,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":131,"org.easymock.tests2.UsageTest.openCallCountByLastCall":152,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":2,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":295,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":346,"org.easymock.tests2.CaptureTest.testCaptureFromStub":68,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":330,"org.easymock.tests.UsageTest.unexpectedCallWithArray":254,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":26,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":102,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":205,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":226,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":301,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":278,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":196,"org.easymock.tests2.UsageConstraintsTest.constraints":74,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":10,"org.easymock.samples.ExampleTest.addAndChangeDocument":184,"org.easymock.tests.CapturesMatcherTest.test":281,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":229,"org.easymock.tests.UsageStrictMockTest.testVerify":200,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":349,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":310,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":277,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":195,"org.easymock.tests2.CompareToTest.testGreateThan":364,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":233,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":63,"org.easymock.tests2.UsageTest.resumeIfFailure":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":112,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":218,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":265,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":113,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":290,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":238}}]
