[{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[0,1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"candidateParameters","i":"i"}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,2,275,3,276,277,278,279,280,281,282,4,283,284,285,286,287,288,289,290,291,292,293,294,295,0,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,5,6,361,362,7,363,8,9,364,10,365,366,367,368,369,370,371,372,373,11,374,375,376,377,12,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,1,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[471,472,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[218,228],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[48,51,474,153,154,157,158,237,244,245,313,425,431,432],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[79,140,142,143,144,145,146,147,200,227,254,255,256,303,461,462,463,464],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[276],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[316,317,476,477,478,479,480,420,481,457],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[482,420,421,422],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[483,2,3,276,277,278,279,280,282,484,4,283,285],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[105,106,107,108,109],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[485,486,371,487,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.internal.LastControl:92","failures":[2,3,4,5,6,8,9,10,11],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[13,14,15,16,40,43,105,106,107,108,109,120,121,122,123,124,125,126,127,160,161,162,163,164,166,169,174,175,176,177,178,179,180,246,257,258,259,260,260,261,261,286,287,289,290,291,292,294,295,0,296,297,298,299,300,301,316,317,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,386,387,420,422,438,471,472,439,442,443,444,445,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:813","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[377],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[489],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[490,491,51,237,244,245,313],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[492],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,130,131,133,134,135,136,137,138,146,148,149,150,151,156,196,233,244,303,423,429],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[49,77,78,81,139,238,239,240,241,242,247,248,249,250,251,252,253,260,260,261,261,283,311,359,360,362,7,363,8,367,369,370,372,373,11,12,378,379],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[116,120,125],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.RecordState:136","failures":[49,77,78,81,139,238,239,240,241,242,247,248,249,250,251,252,253,260,260,261,261,283,311,359,360,362,7,363,8,367,369,370,372,373,12,378,379],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[359,372,374,493],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[48,49,77,78,79,80,81,139,140,146,192,237,247,248,249,250,251,252,253,2,275,3,276,277,278,279,280,281,282,4,283,284,285,294,311,359,360,5,6,362,7,363,8,9,364,10,365,366,367,368,369,370,371,372,373,11,374,375,376,377,12,378,379,393,435,437],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[491,51,244,245,313],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":6,"org.easymock.tests2.UsageTest.argumentsOrdered":432,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":151,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":417,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":203,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":427,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":263,"org.easymock.tests2.DelegateToTest.testReturnException":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":143,"org.easymock.tests.MockingTest.testPartialClassMocking":163,"org.easymock.tests.MockClassControlTest.testToString":122,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":304,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":82,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":340,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":389,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":476,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":364,"org.easymock.tests2.UsageTest.wrongArguments":425,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":77,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":172,"org.easymock.samples.ExampleTest.answerVsDelegate":267,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":43,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":168,"org.easymock.tests2.UsageConstraintsTest.testNull":7,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":289,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":416,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":127,"org.easymock.tests2.CaptureTest.testPrimitive":276,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":81,"org.easymock.tests.UsageTest.moreThanOneArgument":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":101,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":240,"org.easymock.tests.UsageTest.argumentsOrdered":158,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":55,"org.easymock.tests.UsageVarargTest.varargIntAccepted":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":249,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":405,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":195,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":253,"org.easymock.tests.ReplayStateInvalidUsageTest.times":225,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":327,"org.easymock.tests2.DependencyTest.testClassMocking":386,"org.easymock.tests2.AnswerTest.answer":465,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":210,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":321,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":1,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":411,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":112,"org.easymock.tests2.DelegateToTest.testDelegate":385,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":97,"org.easymock.tests.LimitationsTest.mockFinalMethod":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":73,"org.easymock.tests2.DependencyTest.testClassMockingSupport":387,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":74,"org.easymock.tests2.CaptureTest.testCapture1_2446744":277,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":95,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":319,"org.easymock.tests.UsageThrowableTest.throwError":131,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":219,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":42,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":358,"org.easymock.samples.PartialClassMockTest.testGetArea":257,"org.easymock.tests.MockingTest.testInterfaceMocking":165,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":250,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":103,"org.easymock.tests2.UsageTest.niceToStrict":426,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":193,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":453,"org.easymock.tests2.MockBuilderTest.testCreateMock":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":353,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":330,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":487,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":91,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":412,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":150,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":60,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":170,"org.easymock.tests.UsageOverloadedMethodTest.overloading":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":355,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":233,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":369,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":31,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":368,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":282,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":184,"org.easymock.tests.MockClassControlTest.testEquals":126,"org.easymock.tests2.EasyMockSupportClassTest.testAll":337,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":107,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":71,"org.easymock.tests2.CaptureTest.testCaptureAll":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":320,"org.easymock.tests.MockNameTest.defaultName":229,"org.easymock.tests2.UsageConstraintsTest.testMatches":370,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":241,"org.easymock.samples.ExampleTest.voteForRemovals":271,"org.easymock.tests.UsageVarargTest.allKinds":192,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":72,"org.easymock.samples.BasicClassMockTest.testPrintContent":259,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":137,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":402,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":480,"org.easymock.tests2.UsageConstraintsTest.greaterThan":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":338,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":111,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":299,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":180,"org.easymock.samples.ExampleTest.voteForRemoval":268,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":391,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":300,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":44,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":473,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":292,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":423,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":246,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":409,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":142,"org.easymock.tests2.CaptureTest.testCaptureFirst":285,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":410,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":434,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":27,"org.easymock.tests2.UsageTest.moreThanOneArgument":424,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":393,"org.easymock.tests2.CaptureTest.testCapture2_2446744":284,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":211,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":191,"org.easymock.tests.GenericTest.testBridgedEquals":109,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":492,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":67,"org.easymock.tests.UsageExpectAndReturnTest.longType":23,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":407,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":69,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":100,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":141,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":255,"org.easymock.tests.UsageCallCountTest.tooManyCalls":68,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":354,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":87,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":443,"org.easymock.tests.MockingTest.testNiceClassMocking":169,"org.easymock.tests.MockingTest.testClassMocking":161,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":61,"org.easymock.tests2.UsageConstraintsTest.testContains":367,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":463,"org.easymock.tests2.UsageConstraintsTest.testFind":362,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":130,"org.easymock.tests.MockTypeTest.fromEasyMockClass":41,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":437,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":46,"org.easymock.tests.UsageExpectAndReturnTest.object":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":415,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":477,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":186,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":117,"org.easymock.tests.UsageTest.exactCallCountByLastCall":159,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":198,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":17,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":56,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":317,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":181,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":36,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":232,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":396,"org.easymock.tests.MockClassControlTest.testHashCode":125,"org.easymock.tests2.EasyMockSupportTest.testVerify":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":347,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":57,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":149,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":230,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":318,"org.easymock.tests.UsageVarargTest.varargCharAccepted":185,"org.easymock.tests2.CaptureTest.testCaptureMultiple":483,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":216,"org.easymock.tests2.UsageTest.openCallCountByLastCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":418,"org.easymock.tests.DefaultClassInstantiatorTest.object":174,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":148,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":115,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":474,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":348,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":325,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":395,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":124,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":297,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":88,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":37,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":254,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":356,"org.easymock.tests2.UsageTest.resumeIfFailure":433,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":145,"org.easymock.tests2.StubTest.stubWithReturnValue":303,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":481,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":29,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":377,"org.easymock.tests2.SerializationTest.testAllMockedMethod":422,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":209,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":488,"org.easymock.samples.SupportTest.voteForRemovals":265,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":398,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":94,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":482,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":215,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":466,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":19,"org.easymock.tests.UsageExpectAndThrowTest.object":92,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":374,"org.easymock.tests2.DelegateToTest.testWrongClass":383,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":247,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":248,"org.easymock.tests.UsageStrictMockTest.range":51,"org.easymock.samples.ConstructorCalledMockTest.testTax":260,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":440,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":414,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":442,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":455,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":157,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":171,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":104,"org.easymock.tests2.CaptureTest.testCaptureNone":281,"org.easymock.tests.UsageUnorderedTest.message":237,"org.easymock.tests.UsageVerifyTest.twoReturns":245,"org.easymock.tests.UsageVarargTest.varargByteAccepted":190,"org.easymock.tests2.ThreadingTest.testThreadSafe":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":351,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":65,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":118,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":258,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":213,"org.easymock.tests2.UsageConstraintsTest.any":365,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":224,"org.easymock.tests2.StubTest.stub":302,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":144,"org.easymock.tests.UsageExpectAndThrowTest.longType":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":214,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":178,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":223,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":312,"org.easymock.tests2.SerializationTest.testClass":420,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":400,"org.easymock.tests.LimitationsTest.mockNativeMethod":15,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":39,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":324,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":315,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":489,"org.easymock.tests2.NameTest.nameForMocksControl":308,"org.easymock.tests2.MockedExceptionTest.testMockedException":462,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":339,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":436,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":166,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":86,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":286,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":456,"org.easymock.tests.MockingTest.testNicePartialClassMocking":164,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":291,"org.easymock.tests2.CaptureTest.testCaptureLast":280,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":322,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":75,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":448,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":375,"org.easymock.tests.MockingTest.testTwoMocks":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":90,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":431,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":378,"org.easymock.samples.ExampleTest.removeNonExistingDocument":272,"org.easymock.tests.UsageStrictMockTest.differentMethods":52,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":221,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":397,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":176,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":392,"org.easymock.tests2.MockBuilderTest.testCreateMockString":460,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":120,"org.easymock.tests.UsageExpectAndThrowTest.floatType":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":341,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":336,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":468,"org.easymock.tests.UsageVerifyTest.twoThrows":244,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":350,"org.easymock.samples.ExampleTest.voteAgainstRemoval":269,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":204,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":298,"org.easymock.tests.LimitationsTest.privateConstructor":14,"org.easymock.tests2.UsageConstraintsTest.testNotNull":12,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":461,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":138,"org.easymock.tests2.UsageTest.defaultResetToNice":430,"org.easymock.samples.ExampleTest.voteAgainstRemovals":266,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":205,"org.easymock.tests.UsageVarargTest.differentLength":187,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":323,"org.easymock.tests2.CallbackTest.callback":274,"org.easymock.tests2.UsageConstraintsTest.equals":361,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":486,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":295,"org.easymock.tests.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":359,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":79,"org.easymock.tests.UsageCallCountTest.tooFewCalls":63,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":445,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":173,"org.easymock.tests.UsageThrowableTest.throwCheckedException":135,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":485,"org.easymock.tests.MockingTest.testStrictClassMocking":160,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":447,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":140,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":444,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":328,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":226,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":446,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":470,"org.easymock.tests.ObjectMethodsTest.testHashCode":116,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":394,"org.easymock.tests2.NameTest.nameForNiceMock":307,"org.easymock.tests2.DependencyTest.testInterfaceMocking":388,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":478,"org.easymock.samples.ExampleTest.addDocument":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":357,"org.easymock.tests2.DelegateToTest.testStubDelegate":382,"org.easymock.tests2.AnswerTest.stubAnswer":469,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":49,"org.easymock.tests.UsageVarargTest.varargLongAccepted":189,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":202,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":38,"org.easymock.tests.UsageExpectAndReturnTest.floatType":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":316,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":404,"org.easymock.tests.UsageThrowableTest.noUpperLimit":132,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":373,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":360,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":438,"org.easymock.tests2.SerializationTest.test":421,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":278,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":21,"org.easymock.tests2.UsageConstraintsTest.testSame":363,"org.easymock.samples.SupportTest.addDocument":264,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":342,"org.easymock.tests.GenericTest.testPackageScope":106,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":197,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":403,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":167,"org.easymock.tests2.NameTest.nameForMock":305,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":32,"org.easymock.tests2.UsageStrictMockTest.differentMethods":314,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":0,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":96,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":114,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":113,"org.easymock.tests2.MockedExceptionTest.testRealException":464,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":45,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":207,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":206,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":311,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":78,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":228,"org.easymock.tests2.NameTest.nameForStrictMock":306,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":452,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":435,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":290,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":439,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":490,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":177,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":11,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":450,"org.easymock.tests2.UsageStrictMockTest.range":313,"org.easymock.tests2.UsageConstraintsTest.lessThan":379,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":399,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":479,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":201,"org.easymock.tests2.CaptureTest.testCaptureRightOne":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":346,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests.UsageRangeTest.combination":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":287,"org.easymock.tests.UsageTest.wrongArguments":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":343,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":25,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":194,"org.easymock.tests.UsageVarargTest.varargShortAccepted":188,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":179,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":66,"org.easymock.tests2.UsageConstraintsTest.cmpTo":366,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":196,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":429,"org.easymock.tests2.CaptureTest.testCaptureFromStub":283,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":218,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":451,"org.easymock.tests.UsageTest.unexpectedCallWithArray":153,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":48,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":64,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":34,"org.easymock.tests2.CaptureTest.testCapture":484,"org.easymock.tests2.UsageConstraintsTest.constraints":5,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":50,"org.easymock.samples.ExampleTest.addAndChangeDocument":273,"org.easymock.tests.UsageStrictMockTest.testVerify":54,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":262,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":47,"org.easymock.tests2.CompareToTest.testGreateThan":493,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":70,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":251,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":26,"org.easymock.tests.LimitationsTest.abstractClass":13,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":252,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":491,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":413,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":182}}]
