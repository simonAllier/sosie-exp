[{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[7,8,9,10,11,12,13,14,15],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,174,175,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,7,8,245,246,247,9,10,248,11,249,250,251,252,253,254,255,256,257,12,258,259,260,261,262,263,264,265,266,13,267,14,268,269,270,271,272,273,274,15,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"position":"org.easymock.internal.RecordState:274","failures":[158,168,178,181,182,183,194,282,283],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[179,182,183],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"value","methodName":"value"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[310,311,312,313,314,315,316,317,318,319,320,47,321,63,64,65,322,323,324,116,325,326,327,328,329,330,331,332,333,334,335,128,129,130,336,164,174,174,175,175,176,177,184,185,187,188,189,337,190,338,339,340,191,192,193,341,342,215,216,217,218,220,221,343,344,222,345,346,223,347,224,225,348,349,226,350,351,227,1,239,240,241,352,353,354,355,278,356,357,279,358,359,360,361,362,363,364,365,366,280,367,368,369,370,371,281,372,373,374,375,305,307],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[376],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[45,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[17,30,31,32,33,34,39,55,56,59,131,132,133,134,135,156,157,174,174,175,175,197,243,244,245,246,247,9,251,253,254,256,257,262,263,264,275],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[378,379,380,381],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[0,348,227,1,2,3,4,382,383,305],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[16,310,311,312,313,314,315,316,317,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,384,385,386,387,388,389,390,47,48,391,49,50,51,52,392,53,54,55,56,57,58,59,63,64,66,67,68,69,393,394,395,396,397,398,399,400,401,402,403,404,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,405,406,407,408,409,113,114,115,116,120,121,122,123,124,125,126,127,326,128,129,130,131,132,133,134,135,136,137,410,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,156,157,158,159,160,161,411,162,163,164,165,166,167,168,169,170,171,172,412,173,174,174,175,175,176,177,178,181,182,183,184,185,186,187,188,189,337,190,340,191,192,193,194,195,196,197,198,199,200,201,413,414,415,416,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,343,222,223,347,224,225,349,226,351,227,228,229,230,231,233,234,235,237,238,417,239,240,241,242,243,244,7,8,245,246,247,9,10,248,249,250,251,252,253,254,255,256,257,12,258,259,260,261,262,263,264,265,266,13,267,14,268,269,270,271,272,273,274,15,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[418,159,168,233,235,236,237],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[16,310,311,312,313,314,315,316,317,17,18,19,20,21,419,22,23,24,25,26,27,28,29,30,31,32,33,34,420,35,421,36,37,38,39,40,41,42,43,44,422,384,385,386,423,318,424,387,388,389,390,425,45,46,426,427,319,428,429,430,431,320,432,433,47,48,391,49,50,51,52,392,53,54,55,56,57,58,59,60,61,62,321,63,64,65,322,66,67,68,69,434,377,418,435,436,437,438,439,440,441,442,443,444,445,446,447,70,448,449,450,451,452,71,453,393,394,395,396,397,398,399,400,401,402,403,404,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,405,406,407,408,409,113,114,115,323,324,116,325,117,118,119,120,121,122,123,124,125,126,127,326,327,328,329,330,331,332,333,334,335,128,129,476,130,477,478,336,131,132,133,134,135,136,137,410,138,139,140,141,142,143,144,145,146,378,379,479,147,148,149,150,151,152,153,154,155,156,157,158,380,159,160,381,161,411,162,163,164,165,166,167,168,169,170,171,172,412,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,337,480,190,338,339,340,191,192,193,341,342,194,195,196,197,198,199,200,201,481,482,483,484,308,413,414,415,416,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,485,219,220,221,486,343,222,345,346,223,347,224,225,487,348,349,226,351,227,1,488,228,229,230,231,232,233,234,235,236,237,489,490,491,492,493,238,494,495,496,497,498,499,417,239,240,241,242,243,244,7,8,500,245,246,247,9,10,248,11,249,250,251,252,253,254,255,256,257,12,258,259,260,261,262,263,264,265,266,13,267,14,268,269,270,271,272,273,274,15,275,276,277,353,354,355,278,356,357,279,358,359,360,361,362,363,364,365,366,280,367,368,369,370,371,281,372,373,282,501,283,284,309,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,374,502,503,375,504,505,506,507,302,303,508,509,510,511,512,304,513,514,515,516,517,518,305,306,307],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[61,62,118,119],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockInvocationHandler:37","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[18,57,147,148,149,150,151,152,239,240,241,242],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[420,421,398,287],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[18,57,58,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,115,120,122,123,124,125,126,127,136,140,145,147,148,149,150,151,152,160,239,240,241,242,266,289,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[16,312,313,314,17,18,29,30,31,32,33,34,35,36,38,39,40,41,42,43,384,385,423,318,424,387,388,389,425,45,46,426,427,319,430,431,320,432,433,47,49,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,405,406,407,408,409,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,410,138,139,140,141,142,143,144,145,146,378,379,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,167,168,169,170,172,173,174,174,175,175,178,179,180,181,182,183,184,185,186,187,188,189,190,340,191,192,193,342,194,195,197,198,199,200,201,413,414,415,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,343,222,345,223,224,225,226,351,227,232,233,234,235,236,237,238,494,239,240,241,242,243,244,7,8,245,246,247,9,10,248,11,249,250,251,252,253,254,255,256,257,12,258,259,260,261,262,263,264,265,266,13,267,14,268,269,270,271,272,273,274,15,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,513,305,306],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"hashCodeMethod","finalizeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[312,313,314,318,320,519,217,220,224,374],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[16,24,36,38,40,41,42,392,53,54,520,519,66,521,522,136,410,138,141,142,143,145,146,185,191,193,194,195,198,199,200,203,207,208,211,222,349,226,351,7,255,289,292,293,294,298,299,300,301],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[58,447,71,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[11],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[35,153,154,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[249],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[174,175,338,523,524,0,348,525,526,527,528,529,227,1,305],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[31,116,128,129,130,164,184,186,187,189,215,216,217,218,219,220,221,222,223,224,225,226,227,234,278,279,280,281,287],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[38,530,531,410,532,533],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[158,159,178,233,235],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[16,310,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,387,388,389,390,425,45,46,426,427,47,48,49,50,51,52,392,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,393,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,405,406,407,408,409,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,335,128,129,130,131,132,133,134,135,136,137,410,138,139,140,141,142,143,144,145,146,378,379,147,148,149,150,151,152,153,154,155,156,157,158,380,159,160,381,161,411,162,163,164,165,166,167,168,169,170,171,172,173,174,174,175,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,337,190,340,191,192,193,194,195,196,197,198,199,200,201,413,414,415,416,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,343,222,223,347,224,225,349,226,351,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,7,8,245,246,247,9,10,248,11,249,250,251,252,253,254,255,256,257,12,258,259,260,261,262,263,264,265,266,13,267,14,268,269,270,271,272,273,274,15,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[534,387,535,13,267,14,268,269,270,271,272,273,274,536,15,275,276,277,278],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[537,538,539],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":8,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":136,"org.easymock.tests2.UsageTest.argumentsOrdered":299,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":212,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":442,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":294,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":162,"org.easymock.tests2.DelegateToTest.testReturnException":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":148,"org.easymock.tests.MockingTest.testPartialClassMocking":128,"org.easymock.tests.MockClassControlTest.testToString":312,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":488,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":72,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":279,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":303,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":475,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":2,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":55,"org.easymock.tests2.UsageTest.wrongArguments":292,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":518,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":389,"org.easymock.samples.ExampleTest.answerVsDelegate":168,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":320,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":478,"org.easymock.tests2.UsageConstraintsTest.testNull":246,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":187,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":211,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":317,"org.easymock.tests2.CaptureTest.testPrimitive":268,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":59,"org.easymock.tests.UsageTest.moreThanOneArgument":137,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":91,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":133,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":425,"org.easymock.tests.UsageTest.argumentsOrdered":142,"org.easymock.tests.UsageVarargTest.varargIntAccepted":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":447,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":30,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":6,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":343,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":503,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":34,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":459,"org.easymock.tests.ReplayStateInvalidUsageTest.times":401,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":304,"org.easymock.tests2.DependencyTest.testClassMocking":506,"org.easymock.tests2.AnswerTest.answer":178,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":448,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":416,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":429,"org.easymock.tests2.CaptureTest.testAnd":13,"org.easymock.tests2.UsageTest.strictResetToDefault":290,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":524,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":132,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":206,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":427,"org.easymock.tests2.DelegateToTest.testDelegate":237,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":458,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":87,"org.easymock.tests.LimitationsTest.mockFinalMethod":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":409,"org.easymock.tests2.DependencyTest.testClassMockingSupport":507,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":378,"org.easymock.tests2.CaptureTest.testCapture1_2446744":269,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":85,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":414,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":395,"org.easymock.tests.UsageThrowableTest.throwError":120,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":431,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":519,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":499,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":135,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":527,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":373,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":462,"org.easymock.samples.PartialClassMockTest.testGetArea":164,"org.easymock.tests.MockingTest.testInterfaceMocking":476,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":31,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":73,"org.easymock.tests2.UsageTest.niceToStrict":293,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":362,"org.easymock.tests2.ThreadingTest.testChangeDefault":309,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":539,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":223,"org.easymock.tests2.MockBuilderTest.testCreateMock":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":369,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":515,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":532,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":81,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":207,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":428,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":62,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":387,"org.easymock.tests.UsageOverloadedMethodTest.overloading":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":371,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":160,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":253,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":113,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":103,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":252,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":274,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":419,"org.easymock.tests2.EasyMockSupportClassTest.testAll":278,"org.easymock.tests.MockClassControlTest.testEquals":316,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":415,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":407,"org.easymock.tests2.CaptureTest.testCaptureAll":267,"org.easymock.tests.MockNameTest.defaultName":424,"org.easymock.tests2.UsageConstraintsTest.testMatches":254,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":134,"org.easymock.samples.ExampleTest.voteForRemovals":172,"org.easymock.tests.UsageVarargTest.allKinds":29,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":144,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":408,"org.easymock.samples.BasicClassMockTest.testPrintContent":177,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":126,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":495,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":152,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":236,"org.easymock.tests2.UsageConstraintsTest.greaterThan":256,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":67,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":193,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":463,"org.easymock.samples.ExampleTest.voteForRemoval":169,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":332,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":341,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":337,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":455,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":47,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":289,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":204,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":147,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":232,"org.easymock.tests2.CaptureTest.testCaptureFirst":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":205,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":301,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":99,"org.easymock.tests2.CaptureTest.testCapture2_2446744":276,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":287,"org.easymock.tests2.UsageTest.moreThanOneArgument":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":449,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":226,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":28,"org.easymock.tests.GenericTest.testBridgedEquals":322,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":53,"org.easymock.tests.UsageExpectAndReturnTest.longType":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":405,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":202,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":90,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":350,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":112,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":131,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":118,"org.easymock.tests.UsageCallCountTest.tooManyCalls":54,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":517,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":77,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":125,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":216,"org.easymock.tests.MockingTest.testNiceClassMocking":336,"org.easymock.tests.MockingTest.testClassMocking":334,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":391,"org.easymock.tests2.UsageConstraintsTest.testContains":251,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":344,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":241,"org.easymock.tests2.UsageConstraintsTest.testFind":245,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":115,"org.easymock.tests.MockTypeTest.fromEasyMockClass":430,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":36,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":283,"org.easymock.tests.UsageExpectAndReturnTest.object":102,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":190,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":516,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":210,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":3,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":23,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":386,"org.easymock.tests.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":420,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":45,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":108,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":19,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":159,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":490,"org.easymock.tests.MockClassControlTest.testHashCode":315,"org.easymock.tests2.EasyMockSupportTest.testVerify":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":364,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":46,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":158,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":61,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":521,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":413,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":417,"org.easymock.tests.UsageVarargTest.varargCharAccepted":22,"org.easymock.tests2.CaptureTest.testCaptureMultiple":535,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastCall":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":537,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":213,"org.easymock.tests.DefaultClassInstantiatorTest.object":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":60,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":384,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":522,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":365,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":511,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":489,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":461,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":191,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":314,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":78,"org.easymock.tests.CapturesMatcherTest.test":534,"org.easymock.tests.ReplayStateInvalidCallsTest.times":467,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":109,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":117,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":281,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":313,"org.easymock.tests2.UsageTest.resumeIfFailure":300,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":319,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":502,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":150,"org.easymock.tests2.StubTest.stubWithReturnValue":266,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":101,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":261,"org.easymock.tests2.SerializationTest.testAllMockedMethod":307,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":70,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":529,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":533,"org.easymock.samples.SupportTest.voteForRemovals":166,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":321,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":492,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":84,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":71,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":179,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":421,"org.easymock.tests.UsageExpectAndThrowTest.object":82,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":258,"org.easymock.tests2.DelegateToTest.testWrongClass":235,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":465,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":156,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":157,"org.easymock.samples.ConstructorCalledMockTest.testTax":174,"org.easymock.tests.UsageStrictMockTest.range":41,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":504,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":83,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":224,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":403,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":388,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":530,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":457,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":155,"org.easymock.tests2.CaptureTest.testCaptureNone":273,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":482,"org.easymock.tests.UsageUnorderedTest.message":16,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":520,"org.easymock.tests.UsageVerifyTest.twoReturns":146,"org.easymock.tests.UsageVarargTest.varargByteAccepted":27,"org.easymock.tests2.ThreadingTest.testThreadSafe":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":367,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":52,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":423,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":176,"org.easymock.tests2.CaptureTest.testCapture_2617107":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":58,"org.easymock.tests2.UsageConstraintsTest.any":249,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":400,"org.easymock.tests2.StubTest.stub":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":149,"org.easymock.tests.UsageExpectAndThrowTest.longType":75,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":330,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":399,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":238,"org.easymock.tests2.SerializationTest.testClass":305,"org.easymock.tests.LimitationsTest.mockNativeMethod":116,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":111,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":510,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":473,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":201,"org.easymock.tests2.NameTest.nameForMocksControl":231,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":512,"org.easymock.tests2.MockedExceptionTest.testMockedException":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":357,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":140,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":501,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":76,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":184,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":225,"org.easymock.tests.MockingTest.testNicePartialClassMocking":129,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":508,"org.easymock.tests2.CaptureTest.testCaptureLast":272,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":379,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":472,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":10,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":221,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":259,"org.easymock.tests.MockingTest.testTwoMocks":335,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":469,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":80,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":298,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":263,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":308,"org.easymock.samples.ExampleTest.removeNonExistingDocument":412,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":514,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":397,"org.easymock.tests.UsageStrictMockTest.differentMethods":42,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":491,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":484,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":328,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":286,"org.easymock.tests2.MockBuilderTest.testCreateMockString":351,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":310,"org.easymock.tests.UsageExpectAndThrowTest.floatType":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":358,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":181,"org.easymock.tests.UsageVerifyTest.twoThrows":145,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":280,"org.easymock.samples.ExampleTest.voteAgainstRemoval":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":443,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":153,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":192,"org.easymock.tests.LimitationsTest.privateConstructor":324,"org.easymock.tests2.UsageConstraintsTest.testNotNull":262,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":127,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":239,"org.easymock.tests2.UsageTest.defaultResetToNice":297,"org.easymock.samples.ExampleTest.voteAgainstRemovals":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":107,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":509,"org.easymock.tests.UsageVarargTest.differentLength":24,"org.easymock.tests2.CallbackTest.callback":194,"org.easymock.tests2.UsageConstraintsTest.equals":500,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":338,"org.easymock.tests.UsageTest.openCallCountByLastCall":139,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":243,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":57,"org.easymock.tests.UsageCallCountTest.tooFewCalls":50,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":218,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":390,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":483,"org.easymock.tests.UsageThrowableTest.throwCheckedException":124,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":531,"org.easymock.tests.MockingTest.testStrictClassMocking":333,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":18,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":513,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":217,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":219,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":183,"org.easymock.tests.ObjectMethodsTest.testHashCode":385,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":5,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":471,"org.easymock.tests2.NameTest.nameForNiceMock":230,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":288,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":466,"org.easymock.tests2.DependencyTest.testInterfaceMocking":302,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":4,"org.easymock.samples.ExampleTest.addDocument":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":368,"org.easymock.tests2.DelegateToTest.testStubDelegate":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.AnswerTest.stubAnswer":182,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":39,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":487,"org.easymock.tests.UsageVarargTest.varargLongAccepted":26,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":110,"org.easymock.tests.UsageExpectAndReturnTest.floatType":94,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":227,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":497,"org.easymock.tests.UsageThrowableTest.noUpperLimit":121,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":257,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":244,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":374,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":270,"org.easymock.tests2.SerializationTest.test":306,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":327,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":93,"org.easymock.tests2.UsageConstraintsTest.testSame":247,"org.easymock.samples.SupportTest.addDocument":165,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":485,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":456,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":359,"org.easymock.tests.GenericTest.testPackageScope":63,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":496,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":477,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":454,"org.easymock.tests2.NameTest.nameForMock":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":526,"org.easymock.tests2.UsageStrictMockTest.differentMethods":200,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":339,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":86,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":69,"org.easymock.tests2.MockedExceptionTest.testRealException":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":433,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":528,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":445,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":197,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":404,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":56,"org.easymock.tests2.NameTest.nameForStrictMock":229,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":346,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":538,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":282,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":188,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":375,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":12,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":329,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":222,"org.easymock.tests2.UsageStrictMockTest.range":199,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":460,"org.easymock.tests2.UsageConstraintsTest.lessThan":264,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":382,"org.easymock.tests2.CaptureTest.testCaptureRightOne":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":363,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":481,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":185,"org.easymock.tests.UsageTest.wrongArguments":138,"org.easymock.tests2.MockBuilderTest.testWithConstructor":523,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":360,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":377,"org.easymock.tests.UsageVarargTest.varargShortAccepted":25,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":331,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":392,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":474,"org.easymock.tests2.UsageConstraintsTest.cmpTo":250,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":180,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":435,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":296,"org.easymock.tests2.CaptureTest.testCaptureFromStub":275,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":394,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":345,"org.easymock.tests.UsageTest.unexpectedCallWithArray":410,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":470,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":38,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":51,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":525,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":106,"org.easymock.tests2.CaptureTest.testCapture":536,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":40,"org.easymock.tests2.UsageConstraintsTest.constraints":7,"org.easymock.samples.ExampleTest.addAndChangeDocument":173,"org.easymock.tests2.ConstraintsToStringTest.notToString":376,"org.easymock.tests.UsageStrictMockTest.testVerify":44,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":163,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":406,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":32,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":98,"org.easymock.tests.LimitationsTest.abstractClass":323,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":33,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":208}}]
