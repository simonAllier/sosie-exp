[{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,151,152,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,0,1,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[295,296,297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.Invocation:195","failures":[298,299,300,301,170,171,176,199,202,204,302,303,304,305,306,209,307,308,309,310,311,312,313,314,315,316,317,214,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,258,264,333,334,266,335,270,271,272,273,274,275,276],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[336,337,338],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[264,334,275],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[7,8,163,164],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[339,299,340,158,341,181,342,266,343,344,335,267,268,269,270,345,271,346,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[201,244],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[347,1,227,238],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[4,82,348,349,350,351],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[352,353],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[188],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[354,238],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[232],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[355,181,182,183],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[181,182,183],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl() : org.easymock.EasyMockSupport.createNiceControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,356,357,358,359,360,361,362,31,32,339,363,364,33,34,35,36,365,366,367,368,369,37,370,38,39,40,41,42,43,371,372,373,44,45,46,47,48,49,50,51,298,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,374,375,376,377,74,378,75,76,379,77,380,381,78,382,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,383,299,384,385,386,300,340,301,387,94,95,388,389,390,391,96,392,393,394,395,396,397,97,98,99,100,101,398,399,102,400,103,104,105,401,106,107,402,108,109,110,111,112,403,404,405,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,406,407,408,409,410,136,137,411,412,352,413,414,295,353,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,138,139,450,140,451,452,453,454,141,142,143,144,145,146,147,148,149,455,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,456,174,175,176,457,177,178,179,180,181,182,183,458,459,184,185,186,187,188,189,190,460,191,192,193,461,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,302,303,304,305,306,209,307,308,309,310,311,312,210,211,212,462,213,313,314,315,316,317,214,318,319,320,321,322,323,215,216,217,218,463,219,220,221,222,0,1,464,223,224,225,226,227,228,229,230,231,232,233,234,465,235,236,237,238,239,466,467,240,241,242,243,244,245,246,247,248,249,250,251,252,468,469,324,325,253,326,470,254,327,471,472,328,329,473,474,475,476,255,330,477,331,332,478,256,479,480,257,258,259,260,261,262,342,481,263,482,483,264,484,265,333,485,334,266,486,344,335,487,488,267,268,269,489,270,490,491,345,271,492,272,493,494,495,496,497,498,499,500,273,274,275,276,277,501,502,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[503],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[355,181,182,183],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[347,217,1,227,238],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[217,218,222,0,464,232,281,283,291],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[362,31,32,339,363],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[239],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[363],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[347,217,1,227,238],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"result","equalsMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[226],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[4,5,7,8,81,83,86,87,133,134,135,504,161,163,164,242,243,249,250,273,274,275,276],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[349,505,229,350,351],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[187,188],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[3,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,40,41,42,43,372,373,44,45,46,47,48,49,50,51,52,53,54,55,56,63,64,65,66,67,68,80,81,84,85,88,94,95,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,160,161,162,163,164,165,168,170,171,172,173,174,175,176,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,198,199,200,201,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,0,1,223,224,225,226,227,228,229,230,231,232,233,234,465,235,236,237,238,239,240,241,242,244,245,246,247,252,254,255,256,257,259,260,262,267,269,270,277,278,279,280,281,282,283,284,286,287,288,289,290,291,294],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[86,463,249],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[363],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[367,425,145,191,193,461,194],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":218,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":80,"org.easymock.tests2.UsageTest.argumentsOrdered":250,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":206,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":433,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":245,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":143,"org.easymock.tests2.DelegateToTest.testReturnException":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":58,"org.easymock.tests.MockingTest.testPartialClassMocking":138,"org.easymock.tests.MockClassControlTest.testToString":392,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":500,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":113,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":254,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":504,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":185,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":64,"org.easymock.tests2.UsageTest.wrongArguments":243,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":35,"org.easymock.samples.ExampleTest.answerVsDelegate":145,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":340,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":452,"org.easymock.tests2.UsageConstraintsTest.testNull":220,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":260,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":397,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":205,"org.easymock.tests2.CaptureTest.testPrimitive":284,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":132,"org.easymock.tests.UsageTest.moreThanOneArgument":81,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":71,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":406,"org.easymock.tests.UsageTest.argumentsOrdered":87,"org.easymock.tests.UsageVarargTest.varargIntAccepted":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":438,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":52,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":266,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":495,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":311,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":56,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":214,"org.easymock.tests.ReplayStateInvalidUsageTest.times":381,"org.easymock.tests2.DependencyTest.testClassMocking":458,"org.easymock.tests2.AnswerTest.answer":277,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":440,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":180,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":385,"org.easymock.tests2.CaptureTest.testAnd":281,"org.easymock.tests2.UsageTest.strictResetToDefault":241,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":487,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":70,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":200,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":410,"org.easymock.tests2.DelegateToTest.testDelegate":194,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":128,"org.easymock.tests.LimitationsTest.mockFinalMethod":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":93,"org.easymock.tests2.DependencyTest.testClassMockingSupport":459,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":403,"org.easymock.tests2.CaptureTest.testCapture1_2446744":285,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":481,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":178,"org.easymock.tests.UsageThrowableTest.throwError":44,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":378,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":300,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":298,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":480,"org.easymock.samples.PartialClassMockTest.testGetArea":158,"org.easymock.tests.MockingTest.testInterfaceMocking":450,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":389,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":114,"org.easymock.tests2.UsageTest.niceToStrict":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":329,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":267,"org.easymock.tests2.MockBuilderTest.testCreateMock":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":331,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":320,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":122,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":350,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":201,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":384,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":376,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":38,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":33,"org.easymock.tests.UsageOverloadedMethodTest.overloading":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":476,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":227,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":368,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":454,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":22,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":226,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":296,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":290,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":401,"org.easymock.tests.MockClassControlTest.testEquals":396,"org.easymock.tests2.EasyMockSupportClassTest.testAll":253,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":91,"org.easymock.tests2.CaptureTest.testCaptureAll":282,"org.easymock.tests.MockNameTest.defaultName":383,"org.easymock.tests2.UsageConstraintsTest.testMatches":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":72,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":377,"org.easymock.samples.ExampleTest.voteForRemovals":149,"org.easymock.tests.UsageVarargTest.allKinds":112,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":133,"org.easymock.samples.BasicClassMockTest.testPrintContent":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":92,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":50,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":159,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":308,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":415,"org.easymock.tests2.UsageConstraintsTest.greaterThan":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":326,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":99,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":333,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":416,"org.easymock.samples.ExampleTest.voteForRemoval":146,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":485,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":187,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":301,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":496,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":342,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":97,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":240,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":198,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":57,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":460,"org.easymock.tests2.CaptureTest.testCaptureFirst":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":199,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":252,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":18,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":189,"org.easymock.tests2.UsageTest.moreThanOneArgument":242,"org.easymock.tests2.CaptureTest.testCapture2_2446744":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":441,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":271,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":111,"org.easymock.tests.GenericTest.testBridgedEquals":363,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":372,"org.easymock.tests.UsageExpectAndReturnTest.longType":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":89,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":196,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":131,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":346,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":465,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":364,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":129,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":69,"org.easymock.tests.UsageCallCountTest.tooManyCalls":373,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":332,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":118,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":49,"org.easymock.tests.MockingTest.testNiceClassMocking":453,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":171,"org.easymock.tests.MockingTest.testClassMocking":448,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":39,"org.easymock.tests2.UsageConstraintsTest.testContains":225,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":343,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":168,"org.easymock.tests2.UsageConstraintsTest.testFind":219,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":142,"org.easymock.tests.MockTypeTest.fromEasyMockClass":386,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":2,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":213,"org.easymock.tests.UsageExpectAndReturnTest.object":21,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":204,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":107,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":359,"org.easymock.tests.UsageTest.exactCallCountByLastCall":88,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":428,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":407,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":466,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":103,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":27,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":367,"org.easymock.tests.MockClassControlTest.testHashCode":395,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":303,"org.easymock.tests2.EasyMockSupportTest.testVerify":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":474,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":408,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":365,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":177,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":468,"org.easymock.tests.UsageVarargTest.varargCharAccepted":106,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":411,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":446,"org.easymock.tests2.UsageTest.openCallCountByLastCall":246,"org.easymock.tests.DefaultClassInstantiatorTest.object":412,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":207,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":374,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":475,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":302,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":484,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":394,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":119,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":28,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":420,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":256,"org.easymock.tests2.UsageTest.resumeIfFailure":251,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":299,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":494,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":60,"org.easymock.tests2.StubTest.stubWithReturnValue":211,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":489,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":20,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":235,"org.easymock.tests2.SerializationTest.testAllMockedMethod":183,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":439,"org.easymock.samples.SupportTest.voteForRemovals":157,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":351,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":362,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":125,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":355,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":445,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":501,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":419,"org.easymock.tests.UsageExpectAndThrowTest.object":123,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":233,"org.easymock.tests2.DelegateToTest.testWrongClass":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":94,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":95,"org.easymock.samples.ConstructorCalledMockTest.testTax":151,"org.easymock.tests.UsageStrictMockTest.range":7,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":498,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":203,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":124,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":469,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":86,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":34,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":348,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":390,"org.easymock.tests2.CaptureTest.testCaptureNone":289,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":337,"org.easymock.tests.UsageUnorderedTest.message":63,"org.easymock.tests.UsageVerifyTest.twoReturns":135,"org.easymock.tests.UsageVarargTest.varargByteAccepted":110,"org.easymock.tests2.ThreadingTest.testThreadSafe":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":330,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":43,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":153,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":360,"org.easymock.tests2.CaptureTest.testCapture_2617107":283,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":67,"org.easymock.tests2.UsageConstraintsTest.any":223,"org.easymock.tests2.StubTest.stub":210,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":380,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndThrowTest.longType":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":59,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":295,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":77,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":162,"org.easymock.tests2.SerializationTest.testClass":181,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":209,"org.easymock.tests.LimitationsTest.mockNativeMethod":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":30,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":339,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":315,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":165,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":503,"org.easymock.tests2.NameTest.nameForMocksControl":276,"org.easymock.tests2.MockedExceptionTest.testMockedException":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":470,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":85,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":462,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":117,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":257,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":270,"org.easymock.tests.MockingTest.testNicePartialClassMocking":139,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":262,"org.easymock.tests2.CaptureTest.testCaptureLast":288,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":404,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":176,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":234,"org.easymock.tests.MockingTest.testTwoMocks":449,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":457,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":11,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":121,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":249,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":237,"org.easymock.samples.ExampleTest.removeNonExistingDocument":455,"org.easymock.tests.UsageStrictMockTest.differentMethods":8,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":76,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":319,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":304,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":413,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":338,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":188,"org.easymock.tests2.MockBuilderTest.testCreateMockString":272,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":391,"org.easymock.tests.UsageExpectAndThrowTest.floatType":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":327,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":325,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":467,"org.easymock.tests.UsageVerifyTest.twoThrows":134,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":255,"org.easymock.samples.ExampleTest.voteAgainstRemoval":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":434,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":388,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":265,"org.easymock.tests.LimitationsTest.privateConstructor":399,"org.easymock.tests2.UsageConstraintsTest.testNotNull":236,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":166,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":51,"org.easymock.tests2.UsageTest.defaultResetToNice":248,"org.easymock.samples.ExampleTest.voteAgainstRemovals":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":26,"org.easymock.tests.UsageVarargTest.differentLength":402,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":314,"org.easymock.tests2.CallbackTest.callback":195,"org.easymock.tests2.UsageConstraintsTest.equals":463,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":505,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":482,"org.easymock.tests.UsageTest.openCallCountByLastCall":84,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":66,"org.easymock.tests.UsageCallCountTest.tooFewCalls":41,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":36,"org.easymock.tests.UsageThrowableTest.throwCheckedException":48,"org.easymock.tests.MockingTest.testStrictClassMocking":447,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":349,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":137,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":318,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":78,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":174,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":280,"org.easymock.tests2.CompareToTest.testGreateOrEqual":347,"org.easymock.tests.ObjectMethodsTest.testHashCode":358,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":190,"org.easymock.tests2.NameTest.nameForNiceMock":275,"org.easymock.tests2.DependencyTest.testInterfaceMocking":184,"org.easymock.samples.ExampleTest.addDocument":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":479,"org.easymock.tests2.DelegateToTest.testStubDelegate":192,"org.easymock.tests2.AnswerTest.stubAnswer":279,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":5,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":490,"org.easymock.tests.UsageVarargTest.varargLongAccepted":109,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":29,"org.easymock.tests.UsageExpectAndReturnTest.floatType":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":239,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":152,"org.easymock.tests.UsageThrowableTest.noUpperLimit":45,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":310,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":369,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":216,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":493,"org.easymock.tests2.SerializationTest.test":182,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":286,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":297,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":12,"org.easymock.tests2.UsageConstraintsTest.testSame":221,"org.easymock.samples.SupportTest.addDocument":156,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":456,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":471,"org.easymock.tests.GenericTest.testPackageScope":31,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":309,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":451,"org.easymock.tests2.NameTest.nameForMock":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":23,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":492,"org.easymock.tests2.UsageStrictMockTest.differentMethods":164,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":483,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":15,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":127,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":101,"org.easymock.tests2.MockedExceptionTest.testRealException":169,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":436,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":65,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":79,"org.easymock.tests2.NameTest.nameForStrictMock":274,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":488,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":212,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":261,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":497,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":414,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":232,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":344,"org.easymock.tests2.UsageStrictMockTest.range":163,"org.easymock.tests2.UsageConstraintsTest.lessThan":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":431,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":473,"org.easymock.tests2.CaptureTest.testCaptureRightOne":291,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":336,"org.easymock.tests2.UsageConstraintsTest.testOr":222,"org.easymock.tests.UsageRangeTest.combination":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":258,"org.easymock.tests.UsageTest.wrongArguments":83,"org.easymock.tests2.MockBuilderTest.testWithConstructor":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":472,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":24,"org.easymock.tests.UsageVarargTest.varargShortAccepted":108,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":353,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":371,"org.easymock.tests2.UsageConstraintsTest.cmpTo":224,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":502,"org.easymock.tests2.CompareToTest.testLessThan":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":426,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":247,"org.easymock.tests2.CaptureTest.testCaptureFromStub":292,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":74,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":335,"org.easymock.tests.UsageTest.unexpectedCallWithArray":82,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":42,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":25,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":6,"org.easymock.tests2.UsageConstraintsTest.constraints":217,"org.easymock.samples.ExampleTest.addAndChangeDocument":150,"org.easymock.tests.UsageStrictMockTest.testVerify":10,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":155,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":90,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":54,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":341,"org.easymock.tests.LimitationsTest.abstractClass":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":17,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":55,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":202}}]
