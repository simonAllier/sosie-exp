[{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[1,2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[38,39,40,41,42,43,44],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:188","sourceCode":"try {\n    net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor });\n    if (org.easymock.ConstructorArgs != null) {\n        java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>;\n        try {\n            java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n        } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n            throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n        }\n        T T;\n        try {\n            java.lang.reflect.Constructor<?>.setAccessible(true);\n            T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n        } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n            throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n        } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n            throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n        } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n            throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n        }\n        return T;\n    } else {\n        net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory;\n        try {\n            net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n        } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n            throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n        }\n        net.sf.cglib.proxy.Factory.getCallback(0);\n        return ((T)(net.sf.cglib.proxy.Factory));\n    }\n} finally {\n    net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null);\n}","type":"CtTryImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,119,120,120,121,122,123,124,125,1,126,127,128,2,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[103,111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[155,147,152],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[128,156,157],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[38,158,39,159,160,40,161,162,163,164,165,166,167,45,168,46,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,186,187,188,41,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,72,74,75,77,78,79,80,82,83,84,85,87,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,88,89,90,262,263,264,265,266,267,268,91,92,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,93,94,96,97,98,99,288,100,101,289,3,102,103,290,104,105,106,107,291,108,109,110,111,112,113,114,115,116,292,293,294,295,117,118,119,119,120,120,296,297,298,299,42,300,301,302,303,304,305,121,122,306,307,308,309,310,311,312,313,314,4,315,316,317,5,318,319,320,6,321,322,323,324,325,326,327,328,329,43,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,123,354,355,356,357,358,7,8,9,125,1,126,127,128,2,130,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,131,374,132,375,44,376,377,10,378,379,380,381,382,383,133,384,385,134,386,387,388,389,390,391,392,393,394,395,396,11,397,398,399,400,401,402,403,404,405,406,407,135,136,137,138,139,408,409,410,411,412,413,414,415,416,417,418,419,420,421,155,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,32,465,466,33,34,35,36,37,467,468,140,141,142,143,144,469,145,470,471,146,472,473,474,475,476,477,478,479,480,147,148,149,150,151,152,153,154],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[135],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[291],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[163,165,166,184,50,53,63,69,74,78,80,82,85,265,93,96,97,98,99,288,100,101,102,103,290,104,105,106,108,112,113,114,294,295,117,297,299,300,301,303,306,307,308,309,310,343,345,346,355,356,357,358,132,391,398,399,400,401,425,426,427,428,429,430,433,434,436,437,438,440,441,442,443,444,463,464,143,144,145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[163,165,166,190,191,192,193,277,278,284,285,342,343,345,346,396,11,397,445,447,449,452,453],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[371],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[163,166,167,190,191,192,193,277,343,346,347,396,11,397,447,472,474,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[481,194,213,219],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[135,136,137,138,139],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:2124","failures":[38,159,160,186,187,188,42],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[38,158,39,159,160,40,161,162,163,164,165,166,167,45,168,46,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,186,187,188,41,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,72,74,75,77,78,79,80,82,482,83,84,85,87,483,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,88,89,90,262,263,264,265,266,267,268,91,92,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,93,94,96,97,98,99,484,288,100,101,485,289,3,102,103,290,104,105,106,107,291,108,109,110,111,112,113,114,115,116,292,293,294,295,117,118,119,120,296,297,298,299,42,300,301,302,303,304,305,121,122,306,307,308,309,310,311,312,313,314,4,315,316,317,5,318,319,320,6,321,322,323,324,325,326,327,328,329,43,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,123,354,355,356,357,358,7,8,9,125,1,126,127,128,2,130,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,131,374,132,375,44,376,377,10,378,379,380,381,382,383,133,486,487,384,385,134,386,387,388,389,390,391,392,393,394,395,396,11,397,398,399,400,401,402,403,404,405,406,407,135,136,137,138,139,408,409,410,411,412,413,414,415,416,417,418,419,420,421,155,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,32,465,466,33,34,35,36,37,467,468,140,141,142,143,144,469,145,470,471,146,472,473,474,475,476,477,478,479,480,147,148,149,150,151,152,153,154],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":197,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":446,"org.easymock.tests2.UsageTest.argumentsOrdered":285,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":259,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":327,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":280,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":118,"org.easymock.tests2.DelegateToTest.testReturnException":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":312,"org.easymock.tests.MockingTest.testPartialClassMocking":143,"org.easymock.tests.MockClassControlTest.testToString":149,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":189,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":382,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":12,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":53,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":295,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":391,"org.easymock.tests2.UsageTest.wrongArguments":278,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":180,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":351,"org.easymock.samples.ExampleTest.answerVsDelegate":42,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":134,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":471,"org.easymock.tests2.UsageConstraintsTest.testNull":200,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":104,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":154,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":258,"org.easymock.tests2.CaptureTest.testPrimitive":226,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":395,"org.easymock.tests.UsageTest.moreThanOneArgument":447,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":31,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":400,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":455,"org.easymock.tests.UsageTest.argumentsOrdered":453,"org.easymock.tests.UsageVarargTest.varargIntAccepted":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":306,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":247,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":320,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":310,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":174,"org.easymock.tests.ReplayStateInvalidUsageTest.times":367,"org.easymock.tests2.DependencyTest.testClassMocking":292,"org.easymock.tests2.AnswerTest.answer":38,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":274,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":487,"org.easymock.tests2.CaptureTest.testAnd":223,"org.easymock.tests2.UsageTest.strictResetToDefault":276,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":111,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":253,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":357,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":459,"org.easymock.tests2.DelegateToTest.testDelegate":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":27,"org.easymock.tests.LimitationsTest.mockFinalMethod":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":407,"org.easymock.tests2.DependencyTest.testClassMockingSupport":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":460,"org.easymock.tests2.CaptureTest.testCapture1_2446744":227,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":272,"org.easymock.tests.UsageThrowableTest.throwError":32,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":361,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":385,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":71,"org.easymock.samples.PartialClassMockTest.testGetArea":117,"org.easymock.tests.MockingTest.testInterfaceMocking":469,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":362,"org.easymock.tests2.CompareToTest.testLessOrEqual":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":307,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":389,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":58,"org.easymock.tests2.UsageTest.niceToStrict":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":78,"org.easymock.tests2.MockBuilderTest.testCreateMock":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":66,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":177,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":21,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":254,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":472,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":349,"org.easymock.tests.UsageOverloadedMethodTest.overloading":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":68,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":10,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":436,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":316,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":156,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":209,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":232,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":411,"org.easymock.tests.MockClassControlTest.testEquals":153,"org.easymock.tests2.EasyMockSupportClassTest.testAll":50,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":137,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":405,"org.easymock.tests2.CaptureTest.testCaptureAll":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":273,"org.easymock.tests.MockNameTest.defaultName":353,"org.easymock.tests2.UsageConstraintsTest.testMatches":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":401,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":359,"org.easymock.samples.ExampleTest.voteForRemovals":303,"org.easymock.tests.UsageVarargTest.allKinds":419,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":396,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":406,"org.easymock.samples.BasicClassMockTest.testPrintContent":122,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":36,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":244,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":315,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":129,"org.easymock.tests2.UsageConstraintsTest.greaterThan":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":51,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":356,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":114,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":130,"org.easymock.samples.ExampleTest.voteForRemoval":300,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":182,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":115,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":107,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":123,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":275,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":251,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":311,"org.easymock.tests2.CaptureTest.testCaptureFirst":236,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":252,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":287,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":432,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":184,"org.easymock.tests2.CaptureTest.testCapture2_2446744":235,"org.easymock.tests2.UsageTest.moreThanOneArgument":277,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":334,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":418,"org.easymock.tests.GenericTest.testBridgedEquals":139,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":479,"org.easymock.tests.UsageExpectAndReturnTest.longType":428,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":403,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":30,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":218,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":398,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":372,"org.easymock.tests.UsageCallCountTest.tooManyCalls":480,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":67,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":433,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":179,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":35,"org.easymock.tests.MockingTest.testNiceClassMocking":146,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests.MockingTest.testClassMocking":141,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":473,"org.easymock.tests2.UsageConstraintsTest.testContains":208,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":90,"org.easymock.tests2.UsageConstraintsTest.testFind":199,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":5,"org.easymock.tests.MockTypeTest.fromEasyMockClass":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":188,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":340,"org.easymock.tests.UsageExpectAndReturnTest.object":435,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":178,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":257,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":413,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":422,"org.easymock.tests.UsageTest.exactCallCountByLastCall":454,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":456,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":381,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":441,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":408,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":377,"org.easymock.tests.MockClassControlTest.testHashCode":152,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":238,"org.easymock.tests2.EasyMockSupportTest.testVerify":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":60,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":457,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":44,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":8,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":271,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":483,"org.easymock.tests.UsageVarargTest.varargCharAccepted":412,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":124,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":339,"org.easymock.tests2.UsageTest.openCallCountByLastCall":281,"org.easymock.tests.DefaultClassInstantiatorTest.object":125,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":7,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":421,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":172,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":237,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":151,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":442,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":371,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":69,"org.easymock.tests2.UsageTest.resumeIfFailure":286,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":314,"org.easymock.tests2.StubTest.stubWithReturnValue":3,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":81,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":434,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":219,"org.easymock.tests2.SerializationTest.testAllMockedMethod":46,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":332,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":0,"org.easymock.samples.SupportTest.voteForRemovals":297,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":135,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":24,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":338,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":158,"org.easymock.tests.UsageExpectAndThrowTest.object":22,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":383,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":216,"org.easymock.tests2.DelegateToTest.testWrongClass":266,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":463,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":464,"org.easymock.samples.ConstructorCalledMockTest.testTax":119,"org.easymock.tests.UsageStrictMockTest.range":345,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":269,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":256,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":23,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":80,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":47,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":350,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":390,"org.easymock.tests2.CaptureTest.testCaptureNone":231,"org.easymock.tests.UsageUnorderedTest.message":445,"org.easymock.tests.UsageVerifyTest.twoReturns":397,"org.easymock.tests.UsageVarargTest.varargByteAccepted":417,"org.easymock.tests2.ThreadingTest.testThreadSafe":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":64,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":477,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":423,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":121,"org.easymock.tests2.CaptureTest.testCapture_2617107":225,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":462,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":336,"org.easymock.tests2.UsageConstraintsTest.any":206,"org.easymock.tests2.StubTest.stub":289,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":366,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":373,"org.easymock.tests.UsageExpectAndThrowTest.longType":15,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":337,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":128,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":365,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":164,"org.easymock.tests2.SerializationTest.testClass":45,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":242,"org.easymock.tests.LimitationsTest.mockNativeMethod":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":444,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":138,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":171,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":167,"org.easymock.tests2.NameTest.nameForMocksControl":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":173,"org.easymock.tests2.MockedExceptionTest.testMockedException":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":52,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":451,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":187,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":145,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":16,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":102,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":82,"org.easymock.tests.MockingTest.testNicePartialClassMocking":144,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":106,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":169,"org.easymock.tests2.CaptureTest.testCaptureLast":230,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":461,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":101,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":203,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":217,"org.easymock.tests.MockingTest.testTwoMocks":142,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":425,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":20,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":284,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":221,"org.easymock.samples.ExampleTest.removeNonExistingDocument":304,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":176,"org.easymock.tests.UsageStrictMockTest.differentMethods":346,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":239,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":126,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":183,"org.easymock.tests2.MockBuilderTest.testCreateMockString":87,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":147,"org.easymock.tests.UsageExpectAndThrowTest.floatType":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":54,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":49,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":159,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":95,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":63,"org.easymock.samples.ExampleTest.voteAgainstRemoval":301,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":328,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":113,"org.easymock.tests.LimitationsTest.privateConstructor":374,"org.easymock.tests2.UsageConstraintsTest.testNotNull":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":37,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":88,"org.easymock.tests2.UsageTest.defaultResetToNice":283,"org.easymock.samples.ExampleTest.voteAgainstRemovals":299,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":329,"org.easymock.tests.UsageVarargTest.differentLength":414,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":170,"org.easymock.tests2.CallbackTest.callback":41,"org.easymock.tests2.UsageConstraintsTest.equals":198,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":109,"org.easymock.tests.UsageTest.openCallCountByLastCall":450,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":393,"org.easymock.tests.UsageCallCountTest.tooFewCalls":475,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":352,"org.easymock.tests.UsageThrowableTest.throwCheckedException":34,"org.easymock.tests.MockingTest.testStrictClassMocking":140,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":468,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":175,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":288,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":40,"org.easymock.tests.ObjectMethodsTest.testHashCode":155,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":185,"org.easymock.tests2.NameTest.nameForNiceMock":192,"org.easymock.tests2.DependencyTest.testInterfaceMocking":294,"org.easymock.samples.ExampleTest.addDocument":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":70,"org.easymock.tests2.DelegateToTest.testStubDelegate":265,"org.easymock.tests2.AnswerTest.stubAnswer":160,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":343,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":482,"org.easymock.tests.UsageVarargTest.varargLongAccepted":416,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":326,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":443,"org.easymock.tests.UsageExpectAndReturnTest.floatType":427,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":93,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":120,"org.easymock.tests.UsageThrowableTest.noUpperLimit":465,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":246,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":195,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":91,"org.easymock.tests2.SerializationTest.test":168,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":228,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":157,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":426,"org.easymock.tests2.UsageConstraintsTest.testSame":201,"org.easymock.samples.SupportTest.addDocument":296,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":484,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":55,"org.easymock.tests.GenericTest.testPackageScope":136,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":245,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":470,"org.easymock.tests2.NameTest.nameForMock":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":437,"org.easymock.tests2.UsageStrictMockTest.differentMethods":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":86,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":110,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":429,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":26,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":420,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":358,"org.easymock.tests2.MockedExceptionTest.testRealException":262,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":392,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":370,"org.easymock.tests2.NameTest.nameForStrictMock":191,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":77,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":105,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":92,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":127,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":215,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":74,"org.easymock.tests2.UsageStrictMockTest.range":165,"org.easymock.tests2.UsageConstraintsTest.lessThan":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":241,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":59,"org.easymock.tests2.CaptureTest.testCaptureRightOne":233,"org.easymock.tests2.UsageConstraintsTest.testOr":202,"org.easymock.tests.UsageRangeTest.combination":355,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":103,"org.easymock.tests.UsageTest.wrongArguments":449,"org.easymock.tests2.MockBuilderTest.testWithConstructor":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":56,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":430,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":319,"org.easymock.tests.UsageVarargTest.varargShortAccepted":415,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":2,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":478,"org.easymock.tests2.UsageConstraintsTest.cmpTo":207,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":6,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":282,"org.easymock.tests2.CaptureTest.testCaptureFromStub":234,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":360,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":75,"org.easymock.tests.UsageTest.unexpectedCallWithArray":448,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":342,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":476,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":439,"org.easymock.tests2.UsageConstraintsTest.constraints":196,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":344,"org.easymock.samples.ExampleTest.addAndChangeDocument":305,"org.easymock.tests.UsageStrictMockTest.testVerify":348,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":298,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":341,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":404,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":431,"org.easymock.tests.LimitationsTest.abstractClass":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":309,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":255}}]
