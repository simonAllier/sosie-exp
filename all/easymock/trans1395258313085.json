[{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[23,24,25,26,27,28],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[30,31,32,33,34,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[38,39,40,41],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[42,43,44,45,46,47,48],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[49,50],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[66,67,68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[69,70],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[71,72],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[38,39,40,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[73],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[38,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","bridgeMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[75],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[76,77,78],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[79,80,81],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[68],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[82,83,84,42,43,85,86,87,88,89,90,91,92,93,94,95,96,0,1,97,98,99,23,100,101,24,102,69,103,104,105,106,107,74,108,109,110,111,112,113,114,115,116,117,66,118,119,120,121,51,122,123,124,125,126,52,53,127,128,129,130,25,131,132,133,134,135,136,137,138,139,140,141,2,3,4,5,6,7,8,9,11,142,143,144,145,146,75,147,73,12,13,148,149,150,14,15,151,152,153,154,155,156,157,158,159,160,161,26,162,163,164,165,166,37,16,17,18,19,167,168,169,170,171,172,20,21,173,174,175,28,176,177,178,179,180,181,54,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,38,39,40,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,29,29,219,220,55,56,221,222,57,58,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,59,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,60,61,266,267,268,62,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,63,299,300,64,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:78","sourceCode":"final java.lang.reflect.Method[] java.lang.reflect.Method[] = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getAllDeclaredMethods(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[211,325,326],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,327,65],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[38,39,40,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[83,84,42,42,43,43,92,23,44,328,100,329,330,331,101,24,102,332,69,333,103,104,47,334,105,110,111,112,113,115,116,335,336,337,338,25,131,132,156,157,159,160,161,26,162,48,339,163,164,165,166,340,27,37,341,342,343,344,345,175,346,347,28,348,349,350,351,352,353,354,355,356,176,357,358,359,360,361,177,362,363,38,40,70,364,365,211,212,325,366,367,237,368,369,49,370,371,79,50,372,373,374,375,376,251,252,253,377,378,379,269,380,381,382,383,384,385,386,387,388],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.EasyMock:557","failures":[42,42,43,43,85,86,87,88,90,91,92,95,96,0,1,97,98,99,100,101,102,69,104,106,389,107,74,108,390,109,110,111,112,113,114,115,116,117,66,118,119,120,121,122,124,125,126,127,128,129,130,25,131,132,133,134,135,136,71,391,137,138,139,140,141,2,3,4,5,6,7,8,9,11,142,143,144,145,146,75,147,73,12,13,148,150,14,15,151,156,157,158,159,160,161,162,164,165,166,37,16,17,19,167,170,171,172,20,21,173,174,175,28,176,177,180,54,182,184,185,186,187,188,189,190,191,192,193,194,195,38,39,392,393,394,197,198,199,200,201,395,396,397,211,325,326,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,398,399,400,245,246,247,248,249,250,401,251,252,253,402,403,404,265,60,61,266,405,267,268,406,407,408,409,410,62,411,269,412,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,413,68,290,291,292,293,294,295,296,299,64,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[38,39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[121,414,415,416,417,418,419,180,54,182,220,420,421,401,59,265,60,61,62,422,412,299,64,301,423,327,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageTest.argumentsOrdered":53,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":219,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":194,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":123,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":93,"org.easymock.tests2.DelegateToTest.testReturnException":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":214,"org.easymock.tests.MockingTest.testPartialClassMocking":251,"org.easymock.tests.MockClassControlTest.testToString":383,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":396,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":270,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":31,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":9,"org.easymock.tests2.UsageTest.wrongArguments":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":197,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":209,"org.easymock.samples.ExampleTest.answerVsDelegate":86,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":364,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":159,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":388,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":193,"org.easymock.tests2.CaptureTest.testPrimitive":19,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":201,"org.easymock.tests.UsageTest.moreThanOneArgument":220,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":289,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":158,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":292,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":406,"org.easymock.tests.UsageTest.argumentsOrdered":58,"org.easymock.tests.UsageVarargTest.varargIntAccepted":256,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":35,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":23,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":24,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":228,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests2.AnswerTest.answer":136,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":155,"org.easymock.tests2.CaptureTest.testAnd":16,"org.easymock.tests2.UsageTest.strictResetToDefault":120,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":163,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":188,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":267,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":410,"org.easymock.tests2.DelegateToTest.testDelegate":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":285,"org.easymock.tests.LimitationsTest.mockFinalMethod":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":206,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":422,"org.easymock.tests2.CaptureTest.testCapture1_2446744":167,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":283,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":153,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":67,"org.easymock.tests.UsageThrowableTest.throwError":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":363,"org.easymock.samples.PartialClassMockTest.testGetArea":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":225,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":403,"org.easymock.tests2.UsageTest.niceToStrict":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":352,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":367,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":76,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":101,"org.easymock.tests2.MockBuilderTest.testCreateMock":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":359,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":415,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":279,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":189,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":400,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":207,"org.easymock.tests.UsageOverloadedMethodTest.overloading":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":361,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":145,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":250,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":316,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":144,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":80,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":172,"org.easymock.tests.MockClassControlTest.testEquals":387,"org.easymock.tests2.EasyMockSupportClassTest.testAll":175,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":212,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":154,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":46,"org.easymock.tests2.CaptureTest.testCaptureAll":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":204,"org.easymock.tests2.UsageConstraintsTest.testMatches":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":293,"org.easymock.samples.ExampleTest.voteForRemovals":90,"org.easymock.tests.UsageVarargTest.allKinds":264,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":265,"org.easymock.samples.BasicClassMockTest.testPrintContent":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":205,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":235,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":178,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":218,"org.easymock.tests2.UsageConstraintsTest.greaterThan":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":36,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":405,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":166,"org.easymock.samples.ExampleTest.voteForRemoval":87,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":373,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":0,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":26,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":119,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":237,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":186,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":213,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":389,"org.easymock.tests2.CaptureTest.testCaptureFirst":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":72,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":187,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":128,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":59,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":312,"org.easymock.tests2.CaptureTest.testCapture2_2446744":173,"org.easymock.tests2.UsageTest.moreThanOneArgument":121,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":97,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":104,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":263,"org.easymock.tests.GenericTest.testBridgedEquals":366,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":243,"org.easymock.tests.UsageExpectAndReturnTest.longType":308,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":202,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":288,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":334,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":149,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":286,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":290,"org.easymock.tests.UsageCallCountTest.tooManyCalls":244,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":275,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":234,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":111,"org.easymock.tests.MockingTest.testNiceClassMocking":377,"org.easymock.tests.MockingTest.testClassMocking":375,"org.easymock.tests2.UsageConstraintsTest.testContains":143,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":328,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":132,"org.easymock.tests2.UsageConstraintsTest.testFind":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":247,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":135,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests.UsageExpectAndReturnTest.object":315,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":162,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":192,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":32,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":258,"org.easymock.tests.UsageTest.exactCallCountByLastCall":223,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":295,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":407,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":395,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":341,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":321,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":249,"org.easymock.tests.MockClassControlTest.testHashCode":386,"org.easymock.tests2.EasyMockSupportTest.testVerify":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":354,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":408,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":399,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":152,"org.easymock.tests.UsageVarargTest.varargCharAccepted":257,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":368,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":179,"org.easymock.tests2.UsageTest.openCallCountByLastCall":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":77,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":195,"org.easymock.tests.DefaultClassInstantiatorTest.object":369,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":398,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":355,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":232,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":385,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":164,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":276,"org.easymock.tests.CapturesMatcherTest.test":29,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":322,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":392,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":417,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":177,"org.easymock.tests2.UsageTest.resumeIfFailure":127,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":216,"org.easymock.tests2.StubTest.stubWithReturnValue":118,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":332,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":314,"org.easymock.tests2.SerializationTest.testAllMockedMethod":40,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":413,"org.easymock.samples.SupportTest.voteForRemovals":95,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":282,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":41,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":68,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":71,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":397,"org.easymock.tests.UsageExpectAndThrowTest.object":280,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":13,"org.easymock.tests2.DelegateToTest.testWrongClass":108,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":303,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":304,"org.easymock.samples.ConstructorCalledMockTest.testTax":42,"org.easymock.tests.UsageStrictMockTest.range":64,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":281,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":102,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":208,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":404,"org.easymock.tests2.CaptureTest.testCaptureNone":171,"org.easymock.tests.UsageUnorderedTest.message":62,"org.easymock.tests.UsageVerifyTest.twoReturns":61,"org.easymock.tests.UsageVarargTest.varargByteAccepted":262,"org.easymock.tests2.ThreadingTest.testThreadSafe":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":357,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":241,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":83,"org.easymock.tests2.CaptureTest.testCapture_2617107":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":200,"org.easymock.tests2.UsageConstraintsTest.any":11,"org.easymock.tests2.StubTest.stub":66,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":215,"org.easymock.tests.UsageExpectAndThrowTest.longType":273,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":79,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":181,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests.LimitationsTest.mockNativeMethod":269,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":324,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":325,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":183,"org.easymock.tests2.MockedExceptionTest.testMockedException":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":347,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":222,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":274,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":156,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":69,"org.easymock.tests.MockingTest.testNicePartialClassMocking":252,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":161,"org.easymock.tests2.CaptureTest.testCaptureLast":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":30,"org.easymock.tests2.CompareToTest.testCompareEqual":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":412,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":116,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":148,"org.easymock.tests.MockingTest.testTwoMocks":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":278,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":52,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":15,"org.easymock.tests.UsageStrictMockTest.differentMethods":301,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":370,"org.easymock.tests2.ConstraintsToStringTest.andToString":418,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":1,"org.easymock.tests2.MockBuilderTest.testCreateMockString":105,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":381,"org.easymock.tests.UsageExpectAndThrowTest.floatType":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":348,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":137,"org.easymock.tests.UsageVerifyTest.twoThrows":60,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":342,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":176,"org.easymock.samples.ExampleTest.voteAgainstRemoval":88,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":402,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":165,"org.easymock.tests.LimitationsTest.privateConstructor":379,"org.easymock.tests2.UsageConstraintsTest.testNotNull":14,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":236,"org.easymock.tests2.UsageTest.defaultResetToNice":126,"org.easymock.samples.ExampleTest.voteAgainstRemovals":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":320,"org.easymock.tests.UsageVarargTest.differentLength":259,"org.easymock.tests2.CallbackTest.callback":117,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":48,"org.easymock.tests.UsageTest.openCallCountByLastCall":221,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":199,"org.easymock.tests.UsageCallCountTest.tooFewCalls":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":113,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":210,"org.easymock.tests.UsageThrowableTest.throwCheckedException":233,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":423,"org.easymock.tests.MockingTest.testStrictClassMocking":374,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":115,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":296,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":112,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":114,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":34,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":98,"org.easymock.tests2.DependencyTest.testInterfaceMocking":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":33,"org.easymock.samples.ExampleTest.addDocument":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":358,"org.easymock.tests2.DelegateToTest.testStubDelegate":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.AnswerTest.stubAnswer":138,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":299,"org.easymock.tests.UsageVarargTest.varargLongAccepted":261,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":302,"org.easymock.tests.UsageExpectAndReturnTest.floatType":307,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":323,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":37,"org.easymock.tests2.ConstraintsToStringTest.orToString":414,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":43,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":73,"org.easymock.tests.UsageThrowableTest.noUpperLimit":230,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":141,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":335,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":168,"org.easymock.tests2.SerializationTest.test":39,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":81,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":49,"org.easymock.tests2.UsageConstraintsTest.testSame":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":306,"org.easymock.samples.SupportTest.addDocument":94,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":349,"org.easymock.tests.GenericTest.testPackageScope":211,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":409,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":317,"org.easymock.tests2.UsageStrictMockTest.differentMethods":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":47,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":339,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":284,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":268,"org.easymock.tests2.MockedExceptionTest.testRealException":133,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":327,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":198,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":331,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":134,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":160,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":336,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":12,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":371,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":100,"org.easymock.tests2.UsageStrictMockTest.range":54,"org.easymock.tests2.UsageConstraintsTest.lessThan":151,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":337,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":185,"org.easymock.tests2.CaptureTest.testCaptureRightOne":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":353,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":157,"org.easymock.tests.UsageTest.wrongArguments":56,"org.easymock.tests2.MockBuilderTest.testWithConstructor":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":350,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":382,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":318,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":50,"org.easymock.tests.UsageVarargTest.varargShortAccepted":260,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":242,"org.easymock.tests2.UsageConstraintsTest.cmpTo":142,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":391,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":125,"org.easymock.tests2.CaptureTest.testCaptureFromStub":21,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":329,"org.easymock.tests.UsageTest.unexpectedCallWithArray":55,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":63,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":240,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":45,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":319,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":300,"org.easymock.samples.ExampleTest.addAndChangeDocument":91,"org.easymock.tests2.ConstraintsToStringTest.notToString":416,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":82,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":203,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":169,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":226,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":338,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":311,"org.easymock.tests.LimitationsTest.abstractClass":378,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":190,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":255}}]
