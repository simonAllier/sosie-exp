[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:86","sourceCode":"return org.easymock.internal.Results.getMainInterval().expectedCount()","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[25,26,27,28,29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[30],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[31],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[35,36,37,38,39,2,3,4,33,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,27,96,97,98,99,100,101,102,9,31,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,1,128,30,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,14,15,16,172,173,174,175,176,177,178,179,180,181,182,183,17,19,184,20,185,186,187,188,189,190,191,192,193,194],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[195,196,197,198,199,36,200,201,202,203,204,205,206,207,208,209,210,127,211,212,213,214,215,216,217,218],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[219,35,220,36,37,38,39,221,222,223,2,224,3,4,225,32,25,33,26,226,227,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,228,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,229,230,231,91,92,93,94,95,27,232,233,234,96,235,5,6,7,8,97,98,99,100,101,102,9,10,31,236,103,104,105,11,12,106,107,108,109,110,111,112,237,238,113,114,115,116,239,117,118,119,120,121,122,123,124,125,240,241,126,242,127,1,128,30,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,243,244,152,153,154,155,245,156,157,158,159,160,161,162,163,246,247,248,164,249,250,251,252,253,254,255,256,165,166,257,258,167,169,170,171,259,260,13,14,261,15,16,262,263,264,265,172,173,174,175,176,177,178,266,267,268,269,270,271,272,273,180,181,182,183,274,17,18,19,275,276,277,278,279,280,184,20,21,185,186,22,23,187,28,29,281,188,24,282,283,284,285,286,287,288,289,290,291,34,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,189,217,190,341,342,191,343,192,193,344,194,345,218,346,346,347,347],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[44,66,236,348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[37,349,38,221,40,41,43,44,45,350,46,351,352,353,47,48,49,354,355,356,357,358,359,360,97,361,362,98,363,364,365,366,367,368,369,370,371,99,372,373,374,375,376,100,377,378,119,120,121,122,124,125,240,241,126,379,380,381,382,1,383,384,128,385,30,129,386,387,130,388,389,390,151,243,244,391,392,393,394,395,164,396,397,398,168,169,170,171,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,339,190,341,342,346,346,347,347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[351,416,417,418,419,420,346,347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[421],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[422,423,13,424,425,426],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"value","i":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[2,46,50,51,52,53,54,55,56,57,58,59,228,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,230,231,94,108,109,110,111,112,237,238,113,114,115,116,239,117,118,0,162,163,165,166,257,258,167,13,14,172,173,174,175,176,177,178,279,24,318],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[390,151,243,244,391],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[96,235],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[32,25,33,26,226,227,42,94,123,240,241,126,242,427,173,410,414],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[2,4,225,9,14,16,262,17,18,19,20,188],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:169","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[220,224,3,66,101,107,261,15,271,272,180,18,19,428,429,184,187,24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","m":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[53,58,69],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[390,391],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[67,430],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[52,53,55,57,58,228,69,74,108,110,116],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[25,26,27,28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[422,423,13,424,425,426],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matching"}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[431,432,433,434,219,35,220,36,37,38,39,221,222,223,2,224,3,4,225,25,33,26,227,40,41,42,43,44,45,350,46,353,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,229,230,231,91,92,94,95,27,234,96,235,97,98,99,100,101,102,9,10,31,236,103,104,105,11,12,106,107,108,109,110,111,112,237,238,113,114,115,116,239,117,118,119,120,121,122,123,124,125,240,241,126,242,127,381,1,128,385,30,129,387,130,389,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,243,152,153,154,155,245,156,157,158,159,160,161,162,163,164,249,250,251,252,253,165,166,257,258,167,169,170,171,259,260,13,14,261,15,16,262,435,436,437,427,438,172,173,174,175,176,177,178,179,439,440,441,267,268,269,270,442,271,272,180,182,183,17,18,19,275,276,277,278,279,280,184,20,426,21,185,186,22,23,187,28,29,281,443,24,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,189,217,190,341,342,191,343,192,193,344,194,345,218,346,347],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[409,410,411,412,414,415],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[3,10,11,12,13,15,444,18,19,426,21,22,23,443,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[390],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[35,220,36,37,38,39,221,222,223,2,224,3,4,25,33,26,227,40,42,43,44,45,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,229,230,445,231,91,92,93,94,95,27,234,96,235,97,98,99,100,101,102,9,10,31,236,103,104,11,12,107,108,109,110,111,112,237,238,113,114,115,116,239,117,118,119,120,121,122,123,124,125,126,127,128,30,129,130,389,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,243,153,154,155,245,156,157,158,159,160,161,162,163,164,249,250,251,252,253,165,166,257,258,167,169,170,171,259,260,13,14,261,15,16,172,173,174,175,176,177,178,267,269,270,180,17,18,19,275,276,277,278,279,280,184,20,426,21,185,186,22,23,187,24,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,189,217,190,341,342,191,343,192,193,344,194,345,218,346,347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[37,38,221,40,41,43,44,45,350,46,353,47,48,49,97,98,99,100,119,120,121,122,124,125,126,446,380,447,381,382,1,383,128,385,30,129,387,130,388,389,151,243,244,392,393,164,168,169,170,171,401,339,190,341,342,346,346,347,347],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[37,38,221,40,41,43,44,45,350,46,353,47,48,49,97,98,99,100,119,120,121,122,124,125,126,446,380,447,448,381,382,1,383,128,385,30,129,387,130,388,389,151,243,244,392,393,164,168,169,170,171,401,339,190,341,342,346,346,347,347],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[349,449,450,451,452,453,454],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":53,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":184,"org.easymock.tests2.UsageTest.argumentsOrdered":12,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":34,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":236,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":217,"org.easymock.tests2.DelegateToTest.testReturnException":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":276,"org.easymock.tests.MockingTest.testPartialClassMocking":169,"org.easymock.tests.MockClassControlTest.testToString":402,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":319,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":78,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":449,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":165,"org.easymock.tests2.UsageTest.wrongArguments":10,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":440,"org.easymock.samples.ExampleTest.answerVsDelegate":343,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":393,"org.easymock.tests2.UsageConstraintsTest.testNull":55,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":43,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":407,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":88,"org.easymock.tests2.CaptureTest.testPrimitive":111,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":167,"org.easymock.tests.UsageTest.moreThanOneArgument":20,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":338,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":251,"org.easymock.tests.UsageTest.argumentsOrdered":23,"org.easymock.tests.UsageVarargTest.varargIntAccepted":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":172,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":453,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":381,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":204,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":176,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":420,"org.easymock.tests2.AnswerTest.answer":27,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":434,"org.easymock.tests2.CaptureTest.testAnd":108,"org.easymock.tests2.UsageTest.strictResetToDefault":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":83,"org.easymock.tests2.DelegateToTest.testDelegate":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":334,"org.easymock.tests.LimitationsTest.mockFinalMethod":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":279,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":438,"org.easymock.tests2.CaptureTest.testCapture1_2446744":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":432,"org.easymock.tests.UsageThrowableTest.throwError":155,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":253,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":378,"org.easymock.samples.PartialClassMockTest.testGetArea":190,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":173,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":306,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":408,"org.easymock.tests2.UsageTest.niceToStrict":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":282,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":128,"org.easymock.tests2.MockBuilderTest.testCreateMock":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":374,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":213,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":422,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":328,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":84,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":248,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":179,"org.easymock.tests.UsageOverloadedMethodTest.overloading":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":376,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":64,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":281,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":142,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":63,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":115,"org.easymock.tests.MockClassControlTest.testEquals":406,"org.easymock.tests2.EasyMockSupportClassTest.testAll":97,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":243,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":336,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":446,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":437,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":433,"org.easymock.tests2.CaptureTest.testCaptureAll":109,"org.easymock.tests2.UsageConstraintsTest.testMatches":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":252,"org.easymock.samples.ExampleTest.voteForRemovals":194,"org.easymock.tests.UsageVarargTest.allKinds":318,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":427,"org.easymock.samples.BasicClassMockTest.testPrintContent":342,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":160,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":201,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":280,"org.easymock.tests2.UsageConstraintsTest.greaterThan":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":361,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":181,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":49,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":415,"org.easymock.samples.ExampleTest.voteForRemoval":192,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":92,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":354,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":350,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":101,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":339,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":81,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":275,"org.easymock.tests2.CaptureTest.testCaptureFirst":118,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":82,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":107,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":443,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":138,"org.easymock.tests2.CaptureTest.testCapture2_2446744":117,"org.easymock.tests2.UsageTest.moreThanOneArgument":9,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":94,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":299,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":317,"org.easymock.tests.GenericTest.testBridgedEquals":391,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":271,"org.easymock.tests.UsageExpectAndReturnTest.longType":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":435,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":79,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":388,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":337,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":72,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":274,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":249,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":255,"org.easymock.tests.UsageCallCountTest.tooManyCalls":272,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":159,"org.easymock.tests.MockingTest.testNiceClassMocking":399,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":120,"org.easymock.tests.MockingTest.testClassMocking":398,"org.easymock.tests2.UsageConstraintsTest.testContains":62,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":382,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":126,"org.easymock.tests2.UsageConstraintsTest.testFind":54,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":154,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":231,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":259,"org.easymock.tests.UsageExpectAndReturnTest.object":141,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":87,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":450,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":312,"org.easymock.tests.UsageTest.exactCallCountByLastCall":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":287,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":349,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":147,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":29,"org.easymock.tests.MockClassControlTest.testHashCode":405,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":196,"org.easymock.tests2.EasyMockSupportTest.testVerify":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":369,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":265,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":28,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":431,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":0,"org.easymock.tests.UsageVarargTest.varargCharAccepted":311,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":304,"org.easymock.tests2.UsageTest.openCallCountByLastCall":103,"org.easymock.tests.DefaultClassInstantiatorTest.object":409,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":90,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":246,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":444,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":370,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":448,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":209,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":195,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":404,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":47,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":325,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":254,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":100,"org.easymock.tests2.UsageTest.resumeIfFailure":106,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":278,"org.easymock.tests2.StubTest.stubWithReturnValue":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":454,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":140,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":73,"org.easymock.tests2.SerializationTest.testAllMockedMethod":221,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":297,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":423,"org.easymock.samples.SupportTest.voteForRemovals":189,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":331,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":303,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":232,"org.easymock.tests.UsageExpectAndThrowTest.object":329,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":70,"org.easymock.tests2.DelegateToTest.testWrongClass":26,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":177,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":178,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.samples.ConstructorCalledMockTest.testTax":346,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":86,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":330,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":30,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":439,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":424,"org.easymock.tests2.CaptureTest.testCaptureNone":114,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":307,"org.easymock.tests.UsageUnorderedTest.message":24,"org.easymock.tests.UsageVerifyTest.twoReturns":19,"org.easymock.tests.UsageVarargTest.varargByteAccepted":316,"org.easymock.tests2.ThreadingTest.testThreadSafe":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":372,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":270,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":341,"org.easymock.tests2.CaptureTest.testCapture_2617107":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":301,"org.easymock.tests2.UsageConstraintsTest.any":60,"org.easymock.tests2.StubTest.stub":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":302,"org.easymock.tests.UsageExpectAndThrowTest.longType":322,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":413,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":348,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":224,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":36,"org.easymock.tests.LimitationsTest.mockNativeMethod":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":150,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":244,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":447,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":208,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":225,"org.easymock.tests2.NameTest.nameForMocksControl":8,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":210,"org.easymock.tests2.MockedExceptionTest.testMockedException":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":362,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":186,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":445,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":171,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":323,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":129,"org.easymock.tests.MockingTest.testNicePartialClassMocking":170,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":45,"org.easymock.tests2.CaptureTest.testCaptureLast":113,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":206,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":125,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":58,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":71,"org.easymock.tests.MockingTest.testTwoMocks":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":327,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":75,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":212,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":197,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":411,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":93,"org.easymock.tests2.MockBuilderTest.testCreateMockString":389,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":400,"org.easymock.tests.UsageExpectAndThrowTest.floatType":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":363,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":234,"org.easymock.tests.UsageVerifyTest.twoThrows":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":99,"org.easymock.samples.ExampleTest.voteAgainstRemoval":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":292,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":305,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":48,"org.easymock.tests.LimitationsTest.privateConstructor":395,"org.easymock.tests2.UsageConstraintsTest.testNotNull":74,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":161,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":240,"org.easymock.tests2.UsageTest.defaultResetToNice":105,"org.easymock.samples.ExampleTest.voteAgainstRemovals":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":293,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":207,"org.easymock.tests.UsageVarargTest.differentLength":313,"org.easymock.tests2.CallbackTest.callback":220,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":351,"org.easymock.tests.UsageTest.openCallCountByLastCall":185,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":257,"org.easymock.tests.UsageCallCountTest.tooFewCalls":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":122,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":441,"org.easymock.tests.UsageThrowableTest.throwCheckedException":158,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":425,"org.easymock.tests.MockingTest.testStrictClassMocking":397,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":163,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":123,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":452,"org.easymock.tests2.NameTest.nameForNiceMock":7,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":95,"org.easymock.tests2.DependencyTest.testInterfaceMocking":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":451,"org.easymock.samples.ExampleTest.addDocument":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":373,"org.easymock.tests2.DelegateToTest.testStubDelegate":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.AnswerTest.stubAnswer":96,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":14,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":416,"org.easymock.tests.UsageVarargTest.varargLongAccepted":315,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":291,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":149,"org.easymock.tests.UsageExpectAndReturnTest.floatType":133,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":37,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":347,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":203,"org.easymock.tests.UsageThrowableTest.noUpperLimit":245,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":51,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":356,"org.easymock.tests2.SerializationTest.test":39,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":237,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":410,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":132,"org.easymock.tests2.UsageConstraintsTest.testSame":56,"org.easymock.samples.SupportTest.addDocument":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":364,"org.easymock.tests.GenericTest.testPackageScope":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":202,"org.easymock.tests2.NameTest.nameForMock":5,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":418,"org.easymock.tests2.UsageStrictMockTest.differentMethods":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":352,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":135,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":183,"org.easymock.tests2.MockedExceptionTest.testRealException":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":295,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":294,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":166,"org.easymock.tests2.NameTest.nameForStrictMock":6,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":44,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":357,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":428,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":412,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":69,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":1,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":76,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":379,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":199,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":290,"org.easymock.tests2.CaptureTest.testCaptureRightOne":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":368,"org.easymock.tests2.UsageConstraintsTest.testOr":57,"org.easymock.tests.UsageRangeTest.combination":180,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":41,"org.easymock.tests.UsageTest.wrongArguments":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":365,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":401,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":136,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":283,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":414,"org.easymock.tests.UsageVarargTest.varargShortAccepted":314,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":442,"org.easymock.tests2.UsageConstraintsTest.cmpTo":61,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":285,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":104,"org.easymock.tests2.CaptureTest.testCaptureFromStub":239,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":383,"org.easymock.tests.UsageTest.unexpectedCallWithArray":426,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":269,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":417,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":145,"org.easymock.tests2.UsageConstraintsTest.constraints":52,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":261,"org.easymock.samples.ExampleTest.addAndChangeDocument":345,"org.easymock.tests.UsageStrictMockTest.testVerify":263,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":218,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":436,"org.easymock.tests2.CompareToTest.testGreateThan":430,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":174,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":380,"org.easymock.tests.LimitationsTest.abstractClass":394,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":137,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":175,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":85,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":309}}]
