[{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[59,60,61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Find:41","sourceCode":"java.lang.StringBuffer.append(((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[63],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[65,66],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[67,68,69,70,71,72,73,74,75,76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,240,241,241,242,243,244,245,246,247,248,249,250,251,252,253,1,4,5,6,7,13,16,26,32,35,36,37,38,254,39,40,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,41,285,42,43,44,47,49,50,53,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,67,345,68,69,70,71,72,73,346,74,76,347,348,349,350,351,352,353,354,355,356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:262","failures":[78,79,88,89,95,96,98,99,100,101,102,103,104,105,106,107,108,109,113,123,127,145,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,198,199,216,286,293,325,326,327,328,336],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[274],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[242,243,59,357,358,359,360,361,60,362,363,364,365,61,366,367,368,369,370,62,371,372,373,374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"hashCodeMethod","this":"this"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[375,345,348,349],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"capture"}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[141,197],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[240,241,376,377,324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[277],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[378],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[379,380,381,225,382,383],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[384,385,386,387,388,389,390],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[240,241,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,40,391,41,392,393,384,51,394,395,376,396,324,385],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[80,397,81,82,83,84,94,95,96,97,98,99,100,101,102,103,398,399,400,401,104,105,106,107,108,109,115,116,117,118,119,120,121,122,402,403,404,405,406,123,124,381,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,143,144,145,146,147,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,407,408,409,410,411,412,202,203,204,205,206,207,208,209,210,413,214,215,216,217,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,240,241,241,242,243,244,245,246,247,248,249,250,251,252,253,1,4,6,13,16,26,32,35,36,37,38,254,39,40,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,41,285,42,43,47,48,49,50,53,54,286,287,288,289,290,291,292,293,294,295,296,297,298,299,302,303,304,414,415,416,417,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,344,67,345,68,69,70,71,72,73,346,74,76,347,348,349,350,351,352,353,354,355,356],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[379,380,381,225,382,383],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","sourceCode":"java.lang.StringBuffer.append(((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\"))","type":"CtInvocationImpl"},"failures":[418],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[339,341],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[199,335],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[419,155,159,160,162,165,175,179,180,182,185,218,221,222,228,229,354,355],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[81,82,83,84,85,86,93,94,95,420,421,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,116,117,118,119,120,121,122,123,124,126,127,128,130,131,132,133,134,135,137,138,139,140,141,143,144,145,146,147,66,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,195,196,197,198,199,200,202,204,205,206,207,208,209,210,422,423,214,215,216,217,219,220,224,226,227,228,229,230,233,234,235,236,237,238,239,242,243,244,245,246,247,248,249,250,251,252,253,1,13,35,38,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,42,286,287,288,290,291,292,293,295,297,298,299,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,344,67,345,68,69,70,71,72,73,346,74,76,347,348,349,351,352,353,354,355,356],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[424,339,341],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[274,291],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:2124","failures":[234,255,425,256,299,302,303],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[426,427,428],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.Range:40","failures":[77,78,79,80,397,81,82,83,84,429,85,86,87,88,89,378,430,431,432,433,434,435,436,90,91,92,93,94,95,420,437,438,421,439,440,441,96,97,98,99,100,101,102,103,398,399,400,401,104,105,106,107,108,109,110,111,112,113,114,115,442,116,117,443,118,119,120,121,122,402,403,404,405,406,123,124,381,125,126,127,128,129,130,131,132,133,444,134,135,136,137,138,139,140,141,445,142,446,447,448,143,449,144,145,65,146,147,148,66,450,451,452,453,454,455,456,457,419,458,424,459,460,461,462,463,149,464,465,466,467,468,150,469,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,470,471,191,192,193,472,194,473,474,475,195,196,197,198,199,200,476,201,477,478,479,426,480,481,482,483,407,484,408,409,485,410,486,487,411,488,412,202,203,204,205,206,207,208,209,210,211,212,213,489,490,413,491,492,493,494,422,423,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,495,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,496,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,497,254,39,40,391,255,425,256,257,258,259,260,498,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,41,285,42,43,392,44,45,393,46,47,48,49,384,50,499,51,52,53,395,54,286,287,288,289,290,291,292,293,294,295,296,297,298,55,56,500,501,57,502,503,299,300,301,302,303,304,414,415,416,417,59,357,358,359,360,305,361,60,362,363,364,365,306,307,308,309,310,311,312,313,314,315,316,317,318,504,319,320,321,322,61,366,367,368,369,323,370,62,371,372,373,374,324,385,505,325,326,327,328,329,330,331,332,333,334,335,336,506,507,337,338,339,340,341,342,343,344,67,345,68,69,70,71,72,73,346,74,76,347,348,349,508,350,351,352,353,354,355,356],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[7,9,320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[442,509,381,125,128,129,195,216,217,225,228,289,295,296,354],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[341],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[379,380,381,225,382,383],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[144,268],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:48","failures":[77,78,79,81,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,115,116,117,118,119,120,121,122,123,124,126,127,130,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,221,222,226,228,229,232,233,234,235,236,238,239,240,240,241,241,245,248,249,250,251,252,253,1,5,6,7,13,16,26,32,35,36,37,38,254,39,40,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,41,285,44,47,49,50,53,286,287,288,290,292,293,294,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,67,345,69,70,73,346,74,76,347,348,349,352,354,355],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[108,116,117,118,119,120,121,122,141,144,145,195,196,197,198,199,200,225,226,1,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,333,67,345,68,69,70,71,72,73,346,74,76,347,348,349,508,352],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[195,510],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[379,380,381,225,382,383],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[378,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":260,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests2.UsageTest.argumentsOrdered":296,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":424,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":291,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":242,"org.easymock.tests2.DelegateToTest.testReturnException":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":105,"org.easymock.tests.MockingTest.testPartialClassMocking":192,"org.easymock.tests.MockClassControlTest.testToString":491,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":504,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":151,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":16,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":338,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":386,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":266,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":196,"org.easymock.tests2.UsageTest.wrongArguments":289,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":400,"org.easymock.samples.ExampleTest.answerVsDelegate":234,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":434,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":474,"org.easymock.tests2.UsageConstraintsTest.testNull":262,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":251,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":423,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":315,"org.easymock.tests2.CaptureTest.testPrimitive":69,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":200,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":170,"org.easymock.tests.UsageTest.moreThanOneArgument":124,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":208,"org.easymock.tests.UsageTest.argumentsOrdered":129,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":218,"org.easymock.tests.UsageVarargTest.varargIntAccepted":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":463,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":118,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":390,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":500,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":364,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":122,"org.easymock.tests.ReplayStateInvalidUsageTest.times":487,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":323,"org.easymock.tests2.DependencyTest.testClassMocking":506,"org.easymock.tests2.AnswerTest.answer":299,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":464,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":417,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":431,"org.easymock.tests2.CaptureTest.testAnd":67,"org.easymock.tests2.UsageTest.strictResetToDefault":287,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":393,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":310,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":222,"org.easymock.tests2.DelegateToTest.testDelegate":344,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":166,"org.easymock.tests.LimitationsTest.mockFinalMethod":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":108,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":406,"org.easymock.tests2.DependencyTest.testClassMockingSupport":507,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":212,"org.easymock.tests2.CaptureTest.testCapture1_2446744":70,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":164,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":415,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":484,"org.easymock.tests.UsageThrowableTest.throwError":96,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":433,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":443,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":210,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":34,"org.easymock.samples.PartialClassMockTest.testGetArea":232,"org.easymock.tests.MockingTest.testInterfaceMocking":472,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":91,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":440,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":21,"org.easymock.tests2.UsageTest.niceToStrict":290,"org.easymock.tests2.ThreadingTest.testChangeDefault":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":377,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":47,"org.easymock.tests2.MockBuilderTest.testCreateMock":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":29,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":160,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":382,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":311,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":430,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":80,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":398,"org.easymock.tests.UsageOverloadedMethodTest.overloading":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":25,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":113,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":272,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":182,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":93,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":427,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":271,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":74,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":444,"org.easymock.tests.MockClassControlTest.testEquals":422,"org.easymock.tests2.EasyMockSupportClassTest.testAll":13,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":147,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":168,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":416,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":404,"org.easymock.tests2.CaptureTest.testCaptureAll":345,"org.easymock.tests.MockNameTest.defaultName":441,"org.easymock.tests2.UsageConstraintsTest.testMatches":273,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":483,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":209,"org.easymock.samples.ExampleTest.voteForRemovals":238,"org.easymock.tests.UsageVarargTest.allKinds":141,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":405,"org.easymock.samples.BasicClassMockTest.testPrintContent":247,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":102,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":60,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":343,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":481,"org.easymock.tests2.UsageConstraintsTest.greaterThan":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":14,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":203,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":7,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":482,"org.easymock.samples.ExampleTest.voteForRemoval":235,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":8,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":331,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":435,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":501,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":496,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":214,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":286,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":308,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":104,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":339,"org.easymock.tests2.CaptureTest.testCaptureFirst":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":309,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":442,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":178,"org.easymock.tests2.UsageTest.moreThanOneArgument":288,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":333,"org.easymock.tests2.CaptureTest.testCapture2_2446744":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":465,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":53,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":140,"org.easymock.tests.GenericTest.testBridgedEquals":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":85,"org.easymock.tests.UsageExpectAndReturnTest.longType":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":402,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":306,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":169,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":211,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":280,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":167,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":206,"org.easymock.tests.UsageCallCountTest.tooManyCalls":86,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":30,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":156,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":101,"org.easymock.tests.MockingTest.testNiceClassMocking":475,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":36,"org.easymock.tests.MockingTest.testClassMocking":471,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":397,"org.easymock.tests2.UsageConstraintsTest.testContains":270,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":327,"org.easymock.tests2.UsageConstraintsTest.testFind":261,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":95,"org.easymock.tests.MockTypeTest.fromEasyMockClass":432,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":223,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":256,"org.easymock.tests.UsageExpectAndReturnTest.object":181,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":1,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":372,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":314,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":387,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":135,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":421,"org.easymock.tests.UsageTest.exactCallCountByLastCall":130,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":219,"org.easymock.tests2.ConstraintsToStringTest.findToString":63,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":385,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":187,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":131,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":112,"org.easymock.tests.MockClassControlTest.testHashCode":494,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":357,"org.easymock.tests2.EasyMockSupportTest.testVerify":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":23,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":220,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":110,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":78,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":414,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":508,"org.easymock.tests.UsageVarargTest.varargCharAccepted":134,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":476,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":469,"org.easymock.tests2.UsageTest.openCallCountByLastCall":292,"org.easymock.tests.DefaultClassInstantiatorTest.object":201,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":77,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":437,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":509,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":24,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":59,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":493,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":5,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":157,"org.easymock.tests.CapturesMatcherTest.test":375,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":188,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":87,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":32,"org.easymock.tests2.UsageTest.resumeIfFailure":297,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":378,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":107,"org.easymock.tests2.StubTest.stubWithReturnValue":336,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":384,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":180,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":281,"org.easymock.tests2.SerializationTest.testAllMockedMethod":42,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":149,"org.easymock.samples.SupportTest.voteForRemovals":245,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":383,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":359,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":163,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":150,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":300,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":446,"org.easymock.tests.UsageExpectAndThrowTest.object":161,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":278,"org.easymock.tests2.DelegateToTest.testWrongClass":342,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":116,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":117,"org.easymock.tests.UsageStrictMockTest.range":228,"org.easymock.samples.ConstructorCalledMockTest.testTax":240,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":502,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":313,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":35,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":49,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":488,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":10,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":399,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":379,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":92,"org.easymock.tests2.CaptureTest.testCaptureNone":346,"org.easymock.tests.UsageUnorderedTest.message":195,"org.easymock.tests.UsageVerifyTest.twoReturns":217,"org.easymock.tests.UsageVarargTest.varargByteAccepted":139,"org.easymock.tests2.ThreadingTest.testThreadSafe":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":27,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":84,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":439,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":246,"org.easymock.tests2.CaptureTest.testCapture_2617107":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":199,"org.easymock.tests2.UsageConstraintsTest.any":268,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":486,"org.easymock.tests2.StubTest.stub":335,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndThrowTest.longType":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":106,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":426,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":410,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":353,"org.easymock.tests2.SerializationTest.testClass":41,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":305,"org.easymock.tests.LimitationsTest.mockNativeMethod":143,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":190,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":148,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":367,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":356,"org.easymock.tests2.NameTest.nameForMocksControl":322,"org.easymock.tests2.MockedExceptionTest.testMockedException":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":15,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":425,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":155,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":248,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":50,"org.easymock.tests.MockingTest.testNicePartialClassMocking":193,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":61,"org.easymock.tests2.CaptureTest.testCaptureLast":73,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":213,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":40,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":265,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":279,"org.easymock.tests.MockingTest.testTwoMocks":191,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":159,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":295,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":283,"org.easymock.samples.ExampleTest.removeNonExistingDocument":495,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":62,"org.easymock.tests.UsageStrictMockTest.differentMethods":229,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":358,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":478,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":332,"org.easymock.tests2.MockBuilderTest.testCreateMockString":54,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":490,"org.easymock.tests.UsageExpectAndThrowTest.floatType":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":17,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":12,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":505,"org.easymock.tests.UsageVerifyTest.twoThrows":216,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":26,"org.easymock.tests.ResultTest.createDelegateResultToString":64,"org.easymock.samples.ExampleTest.voteAgainstRemoval":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":459,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":90,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":6,"org.easymock.tests.LimitationsTest.privateConstructor":448,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":396,"org.easymock.tests2.UsageConstraintsTest.testNotNull":282,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":103,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":325,"org.easymock.tests2.UsageTest.defaultResetToNice":294,"org.easymock.samples.ExampleTest.voteAgainstRemovals":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":186,"org.easymock.tests.UsageVarargTest.differentLength":136,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":366,"org.easymock.tests2.CallbackTest.callback":329,"org.easymock.tests2.UsageConstraintsTest.equals":498,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":2,"org.easymock.tests.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":198,"org.easymock.tests.UsageCallCountTest.tooFewCalls":82,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":38,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":401,"org.easymock.tests.UsageThrowableTest.throwCheckedException":100,"org.easymock.tests.MockingTest.testStrictClassMocking":470,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":380,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":145,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":370,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":411,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":254,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":304,"org.easymock.tests.ObjectMethodsTest.testHashCode":438,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":389,"org.easymock.tests2.NameTest.nameForNiceMock":321,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":334,"org.easymock.tests2.DependencyTest.testInterfaceMocking":337,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":388,"org.easymock.samples.ExampleTest.addDocument":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":33,"org.easymock.tests2.DelegateToTest.testStubDelegate":341,"org.easymock.tests2.AnswerTest.stubAnswer":303,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":226,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":499,"org.easymock.tests.UsageVarargTest.varargLongAccepted":138,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":189,"org.easymock.tests.UsageExpectAndReturnTest.floatType":173,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":324,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":241,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":114,"org.easymock.tests.UsageThrowableTest.noUpperLimit":97,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":363,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":258,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":55,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":71,"org.easymock.tests2.SerializationTest.test":285,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":428,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":172,"org.easymock.tests2.UsageConstraintsTest.testSame":263,"org.easymock.samples.SupportTest.addDocument":244,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":497,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":18,"org.easymock.tests.GenericTest.testPackageScope":146,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":362,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":473,"org.easymock.tests2.NameTest.nameForMock":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":395,"org.easymock.tests2.UsageStrictMockTest.differentMethods":355,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":3,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":175,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":165,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":420,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":205,"org.easymock.tests2.MockedExceptionTest.testRealException":328,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":436,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":461,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":352,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":197,"org.easymock.tests2.NameTest.nameForStrictMock":320,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":46,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":252,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":57,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":510,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":479,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":277,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":44,"org.easymock.tests2.UsageStrictMockTest.range":354,"org.easymock.tests2.UsageConstraintsTest.lessThan":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":22,"org.easymock.tests2.CaptureTest.testCaptureRightOne":76,"org.easymock.tests2.UsageConstraintsTest.testOr":264,"org.easymock.tests.UsageRangeTest.combination":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":249,"org.easymock.tests.UsageTest.wrongArguments":125,"org.easymock.tests2.MockBuilderTest.testWithConstructor":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":19,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":184,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":480,"org.easymock.tests.UsageVarargTest.varargShortAccepted":137,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":429,"org.easymock.tests2.UsageConstraintsTest.cmpTo":269,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":293,"org.easymock.tests2.CaptureTest.testCaptureFromStub":347,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":407,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":45,"org.easymock.tests.UsageTest.unexpectedCallWithArray":381,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":225,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":83,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":394,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":185,"org.easymock.tests2.CaptureTest.testCapture":75,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":227,"org.easymock.tests2.UsageConstraintsTest.constraints":259,"org.easymock.samples.ExampleTest.addAndChangeDocument":239,"org.easymock.tests.UsageStrictMockTest.testVerify":231,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":243,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":403,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":120,"org.easymock.tests.LimitationsTest.abstractClass":447,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":121,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":115,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":312}}]
