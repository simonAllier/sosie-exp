[{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,0,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,58,59,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[60,61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[62],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[2,63,64,65,66,3,67,68,4,69,70,71,72,73,74,75,76,77,5,78,79,80,81,82,6,83,84,7,8,85,86,9,10,11,12,0,13,14,15,87,88,16,17,18,19,89,20,90,91,21,92,22,23,93,24,25,26,27,94,28,29,95,30,31,32,33,34,35,36,96,97,98,99,100,101,102,37,103,38,39,104,105,106,107,108,109,110,111,40,41,42,112,43,44,45,46,47,48,113,114,49,115,116,50,51,52,53,117,54,55,56,57,58,58,59,59],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[16,20,118],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[119,120],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[2,3,4,5,6,121,7,8,85,86,9,10,11,12,0,13,14,15,16,18,122,123,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,124,125,104,126,40,42,127,43,44,45,46,47,48,113,114,49,50,51,52,53,128,57,58,58,59,59],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[4,85,14,20,21,25],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[129,130,131,132,2,120,133,134,135,136,137,138,139,140,141,142,143,144,145,3,4,5,6,121,146,147,148,149,150,151,152,153,154,155,156,157,158,7,159,8,160,161,162,163,85,86,9,164,10,11,165,12,0,13,14,15,16,17,18,19,122,166,167,168,169,170,171,172,173,174,175,123,176,177,178,179,180,181,182,21,22,24,25,26,27,28,29,30,31,32,33,34,183,35,36,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,1,218,219,220,221,222,223,224,225,226,227,37,124,60,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,244,245,246,247,248,249,126,250,251,252,40,41,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,61,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,49,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,51,52,53,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,55,56,357,358,359,360,361,362,363,364,365,57,58,59,366],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[367],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[129,131,2,119,120,133,134,135,137,138,139,140,141,142,145,3,4,5,6,121,146,147,148,149,150,151,152,153,154,155,156,157,158,7,159,8,160,162,163,85,86,9,10,11,165,12,0,13,14,15,16,18,122,166,167,168,169,170,171,172,173,123,176,177,178,179,180,181,368,369,118,370,182,21,22,24,25,26,27,28,29,30,31,32,33,34,183,35,36,184,185,187,188,189,192,193,194,196,200,201,205,210,211,212,213,215,1,220,221,222,223,224,37,228,229,125,371,372,373,374,375,376,377,378,379,380,381,382,236,237,238,239,240,241,242,243,104,126,250,251,252,40,41,256,383,384,257,258,259,260,261,262,263,265,266,267,268,270,271,272,273,274,275,276,277,278,279,61,280,281,282,283,284,285,286,287,385,43,44,45,46,47,48,113,114,296,297,298,299,300,49,303,304,306,311,316,51,52,53,128,386,387,323,324,327,328,329,332,333,335,340,345,352,353,354,388,355,356,55,56,357,358,359,360,361,362,389,363,364,365,57,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[390,391],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[392,393,394,395,186,187,193,194,396,397,398,282,322,323,324,327,328],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","state":"shouldBeUsedInOneThread","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[120,134,142,204,205,207,209,210,399,220,225],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[111,112],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[400,129,130,131,401,132,402,403,404,405,406,407,2,63,119,120,133,134,135,136,137,138,139,140,141,142,143,144,145,64,65,66,3,67,68,4,69,70,71,72,73,74,75,76,77,5,78,79,80,81,82,6,83,84,121,146,147,148,149,150,151,152,153,154,155,156,157,158,7,159,8,160,161,162,408,163,85,86,9,164,10,11,165,12,0,13,14,409,15,87,88,16,17,18,19,89,20,122,166,167,168,410,411,169,170,412,413,414,415,416,171,417,418,419,420,421,422,172,390,423,173,174,175,90,424,425,91,426,427,123,176,177,178,179,180,181,367,368,369,118,370,428,429,430,431,432,182,433,434,435,436,437,438,21,22,23,93,24,25,26,27,439,94,28,29,30,31,32,33,34,440,183,35,36,441,184,185,186,187,188,189,190,191,192,193,194,195,196,197,442,198,199,200,201,202,203,204,205,443,206,207,208,209,210,211,399,212,213,214,215,216,217,1,218,219,220,221,222,223,224,225,226,227,101,102,37,103,124,60,228,229,230,38,444,445,446,447,39,448,449,125,371,372,373,374,375,376,377,378,379,380,381,450,451,452,231,232,233,234,235,453,382,454,236,237,238,239,240,241,242,243,455,245,246,247,248,249,104,105,106,107,108,109,110,126,250,251,252,456,457,458,111,40,41,42,112,127,459,460,461,462,463,464,465,466,467,468,253,469,254,255,256,383,384,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,470,273,274,275,276,277,278,279,61,471,280,281,282,283,284,285,286,287,385,288,289,290,291,292,293,294,295,43,44,45,46,47,48,113,114,296,297,298,299,300,49,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,472,473,474,475,476,477,391,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,115,116,50,51,52,517,53,518,519,117,520,128,386,387,521,54,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,522,353,354,523,388,355,356,55,56,357,358,359,360,361,362,389,363,364,365,57,58,59,366],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[401],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[400,129,130,131,401,132,2,120,133,135,136,139,140,141,142,143,144,145,3,4,5,6,121,146,147,148,149,150,151,152,153,154,155,156,157,7,159,160,161,162,163,85,86,9,164,10,11,165,12,0,13,15,17,18,19,169,170,171,172,390,423,173,174,175,177,179,180,182,22,24,26,27,29,31,32,33,34,183,35,36,184,185,186,188,190,191,192,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,1,218,219,220,221,222,224,225,226,227,37,124,60,228,229,230,450,451,452,231,232,233,234,235,382,236,237,238,239,240,241,242,243,455,245,246,247,248,249,456,457,458,40,42,127,459,460,461,462,463,464,465,466,467,468,253,469,254,255,256,257,264,265,266,267,268,269,283,285,286,288,289,290,291,292,293,294,295,49,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,487,493,51,52,53,321,322,325,326,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,388,357,358,359,360,362,363,365,57,58,58,59,59],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[7,159,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[120,133,134,135,142,143,204,205,206,207,208,209,210,211,399,212,220,221,225,226],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[7,159,8,524],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[392,394,396,397,282,323],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[179,187,193,194,525,256,265,266,282,285,323,324,327,328,355],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[136,144,460,256,302,308,314,318,320,489,321,331,337,343,347,349],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[392,394,396,397,282,323],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[7,159,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[392,393,394,395,186,187,193,194,396,397,398,282,322,323,324,327,328],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[526,527,528],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[7,159,8,524],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":205,"org.easymock.tests2.UsageTest.argumentsOrdered":194,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":321,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":481,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":189,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":366,"org.easymock.tests2.DelegateToTest.testReturnException":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":289,"org.easymock.tests.MockingTest.testPartialClassMocking":51,"org.easymock.tests.MockClassControlTest.testToString":45,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":367,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":72,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":330,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":170,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":516,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":211,"org.easymock.tests2.UsageTest.wrongArguments":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":124,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":422,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":251,"org.easymock.samples.ExampleTest.answerVsDelegate":358,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":39,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":519,"org.easymock.tests2.UsageConstraintsTest.testNull":207,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":12,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":155,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":114,"org.easymock.tests2.CaptureTest.testPrimitive":135,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":230,"org.easymock.tests.UsageTest.moreThanOneArgument":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":349,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":247,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":127,"org.easymock.tests.UsageTest.argumentsOrdered":328,"org.easymock.tests.UsageVarargTest.varargIntAccepted":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":486,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":231,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":437,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":425,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":235,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":500,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":171,"org.easymock.tests.ReplayStateInvalidUsageTest.times":378,"org.easymock.tests2.DependencyTest.testClassMocking":410,"org.easymock.tests2.AnswerTest.answer":172,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":488,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":168,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":445,"org.easymock.tests2.CaptureTest.testAnd":120,"org.easymock.tests2.UsageTest.strictResetToDefault":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":150,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":254,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":462,"org.easymock.tests2.DelegateToTest.testDelegate":132,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":499,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":345,"org.easymock.tests.LimitationsTest.mockFinalMethod":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":292,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":300,"org.easymock.tests2.DependencyTest.testClassMockingSupport":411,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":453,"org.easymock.tests2.CaptureTest.testCapture1_2446744":136,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":343,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":166,"org.easymock.tests.UsageThrowableTest.throwError":236,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":372,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":447,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":438,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":84,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":503,"org.easymock.samples.PartialClassMockTest.testGetArea":57,"org.easymock.tests.MockingTest.testInterfaceMocking":517,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":232,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":464,"org.easymock.tests2.UsageTest.niceToStrict":188,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":331,"org.easymock.tests2.ThreadingTest.testChangeDefault":442,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":526,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":472,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":24,"org.easymock.tests2.MockBuilderTest.testCreateMock":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":80,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":419,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":392,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":339,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":151,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":444,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":468,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":126,"org.easymock.tests.UsageOverloadedMethodTest.overloading":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":82,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":216,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":354,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":312,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":215,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":141,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":470,"org.easymock.tests.MockClassControlTest.testEquals":113,"org.easymock.tests2.EasyMockSupportClassTest.testAll":3,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":41,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":393,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":347,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":167,"org.easymock.tests2.CaptureTest.testCaptureAll":133,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":298,"org.easymock.tests.MockNameTest.defaultName":471,"org.easymock.tests2.UsageConstraintsTest.testMatches":217,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":248,"org.easymock.samples.ExampleTest.voteForRemovals":362,"org.easymock.tests.UsageVarargTest.allKinds":61,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":264,"org.easymock.samples.BasicClassMockTest.testPrintContent":56,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":299,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":242,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":123,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":434,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":293,"org.easymock.tests2.UsageConstraintsTest.greaterThan":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":67,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":469,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":19,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":504,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":110,"org.easymock.samples.ExampleTest.voteForRemoval":359,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":89,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":198,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":448,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":14,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":496,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":184,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":49,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":148,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":288,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":400,"org.easymock.tests2.CaptureTest.testCaptureFirst":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":149,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":308,"org.easymock.tests2.UsageTest.moreThanOneArgument":186,"org.easymock.tests2.CaptureTest.testCapture2_2446744":144,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":489,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":29,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":279,"org.easymock.tests.GenericTest.testBridgedEquals":112,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":262,"org.easymock.tests.UsageExpectAndReturnTest.longType":304,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":296,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":348,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":455,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":223,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":451,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":245,"org.easymock.tests.UsageCallCountTest.tooManyCalls":263,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":309,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":421,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":335,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":241,"org.easymock.tests.MockingTest.testNiceClassMocking":117,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":32,"org.easymock.tests.MockingTest.testClassMocking":116,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":384,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":92,"org.easymock.tests2.UsageConstraintsTest.testContains":214,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":9,"org.easymock.tests2.UsageConstraintsTest.testFind":206,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":269,"org.easymock.tests.MockTypeTest.fromEasyMockClass":446,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":163,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests.UsageExpectAndReturnTest.object":311,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":154,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":274,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":387,"org.easymock.tests.UsageTest.exactCallCountByLastCall":329,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":459,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":456,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":398,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":63,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":270,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":429,"org.easymock.tests.MockClassControlTest.testHashCode":48,"org.easymock.tests2.EasyMockSupportTest.testVerify":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":75,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":460,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":467,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":122,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":119,"org.easymock.tests.UsageVarargTest.varargCharAccepted":273,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":494,"org.easymock.tests2.UsageTest.openCallCountByLastCall":190,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":527,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":157,"org.easymock.tests.DefaultClassInstantiatorTest.object":104,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":466,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":128,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":525,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":337,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":100,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":415,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":428,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":502,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":47,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":336,"org.easymock.tests.CapturesMatcherTest.test":244,"org.easymock.tests.ReplayStateInvalidCallsTest.times":508,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":318,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":450,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":509,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":6,"org.easymock.tests2.UsageTest.resumeIfFailure":195,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":291,"org.easymock.tests2.StubTest.stubWithReturnValue":161,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":224,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":310,"org.easymock.tests2.SerializationTest.testAllMockedMethod":8,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":487,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":394,"org.easymock.samples.SupportTest.voteForRemovals":365,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":431,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":342,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":524,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":493,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":390,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":458,"org.easymock.tests.UsageExpectAndThrowTest.object":340,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":221,"org.easymock.tests2.DelegateToTest.testWrongClass":131,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":506,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":350,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":351,"org.easymock.samples.ConstructorCalledMockTest.testTax":58,"org.easymock.tests.UsageStrictMockTest.range":285,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":426,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":153,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":341,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":64,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":327,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":250,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":396,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":498,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":465,"org.easymock.tests2.CaptureTest.testCaptureNone":140,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":403,"org.easymock.tests.UsageUnorderedTest.message":256,"org.easymock.tests.UsageVerifyTest.twoReturns":266,"org.easymock.tests.UsageVarargTest.varargByteAccepted":278,"org.easymock.tests2.ThreadingTest.testThreadSafe":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":78,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":260,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":521,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":55,"org.easymock.tests2.CaptureTest.testCapture_2617107":134,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":395,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":491,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":229,"org.easymock.tests2.UsageConstraintsTest.any":212,"org.easymock.tests2.StubTest.stub":160,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":377,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":492,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":290,"org.easymock.tests.UsageExpectAndThrowTest.longType":333,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":108,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":376,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":178,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":182,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests.LimitationsTest.mockNativeMethod":37,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":320,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":414,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":99,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":514,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":181,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":404,"org.easymock.tests2.NameTest.nameForMocksControl":370,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":416,"org.easymock.tests2.MockedExceptionTest.testMockedException":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":68,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":326,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":408,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":334,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":10,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":27,"org.easymock.tests.MockingTest.testNicePartialClassMocking":52,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":13,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":412,"org.easymock.tests2.CaptureTest.testCaptureLast":139,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":382,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":513,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":36,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":210,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":222,"org.easymock.tests.MockingTest.testTwoMocks":50,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":510,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":441,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":338,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":193,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":226,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":407,"org.easymock.samples.ExampleTest.removeNonExistingDocument":389,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":418,"org.easymock.tests.UsageStrictMockTest.differentMethods":286,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":430,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":406,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":106,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":199,"org.easymock.tests2.MockBuilderTest.testCreateMockString":30,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":69,"org.easymock.tests.UsageExpectAndThrowTest.floatType":332,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":66,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":173,"org.easymock.tests.UsageVerifyTest.twoThrows":265,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":522,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":5,"org.easymock.samples.ExampleTest.voteAgainstRemoval":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":482,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":463,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":18,"org.easymock.tests.LimitationsTest.privateConstructor":102,"org.easymock.tests2.UsageConstraintsTest.testNotNull":225,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":85,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":243,"org.easymock.tests2.UsageTest.defaultResetToNice":192,"org.easymock.samples.ExampleTest.voteAgainstRemovals":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":413,"org.easymock.tests.UsageVarargTest.differentLength":275,"org.easymock.tests2.CallbackTest.callback":121,"org.easymock.tests2.UsageConstraintsTest.equals":443,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":87,"org.easymock.tests.UsageTest.openCallCountByLastCall":325,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":228,"org.easymock.tests.UsageCallCountTest.tooFewCalls":258,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":252,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":405,"org.easymock.tests.UsageThrowableTest.throwCheckedException":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":397,"org.easymock.tests.MockingTest.testStrictClassMocking":115,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":35,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":417,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":33,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":379,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":183,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":175,"org.easymock.tests.ObjectMethodsTest.testHashCode":386,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":512,"org.easymock.tests2.NameTest.nameForNiceMock":118,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":201,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":507,"org.easymock.tests2.DependencyTest.testInterfaceMocking":169,"org.easymock.samples.ExampleTest.addDocument":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":79,"org.easymock.tests2.DelegateToTest.testStubDelegate":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":83,"org.easymock.tests2.AnswerTest.stubAnswer":174,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":283,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":439,"org.easymock.tests.UsageVarargTest.varargLongAccepted":277,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.floatType":303,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":319,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":2,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":59,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":523,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":436,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":219,"org.easymock.tests.UsageThrowableTest.noUpperLimit":237,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":203,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":90,"org.easymock.tests2.SerializationTest.test":159,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":137,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":62,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":105,"org.easymock.tests2.UsageConstraintsTest.testSame":208,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":302,"org.easymock.samples.SupportTest.addDocument":364,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":440,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":497,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":70,"org.easymock.tests.GenericTest.testPackageScope":40,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":435,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":518,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":495,"org.easymock.tests2.NameTest.nameForMock":368,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":313,"org.easymock.tests2.UsageStrictMockTest.differentMethods":180,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":305,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":344,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":520,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":255,"org.easymock.tests2.MockedExceptionTest.testRealException":164,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":485,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":484,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":177,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":60,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":381,"org.easymock.tests2.NameTest.nameForStrictMock":369,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":528,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":0,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":91,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":107,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":220,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":22,"org.easymock.tests2.UsageStrictMockTest.range":179,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":501,"org.easymock.tests2.UsageConstraintsTest.lessThan":227,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":147,"org.easymock.tests2.CaptureTest.testCaptureRightOne":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":74,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":402,"org.easymock.tests2.UsageConstraintsTest.testOr":209,"org.easymock.tests.UsageRangeTest.combination":253,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":11,"org.easymock.tests.UsageTest.wrongArguments":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":71,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":44,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":314,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":109,"org.easymock.tests.UsageVarargTest.varargShortAccepted":276,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":261,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":515,"org.easymock.tests2.UsageConstraintsTest.cmpTo":213,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":423,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":475,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":191,"org.easymock.tests2.CaptureTest.testCaptureFromStub":143,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":371,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":23,"org.easymock.tests.UsageTest.unexpectedCallWithArray":323,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":511,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":259,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":315,"org.easymock.tests2.UsageConstraintsTest.constraints":204,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.samples.ExampleTest.addAndChangeDocument":363,"org.easymock.tests.UsageStrictMockTest.testVerify":385,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":356,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":297,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":138,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":98,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":233,"org.easymock.tests.LimitationsTest.abstractClass":101,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":307,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":152,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":271}}]
