[{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[4,56,5,57],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[58,59,60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[61,62,58,63,64,65,66,66,67,67],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[81,82,83,84,85,86],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[87,88,89,65,66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"name"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"position":"org.easymock.Capture:82","failures":[69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[91,92,93,94],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[95,58,59,60],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[96,97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[98,99,100,101,102,103,104,105,69,70,78],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[107,108,109,110,111,112],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:88","sourceCode":"for (final org.easymock.internal.Injection org.easymock.internal.Injection : org.easymock.internal.InjectionPlan.getQualifiedInjections()) {\n    if (!(org.easymock.internal.Injection.isMatched())) {\n        throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"Unsatisfied qualifier: \\'%s\\'\", org.easymock.internal.Injection.getAnnotation().java.lang.String()));\n    } \n}","type":"CtForEachImpl"},"failures":[113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[61,62,58,139,140,141,87,142,143,64,88,89,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,66,67],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[102],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[171,172,173,174,175,61,62,58,143,64],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[176,8,177,178,179,180,181,182,183,184,185,186,187,188,189,190,9,191,192,193,194,195,196,197,198,199,200,201,202,10,203,204,83,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,11,222,12,13,14,15,16,17,223,224,18,19,225,226,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,227,84,228,229,41,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,42,43,44,45,46,47,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,61,275,276,277,278,279,280,281,282,58,59,60,56,283,98,99,284,100,285,101,102,1,286,287,288,289,2,290,291,5,292,104,57,293,294,105,295,3,296,139,297,140,298,299,300,301,302,110,303,304,305,49,50,51,52,306,307,308,53,309,310,311,312,313,314,54,315,316,317,318,319,320,321,93,94,322,323,324,325,69,326,70,71,72,73,74,75,327,76,78,79,328,80,329,55,330,331,332,333,334,335,336,337,338,339,340,341,342,112,343,344,345,346,347,348,349,350],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[351,352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[354,110,111,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[355],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[100,103,104,105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[61,62,58,139,140,141,87,142,143,64,88,89,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,66,67],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[96,97],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[11,13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:158","sourceCode":"return ((java.lang.Class<?>.getSimpleName()) + \".\") + java.lang.String","type":"CtReturnImpl"},"failures":[176,8,177,191,356,83,205,207,208,357,226,227,84,228,230,231,278,280,281,310,311,316,317],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":99,"org.easymock.tests2.UsageTest.argumentsOrdered":317,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":6,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":313,"org.easymock.tests2.StubTest.stubWithReturnValue":55,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":143,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":294,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":260,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":137,"org.easymock.tests2.SerializationTest.testAllMockedMethod":60,"org.easymock.tests2.DelegateToTest.testReturnException":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":43,"org.easymock.tests.MockingTest.testPartialClassMocking":178,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":86,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":116,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":156,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":20,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":152,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":92,"org.easymock.tests.UsageExpectAndThrowTest.object":30,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":57,"org.easymock.tests2.DelegateToTest.testWrongClass":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":171,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":246,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":247,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":1,"org.easymock.tests2.UsageTest.wrongArguments":311,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":223,"org.easymock.tests.UsageStrictMockTest.range":207,"org.easymock.samples.ConstructorCalledMockTest.testTax":66,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":136,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":243,"org.easymock.samples.ExampleTest.answerVsDelegate":345,"org.easymock.tests2.UsageConstraintsTest.testNull":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":31,"org.easymock.tests2.CaptureTest.testPrimitive":71,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":225,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":230,"org.easymock.tests.UsageTest.moreThanOneArgument":227,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":146,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":218,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":81,"org.easymock.tests2.CaptureTest.testCaptureNone":327,"org.easymock.tests.UsageUnorderedTest.message":191,"org.easymock.tests.UsageVerifyTest.twoReturns":177,"org.easymock.tests.UsageVarargTest.varargByteAccepted":199,"org.easymock.tests2.ThreadingTest.testThreadSafe":330,"org.easymock.tests.UsageTest.argumentsOrdered":231,"org.easymock.tests.UsageVarargTest.varargIntAccepted":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":163,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":211,"org.easymock.tests2.CaptureTest.testCapture_2617107":70,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":302,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":123,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":303,"org.easymock.tests2.UsageConstraintsTest.any":286,"org.easymock.tests2.StubTest.stub":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":215,"org.easymock.tests.UsageExpectAndThrowTest.longType":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":44,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":279,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":118,"org.easymock.tests.LimitationsTest.mockNativeMethod":248,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests2.DependencyTest.testClassMocking":351,"org.easymock.tests2.AnswerTest.answer":320,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":270,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":103,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":301,"org.easymock.tests2.CaptureTest.testAnd":69,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":108,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":127,"org.easymock.tests2.UsageTest.strictResetToDefault":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":342,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":282,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":142,"org.easymock.tests2.NameTest.nameForMocksControl":325,"org.easymock.tests2.MockedExceptionTest.testMockedException":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":151,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":183,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests2.DelegateToTest.testDelegate":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":24,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":180,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":335,"org.easymock.tests.MockingTest.testNicePartialClassMocking":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":35,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":340,"org.easymock.tests2.CompareToTest.testNotComparable":355,"org.easymock.tests2.CompareToTest.testCompareEqual":353,"org.easymock.tests2.CaptureTest.testCaptureLast":75,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":226,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":102,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":140,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":189,"org.easymock.tests2.DependencyTest.testClassMockingSupport":352,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":357,"org.easymock.tests2.CaptureTest.testCapture1_2446744":72,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":251,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":33,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":28,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":316,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":295,"org.easymock.tests.UsageThrowableTest.throwError":11,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":245,"org.easymock.tests.UsageStrictMockTest.differentMethods":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":132,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":115,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":332,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":356,"org.easymock.tests2.MockBuilderTest.testCreateMockString":305,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":220,"org.easymock.tests.UsageExpectAndThrowTest.floatType":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":153,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":148,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":321,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":162,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":212,"org.easymock.samples.ExampleTest.voteAgainstRemoval":347,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":112,"org.easymock.tests2.UsageTest.niceToStrict":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":157,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":145,"org.easymock.tests2.UsageConstraintsTest.testNotNull":105,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":17,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":110,"org.easymock.tests2.UsageTest.defaultResetToNice":315,"org.easymock.samples.ExampleTest.voteAgainstRemovals":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":266,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":165,"org.easymock.tests2.CallbackTest.callback":275,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":133,"org.easymock.tests.UsageTest.openCallCountByLastCall":229,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":85,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":29,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":56,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":18,"org.easymock.tests.UsageCallCountTest.tooFewCalls":236,"org.easymock.tests.UsageOverloadedMethodTest.overloading":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":167,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":48,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":2,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":262,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":289,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":244,"org.easymock.tests.UsageThrowableTest.throwCheckedException":14,"org.easymock.tests2.EasyMockSupportClassTest.testAll":149,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":82,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":37,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":107,"org.easymock.tests2.CaptureTest.testCaptureAll":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":300,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":187,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":297,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":131,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":139,"org.easymock.tests2.UsageConstraintsTest.testMatches":290,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":219,"org.easymock.tests2.CompareToTest.testGreateOrEqual":0,"org.easymock.samples.ExampleTest.voteForRemovals":349,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":334,"org.easymock.tests2.NameTest.nameForNiceMock":324,"org.easymock.tests.UsageVarargTest.allKinds":201,"org.easymock.tests2.DependencyTest.testInterfaceMocking":343,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":188,"org.easymock.samples.ExampleTest.addDocument":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":164,"org.easymock.tests2.DelegateToTest.testStubDelegate":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":169,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":16,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests2.AnswerTest.stubAnswer":93,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":120,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":205,"org.easymock.tests2.UsageConstraintsTest.greaterThan":5,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":175,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":150,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":182,"org.easymock.tests.UsageVarargTest.varargLongAccepted":198,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":209,"org.easymock.samples.ExampleTest.voteForRemoval":346,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":331,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":269,"org.easymock.tests.UsageExpectAndReturnTest.floatType":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":61,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":67,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":292,"org.easymock.tests.UsageThrowableTest.noUpperLimit":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":122,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":283,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":221,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":53,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":73,"org.easymock.tests2.SerializationTest.test":59,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":64,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":12,"org.easymock.tests2.UsageConstraintsTest.testSame":285,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":42,"org.easymock.tests2.CaptureTest.testCaptureFirst":80,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":91,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":154,"org.easymock.tests.GenericTest.testPackageScope":239,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":333,"org.easymock.tests2.CaptureTest.testCapture2_2446744":328,"org.easymock.tests2.UsageTest.moreThanOneArgument":310,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":304,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":121,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":200,"org.easymock.tests.GenericTest.testBridgedEquals":97,"org.easymock.tests2.NameTest.nameForMock":322,"org.easymock.tests.UsageExpectAndReturnTest.longType":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":263,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":38,"org.easymock.tests2.UsageStrictMockTest.differentMethods":281,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":89,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":34,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":184,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":235,"org.easymock.tests2.MockedExceptionTest.testRealException":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":135,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":224,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":15,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":296,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":354,"org.easymock.tests2.NameTest.nameForStrictMock":323,"org.easymock.tests2.UsageConstraintsTest.testContains":288,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":234,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":51,"org.easymock.tests2.UsageConstraintsTest.testFind":284,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":10,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":307,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":339,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":308,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":203,"org.easymock.tests.UsageExpectAndReturnTest.object":261,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":341,"org.easymock.tests2.UsageStrictMockTest.range":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":134,"org.easymock.tests2.UsageConstraintsTest.lessThan":3,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":90,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":172,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":117,"org.easymock.tests.UsageTest.exactCallCountByLastCall":232,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":174,"org.easymock.tests2.CaptureTest.testCaptureRightOne":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":158,"org.easymock.tests2.UsageConstraintsTest.testOr":101,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":62,"org.easymock.tests.UsageRangeTest.combination":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":336,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":267,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":192,"org.easymock.tests.UsageTest.wrongArguments":228,"org.easymock.tests2.MockBuilderTest.testWithConstructor":87,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":155,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":256,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":159,"org.easymock.tests.UsageVarargTest.varargShortAccepted":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":298,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":306,"org.easymock.tests2.UsageConstraintsTest.cmpTo":287,"org.easymock.tests.UsageVarargTest.varargCharAccepted":195,"org.easymock.tests2.CaptureTest.testCaptureMultiple":68,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests2.UsageTest.openCallCountByLastCall":314,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":54,"org.easymock.tests2.CaptureTest.testCaptureFromStub":79,"org.easymock.tests.UsageTest.unexpectedCallWithArray":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":160,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":83,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":13,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":237,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":128,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":113,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":265,"org.easymock.tests2.CaptureTest.testCapture":77,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":206,"org.easymock.tests2.UsageConstraintsTest.constraints":98,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":111,"org.easymock.samples.ExampleTest.addAndChangeDocument":350,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":26,"org.easymock.tests2.ConstraintsToStringTest.notToString":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":268,"org.easymock.tests.UsageStrictMockTest.testVerify":210,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":138,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":168,"org.easymock.tests2.CompareToTest.testGreateThan":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":186,"org.easymock.tests2.UsageTest.resumeIfFailure":318,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":213,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":257,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":214,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":193}}]
