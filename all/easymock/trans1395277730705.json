[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:39","sourceCode":"if (!(org.easymock.IArgumentMatcher.matches(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[102,103,104,105,106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[107,108,109,110,111,112],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:247","sourceCode":"return ((T)(net.sf.cglib.proxy.Factory))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[113,114],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[135,136,137,122,138,139],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[36,49,140,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[141,142,143,144,145,146,101],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[147,148],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"failures":[149,125,126,127,128,96,97],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[135,136,137,122,138,139],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,19,20,21,22,23,24,150,151,25,26,27,152,153,28,29,30,31,154,32,155,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,53,55,56,57,58,59,61,62,63,64,66,67,68,69,70,71,72,75,76,77,79,80,81,83,84,86,87,88,89,90,91,92,93,95,96,97,98,99],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:359","sourceCode":"java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[157,158,159,160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"position":"org.easymock.internal.Range:44","failures":[0,161,162,163,164,165,166,167,168,169,170,171,1,2,3,4,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,5,6,7,8,9,199,115,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,107,108,224,225,226,227,228,229,10,11,12,13,14,15,16,17,18,19,149,230,231,232,233,234,235,236,237,238,239,157,158,20,21,22,23,24,150,151,25,240,241,242,243,244,245,246,247,248,109,249,250,110,251,116,117,26,252,253,254,255,27,256,257,258,118,137,119,259,260,120,121,261,262,263,264,265,111,266,267,268,269,270,271,272,273,274,275,122,123,276,277,124,278,279,152,153,28,29,30,280,31,281,282,154,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,159,160,348,349,350,351,352,353,354,355,356,357,358,359,360,361,32,155,33,34,362,363,364,35,36,365,37,38,39,40,366,41,42,43,44,45,46,47,48,49,102,367,103,368,369,370,371,113,372,114,104,373,374,375,376,377,378,379,380,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,381,75,76,77,382,383,384,385,386,387,388,78,389,79,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,80,81,82,83,415,416,84,85,417,140,125,126,127,128,418,419,420,421,422,423,86,424,87,88,425,89,90,91,92,146,93,426,94,95,96,427,97,98,428,429,430,99,431,432,433,434,129,130,435,436,437,438,439,131,132,440,441,442,443,133,444,445,134,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,105,471,472,473,474,475,476,106,477,478,112,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,148,494,495,496,497,100,101,498],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:214","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[102,103,104,105,106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    this.java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[78,389,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream","method":"hashCodeMethod"}},{"position":"org.easymock.internal.MocksControl:190","failures":[115,240,241,243,244,245,246,247,116,121,317,36,46,104,393,400,401,436,132,471,106,477,112,481,487,488,489,491],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,161,163,164,166,170,6,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,107,108,240,242,243,244,245,246,247,248,109,110,251,117,258,118,259,260,261,272,123,277,124,29,30,31,316,317,318,342,343,344,345,346,360,361,33,35,36,365,37,38,39,41,45,46,47,102,367,103,368,369,113,372,114,104,374,375,376,377,378,379,380,53,56,66,72,77,383,387,78,389,390,391,392,393,394,395,396,397,398,399,400,401,408,80,81,82,83,416,84,85,420,87,90,92,93,96,433,434,129,435,437,438,439,440,441,133,445,134,453,454,456,462,469,470,105,471,473,474,475,476,106,477,112,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,148,100],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[378],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[499,500,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[220,274,277,124,381,391,395,396,399,96,435,442,445,134],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[502,78,389,79],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[289,384],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[503,485],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[102,103,104,105,471,474,475,476,478,487,492,493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[504,505,366,506],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[507,105,477,482,148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[296,385],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[508,509,510],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[404,405,407,410,411,414,458,459,461,464,465,468],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Contains:40","failures":[511],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":471,"org.easymock.tests2.UsageTest.argumentsOrdered":132,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":258,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":400,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":293,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":436,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":172,"org.easymock.tests2.DelegateToTest.testReturnException":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":263,"org.easymock.tests.MockingTest.testPartialClassMocking":29,"org.easymock.tests.MockClassControlTest.testToString":22,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":140,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":197,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":173,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":56,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":454,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":141,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":477,"org.easymock.tests2.UsageTest.wrongArguments":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":248,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":414,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":232,"org.easymock.samples.ExampleTest.answerVsDelegate":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":27,"org.easymock.tests2.UsageConstraintsTest.testNull":474,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":282,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":37,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":399,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":25,"org.easymock.tests2.CaptureTest.testPrimitive":368,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":110,"org.easymock.tests.UsageTest.moreThanOneArgument":118,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":192,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":321,"org.easymock.tests.UsageTest.argumentsOrdered":121,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":225,"org.easymock.tests.UsageVarargTest.varargIntAccepted":350,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":342,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":145,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":467,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":429,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":346,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":501,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":408,"org.easymock.tests.ReplayStateInvalidUsageTest.times":338,"org.easymock.tests2.DependencyTest.testClassMocking":451,"org.easymock.tests2.AnswerTest.answer":383,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":450,"org.easymock.tests2.CaptureTest.testAnd":102,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":253,"org.easymock.tests2.UsageTest.strictResetToDefault":434,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":425,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":394,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":222,"org.easymock.tests2.DelegateToTest.testDelegate":423,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":188,"org.easymock.tests.LimitationsTest.mockFinalMethod":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":111,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":238,"org.easymock.tests2.DependencyTest.testClassMockingSupport":452,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":362,"org.easymock.tests2.CaptureTest.testCapture1_2446744":369,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":366,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":186,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":448,"org.easymock.tests.UsageThrowableTest.throwError":240,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":332,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":255,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":468,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":74,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":280,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":343,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":194,"org.easymock.tests2.UsageTest.niceToStrict":435,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":61,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":329,"org.easymock.tests2.ThreadingTest.testChangeDefault":506,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":90,"org.easymock.tests2.MockBuilderTest.testCreateMock":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":69,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":411,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":182,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":138,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":395,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":160,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":230,"org.easymock.tests.UsageOverloadedMethodTest.overloading":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":71,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":482,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":211,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":316,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":481,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":114,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":351,"org.easymock.tests.MockClassControlTest.testEquals":151,"org.easymock.tests2.EasyMockSupportClassTest.testAll":53,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":7,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":449,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":236,"org.easymock.tests2.CaptureTest.testCaptureAll":367,"org.easymock.tests.MockNameTest.defaultName":199,"org.easymock.tests2.UsageConstraintsTest.testMatches":483,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":322,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":330,"org.easymock.samples.ExampleTest.voteForRemovals":166,"org.easymock.tests.UsageVarargTest.allKinds":359,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":251,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":237,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":246,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":442,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":464,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":266,"org.easymock.tests2.UsageConstraintsTest.greaterThan":485,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":221,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.samples.ExampleTest.voteForRemoval":163,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":19,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":48,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":377,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":256,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":430,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":40,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":433,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":10,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":392,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":262,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":418,"org.easymock.tests2.CaptureTest.testCaptureFirst":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":393,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":441,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":207,"org.easymock.tests2.UsageTest.moreThanOneArgument":129,"org.easymock.tests2.CaptureTest.testCapture2_2446744":374,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":379,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":301,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":358,"org.easymock.tests.GenericTest.testBridgedEquals":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":314,"org.easymock.tests.UsageExpectAndReturnTest.longType":203,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":390,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":191,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":490,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":224,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":189,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":319,"org.easymock.tests.UsageCallCountTest.tooManyCalls":315,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":499,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":413,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":178,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":245,"org.easymock.tests.MockingTest.testNiceClassMocking":154,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":81,"org.easymock.tests.MockingTest.testClassMocking":153,"org.easymock.tests2.UsageConstraintsTest.testContains":480,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":308,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":77,"org.easymock.tests2.UsageConstraintsTest.testFind":473,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":318,"org.easymock.tests.MockTypeTest.fromEasyMockClass":254,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":497,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":274,"org.easymock.tests.UsageExpectAndReturnTest.object":210,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":398,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":142,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":353,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":327,"org.easymock.tests.UsageTest.exactCallCountByLastCall":261,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":288,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":196,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":226,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":101,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":216,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":348,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":269,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":458,"org.easymock.tests.MockClassControlTest.testHashCode":150,"org.easymock.tests2.EasyMockSupportTest.testVerify":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":63,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":500,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":227,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":159,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":447,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":494,"org.easymock.tests.UsageVarargTest.varargCharAccepted":352,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":11,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":306,"org.easymock.tests2.UsageTest.openCallCountByLastCall":437,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":509,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":401,"org.easymock.tests.DefaultClassInstantiatorTest.object":12,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":347,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":64,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":243,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":457,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":217,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":239,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":72,"org.easymock.tests2.UsageTest.resumeIfFailure":440,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":26,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":265,"org.easymock.tests2.StubTest.stubWithReturnValue":456,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":491,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":209,"org.easymock.tests2.SerializationTest.testAllMockedMethod":79,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":299,"org.easymock.samples.SupportTest.voteForRemovals":170,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":139,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":460,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":185,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":502,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":305,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":384,"org.easymock.tests.UsageExpectAndThrowTest.object":183,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":198,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":488,"org.easymock.tests2.DelegateToTest.testWrongClass":421,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":360,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":361,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":277,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":431,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":397,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":184,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":92,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":50,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":231,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":135,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":195,"org.easymock.tests2.CaptureTest.testCaptureNone":372,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":504,"org.easymock.tests.UsageUnorderedTest.message":115,"org.easymock.tests.UsageVerifyTest.twoReturns":117,"org.easymock.tests.UsageVarargTest.varargByteAccepted":357,"org.easymock.tests2.ThreadingTest.testThreadSafe":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":67,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":312,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":328,"org.easymock.tests2.CaptureTest.testCapture_2617107":103,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":364,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":303,"org.easymock.tests2.UsageConstraintsTest.any":112,"org.easymock.tests2.StubTest.stub":455,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":337,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":158,"org.easymock.tests.UsageExpectAndThrowTest.longType":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":304,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":16,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":336,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":444,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":462,"org.easymock.tests2.SerializationTest.testClass":78,"org.easymock.tests.LimitationsTest.mockNativeMethod":33,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":8,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":219,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":446,"org.easymock.tests2.NameTest.nameForMocksControl":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":407,"org.easymock.tests2.MockedExceptionTest.testMockedException":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":55,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":260,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":496,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":177,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":31,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":35,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":93,"org.easymock.tests.MockingTest.testNicePartialClassMocking":30,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":39,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":403,"org.easymock.tests2.CaptureTest.testCaptureLast":113,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":363,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":106,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":85,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":489,"org.easymock.tests.MockingTest.testTwoMocks":28,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":200,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":181,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":131,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":493,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":505,"org.easymock.samples.ExampleTest.removeNonExistingDocument":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":410,"org.easymock.tests.UsageStrictMockTest.differentMethods":124,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":334,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":459,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":14,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":378,"org.easymock.tests2.MockBuilderTest.testCreateMockString":97,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":20,"org.easymock.tests.UsageExpectAndThrowTest.floatType":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":57,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":52,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":386,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":498,"org.easymock.tests.UsageVerifyTest.twoThrows":116,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":66,"org.easymock.samples.ExampleTest.voteAgainstRemoval":164,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":294,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests.LimitationsTest.privateConstructor":155,"org.easymock.tests2.UsageConstraintsTest.testNotNull":492,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":247,"org.easymock.tests2.UsageTest.defaultResetToNice":439,"org.easymock.samples.ExampleTest.voteAgainstRemovals":161,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":295,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests.UsageVarargTest.differentLength":354,"org.easymock.tests2.CallbackTest.callback":381,"org.easymock.tests2.UsageConstraintsTest.equals":472,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":42,"org.easymock.tests.UsageTest.openCallCountByLastCall":259,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":249,"org.easymock.tests.UsageCallCountTest.tooFewCalls":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":233,"org.easymock.tests.UsageThrowableTest.throwCheckedException":244,"org.easymock.tests.MockingTest.testStrictClassMocking":152,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":136,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":84,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":409,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":82,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":416,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":388,"org.easymock.tests2.CompareToTest.testGreateOrEqual":507,"org.easymock.tests.ObjectMethodsTest.testHashCode":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":144,"org.easymock.tests2.NameTest.nameForNiceMock":127,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":380,"org.easymock.tests2.DependencyTest.testInterfaceMocking":453,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":143,"org.easymock.samples.ExampleTest.addDocument":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":68,"org.easymock.tests2.DelegateToTest.testStubDelegate":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":73,"org.easymock.tests2.AnswerTest.stubAnswer":387,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":123,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":426,"org.easymock.tests.UsageVarargTest.varargLongAccepted":356,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":292,"org.easymock.tests.UsageExpectAndReturnTest.floatType":202,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":218,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":100,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":486,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":466,"org.easymock.tests.UsageThrowableTest.noUpperLimit":241,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":470,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":98,"org.easymock.tests2.SerializationTest.test":389,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":370,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":13,"org.easymock.tests2.UsageConstraintsTest.testSame":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":201,"org.easymock.samples.SupportTest.addDocument":169,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":415,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":58,"org.easymock.tests.GenericTest.testPackageScope":6,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":287,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":465,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":281,"org.easymock.tests2.NameTest.nameForMock":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":212,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":427,"org.easymock.tests2.UsageStrictMockTest.differentMethods":134,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":187,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":324,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":223,"org.easymock.tests2.MockedExceptionTest.testRealException":382,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":257,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":109,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":341,"org.easymock.tests2.NameTest.nameForStrictMock":126,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":510,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":495,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":99,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":487,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":15,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":87,"org.easymock.tests2.UsageStrictMockTest.range":445,"org.easymock.tests2.UsageConstraintsTest.lessThan":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":461,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":291,"org.easymock.tests2.CaptureTest.testCaptureRightOne":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":62,"org.easymock.tests2.UsageConstraintsTest.testOr":476,"org.easymock.tests.UsageRangeTest.combination":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":36,"org.easymock.tests.UsageTest.wrongArguments":119,"org.easymock.tests2.MockBuilderTest.testWithConstructor":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":59,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":21,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":205,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":284,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":17,"org.easymock.tests.UsageVarargTest.varargShortAccepted":355,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":313,"org.easymock.tests2.UsageConstraintsTest.cmpTo":479,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":385,"org.easymock.tests2.CompareToTest.testLessThan":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":286,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":438,"org.easymock.tests2.CaptureTest.testCaptureFromStub":373,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":331,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":88,"org.easymock.tests.UsageTest.unexpectedCallWithArray":137,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":122,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":214,"org.easymock.tests2.UsageConstraintsTest.constraints":105,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":276,"org.easymock.samples.ExampleTest.addAndChangeDocument":168,"org.easymock.tests2.ConstraintsToStringTest.containsToString":511,"org.easymock.tests.UsageStrictMockTest.testVerify":279,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":171,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":275,"org.easymock.tests2.CompareToTest.testGreateThan":503,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":235,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":344,"org.easymock.tests.LimitationsTest.abstractClass":32,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":206,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":396,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":349}}]
