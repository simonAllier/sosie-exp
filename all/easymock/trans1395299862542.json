[{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[19,20,21,22,23,24],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[25,26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"o"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[27,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,72,73,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[87,88,89],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,16,17,105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[106,107,108,109,110],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,111,140,141,30,32,34,35,38,39,41,42,142,43,44,45,143,46,47,48,49,50,51,52,53,54,144,145,146,147,148,149,150,151,152,153,28,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,25,172,173,174,58,175,59,176,177,90,178,4,91,92,179,180,93,5,181,182,183,184,185,6,7,106,186,187,188,189,190,191,192,193,65,66,68,69,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,75,76,229,107,230,108,231,232,233,234,235,26,236,237,238,239,240,241,242,243,94,244,245,246,95,96,247,97,248,249,98,250,251,252,253,254,255,78,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,109,280,281,282,283,81,9,284,285,286,287,288,289,290,10,99,291,11,100,101,292,82,293,102,12,13,294,295,14,15,296,297,298,299,300,301,302,303,304,305,306,19,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,1,104,16,17,327,328,329,330,331,84,85,86,332,2,333,334,105,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:198","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[335,336],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[337,112,113,114,115,338,339,340,341,342,343,344,345,346,347,348,349,350,116,117,118,119,351,120,121,122,123,124,125,352,126,127,128,129,130,131,132,133,134,135,136,137,138,139,111,140,141,30,32,33,353,34,35,36,37,354,38,39,41,42,142,43,44,45,143,46,47,48,49,355,50,356,357,51,52,53,54,358,359,144,145,146,147,148,149,150,151,152,27,153,28,154,360,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,361,362,363,364,365,366,171,367,25,172,173,174,58,175,59,368,176,177,90,178,4,91,92,369,370,371,60,372,373,61,374,375,376,377,378,379,380,381,382,62,383,384,385,386,387,63,388,389,390,391,392,393,394,395,396,397,398,399,400,401,179,180,93,5,181,182,183,184,185,6,7,106,186,187,335,402,188,189,190,403,404,405,406,407,408,409,410,411,412,413,414,191,415,192,193,64,65,66,67,416,68,69,70,71,72,73,417,74,418,419,420,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,421,422,423,424,215,216,217,218,219,220,425,221,222,223,224,225,226,227,228,426,75,76,77,427,229,107,230,108,231,232,233,234,235,26,236,428,237,238,239,429,430,240,241,242,243,94,244,245,246,95,96,247,97,248,249,98,250,251,252,253,254,255,78,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,79,431,432,80,433,434,271,272,435,436,437,438,439,273,274,275,276,277,278,279,109,280,281,282,283,440,441,81,442,443,444,445,446,447,448,449,450,451,336,452,453,454,29,455,456,457,458,459,460,110,461,462,463,464,465,466,467,468,469,9,284,285,286,287,288,289,290,10,99,291,11,100,101,292,82,293,102,12,13,294,295,14,15,296,470,471,472,297,298,299,300,301,302,303,304,305,306,19,20,21,22,473,23,24,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,0,1,103,104,16,17,327,328,329,330,331,474,475,476,83,84,85,477,86,478,479,480,332,2,333,334,3,105,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[116,117,118,119,120,121,122,123,124,125,352,126,127,128,129,130,131,132,133,134,135,136,137,138,139,111,140,141,30,50,51,151,27,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,25,90,178,191,192,193,210,211,212,213,214,228,231,232,233,234,235,26,236,271,272,9,284,10,99,301,302],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[338,339,340,343,344,347,349,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,139,111,140,141,34,47,53,148,149,28,155,157,159,160,163,164,165,166,169,172,90,4,91,180,93,181,183,184,106,189,190,191,192,193,74,195,202,205,206,207,208,209,210,211,212,213,214,216,217,229,107,230,108,231,233,234,236,240,241,94,245,246,95,96,97,248,249,98,251,252,253,254,271,272,99,11,100,293,102,294,295,301,307,308,311,313,314,315,316,318,319,320,321,323,324,325,326,104,16],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:136","failures":[30,32,33,353,34,35,36,37,354,38,39,41,42,43,44,45,46,47,48,49,50,356,357,51,52,53,54,358,359,361,481,482,362,365,366,173,174,58,59,368,369,370,371,60,372,373,61,374,375,376,377,378,379,380,381,382,62,383,384,385,386,387,63,388,389,64,65,66,67,68,69,70,71,72,72,73,73,74,426,75,76,77,427,255,78,256,257,258,259,260,261,79,80,440,441,81,442,82,19,20,21,22,473,23,24,475,476,83,84,85,86,480],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[483,484,485,486,487,488,354,489,490,42,59,368,369,370,371,60,372,373,61,374,375,376,377,378,379,380,381,382,62,383,384,385,386,387,63,388,389,66,69,491,72,73],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[153,154,360,155,195,448,333],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[189,190],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":119,"org.easymock.tests2.UsageTest.argumentsOrdered":7,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":293,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":348,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":29,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":182,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":417,"org.easymock.tests2.DelegateToTest.testReturnException":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":298,"org.easymock.tests.MockingTest.testPartialClassMocking":84,"org.easymock.tests.MockClassControlTest.testToString":256,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":337,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":240,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":367,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":125,"org.easymock.tests2.UsageTest.wrongArguments":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":233,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":401,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":305,"org.easymock.samples.ExampleTest.answerVsDelegate":195,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":80,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":479,"org.easymock.tests2.UsageConstraintsTest.testNull":121,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":46,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":261,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":347,"org.easymock.tests2.CaptureTest.testPrimitive":159,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":236,"org.easymock.tests.UsageTest.moreThanOneArgument":102,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":254,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":143,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":329,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":435,"org.easymock.tests.UsageTest.argumentsOrdered":15,"org.easymock.tests.UsageVarargTest.varargIntAccepted":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":210,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":30,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":482,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":413,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":214,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":395,"org.easymock.tests.ReplayStateInvalidUsageTest.times":280,"org.easymock.tests2.DependencyTest.testClassMocking":365,"org.easymock.tests2.AnswerTest.answer":187,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":147,"org.easymock.tests2.CaptureTest.testAnd":156,"org.easymock.tests2.UsageTest.strictResetToDefault":180,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":487,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":328,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":342,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":439,"org.easymock.tests2.DelegateToTest.testDelegate":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":250,"org.easymock.tests.LimitationsTest.mockFinalMethod":442,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":288,"org.easymock.tests2.DependencyTest.testClassMockingSupport":366,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":0,"org.easymock.tests2.CaptureTest.testCapture1_2446744":160,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":355,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":249,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":145,"org.easymock.tests.UsageThrowableTest.throwError":202,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":275,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":432,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":414,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":331,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":389,"org.easymock.samples.PartialClassMockTest.testGetArea":74,"org.easymock.tests.MockingTest.testInterfaceMocking":477,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":211,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":444,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":430,"org.easymock.tests2.UsageTest.niceToStrict":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":34,"org.easymock.tests2.MockBuilderTest.testCreateMock":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":385,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":398,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":96,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":343,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":469,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":303,"org.easymock.tests.UsageOverloadedMethodTest.overloading":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":130,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":334,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":318,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":129,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":165,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":425,"org.easymock.tests2.EasyMockSupportClassTest.testAll":60,"org.easymock.tests.MockClassControlTest.testEquals":260,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":76,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":89,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":252,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":55,"org.easymock.tests2.CaptureTest.testCaptureAll":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":286,"org.easymock.tests.MockNameTest.defaultName":474,"org.easymock.tests2.UsageConstraintsTest.testMatches":131,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":273,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":330,"org.easymock.samples.ExampleTest.voteForRemovals":199,"org.easymock.tests.UsageVarargTest.allKinds":228,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":104,"org.easymock.samples.BasicClassMockTest.testPrintContent":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":287,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":208,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":302,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":360,"org.easymock.tests2.UsageConstraintsTest.greaterThan":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":372,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":107,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":54,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":24,"org.easymock.samples.ExampleTest.voteForRemoval":196,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":149,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":358,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":49,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":179,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":82,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":340,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":297,"org.easymock.tests2.CaptureTest.testCaptureFirst":169,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":341,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":186,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":314,"org.easymock.tests2.CaptureTest.testCapture2_2446744":168,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":151,"org.easymock.tests2.UsageTest.moreThanOneArgument":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":461,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":39,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":227,"org.easymock.tests.GenericTest.testBridgedEquals":427,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":269,"org.easymock.tests.UsageExpectAndReturnTest.longType":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":284,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":338,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":40,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":253,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":424,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":471,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":327,"org.easymock.tests.UsageCallCountTest.tooManyCalls":270,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":400,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":244,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":207,"org.easymock.tests.MockingTest.testNiceClassMocking":480,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":65,"org.easymock.tests.MockingTest.testClassMocking":476,"org.easymock.tests2.UsageConstraintsTest.testContains":128,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":31,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":263,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":58,"org.easymock.tests2.UsageConstraintsTest.testFind":120,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":217,"org.easymock.tests.MockTypeTest.fromEasyMockClass":431,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":192,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":289,"org.easymock.tests.UsageExpectAndReturnTest.object":317,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":346,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":222,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":239,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":485,"org.easymock.tests.UsageTest.exactCallCountByLastCall":296,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":436,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":421,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":368,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":218,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":323,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":404,"org.easymock.tests.MockClassControlTest.testHashCode":259,"org.easymock.tests2.EasyMockSupportTest.testVerify":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":380,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":87,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":437,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":468,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":144,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":170,"org.easymock.tests.UsageVarargTest.varargCharAccepted":221,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":466,"org.easymock.tests2.UsageTest.openCallCountByLastCall":183,"org.easymock.tests.DefaultClassInstantiatorTest.object":19,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":349,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":467,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":237,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":8,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":381,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":393,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":403,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":52,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":245,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":324,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":63,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":88,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":257,"org.easymock.tests2.UsageTest.resumeIfFailure":106,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":79,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":300,"org.easymock.tests2.StubTest.stubWithReturnValue":172,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":488,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":139,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":316,"org.easymock.tests2.SerializationTest.testAllMockedMethod":43,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":460,"org.easymock.samples.SupportTest.voteForRemovals":420,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":426,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":248,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":465,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":335,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":423,"org.easymock.tests.UsageExpectAndThrowTest.object":247,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":136,"org.easymock.tests2.DelegateToTest.testWrongClass":154,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":271,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":272,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.samples.ConstructorCalledMockTest.testTax":72,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":363,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":97,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":36,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":304,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":445,"org.easymock.tests2.CaptureTest.testCaptureNone":164,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests.UsageVerifyTest.twoReturns":17,"org.easymock.tests.UsageVarargTest.varargByteAccepted":226,"org.easymock.tests2.ThreadingTest.testThreadSafe":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":383,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":267,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":429,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":70,"org.easymock.tests2.CaptureTest.testCapture_2617107":158,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":26,"org.easymock.tests2.UsageConstraintsTest.any":126,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":109,"org.easymock.tests2.StubTest.stub":25,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndThrowTest.longType":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":299,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":473,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":279,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":178,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":408,"org.easymock.tests2.SerializationTest.testClass":42,"org.easymock.tests.LimitationsTest.mockNativeMethod":81,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":77,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":326,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":392,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":57,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":92,"org.easymock.tests2.NameTest.nameForMocksControl":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":394,"org.easymock.tests2.MockedExceptionTest.testMockedException":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":373,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":295,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":415,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":86,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":94,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":44,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":37,"org.easymock.tests.MockingTest.testNicePartialClassMocking":85,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":390,"org.easymock.tests2.CaptureTest.testCaptureLast":163,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":1,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":124,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":69,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":137,"org.easymock.tests.MockingTest.testTwoMocks":83,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":491,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":307,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":95,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":140,"org.easymock.samples.ExampleTest.removeNonExistingDocument":200,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":397,"org.easymock.tests.UsageStrictMockTest.differentMethods":100,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":277,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":405,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":21,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":150,"org.easymock.tests2.MockBuilderTest.testCreateMockString":41,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":255,"org.easymock.tests.UsageExpectAndThrowTest.floatType":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":374,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":188,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":62,"org.easymock.samples.ExampleTest.voteAgainstRemoval":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":443,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":53,"org.easymock.tests.LimitationsTest.privateConstructor":441,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":484,"org.easymock.tests2.UsageConstraintsTest.testNotNull":111,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":173,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":209,"org.easymock.tests2.UsageTest.defaultResetToNice":185,"org.easymock.samples.ExampleTest.voteAgainstRemovals":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":322,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":391,"org.easymock.tests.UsageVarargTest.differentLength":223,"org.easymock.tests2.CallbackTest.callback":193,"org.easymock.tests2.UsageConstraintsTest.equals":351,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":356,"org.easymock.tests.UsageTest.openCallCountByLastCall":294,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":235,"org.easymock.tests.UsageCallCountTest.tooFewCalls":265,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":67,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":306,"org.easymock.tests.UsageThrowableTest.throwCheckedException":206,"org.easymock.tests.MockingTest.testStrictClassMocking":475,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":68,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":396,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":66,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":416,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":190,"org.easymock.tests.ObjectMethodsTest.testHashCode":238,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":152,"org.easymock.tests2.NameTest.nameForNiceMock":114,"org.easymock.tests2.DependencyTest.testInterfaceMocking":171,"org.easymock.samples.ExampleTest.addDocument":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":388,"org.easymock.tests2.DelegateToTest.testStubDelegate":28,"org.easymock.tests2.AnswerTest.stubAnswer":189,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":99,"org.easymock.tests.UsageVarargTest.varargLongAccepted":225,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndReturnTest.floatType":309,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":325,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":59,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":412,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":134,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":3,"org.easymock.tests.UsageThrowableTest.noUpperLimit":203,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":117,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":361,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":161,"org.easymock.tests2.SerializationTest.test":142,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":20,"org.easymock.tests2.UsageConstraintsTest.testSame":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":308,"org.easymock.samples.SupportTest.addDocument":419,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":375,"org.easymock.tests.GenericTest.testPackageScope":75,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":411,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":478,"org.easymock.tests2.NameTest.nameForMock":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":319,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":490,"org.easymock.tests2.UsageStrictMockTest.differentMethods":91,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":357,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":311,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":98,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":428,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":108,"org.easymock.tests2.MockedExceptionTest.testRealException":175,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":457,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":234,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":283,"org.easymock.tests2.NameTest.nameForStrictMock":113,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":353,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":47,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":362,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":135,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":22,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":32,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests2.UsageConstraintsTest.lessThan":141,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":339,"org.easymock.tests2.CaptureTest.testCaptureRightOne":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":379,"org.easymock.tests2.UsageConstraintsTest.testOr":123,"org.easymock.tests.UsageRangeTest.combination":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":45,"org.easymock.tests.UsageTest.wrongArguments":13,"org.easymock.tests2.MockBuilderTest.testWithConstructor":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":376,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":320,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":23,"org.easymock.tests.UsageVarargTest.varargShortAccepted":224,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":268,"org.easymock.tests2.UsageConstraintsTest.cmpTo":127,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":449,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":184,"org.easymock.tests2.CaptureTest.testCaptureFromStub":167,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":274,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":33,"org.easymock.tests.UsageTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":266,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":489,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":321,"org.easymock.tests2.UsageConstraintsTest.constraints":118,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":291,"org.easymock.samples.ExampleTest.addAndChangeDocument":201,"org.easymock.tests.UsageStrictMockTest.testVerify":292,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":418,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":290,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":285,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":162,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":212,"org.easymock.tests.LimitationsTest.abstractClass":440,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":313,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":213,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":344}}]
