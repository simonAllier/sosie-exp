[{"transplant":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","threadSafe":"state","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:36","failures":[7,8,9,10,11,12,13,14,15,16,0,1,17,18,19,20,21,22,23,24,25,2,3,26,27,28,29,30,31,32],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,5,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,105,106,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[132,142,143],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[144,145,146,147],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,4,167,168,169,170,146,171,37,39,40,45,172,46,47,48,173,49,5,50,52,57,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,69,70,192,16,193,0,1,194,75,78,88,94,195,196,197,198,199,6,200,201,202,203,204,205,206,97,98,99,100,207,101,102,103,104,208,107,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,109,110,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,125,23,254,24,25,255,2,3,256,127,257,258,259,260,261,262,263,264,265,31,32,138,139,140,266,267,268,269],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[270,271,272,273,150,154,156,160,145,37,44,57,58,16,0,1,75,17,198,6,274,200,201,203,97,234,275,276,249,253,23,277,24,25,2,3,278,26,257,258,259,30,31,32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:327","failures":[279,280,281,282],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[4,5],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[148,149,150,151,152,153,154,283,155,156,157,158,144,284,285,160,286,161,287,288,162,163,164,165,289,166,290,291,4,145,292,167,168,169,146,171,293,294,34,37,39,40,43,45,172,47,48,173,49,5,50,52,56,57,58,295,296,297,174,175,298,176,299,177,300,178,179,180,182,301,185,186,187,188,302,303,189,190,191,304,305,67,68,69,306,70,16,0,1,75,78,88,94,195,196,197,17,199,274,307,308,309,202,203,310,311,204,312,313,205,314,315,206,97,98,99,100,207,101,102,105,105,106,106,107,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,316,317,318,319,320,321,322,323,324,227,228,325,109,111,239,275,326,327,328,329,240,241,242,243,330,331,332,244,245,333,246,334,335,336,337,247,338,339,340,341,248,342,343,344,345,346,347,348,349,350,351,352,353,354,125,355,356,357,358,359,360,279,280,23,25,2,3,127,361,26,362,363,260,364,281,282,365,366,367,368,369,370,371,372,261,262,373,263,374,375,376,377,264,378,379,380,381,265,382,383,384,385,29,30,31,32,386,387,388,389,390,138,139,140,266,267,268,269],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[304,359],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[391],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[8,14,18,20,24,27],"status":-1,"binaryOperator":"int < (java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[7,8,9,10,11,12,392,13,14,15,393,16,0,1,17,198,200,201,18,19,20,21,394,22,23,24,25,2,3,26,27,257,258,259,28,29,30,31,32,395,396,269,397],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[287],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[33,398,34,35,37,38,39,40,42,43,399,44,45,46,47,48,49,5,50,51,52,55,56,57,58,400,401,402,69,70,75,78,88,94,97,98,99,100,101,102,103,104,105,105,106,106,107,109,110,111,114,121,122,125,127,137,138,139,140],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[10,11,19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[160,286,288,162],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,198,200,201,22,23,24,2,27,257,258,259,31,32,397],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[33,34,35,36,37,39,40,403,41,43,44,45,51,53,56,57,60,67,70,71,78,88,94,105,105,106,106,107,108,111,121,122],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[288,164,180,185,186,189,16,316,317,318,319,320,328,329,240,241,242,243,330,347,348,23,25,369],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[34,43,56,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.RecordState:318","failures":[219,222],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[45,172,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[108,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[164,328],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[70,71],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":160,"org.easymock.tests2.UsageTest.argumentsOrdered":201,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":361,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":157,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":6,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":208,"org.easymock.tests2.DelegateToTest.testReturnException":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":366,"org.easymock.tests.MockingTest.testPartialClassMocking":138,"org.easymock.tests.MockClassControlTest.testToString":115,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":391,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":322,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":82,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":331,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":191,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":163,"org.easymock.tests2.UsageTest.wrongArguments":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":240,"org.easymock.samples.ExampleTest.answerVsDelegate":213,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":122,"org.easymock.tests2.UsageConstraintsTest.testNull":161,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":49,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":156,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":120,"org.easymock.tests2.CaptureTest.testPrimitive":182,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":330,"org.easymock.tests.UsageTest.moreThanOneArgument":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":345,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":388,"org.easymock.tests.UsageTest.argumentsOrdered":259,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":349,"org.easymock.tests.UsageVarargTest.varargIntAccepted":231,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":316,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":33,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":63,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":38,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":320,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":11,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests2.DependencyTest.testClassMocking":65,"org.easymock.tests2.AnswerTest.answer":203,"org.easymock.tests2.CaptureTest.testAnd":179,"org.easymock.tests2.UsageTest.strictResetToDefault":197,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":55,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":152,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":326,"org.easymock.tests2.DelegateToTest.testDelegate":178,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":353,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":248,"org.easymock.tests.LimitationsTest.mockFinalMethod":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":369,"org.easymock.tests2.DependencyTest.testClassMockingSupport":66,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":28,"org.easymock.tests2.CaptureTest.testCapture1_2446744":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":340,"org.easymock.tests.UsageThrowableTest.throwError":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":96,"org.easymock.samples.PartialClassMockTest.testGetArea":107,"org.easymock.tests2.CompareToTest.testLessOrEqual":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":317,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":83,"org.easymock.tests2.UsageTest.niceToStrict":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":332,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":37,"org.easymock.tests2.MockBuilderTest.testCreateMock":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":91,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":337,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":153,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":280,"org.easymock.tests.UsageOverloadedMethodTest.overloading":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":93,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":268,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":290,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":378,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":166,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":142,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":187,"org.easymock.tests.MockClassControlTest.testEquals":119,"org.easymock.tests2.EasyMockSupportClassTest.testAll":75,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":110,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":392,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":343,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":400,"org.easymock.tests2.CaptureTest.testCaptureAll":180,"org.easymock.tests2.UsageConstraintsTest.testMatches":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":389,"org.easymock.samples.ExampleTest.voteForRemovals":217,"org.easymock.tests.UsageVarargTest.allKinds":238,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":30,"org.easymock.samples.BasicClassMockTest.testPrintContent":104,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":225,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":370,"org.easymock.tests2.UsageConstraintsTest.greaterThan":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":76,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":275,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":58,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":134,"org.easymock.samples.ExampleTest.voteForRemoval":214,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":59,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":296,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":51,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":127,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":196,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":41,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":150,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":365,"org.easymock.tests2.CaptureTest.testCaptureFirst":189,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":151,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":202,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":397,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":375,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":174,"org.easymock.tests2.UsageTest.moreThanOneArgument":17,"org.easymock.tests2.CaptureTest.testCapture2_2446744":303,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":237,"org.easymock.tests.GenericTest.testBridgedEquals":112,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":252,"org.easymock.tests.UsageExpectAndReturnTest.longType":262,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":277,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":399,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":344,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":170,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":386,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":281,"org.easymock.tests.UsageCallCountTest.tooManyCalls":253,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":19,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":224,"org.easymock.tests.MockingTest.testNiceClassMocking":141,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":98,"org.easymock.tests.MockingTest.testClassMocking":136,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":398,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":276,"org.easymock.tests2.UsageConstraintsTest.testContains":289,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":69,"org.easymock.tests2.UsageConstraintsTest.testFind":286,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":325,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":315,"org.easymock.tests.UsageExpectAndReturnTest.object":264,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":52,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":155,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":233,"org.easymock.tests.UsageTest.exactCallCountByLastCall":260,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":328,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":321,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":350,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":394,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":71,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":229,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":382,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":267,"org.easymock.tests.MockClassControlTest.testHashCode":118,"org.easymock.tests2.EasyMockSupportTest.testVerify":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":85,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":10,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":351,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":279,"org.easymock.tests.UsageVarargTest.varargCharAccepted":232,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":192,"org.easymock.tests2.UsageTest.openCallCountByLastCall":274,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":158,"org.easymock.tests.DefaultClassInstantiatorTest.object":128,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":360,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":86,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":335,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":222,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":117,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":56,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":334,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":383,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":364,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":116,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":94,"org.easymock.tests2.UsageTest.resumeIfFailure":309,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":121,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":368,"org.easymock.tests2.StubTest.stubWithReturnValue":305,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":377,"org.easymock.tests2.SerializationTest.testAllMockedMethod":46,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":358,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":14,"org.easymock.samples.SupportTest.voteForRemovals":211,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":339,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":359,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":310,"org.easymock.tests.UsageExpectAndThrowTest.object":247,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":323,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":168,"org.easymock.tests2.DelegateToTest.testWrongClass":177,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":347,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":348,"org.easymock.samples.ConstructorCalledMockTest.testTax":105,"org.easymock.tests.UsageStrictMockTest.range":2,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":283,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":338,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":72,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":258,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":18,"org.easymock.tests2.CaptureTest.testCaptureNone":186,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":357,"org.easymock.tests.UsageUnorderedTest.message":23,"org.easymock.tests.UsageVerifyTest.twoReturns":32,"org.easymock.tests.UsageVarargTest.varargByteAccepted":236,"org.easymock.tests2.ThreadingTest.testThreadSafe":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":89,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":251,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":103,"org.easymock.tests2.CaptureTest.testCapture_2617107":181,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":243,"org.easymock.tests2.UsageConstraintsTest.any":164,"org.easymock.tests2.StubTest.stub":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":282,"org.easymock.tests.UsageExpectAndThrowTest.longType":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":367,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":132,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":193,"org.easymock.tests2.SerializationTest.testClass":45,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":205,"org.easymock.tests.LimitationsTest.mockNativeMethod":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":385,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":111,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":402,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.tests2.NameTest.nameForMocksControl":273,"org.easymock.tests2.MockedExceptionTest.testMockedException":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":77,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":363,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":333,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":47,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":40,"org.easymock.tests.MockingTest.testNicePartialClassMocking":139,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":50,"org.easymock.tests2.CaptureTest.testCaptureLast":185,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":29,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":162,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":102,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":169,"org.easymock.tests.MockingTest.testTwoMocks":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":371,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":336,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":200,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":293,"org.easymock.tests.UsageStrictMockTest.differentMethods":3,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":130,"org.easymock.tests2.ConstraintsToStringTest.andToString":13,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":297,"org.easymock.tests2.MockBuilderTest.testCreateMockString":44,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":79,"org.easymock.tests.UsageExpectAndThrowTest.floatType":244,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":74,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":204,"org.easymock.tests.UsageVerifyTest.twoThrows":31,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":88,"org.easymock.samples.ExampleTest.voteAgainstRemoval":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":355,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":57,"org.easymock.tests.LimitationsTest.privateConstructor":124,"org.easymock.tests2.UsageConstraintsTest.testNotNull":171,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":226,"org.easymock.tests2.UsageTest.defaultResetToNice":308,"org.easymock.samples.ExampleTest.voteAgainstRemovals":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":265,"org.easymock.tests2.CallbackTest.callback":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":53,"org.easymock.tests.UsageTest.openCallCountByLastCall":362,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":242,"org.easymock.tests.UsageCallCountTest.tooFewCalls":249,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":100,"org.easymock.tests.UsageThrowableTest.throwCheckedException":223,"org.easymock.tests.MockingTest.testStrictClassMocking":135,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":20,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":329,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":207,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":313,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":175,"org.easymock.tests2.NameTest.nameForNiceMock":272,"org.easymock.tests2.DependencyTest.testInterfaceMocking":190,"org.easymock.samples.ExampleTest.addDocument":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":95,"org.easymock.tests2.DelegateToTest.testStubDelegate":299,"org.easymock.tests2.AnswerTest.stubAnswer":312,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":25,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":403,"org.easymock.tests.UsageVarargTest.varargLongAccepted":235,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":256,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":384,"org.easymock.tests.UsageExpectAndReturnTest.floatType":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":70,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":106,"org.easymock.tests2.ConstraintsToStringTest.orToString":7,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":396,"org.easymock.tests.UsageThrowableTest.noUpperLimit":220,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":292,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":284,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":61,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":183,"org.easymock.tests2.SerializationTest.test":172,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":143,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":129,"org.easymock.tests2.UsageConstraintsTest.testSame":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":372,"org.easymock.samples.SupportTest.addDocument":210,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":80,"org.easymock.tests.GenericTest.testPackageScope":109,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":352,"org.easymock.tests2.NameTest.nameForMock":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":379,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":54,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":373,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":341,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":327,"org.easymock.tests2.MockedExceptionTest.testRealException":306,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":21,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":241,"org.easymock.tests2.NameTest.nameForStrictMock":271,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":36,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":314,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":5,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":64,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":167,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":131,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":34,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":294,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":149,"org.easymock.tests2.CaptureTest.testCaptureRightOne":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":84,"org.easymock.tests2.UsageConstraintsTest.testOr":288,"org.easymock.tests.UsageRangeTest.combination":239,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":48,"org.easymock.tests.UsageTest.wrongArguments":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":81,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":380,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":133,"org.easymock.tests.UsageVarargTest.varargShortAccepted":234,"org.easymock.tests2.UsageConstraintsTest.cmpTo":165,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":311,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":307,"org.easymock.tests2.CaptureTest.testCaptureFromStub":302,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":35,"org.easymock.tests.UsageTest.unexpectedCallWithArray":27,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":381,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.tests2.UsageConstraintsTest.constraints":285,"org.easymock.samples.ExampleTest.addAndChangeDocument":218,"org.easymock.tests2.ConstraintsToStringTest.notToString":9,"org.easymock.tests.UsageStrictMockTest.testVerify":278,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":209,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":254,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":184,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":318,"org.easymock.tests.LimitationsTest.abstractClass":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":374,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":154,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":230}}]
