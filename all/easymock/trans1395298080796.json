[{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[6],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,13,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[64,65,66,67,68],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[69,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[71,72,73],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[50],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","i":"i"}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[74,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.RecordState:305","failures":[75,76,77],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[78,79,80,81,82,83,84,85,86,87,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[89,90,91,20,92,93,94,95,96,97,98],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[99,18,19,22,100,101,102,24,45,103,47,48,104,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[105,106,107,108,109,30,33,34,45,110,111,112,113,57,58,59,60],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[114],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[105,107,45,110,111,57],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","argTypes":"argTypes","constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[115],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[2,116,80,86,117,118,119,120,121,115],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[122,123,124,125,126],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[127,29,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,56,158,159,160,62],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[2,116,80,86,117,161,162,163,118,119,120,164,165,115],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[166],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[167,168,169,170,171,172,173],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[174,175,176,177,178,167,168,169,179,180,181,182,2,3,4,183,89,65,90,184,185,186,187,188,189,190,91,66,67,191,170,192,193,171,172,194,195,196,197,0,7,198,199,8,200,9,10,201,202,203,204,205,15,206,207,208,1,11,209,210,12,211,13,14,212,16,213,99,17,18,19,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,116,80,240,241,242,243,244,245,246,247,248,249,20,92,250,251,93,6,94,95,252,96,253,254,255,256,257,258,21,259,260,97,261,114,262,263,98,264,265,266,22,267,100,268,101,269,270,271,272,74,102,23,273,24,274,275,276,277,278,279,280,281,282,81,283,284,285,286,82,83,287,127,288,289,290,291,292,84,25,293,85,294,295,296,297,86,298,299,117,26,27,88,28,29,300,109,30,31,32,301,128,302,33,34,35,36,303,37,304,305,306,38,39,307,308,40,309,310,311,312,313,314,315,316,317,318,319,320,321,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,322,323,324,325,326,327,69,328,329,330,331,41,332,333,334,43,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,122,123,124,352,125,353,126,354,355,356,149,357,358,359,360,361,44,362,45,103,46,47,48,363,104,150,364,151,152,153,154,155,156,365,366,367,368,369,370,371,372,166,373,374,375,376,377,378,379,380,381,75,76,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,157,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,51,438,439,440,441,442,443,444,445,446,447,448,52,53,54,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,77,465,70,466,467,468,469,470,55,471,472,473,474,475,476,477,478,479,56,113,57,58,480,158,59,60,61,481,482,483,159,484,485,486,487,488,160,489,490,491,492,493,494,495,496,497,498,499,500,62,63,501,502,503,504,505,506,507,508,509,510,173,511,512,513,514,515,516],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[105,107,45,110,111,57],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[386],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[167,169,2,3,4,89,65,90,184,186,187,188,189,190,91,191,170,171,172,194,198,204,15,209,213,17,18,19,218,221,231,237,116,248,249,20,92,251,93,6,94,95,252,253,254,255,256,257,258,21,259,260,97,261,114,263,98,264,265,266,267,100,268,101,271,273,276,277,280,281,282,81,283,285,286,82,287,127,290,291,295,297,298,300,31,32,35,303,37,304,305,306,38,39,308,40,309,310,311,313,314,317,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,322,330,331,41,332,333,334,354,355,357,362,46,47,48,364,151,373,374,386,387,389,157,410,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,436,437,438,439,440,441,442,445,447,448,471,472,473,474,475,478,488,160,500,62,63,501,502,503,504,505,506,507,510,173,511,512,513,514,516],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[297,403],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[21,268,32,344],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[80,86,118,119,120,115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[314],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:320","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = org.easymock.internal.ExpectedInvocation.getMethod().getExceptionTypes()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":92,"org.easymock.tests2.UsageTest.argumentsOrdered":34,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":459,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":32,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":505,"org.easymock.tests2.DelegateToTest.testReturnException":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":394,"org.easymock.tests.MockingTest.testPartialClassMocking":386,"org.easymock.tests.MockClassControlTest.testToString":367,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":174,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":129,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":221,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":118,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":252,"org.easymock.tests2.UsageTest.wrongArguments":30,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":354,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":320,"org.easymock.samples.ExampleTest.answerVsDelegate":173,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":403,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":391,"org.easymock.tests2.UsageConstraintsTest.testNull":93,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":100,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":40,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":372,"org.easymock.tests2.CaptureTest.testPrimitive":184,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":357,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":148,"org.easymock.tests.UsageTest.moreThanOneArgument":113,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":379,"org.easymock.tests.UsageTest.argumentsOrdered":60,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":326,"org.easymock.tests.UsageVarargTest.varargIntAccepted":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":464,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":471,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":165,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":292,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":14,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":243,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":451,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":475,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests.ReplayStateInvalidUsageTest.times":346,"org.easymock.tests2.DependencyTest.testClassMocking":288,"org.easymock.tests2.AnswerTest.answer":170,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":465,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":182,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":400,"org.easymock.tests2.CaptureTest.testAnd":89,"org.easymock.tests2.UsageTest.strictResetToDefault":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":306,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":333,"org.easymock.tests2.DelegateToTest.testDelegate":317,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":144,"org.easymock.tests.LimitationsTest.mockFinalMethod":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":493,"org.easymock.tests2.DependencyTest.testClassMockingSupport":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":75,"org.easymock.tests2.CaptureTest.testCapture1_2446744":185,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":270,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":142,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":180,"org.easymock.tests.UsageThrowableTest.throwError":150,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":340,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":402,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":43,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":381,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":239,"org.easymock.samples.PartialClassMockTest.testGetArea":506,"org.easymock.tests.MockingTest.testInterfaceMocking":388,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":472,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":324,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":499,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":130,"org.easymock.tests2.UsageTest.niceToStrict":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":71,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":295,"org.easymock.tests2.MockBuilderTest.testCreateMock":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":234,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":200,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":138,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":105,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":38,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":399,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":409,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":443,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":318,"org.easymock.tests.UsageOverloadedMethodTest.overloading":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":236,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":159,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":257,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":487,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":423,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":256,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":190,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":435,"org.easymock.tests2.EasyMockSupportClassTest.testAll":218,"org.easymock.tests.MockClassControlTest.testEquals":371,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":374,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":146,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":491,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":181,"org.easymock.tests2.CaptureTest.testCaptureAll":65,"org.easymock.tests.MockNameTest.defaultName":406,"org.easymock.tests2.UsageConstraintsTest.testMatches":258,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":380,"org.easymock.samples.ExampleTest.voteForRemovals":514,"org.easymock.tests.UsageVarargTest.allKinds":442,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":500,"org.easymock.samples.BasicClassMockTest.testPrintContent":504,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":492,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":155,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":397,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":12,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":316,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":115,"org.easymock.tests2.UsageConstraintsTest.greaterThan":259,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":219,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":332,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":24,"org.easymock.samples.ExampleTest.voteForRemoval":511,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":126,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":274,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":277,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":244,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":269,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":322,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":304,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":393,"org.easymock.tests2.CaptureTest.testCaptureFirst":191,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":455,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":305,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":36,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":419,"org.easymock.tests2.UsageTest.moreThanOneArgument":109,"org.easymock.tests2.CaptureTest.testCapture2_2446744":67,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":279,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":70,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":441,"org.easymock.tests.GenericTest.testBridgedEquals":376,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":53,"org.easymock.tests.UsageExpectAndReturnTest.longType":415,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":489,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":303,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":147,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":262,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":145,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":377,"org.easymock.tests.UsageCallCountTest.tooManyCalls":54,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":420,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":154,"org.easymock.tests.MockingTest.testNiceClassMocking":392,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":282,"org.easymock.tests.MockingTest.testClassMocking":384,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":444,"org.easymock.tests2.UsageConstraintsTest.testContains":255,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":204,"org.easymock.tests2.UsageConstraintsTest.testFind":251,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":160,"org.easymock.tests.MockTypeTest.fromEasyMockClass":401,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":169,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":44,"org.easymock.tests.UsageExpectAndReturnTest.object":422,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":308,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":437,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":119,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":497,"org.easymock.tests.UsageTest.exactCallCountByLastCall":61,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":327,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":335,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":80,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":432,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":428,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":483,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":207,"org.easymock.tests.MockClassControlTest.testHashCode":370,"org.easymock.tests2.EasyMockSupportTest.testVerify":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":228,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":69,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":481,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":408,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":179,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":49,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":183,"org.easymock.tests.UsageVarargTest.varargCharAccepted":436,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":350,"org.easymock.tests2.CaptureTest.testCaptureMultiple":64,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":470,"org.easymock.tests2.UsageTest.openCallCountByLastCall":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":72,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":310,"org.easymock.tests.DefaultClassInstantiatorTest.object":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":407,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":495,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":229,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":0,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":206,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":23,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":369,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":135,"org.easymock.tests.CapturesMatcherTest.test":68,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":429,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":237,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":368,"org.easymock.tests2.UsageTest.resumeIfFailure":35,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":396,"org.easymock.tests2.StubTest.stubWithReturnValue":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":86,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":421,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":263,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":77,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":162,"org.easymock.samples.SupportTest.voteForRemovals":502,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":107,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":141,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":469,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":192,"org.easymock.tests.UsageExpectAndThrowTest.object":139,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":337,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":261,"org.easymock.tests2.DelegateToTest.testWrongClass":315,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":330,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":331,"org.easymock.samples.ConstructorCalledMockTest.testTax":508,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":246,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":297,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":215,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":319,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":110,"org.easymock.tests2.CaptureTest.testCaptureNone":189,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":325,"org.easymock.tests.UsageUnorderedTest.message":55,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":42,"org.easymock.tests.UsageVerifyTest.twoReturns":63,"org.easymock.tests.UsageVarargTest.varargByteAccepted":440,"org.easymock.tests2.ThreadingTest.testThreadSafe":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":232,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":448,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":503,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":498,"org.easymock.tests2.CaptureTest.testCapture_2617107":90,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":108,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":149,"org.easymock.tests2.UsageConstraintsTest.any":253,"org.easymock.tests2.StubTest.stub":287,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":345,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":395,"org.easymock.tests.UsageExpectAndThrowTest.longType":132,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":352,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":344,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":17,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":209,"org.easymock.tests.LimitationsTest.mockNativeMethod":478,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":431,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":375,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":197,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":214,"org.easymock.tests2.NameTest.nameForMocksControl":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":7,"org.easymock.tests2.MockedExceptionTest.testMockedException":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":220,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":158,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":389,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":133,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":266,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":298,"org.easymock.tests.MockingTest.testNicePartialClassMocking":387,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":101,"org.easymock.tests2.CaptureTest.testCaptureLast":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":163,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":195,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":76,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":82,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":95,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":114,"org.easymock.tests.MockingTest.testTwoMocks":385,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":137,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":264,"org.easymock.samples.ExampleTest.removeNonExistingDocument":515,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":8,"org.easymock.tests.UsageStrictMockTest.differentMethods":48,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":208,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":123,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":278,"org.easymock.tests2.MockBuilderTest.testCreateMockString":28,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":365,"org.easymock.tests.UsageExpectAndThrowTest.floatType":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":222,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":217,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":171,"org.easymock.tests.UsageVerifyTest.twoThrows":62,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":240,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":231,"org.easymock.samples.ExampleTest.voteAgainstRemoval":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":460,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":323,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":273,"org.easymock.tests.LimitationsTest.privateConstructor":477,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":79,"org.easymock.tests2.UsageConstraintsTest.testNotNull":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":156,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":202,"org.easymock.tests2.UsageTest.defaultResetToNice":302,"org.easymock.samples.ExampleTest.voteAgainstRemovals":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":427,"org.easymock.tests.UsageVarargTest.differentLength":51,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":196,"org.easymock.tests2.CallbackTest.callback":15,"org.easymock.tests2.UsageConstraintsTest.equals":250,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":272,"org.easymock.tests.UsageTest.openCallCountByLastCall":480,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":248,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":356,"org.easymock.tests.UsageCallCountTest.tooFewCalls":446,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":321,"org.easymock.tests.UsageThrowableTest.throwCheckedException":153,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":111,"org.easymock.tests.MockingTest.testStrictClassMocking":383,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":411,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":286,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":199,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":347,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":285,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":194,"org.easymock.tests.ObjectMethodsTest.testHashCode":496,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":164,"org.easymock.tests2.NameTest.nameForNiceMock":177,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":280,"org.easymock.tests2.DependencyTest.testInterfaceMocking":290,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":120,"org.easymock.samples.ExampleTest.addDocument":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":238,"org.easymock.tests2.DelegateToTest.testStubDelegate":314,"org.easymock.tests2.AnswerTest.stubAnswer":172,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":103,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":299,"org.easymock.tests.UsageVarargTest.varargLongAccepted":439,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":430,"org.easymock.tests.UsageExpectAndReturnTest.floatType":414,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":116,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":509,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":13,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":260,"org.easymock.tests.UsageThrowableTest.noUpperLimit":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":249,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":241,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":186,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":413,"org.easymock.tests2.UsageConstraintsTest.testSame":6,"org.easymock.samples.SupportTest.addDocument":501,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":284,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":223,"org.easymock.tests.GenericTest.testPackageScope":373,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":211,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":390,"org.easymock.tests2.NameTest.nameForMock":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":424,"org.easymock.tests2.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":74,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":416,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":143,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":494,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":334,"org.easymock.tests2.MockedExceptionTest.testRealException":205,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":247,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":462,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":99,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":349,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":355,"org.easymock.tests2.NameTest.nameForStrictMock":176,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":294,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":167,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":73,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":268,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":245,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":124,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":97,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests2.UsageStrictMockTest.range":18,"org.easymock.tests2.UsageConstraintsTest.lessThan":265,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":457,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":121,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":37,"org.easymock.tests2.CaptureTest.testCaptureRightOne":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":227,"org.easymock.tests2.UsageConstraintsTest.testOr":94,"org.easymock.tests.UsageRangeTest.combination":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":22,"org.easymock.tests.UsageTest.wrongArguments":58,"org.easymock.tests2.MockBuilderTest.testWithConstructor":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":224,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":366,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":425,"org.easymock.tests.UsageVarargTest.varargShortAccepted":438,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":125,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":52,"org.easymock.tests2.UsageConstraintsTest.cmpTo":254,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":452,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":128,"org.easymock.tests2.CaptureTest.testCaptureFromStub":66,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":339,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":293,"org.easymock.tests.UsageTest.unexpectedCallWithArray":57,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":447,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":87,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":426,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":46,"org.easymock.tests2.UsageConstraintsTest.constraints":20,"org.easymock.samples.ExampleTest.addAndChangeDocument":516,"org.easymock.tests.UsageStrictMockTest.testVerify":104,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":507,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":362,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":490,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":473,"org.easymock.tests.LimitationsTest.abstractClass":476,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":418,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":485,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":474,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":39}}]
