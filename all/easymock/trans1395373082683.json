[{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[1,2,3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,2,234,235,236,237,238,239,3,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,0,486,487,488,489],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[313,359,362,367,490,373,378,383,384,491,492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[109,112,139,140,141,142,143,144,273,486,487,488,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[102],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[456,467],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.internal.RecordState:190","failures":[39,40,42,43,44,47,48,51,78,79,80,83,84,85,86,87,96,98,99,103,104,106,108,110,111,114,136,148,173,174,247,249,250,251,252,253,254,262,264,265,266,267,268,273,274,275,276,277,278,279,280,281,282,283,284,285,289,290,292,293,294,296,298,299,300,303,304,307,309,310,320,330,331,364,385,386,387,389,390,391,392,393,395,396,397,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,415,416,417,418,420,423,427,431,432,433,441,455,456,458,459,462,463,464,465,466,467,468,474,488],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[37,393,396,398,399,411,416,456,462,463,468],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:281","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[77,81,82,84,87,98,99,179,183,184,186,189,309,310],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[493,22,32,494,495,41,42,43,45,46,49,50,51,93,95,97,98,99,164,165,166,201,265,275,279,280,283,291,292,295,296,297,301,302,303,304,305,308,309,310,360,371,372,374,392,408,420,431,433],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[393],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[399],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[43,74,80,86,90,92,176,182,188,192,194,201,228,459,467],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[393],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[495,41,42,45,46,49,50,95,98,201,295,301,302,309],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[493,22,32,494,495,41,42,43,45,46,49,50,51,93,95,97,98,99,164,165,166,201,265,275,279,280,283,291,292,295,296,297,301,302,303,304,305,308,309,310,360,371,372,374,392,408,420,431,433],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[171],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[392,399,455,457,465],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":393,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests2.UsageTest.argumentsOrdered":302,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":220,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":297,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":11,"org.easymock.tests2.DelegateToTest.testReturnException":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":140,"org.easymock.tests.MockingTest.testPartialClassMocking":66,"org.easymock.tests.MockClassControlTest.testToString":204,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":315,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":106,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":175,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":339,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":290,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":110,"org.easymock.tests2.UsageTest.wrongArguments":295,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":480,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":129,"org.easymock.samples.ExampleTest.answerVsDelegate":13,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":60,"org.easymock.tests2.UsageConstraintsTest.testNull":396,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":71,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":422,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":209,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":283,"org.easymock.tests2.CaptureTest.testPrimitive":458,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":114,"org.easymock.tests.UsageTest.moreThanOneArgument":44,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":194,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":262,"org.easymock.tests.UsageTest.argumentsOrdered":50,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":255,"org.easymock.tests.UsageVarargTest.varargIntAccepted":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":145,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":450,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":446,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":149,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":474,"org.easymock.tests.ReplayStateInvalidUsageTest.times":123,"org.easymock.tests2.DependencyTest.testClassMocking":287,"org.easymock.tests2.AnswerTest.answer":320,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":329,"org.easymock.tests2.CaptureTest.testAnd":455,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":57,"org.easymock.tests2.UsageTest.strictResetToDefault":293,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":430,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":261,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":278,"org.easymock.tests2.DelegateToTest.testDelegate":0,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":259,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":190,"org.easymock.tests.LimitationsTest.mockFinalMethod":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":154,"org.easymock.tests2.DependencyTest.testClassMockingSupport":288,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":52,"org.easymock.tests2.CaptureTest.testCapture1_2446744":459,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":188,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":327,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":117,"org.easymock.tests.UsageThrowableTest.throwError":247,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":59,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":447,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":264,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":357,"org.easymock.samples.PartialClassMockTest.testGetArea":10,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":118,"org.easymock.tests.MockingTest.testInterfaceMocking":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":146,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":176,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":246,"org.easymock.tests2.UsageTest.niceToStrict":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":210,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":364,"org.easymock.tests2.MockBuilderTest.testCreateMock":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":352,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":477,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":184,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":279,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":56,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":158,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":127,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":354,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":406,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":134,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":84,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":405,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":464,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":29,"org.easymock.tests.MockClassControlTest.testEquals":208,"org.easymock.tests2.EasyMockSupportClassTest.testAll":336,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":192,"org.easymock.tests2.CaptureTest.testCaptureAll":456,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":152,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":328,"org.easymock.tests.MockNameTest.defaultName":38,"org.easymock.tests2.UsageConstraintsTest.testMatches":407,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":263,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests.UsageVarargTest.allKinds":37,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":153,"org.easymock.samples.BasicClassMockTest.testPrintContent":21,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":253,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":305,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":485,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":144,"org.easymock.tests2.UsageConstraintsTest.greaterThan":409,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":337,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":266,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":433,"org.easymock.samples.ExampleTest.voteForRemoval":14,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":240,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":434,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":386,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":61,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":451,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":425,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":138,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":292,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":217,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":276,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":139,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":481,"org.easymock.tests2.CaptureTest.testCaptureFirst":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":216,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":277,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":304,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":80,"org.easymock.tests2.CaptureTest.testCapture2_2446744":467,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":388,"org.easymock.tests2.UsageTest.moreThanOneArgument":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":228,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":372,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":36,"org.easymock.tests.GenericTest.testBridgedEquals":171,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":165,"org.easymock.tests.UsageExpectAndReturnTest.longType":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":150,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":193,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":414,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":39,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":260,"org.easymock.tests.UsageCallCountTest.tooManyCalls":166,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":252,"org.easymock.tests.MockingTest.testNiceClassMocking":72,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":377,"org.easymock.tests.MockingTest.testClassMocking":64,"org.easymock.tests2.UsageConstraintsTest.testContains":404,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":159,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":488,"org.easymock.tests2.UsageConstraintsTest.testFind":395,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests.MockTypeTest.fromEasyMockClass":58,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":93,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":271,"org.easymock.tests.UsageExpectAndReturnTest.object":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":427,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":282,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":31,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":244,"org.easymock.tests.UsageTest.exactCallCountByLastCall":51,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":215,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":105,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":313,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":26,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":89,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":133,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":437,"org.easymock.tests.MockClassControlTest.testHashCode":207,"org.easymock.tests2.EasyMockSupportTest.testVerify":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":346,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":257,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":131,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":24,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":494,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":326,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":375,"org.easymock.tests.UsageVarargTest.varargCharAccepted":30,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":2,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":233,"org.easymock.tests2.UsageTest.openCallCountByLastCall":298,"org.easymock.tests.DefaultClassInstantiatorTest.object":234,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":285,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":23,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":242,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":495,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":347,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":472,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":436,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":431,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":181,"org.easymock.tests.CapturesMatcherTest.test":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":90,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":155,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":355,"org.easymock.tests2.UsageTest.resumeIfFailure":303,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":142,"org.easymock.tests2.StubTest.stubWithReturnValue":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":367,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":415,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":82,"org.easymock.tests2.SerializationTest.testAllMockedMethod":332,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":226,"org.easymock.samples.SupportTest.voteForRemovals":9,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":439,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":187,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":232,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":321,"org.easymock.tests.UsageExpectAndThrowTest.object":185,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":107,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":412,"org.easymock.tests2.DelegateToTest.testWrongClass":484,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":200,"org.easymock.tests.UsageStrictMockTest.range":98,"org.easymock.samples.ConstructorCalledMockTest.testTax":6,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":453,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":186,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":366,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":125,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":128,"org.easymock.tests2.CaptureTest.testCaptureNone":463,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":104,"org.easymock.tests.UsageUnorderedTest.message":201,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":493,"org.easymock.tests.UsageVerifyTest.twoReturns":42,"org.easymock.tests.UsageVarargTest.varargByteAccepted":35,"org.easymock.tests2.ThreadingTest.testThreadSafe":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":350,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":163,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":20,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":245,"org.easymock.tests2.CaptureTest.testCapture_2617107":457,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":230,"org.easymock.tests2.UsageConstraintsTest.any":402,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":122,"org.easymock.tests2.StubTest.stub":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":157,"org.easymock.tests.UsageExpectAndThrowTest.longType":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":231,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":238,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":121,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":308,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":441,"org.easymock.tests2.SerializationTest.testClass":330,"org.easymock.tests.LimitationsTest.mockNativeMethod":197,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":92,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":471,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests2.NameTest.nameForMocksControl":319,"org.easymock.tests2.MockedExceptionTest.testMockedException":487,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":338,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":48,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":179,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":69,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":270,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":419,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":368,"org.easymock.tests.MockingTest.testNicePartialClassMocking":67,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":424,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":469,"org.easymock.tests2.CaptureTest.testCaptureLast":462,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":53,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":399,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":383,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":413,"org.easymock.tests.MockingTest.testTwoMocks":65,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":384,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":183,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":301,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":417,"org.easymock.samples.ExampleTest.removeNonExistingDocument":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":476,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":119,"org.easymock.tests.UsageStrictMockTest.differentMethods":99,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":438,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":236,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":387,"org.easymock.tests2.MockBuilderTest.testCreateMockString":374,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":202,"org.easymock.tests.UsageExpectAndThrowTest.floatType":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":340,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":335,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":323,"org.easymock.tests.UsageVerifyTest.twoThrows":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":314,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":349,"org.easymock.samples.ExampleTest.voteAgainstRemoval":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":221,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":432,"org.easymock.tests.LimitationsTest.privateConstructor":196,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":492,"org.easymock.tests2.UsageConstraintsTest.testNotNull":416,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":486,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":254,"org.easymock.tests2.UsageTest.defaultResetToNice":300,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":222,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":470,"org.easymock.tests.UsageVarargTest.differentLength":32,"org.easymock.tests2.CallbackTest.callback":291,"org.easymock.tests2.UsageConstraintsTest.equals":394,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":428,"org.easymock.tests.UsageTest.openCallCountByLastCall":47,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":390,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":112,"org.easymock.tests.UsageCallCountTest.tooFewCalls":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":130,"org.easymock.tests.UsageThrowableTest.throwCheckedException":251,"org.easymock.tests.MockingTest.testStrictClassMocking":63,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":109,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":382,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":475,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":124,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":381,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":325,"org.easymock.tests.ObjectMethodsTest.testHashCode":243,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":389,"org.easymock.tests2.NameTest.nameForNiceMock":318,"org.easymock.tests2.DependencyTest.testInterfaceMocking":289,"org.easymock.samples.ExampleTest.addDocument":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":351,"org.easymock.tests2.DelegateToTest.testStubDelegate":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.AnswerTest.stubAnswer":324,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":96,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":369,"org.easymock.tests.UsageVarargTest.varargLongAccepted":34,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":219,"org.easymock.tests.UsageExpectAndReturnTest.floatType":75,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":312,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":7,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":445,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":410,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":135,"org.easymock.tests.UsageThrowableTest.noUpperLimit":248,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":391,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":448,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":460,"org.easymock.tests2.SerializationTest.test":331,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":235,"org.easymock.tests2.UsageConstraintsTest.testSame":397,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":74,"org.easymock.samples.SupportTest.addDocument":8,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":1,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":380,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":341,"org.easymock.tests.GenericTest.testPackageScope":168,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":214,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":444,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":70,"org.easymock.tests2.NameTest.nameForMock":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":85,"org.easymock.tests2.UsageStrictMockTest.differentMethods":310,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":373,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":429,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":189,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":241,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":268,"org.easymock.tests2.MockedExceptionTest.testRealException":489,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":223,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":307,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":111,"org.easymock.tests2.NameTest.nameForStrictMock":317,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":363,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":269,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":452,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":411,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":237,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":360,"org.easymock.tests2.UsageStrictMockTest.range":309,"org.easymock.tests2.UsageConstraintsTest.lessThan":418,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":218,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":275,"org.easymock.tests2.CaptureTest.testCaptureRightOne":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":345,"org.easymock.tests2.UsageConstraintsTest.testOr":398,"org.easymock.tests.UsageRangeTest.combination":265,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":420,"org.easymock.tests.UsageTest.wrongArguments":46,"org.easymock.tests2.MockBuilderTest.testWithConstructor":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":342,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":211,"org.easymock.tests.UsageVarargTest.varargShortAccepted":33,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":239,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":164,"org.easymock.tests2.UsageConstraintsTest.cmpTo":403,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":213,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":299,"org.easymock.tests2.CaptureTest.testCaptureFromStub":466,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":116,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":361,"org.easymock.tests.UsageTest.unexpectedCallWithArray":45,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":95,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":162,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":87,"org.easymock.tests2.UsageConstraintsTest.constraints":392,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":97,"org.easymock.samples.ExampleTest.addAndChangeDocument":19,"org.easymock.tests.UsageStrictMockTest.testVerify":101,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":5,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":151,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":147,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":79,"org.easymock.tests.LimitationsTest.abstractClass":195,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":148,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":136,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":27,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":280}}]
