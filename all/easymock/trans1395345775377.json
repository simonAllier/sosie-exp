[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"candidateParameters","i":"i"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[4,5,6,7,8,9,10,11,12,12,13,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,0,65,66,67,68,69,1,70,71,72,73,74,75,76,77,78,79,80,2,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[85,93,267,273,279,283,285,325,395,437,443,449,453,455,456,467],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,11,12,12,13,13,14,15,16,17,18,19,20,23,24,29,31,32,33,34,35,36,37,38,39,40,41,42,48,55,56,57,58,60,61,62,63,64,0,66,67,68,69,1,70,71,72,73,74,75,76,77,78,79,80,2,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,110,113,114,115,116,119,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,142,146,147,148,150,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,178,185,186,187,188,189,190,191,192,193,194,198,201,211,217,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,243,244,245,246,247,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,299,300,301,302,303,304,305,323,329,333,334,335,337,341,342,343,344,345,346,361,363,365,366,367,368,369,370,371,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[480,456],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[88,89,90,91],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[190,481,334,335,337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[253,482,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[238,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[112,164],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:29","sourceCode":"new org.easymock.internal.matchers.Any()","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[66,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[71,106,161,378],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[97,320],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[66,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,11,14,15,16,17,18,19,20,23,24,29,31,33,34,35,36,37,38,48,55,56,57,58,60,61,62,63,64,0,66,67,68,69,1,70,71,72,73,74,75,76,77,78,79,80,2,81,82,83,84,85,86,87,88,89,90,91,93,94,95,98,99,100,102,103,104,105,106,107,110,115,119,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,146,148,150,156,157,158,159,160,161,162,163,165,166,168,171,178,185,186,187,188,189,190,191,192,193,194,198,201,211,217,226,227,228,230,231,233,239,240,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,290,292,299,300,301,302,334,335,337,344,345,346,361,365,366,367,368,370,371,395,396,398,399,400,401,402,403,404,405,406,408,409,411,412,413,414,415,416,417,418,419,420,423,424,425,426,427,428,429,430,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,473,475,476],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[238,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[190,481,334,335,337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":58,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":395,"org.easymock.tests2.UsageTest.argumentsOrdered":166,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":317,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":161,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":16,"org.easymock.tests2.DelegateToTest.testReturnException":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":287,"org.easymock.tests.MockingTest.testPartialClassMocking":334,"org.easymock.tests.MockClassControlTest.testToString":386,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":220,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":205,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":436,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":201,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":24,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":424,"org.easymock.tests2.UsageTest.wrongArguments":159,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":236,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":356,"org.easymock.tests2.UsageConstraintsTest.testNull":61,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":339,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":105,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":391,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":136,"org.easymock.tests2.CaptureTest.testPrimitive":84,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":428,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":455,"org.easymock.tests.UsageTest.moreThanOneArgument":396,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":245,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":465,"org.easymock.tests.UsageTest.argumentsOrdered":402,"org.easymock.tests.UsageVarargTest.varargIntAccepted":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":416,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":183,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":420,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":48,"org.easymock.tests.ReplayStateInvalidUsageTest.times":380,"org.easymock.tests2.DependencyTest.testClassMocking":21,"org.easymock.tests2.AnswerTest.answer":95,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":42,"org.easymock.tests2.CaptureTest.testAnd":81,"org.easymock.tests2.UsageTest.strictResetToDefault":157,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":131,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":294,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":469,"org.easymock.tests2.DelegateToTest.testDelegate":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":451,"org.easymock.tests.LimitationsTest.mockFinalMethod":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":290,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":435,"org.easymock.tests2.DependencyTest.testClassMockingSupport":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":304,"org.easymock.tests2.CaptureTest.testCapture1_2446744":85,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":109,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":449,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":40,"org.easymock.tests.UsageThrowableTest.throwError":457,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":374,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":355,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":219,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.MockingTest.testInterfaceMocking":336,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":417,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":437,"org.easymock.tests2.UsageTest.niceToStrict":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":206,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":146,"org.easymock.tests2.MockBuilderTest.testCreateMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":51,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":445,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":132,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":234,"org.easymock.tests.UsageOverloadedMethodTest.overloading":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":216,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":476,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":1,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":277,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":344,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":482,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":69,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":90,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":407,"org.easymock.tests.MockClassControlTest.testEquals":390,"org.easymock.tests2.EasyMockSupportClassTest.testAll":198,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":240,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":453,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":433,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":41,"org.easymock.tests2.CaptureTest.testCaptureAll":82,"org.easymock.tests.MockNameTest.defaultName":422,"org.easymock.tests2.UsageConstraintsTest.testMatches":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":246,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":372,"org.easymock.samples.ExampleTest.voteForRemovals":9,"org.easymock.tests.UsageVarargTest.allKinds":415,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":434,"org.easymock.samples.BasicClassMockTest.testPrintContent":20,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":463,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":180,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":291,"org.easymock.tests2.UsageConstraintsTest.greaterThan":72,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":293,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":116,"org.easymock.samples.ExampleTest.voteForRemoval":6,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":256,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":123,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":117,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":357,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":108,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":423,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":156,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":129,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":286,"org.easymock.tests2.CaptureTest.testCaptureFirst":94,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":130,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":273,"org.easymock.tests2.UsageTest.moreThanOneArgument":158,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":125,"org.easymock.tests2.CaptureTest.testCapture2_2446744":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":325,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":414,"org.easymock.tests.GenericTest.testBridgedEquals":242,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":370,"org.easymock.tests.UsageExpectAndReturnTest.longType":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":431,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":127,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":454,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":421,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":77,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":452,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":243,"org.easymock.tests.UsageCallCountTest.tooManyCalls":371,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":274,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":441,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":462,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":186,"org.easymock.tests.MockingTest.testNiceClassMocking":340,"org.easymock.tests.MockingTest.testClassMocking":332,"org.easymock.tests2.UsageConstraintsTest.testContains":68,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":364,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":171,"org.easymock.tests2.UsageConstraintsTest.testFind":60,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":346,"org.easymock.tests.MockTypeTest.fromEasyMockClass":354,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":31,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":257,"org.easymock.tests.UsageExpectAndReturnTest.object":276,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":52,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":135,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":409,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":350,"org.easymock.tests.UsageTest.exactCallCountByLastCall":403,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":466,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":296,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":120,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":404,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":282,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":475,"org.easymock.tests.MockClassControlTest.testHashCode":389,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":174,"org.easymock.tests2.EasyMockSupportTest.testVerify":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":208,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":467,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":473,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":39,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":101,"org.easymock.tests.UsageVarargTest.varargCharAccepted":408,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":248,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":330,"org.easymock.tests2.UsageTest.openCallCountByLastCall":162,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":138,"org.easymock.tests.DefaultClassInstantiatorTest.object":249,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":470,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":348,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":209,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":460,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":46,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":173,"org.easymock.tests2.ConstraintsToStringTest.anyToString":480,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":388,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":114,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":442,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":392,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":217,"org.easymock.tests2.UsageTest.resumeIfFailure":167,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":289,"org.easymock.tests2.StubTest.stubWithReturnValue":233,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":78,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":275,"org.easymock.tests2.SerializationTest.testAllMockedMethod":194,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":323,"org.easymock.samples.SupportTest.voteForRemovals":18,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":448,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":329,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":96,"org.easymock.tests.UsageExpectAndThrowTest.object":446,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":298,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":75,"org.easymock.tests2.DelegateToTest.testWrongClass":228,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":429,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":430,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests.UsageStrictMockTest.range":262,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":27,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":134,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":447,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":148,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":195,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":235,"org.easymock.tests2.CaptureTest.testCaptureNone":89,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":343,"org.easymock.tests.UsageUnorderedTest.message":456,"org.easymock.tests.UsageVerifyTest.twoReturns":301,"org.easymock.tests.UsageVarargTest.varargByteAccepted":413,"org.easymock.tests2.ThreadingTest.testThreadSafe":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":212,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":368,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":19,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":351,"org.easymock.tests2.CaptureTest.testCapture_2617107":83,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":306,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":327,"org.easymock.tests2.UsageConstraintsTest.any":66,"org.easymock.tests2.StubTest.stub":232,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":379,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":394,"org.easymock.tests.UsageExpectAndThrowTest.longType":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":328,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":253,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":378,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":35,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":178,"org.easymock.tests2.SerializationTest.testClass":192,"org.easymock.tests.LimitationsTest.mockNativeMethod":361,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":285,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":45,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":38,"org.easymock.tests2.NameTest.nameForMocksControl":224,"org.easymock.tests2.MockedExceptionTest.testMockedException":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":200,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":400,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":440,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":30,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":337,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":102,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":150,"org.easymock.tests.MockingTest.testNicePartialClassMocking":335,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":107,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":43,"org.easymock.tests2.CaptureTest.testCaptureLast":88,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":305,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":191,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":64,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":76,"org.easymock.tests.MockingTest.testTwoMocks":333,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":481,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":444,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":165,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":80,"org.easymock.samples.ExampleTest.removeNonExistingDocument":10,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":50,"org.easymock.tests.UsageStrictMockTest.differentMethods":263,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":175,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":251,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":124,"org.easymock.tests2.MockBuilderTest.testCreateMockString":155,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":384,"org.easymock.tests.UsageExpectAndThrowTest.floatType":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":202,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":197,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":98,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":121,"org.easymock.tests.UsageVerifyTest.twoThrows":300,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":211,"org.easymock.samples.ExampleTest.voteAgainstRemoval":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":318,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":341,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":115,"org.easymock.tests.LimitationsTest.privateConstructor":360,"org.easymock.tests2.UsageConstraintsTest.testNotNull":79,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":464,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":169,"org.easymock.tests2.UsageTest.defaultResetToNice":164,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":319,"org.easymock.tests.UsageVarargTest.differentLength":410,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":44,"org.easymock.tests2.CallbackTest.callback":231,"org.easymock.tests2.UsageConstraintsTest.equals":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":111,"org.easymock.tests.UsageTest.openCallCountByLastCall":399,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":426,"org.easymock.tests.UsageCallCountTest.tooFewCalls":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":188,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":237,"org.easymock.tests.UsageThrowableTest.throwCheckedException":461,"org.easymock.tests.MockingTest.testStrictClassMocking":331,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":303,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":49,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":381,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":189,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":100,"org.easymock.tests2.CompareToTest.testGreateOrEqual":3,"org.easymock.tests.ObjectMethodsTest.testHashCode":349,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":126,"org.easymock.tests2.NameTest.nameForNiceMock":223,"org.easymock.tests2.DependencyTest.testInterfaceMocking":23,"org.easymock.samples.ExampleTest.addDocument":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":218,"org.easymock.tests2.DelegateToTest.testStubDelegate":227,"org.easymock.tests2.AnswerTest.stubAnswer":99,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":260,"org.easymock.tests.UsageVarargTest.varargLongAccepted":412,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":316,"org.easymock.tests.UsageExpectAndReturnTest.floatType":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":119,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":477,"org.easymock.tests.UsageThrowableTest.noUpperLimit":458,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":182,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":73,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":25,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":86,"org.easymock.tests2.SerializationTest.test":193,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":483,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":250,"org.easymock.tests2.UsageConstraintsTest.testSame":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":267,"org.easymock.samples.SupportTest.addDocument":17,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":203,"org.easymock.tests.GenericTest.testPackageScope":239,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":181,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":338,"org.easymock.tests2.NameTest.nameForMock":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":278,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":154,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":112,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":450,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":347,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":295,"org.easymock.tests2.MockedExceptionTest.testRealException":172,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":320,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":425,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":383,"org.easymock.tests2.NameTest.nameForStrictMock":222,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":145,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":29,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":26,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":74,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":252,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":142,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":177,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":484,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":315,"org.easymock.tests2.CaptureTest.testCaptureRightOne":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":207,"org.easymock.tests2.UsageConstraintsTest.testOr":63,"org.easymock.tests.UsageRangeTest.combination":292,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":103,"org.easymock.tests.UsageTest.wrongArguments":398,"org.easymock.tests2.MockBuilderTest.testWithConstructor":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":204,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":385,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":308,"org.easymock.tests.UsageVarargTest.varargShortAccepted":411,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":254,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":369,"org.easymock.tests2.UsageConstraintsTest.cmpTo":67,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":310,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":163,"org.easymock.tests2.CaptureTest.testCaptureFromStub":92,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":373,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":143,"org.easymock.tests.UsageTest.unexpectedCallWithArray":397,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":259,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":280,"org.easymock.tests2.UsageConstraintsTest.constraints":57,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":261,"org.easymock.samples.ExampleTest.addAndChangeDocument":11,"org.easymock.tests.UsageStrictMockTest.testVerify":265,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":14,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":432,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":87,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":418,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":272,"org.easymock.tests.LimitationsTest.abstractClass":359,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":419,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":133}}]
