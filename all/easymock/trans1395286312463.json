[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","name":"name","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[14],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[15,16],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[36,37,38,39,5,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[72],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[73,74],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:124","failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,0,109,110,1,2,111,112,113,114,115,36,116,3,117,118,119,120,37,121,122,123,124,125,126,38,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,73,146,147,148,149,150,151,152,153,17,154,155,156,157,158,159,16,160,161,162,163,164,165,20,21,22,23,24,25,26,27,28,29,31,32,33,34,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,39,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,4,5,6,226,227,228,7,229,230,8,9,35,35,40,10,231,232,233,41,234,235,236,237,238,239,240,241,42,242,243,244,245,43,246,247,248,249,44,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,74,276,277,278,279,280,281,282,283,284,285,286,287,45,288,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[304,152],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[82,115,3,131,132,136,149,152,16,160,161,165,21,27,28,34,39,225,305,306,10,256,262,268,272,274,52,58,64,68,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[307],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[139,144,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[139],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[308],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[121],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[309,136,138,152,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,89,90,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,0,109,110,1,2,115,36,116,3,117,118,119,120,37,121,122,123,124,125,126,38,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,310,73,146,147,148,149,150,151,152,153,17,154,155,156,157,158,159,16,311,312,313,314,160,161,315,162,163,164,316,165,20,21,22,23,24,25,26,27,28,29,31,32,33,34,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,317,318,183,184,185,186,187,188,190,191,193,195,196,197,198,199,200,202,203,204,205,206,207,208,39,213,319,214,215,320,321,322,216,217,323,223,224,225,4,5,6,306,324,226,227,228,7,229,230,8,9,325,40,10,231,232,233,41,234,235,236,237,238,239,240,241,42,242,243,244,326,245,43,327,11,247,248,249,44,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,328,329,330,331,332,74,276,277,278,279,280,281,282,283,284,285,286,287,45,288,46,47,48,49,50,51,333,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,334,335,72,336,289,290,291,337,338,292,293,294,295,297,298,339,299,300,301,302,303,340,341,342,343,344],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[345,346,347,348,349,350,351],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[352],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[179,180,181],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[179,180,181,353],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[96,106,0,110,1,3,117,122,123,354,355,356,225,4,5,6,228,7,230,8,10,231,232,234,235,357,358,359,343,344],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[222,239,255,259,265,272,273,55,61,68,69,72,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[350],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[225,360],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[345,101,105,361,362,363,364,18,351,365,366],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[75,76,77,78,79,80,81,367,82,83,84,85,86,87,88,89,89,90,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,0,109,110,1,2,368,111,112,113,114,115,36,116,3,117,118,119,120,37,121,122,123,124,125,126,38,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,73,146,147,148,149,150,151,152,153,17,154,155,156,157,158,159,16,311,312,313,314,160,161,162,163,164,165,20,21,22,23,24,25,26,27,28,29,31,32,33,34,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,39,209,210,211,212,213,319,214,215,216,217,218,219,220,221,222,223,224,225,4,5,6,226,227,228,7,229,230,8,9,325,40,10,231,232,233,41,234,235,236,237,238,239,240,241,42,242,243,357,369,370,371,372,373,374,375,376,377,378,379,380,381,382,244,245,43,11,246,247,248,249,44,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,74,276,277,278,279,280,281,282,283,284,285,286,287,45,288,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,289,290,291,337,338,292,293,294,295,296,297,298,383,384,385,386,387,388,389,390,299,300,301,302,303,391],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[138,139,141,143,144,310,17,158,20,22,31],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[110,117,122,123,225,5,6,228,230,231,232,234,235,14],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[179,180,181],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":139,"org.easymock.tests2.UsageTest.argumentsOrdered":123,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":40,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":176,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":119,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":75,"org.easymock.tests2.DelegateToTest.testReturnException":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":239,"org.easymock.tests.MockingTest.testPartialClassMocking":289,"org.easymock.tests.MockClassControlTest.testToString":385,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":339,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":128,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":52,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":346,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":145,"org.easymock.tests2.UsageTest.wrongArguments":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":247,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":211,"org.easymock.samples.ExampleTest.answerVsDelegate":77,"org.easymock.tests2.UsageConstraintsTest.testNull":141,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":198,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":175,"org.easymock.tests2.CaptureTest.testPrimitive":23,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":250,"org.easymock.tests.UsageTest.moreThanOneArgument":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":71,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":301,"org.easymock.tests.UsageTest.argumentsOrdered":235,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":328,"org.easymock.tests.UsageVarargTest.varargIntAccepted":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":251,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":350,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":255,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":96,"org.easymock.tests.ReplayStateInvalidUsageTest.times":379,"org.easymock.tests2.AnswerTest.answer":182,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":310,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":114,"org.easymock.tests2.CaptureTest.testAnd":20,"org.easymock.tests2.UsageTest.strictResetToDefault":116,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":18,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":214,"org.easymock.tests2.DelegateToTest.testDelegate":165,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":332,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":343,"org.easymock.tests2.CaptureTest.testCapture1_2446744":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":65,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":112,"org.easymock.tests.UsageThrowableTest.throwError":45,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":303,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":308,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":362,"org.easymock.samples.PartialClassMockTest.testGetArea":88,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":374,"org.easymock.tests2.CompareToTest.testLessOrEqual":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":252,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":335,"org.easymock.tests2.UsageTest.niceToStrict":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":53,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":188,"org.easymock.tests2.MockBuilderTest.testCreateMock":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":61,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":171,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":322,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":209,"org.easymock.tests.UsageOverloadedMethodTest.overloading":208,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":149,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":43,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":267,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":148,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":29,"org.easymock.tests.MockClassControlTest.testEquals":389,"org.easymock.tests2.EasyMockSupportClassTest.testAll":127,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":217,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":69,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":113,"org.easymock.tests2.CaptureTest.testCaptureAll":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":220,"org.easymock.tests.MockNameTest.defaultName":359,"org.easymock.tests2.UsageConstraintsTest.testMatches":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":302,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":371,"org.easymock.samples.ExampleTest.voteForRemovals":81,"org.easymock.tests.UsageVarargTest.allKinds":287,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":4,"org.easymock.samples.BasicClassMockTest.testPrintContent":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":221,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":50,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":242,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":316,"org.easymock.tests2.UsageConstraintsTest.greaterThan":152,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":319,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":206,"org.easymock.samples.ExampleTest.voteForRemoval":78,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":201,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":36,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":168,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":238,"org.easymock.tests2.CaptureTest.testCaptureFirst":34,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":315,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":169,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":263,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":134,"org.easymock.tests2.CaptureTest.testCapture2_2446744":33,"org.easymock.tests2.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":193,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":297,"org.easymock.tests.UsageExpectAndReturnTest.longType":259,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":218,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":70,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":156,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":68,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":341,"org.easymock.tests.UsageCallCountTest.tooManyCalls":298,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":49,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":100,"org.easymock.tests2.UsageConstraintsTest.testContains":147,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":338,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":93,"org.easymock.tests2.UsageConstraintsTest.testFind":140,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":39,"org.easymock.tests.MockTypeTest.fromEasyMockClass":355,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":161,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":226,"org.easymock.tests.UsageExpectAndReturnTest.object":266,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":174,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":281,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":347,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":370,"org.easymock.tests.UsageTest.exactCallCountByLastCall":236,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":74,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":345,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":272,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":277,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":245,"org.easymock.tests.MockClassControlTest.testHashCode":388,"org.easymock.tests2.EasyMockSupportTest.testVerify":178,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":244,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":111,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":368,"org.easymock.tests.UsageVarargTest.varargCharAccepted":280,"org.easymock.tests2.CaptureTest.testCaptureMultiple":19,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":108,"org.easymock.tests2.UsageTest.openCallCountByLastCall":120,"org.easymock.tests.DefaultClassInstantiatorTest.object":391,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":177,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":320,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":357,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":14,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":59,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":47,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":387,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":58,"org.easymock.tests.CapturesMatcherTest.test":35,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":273,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":340,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":130,"org.easymock.tests2.UsageTest.resumeIfFailure":124,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":241,"org.easymock.tests2.StubTest.stubWithReturnValue":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":351,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":157,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":265,"org.easymock.tests2.SerializationTest.testAllMockedMethod":181,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":306,"org.easymock.samples.SupportTest.voteForRemovals":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":64,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":353,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":324,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":317,"org.easymock.tests.UsageExpectAndThrowTest.object":62,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":154,"org.easymock.tests2.DelegateToTest.testWrongClass":164,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":223,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":224,"org.easymock.samples.ConstructorCalledMockTest.testTax":89,"org.easymock.tests.UsageStrictMockTest.range":230,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":354,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":173,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":99,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":63,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":190,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":234,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":210,"org.easymock.tests2.CaptureTest.testCaptureNone":28,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":72,"org.easymock.tests.UsageUnorderedTest.message":225,"org.easymock.tests.UsageVerifyTest.twoReturns":6,"org.easymock.tests.UsageVarargTest.varargByteAccepted":285,"org.easymock.tests2.ThreadingTest.testThreadSafe":131,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":295,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":84,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":358,"org.easymock.tests2.CaptureTest.testCapture_2617107":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":44,"org.easymock.tests2.UsageConstraintsTest.any":73,"org.easymock.tests2.StubTest.stub":126,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":378,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.UsageExpectAndThrowTest.longType":55,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":240,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":377,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":109,"org.easymock.tests2.SerializationTest.testClass":179,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests.LimitationsTest.mockNativeMethod":237,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":275,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":323,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":2,"org.easymock.tests2.NameTest.nameForMocksControl":314,"org.easymock.tests2.MockedExceptionTest.testMockedException":92,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":56,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":291,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":191,"org.easymock.tests.MockingTest.testNicePartialClassMocking":290,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":200,"org.easymock.tests2.CaptureTest.testCaptureLast":27,"org.easymock.tests2.CompareToTest.testCompareEqual":352,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":344,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":144,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":105,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":155,"org.easymock.tests.MockingTest.testTwoMocks":336,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":361,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":60,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":122,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":159,"org.easymock.samples.ExampleTest.removeNonExistingDocument":367,"org.easymock.tests.UsageStrictMockTest.differentMethods":8,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":375,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":133,"org.easymock.tests2.MockBuilderTest.testCreateMockString":194,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":383,"org.easymock.tests.UsageExpectAndThrowTest.floatType":54,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":151,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":183,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":129,"org.easymock.samples.ExampleTest.voteAgainstRemoval":79,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":334,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":205,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":363,"org.easymock.tests2.UsageConstraintsTest.testNotNull":158,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":51,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":91,"org.easymock.tests2.UsageTest.defaultResetToNice":121,"org.easymock.samples.ExampleTest.voteAgainstRemovals":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":305,"org.easymock.tests.UsageVarargTest.differentLength":282,"org.easymock.tests2.CallbackTest.callback":115,"org.easymock.tests.UsageTest.openCallCountByLastCall":233,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":249,"org.easymock.tests.UsageCallCountTest.tooFewCalls":293,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":102,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":212,"org.easymock.tests.UsageThrowableTest.throwCheckedException":48,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":104,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":276,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":101,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":380,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":103,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":185,"org.easymock.tests.ObjectMethodsTest.testHashCode":369,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":349,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":135,"org.easymock.tests2.NameTest.nameForNiceMock":313,"org.easymock.tests2.DependencyTest.testInterfaceMocking":97,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":348,"org.easymock.samples.ExampleTest.addDocument":80,"org.easymock.tests2.DelegateToTest.testStubDelegate":163,"org.easymock.tests2.AnswerTest.stubAnswer":184,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":7,"org.easymock.tests.UsageVarargTest.varargLongAccepted":284,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":9,"org.easymock.tests.UsageExpectAndReturnTest.floatType":258,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":274,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":95,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":90,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":153,"org.easymock.tests.UsageThrowableTest.noUpperLimit":288,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":137,"org.easymock.tests2.SerializationTest.test":180,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":25,"org.easymock.tests2.UsageConstraintsTest.testSame":142,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":257,"org.easymock.samples.SupportTest.addDocument":86,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":376,"org.easymock.tests.GenericTest.testPackageScope":216,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":331,"org.easymock.tests2.NameTest.nameForMock":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":268,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":366,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":260,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":66,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":215,"org.easymock.tests2.MockedExceptionTest.testRealException":94,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":356,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":248,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":382,"org.easymock.tests2.NameTest.nameForStrictMock":312,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":160,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":199,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":17,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":360,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":187,"org.easymock.tests2.UsageStrictMockTest.range":110,"org.easymock.tests2.UsageConstraintsTest.lessThan":16,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":167,"org.easymock.tests2.CaptureTest.testCaptureRightOne":31,"org.easymock.tests2.UsageConstraintsTest.testOr":143,"org.easymock.tests.UsageRangeTest.combination":213,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":196,"org.easymock.tests.UsageTest.wrongArguments":232,"org.easymock.tests2.MockBuilderTest.testWithConstructor":364,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":269,"org.easymock.tests.UsageVarargTest.varargShortAccepted":283,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":296,"org.easymock.tests2.UsageConstraintsTest.cmpTo":146,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":318,"org.easymock.tests2.CompareToTest.testLessThan":15,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":37,"org.easymock.tests2.CaptureTest.testCaptureFromStub":32,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":372,"org.easymock.tests.UsageTest.unexpectedCallWithArray":231,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":228,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":294,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":365,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":270,"org.easymock.tests2.CaptureTest.testCapture":30,"org.easymock.tests2.UsageConstraintsTest.constraints":138,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":229,"org.easymock.samples.ExampleTest.addAndChangeDocument":82,"org.easymock.tests.UsageStrictMockTest.testVerify":325,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":83,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":219,"org.easymock.tests2.CompareToTest.testGreateThan":304,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":253,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":262,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":172,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":278}}]
