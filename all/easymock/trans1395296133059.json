[{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,1],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[2,3,4,5,6,7],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:206","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[8,9],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[10,8,9],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,11,12,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[184,185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:280","failures":[186,187,31,188,189,190],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[191,192,11,33,193,62,66,194,195,196,197,70,198,199,71,200,201,202,203,204,205,206,207,208,72,209,210,211,212,213,73,214,215,216,217,218,219,220,221,222,223],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[224,225,226,99,227,228,6,229,230,231,7,169,232,177,233],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[71,234,235,236],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[15,237,16,186,17,18,238,19,239,240,241,20,242,243,244,21,22,245,23,24,246,247,25,26,27,28,248,29,30,12,13,249,187,31,188,250,189,251,32,34,35,36,37,252,38,39,40,41,42,43,253,44,45,46,47,48,49,50,51,52,53,54,55,254,56,57,58,59,255,256,257,258,60,61,63,64,194,67,259,260,261,68,262,263,264,265,266,267,69,268,269,270,271,272,273,195,196,70,199,71,200,201,204,207,72,209,210,211,212,213,73,74,75,76,224,77,274,78,79,80,225,226,81,82,275,83,84,85,86,87,88,234,276,89,277,278,90,91,92,279,280,93,94,95,96,97,281,282,98,283,99,100,284,285,286,101,102,103,104,105,106,107,108,109,110,111,112,113,114,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,115,303,304,305,306,307,308,235,309,116,310,311,117,312,313,118,236,119,120,314,121,315,316,317,318,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,319,143,144,145,146,147,148,227,320,321,322,323,324,325,326,10,8,327,328,329,9,330,331,332,333,149,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,150,151,6,229,152,153,230,231,154,390,391,392,393,394,395,396,397,398,399,400,401,158,159,160,161,402,403,404,405,162,163,164,165,166,406,407,408,409,410,411,167,412,413,414,7,168,415,169,170,416,417,0,171,418,172,1,419,173,174,175,420,421,422,423,424,425,426,427,428,429,430,431,432,433,176,232,177,434,435,190,436,437,178,233,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,179,180,459,460,181,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,182,183,481,482,483,484,485,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[193,489,490,491,492,493,494,495,220,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[44,167],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[15,237,16,186,17,18,238,19,239,240,241,20,242,243,244,191,191,192,192,21,22,245,23,24,246,247,25,26,27,28,248,29,30,11,12,13,249,187,31,188,250,189,251,32,33,193,497,34,35,36,37,252,38,39,40,41,42,43,253,44,45,46,47,48,49,50,51,52,53,54,55,254,56,57,58,59,255,256,257,258,60,61,62,63,64,65,66,67,259,260,261,68,262,263,264,265,266,267,69,268,269,270,271,272,273,195,196,197,70,198,199,71,200,201,202,203,204,205,206,207,208,72,209,210,211,212,213,73,214,215,74,75,76,224,77,274,78,79,80,225,226,81,82,275,83,84,85,86,87,88,234,276,89,498,277,278,90,91,92,279,280,93,94,95,96,97,281,282,98,283,99,100,284,285,286,101,102,103,104,105,106,107,108,109,110,111,112,113,114,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,115,303,304,305,306,307,308,235,309,116,310,311,218,117,312,219,313,118,236,119,220,120,221,314,121,223,315,316,317,318,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,319,143,144,145,146,147,148,227,320,321,322,323,324,325,326,10,8,327,328,329,9,330,331,332,333,149,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,150,151,6,229,152,153,230,231,154,390,391,392,393,394,395,396,397,155,156,398,157,399,400,401,158,159,160,161,402,403,404,405,162,163,164,165,166,406,407,408,409,410,411,167,412,413,414,7,168,415,169,170,416,417,0,171,418,172,1,419,173,174,175,420,421,422,423,424,425,426,427,428,429,430,431,432,433,176,232,177,434,435,190,436,437,178,233,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,179,180,459,460,181,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,182,183,481,482,483,484,485,486,487,488],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[252,225,230],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[11,12,14],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[171,172,1],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[499],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[500,501,499],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"position":"org.easymock.internal.MocksControl:189","failures":[36,74,224,274,225,226,82,281,283,99,100,121,315,227,150,6,229,230,231,154,413,7,415,169,170,232,177],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,1],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[15,237,16,186,17,18,238,19,239,240,241,20,242,243,244,191,192,21,22,245,23,24,246,247,25,26,27,28,248,29,30,11,12,13,249,187,31,188,250,189,251,32,33,193,497,34,35,36,37,252,38,39,40,41,42,43,253,44,45,46,47,48,49,50,51,52,53,54,55,254,56,57,58,59,255,502,503,504,256,257,258,60,61,62,63,505,64,65,66,194,67,259,260,261,68,262,263,264,265,266,267,69,268,269,270,271,272,273,195,196,197,70,198,199,71,200,201,202,203,204,205,206,207,208,72,209,210,211,212,213,73,214,215,74,75,76,224,77,274,78,79,80,225,226,81,82,275,83,84,85,86,87,88,234,276,89,498,277,278,90,91,92,279,280,93,94,95,96,97,281,282,98,283,99,100,284,285,286,101,102,103,104,105,106,107,108,109,110,111,112,113,114,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,115,303,304,305,306,307,308,235,309,116,310,311,218,117,312,219,313,118,236,119,220,120,506,221,314,121,223,315,316,317,318,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,319,143,144,145,146,147,148,227,320,507,508,321,322,323,324,325,326,10,8,327,328,329,9,330,331,332,333,149,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,150,151,6,229,152,153,230,231,154,390,391,392,393,394,395,396,397,155,156,398,157,399,400,401,158,159,160,161,402,403,404,405,162,163,164,165,166,406,407,408,509,409,410,411,167,412,413,414,7,168,415,169,170,416,417,0,171,418,172,1,419,173,174,175,420,421,422,423,424,425,426,427,428,429,430,431,432,433,176,232,177,434,435,190,436,437,178,233,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,179,180,459,460,181,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,182,183,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[252,225,230],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[119,323],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[21,245,28,36,37,41,42,253,53],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[510],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":37,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":150,"org.easymock.tests2.UsageTest.argumentsOrdered":226,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":376,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":274,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":237,"org.easymock.tests2.DelegateToTest.testReturnException":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":348,"org.easymock.tests.MockingTest.testPartialClassMocking":155,"org.easymock.tests.MockClassControlTest.testToString":355,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":288,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":461,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":71,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":179,"org.easymock.tests2.UsageTest.wrongArguments":224,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":404,"org.easymock.samples.ExampleTest.answerVsDelegate":186,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":323,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":400,"org.easymock.tests2.UsageConstraintsTest.testNull":39,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":86,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":112,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":360,"org.easymock.tests2.CaptureTest.testPrimitive":23,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":480,"org.easymock.tests.UsageTest.moreThanOneArgument":151,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":363,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":420,"org.easymock.tests.UsageTest.argumentsOrdered":231,"org.easymock.tests.UsageVarargTest.varargIntAccepted":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":494,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":311,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":503,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":307,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":166,"org.easymock.tests.ReplayStateInvalidUsageTest.times":455,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":69,"org.easymock.tests2.DependencyTest.testClassMocking":285,"org.easymock.tests2.AnswerTest.answer":67,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":383,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":297,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":508,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests2.UsageTest.strictResetToDefault":75,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":362,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":107,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":424,"org.easymock.tests2.DelegateToTest.testDelegate":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":476,"org.easymock.tests.LimitationsTest.mockFinalMethod":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":351,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":394,"org.easymock.tests2.DependencyTest.testClassMockingSupport":286,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":444,"org.easymock.tests2.CaptureTest.testCapture1_2446744":24,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":276,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":474,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":295,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":449,"org.easymock.tests.UsageThrowableTest.throwError":142,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":322,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":509,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":365,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":510,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":215,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":450,"org.easymock.tests.MockingTest.testInterfaceMocking":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":163,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":439,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":487,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":462,"org.easymock.tests2.UsageTest.niceToStrict":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":204,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":366,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":118,"org.easymock.tests2.MockBuilderTest.testCreateMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":211,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":470,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":2,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":108,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":507,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":443,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":425,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":402,"org.easymock.tests.UsageOverloadedMethodTest.overloading":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":213,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":436,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":48,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":133,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":47,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":27,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":338,"org.easymock.tests2.EasyMockSupportClassTest.testAll":70,"org.easymock.tests.MockClassControlTest.testEquals":359,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":418,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":392,"org.easymock.tests2.CaptureTest.testCaptureAll":22,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":296,"org.easymock.tests.MockNameTest.defaultName":488,"org.easymock.tests2.UsageConstraintsTest.testMatches":49,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":364,"org.easymock.samples.ExampleTest.voteForRemovals":19,"org.easymock.tests.UsageVarargTest.allKinds":346,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":393,"org.easymock.samples.BasicClassMockTest.testPrintContent":243,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":147,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":281,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":250,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":352,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":495,"org.easymock.tests2.UsageConstraintsTest.greaterThan":51,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":159,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.samples.ExampleTest.voteForRemoval":17,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":331,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":94,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":279,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":324,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":504,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":234,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":419,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":105,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":347,"org.easymock.tests2.CaptureTest.testCaptureFirst":30,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":106,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":82,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":233,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":129,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":96,"org.easymock.tests2.CaptureTest.testCapture2_2446744":29,"org.easymock.tests2.UsageTest.moreThanOneArgument":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":384,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":121,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":345,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":432,"org.easymock.tests.UsageExpectAndReturnTest.longType":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":390,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":103,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":479,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":185,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":481,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":254,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":477,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":361,"org.easymock.tests.UsageCallCountTest.tooManyCalls":433,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":272,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":466,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":146,"org.easymock.tests.MockingTest.testNiceClassMocking":401,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":61,"org.easymock.tests.MockingTest.testClassMocking":396,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":426,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":184,"org.easymock.tests2.UsageConstraintsTest.testContains":46,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":116,"org.easymock.tests2.UsageConstraintsTest.testFind":38,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":175,"org.easymock.tests.MockTypeTest.fromEasyMockClass":321,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":413,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":318,"org.easymock.tests.UsageExpectAndReturnTest.object":132,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":89,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":271,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":490,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":340,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":485,"org.easymock.tests.UsageTest.exactCallCountByLastCall":154,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":421,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":409,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":193,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":138,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":335,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":190,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":299,"org.easymock.tests.MockClassControlTest.testHashCode":358,"org.easymock.tests2.EasyMockSupportTest.testVerify":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":206,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":422,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":442,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":434,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":294,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":275,"org.easymock.tests.UsageVarargTest.varargCharAccepted":339,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":326,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":389,"org.easymock.tests2.UsageTest.openCallCountByLastCall":78,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":500,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":114,"org.easymock.tests.DefaultClassInstantiatorTest.object":10,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":441,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":483,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":228,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":207,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":266,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":298,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":90,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":357,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":467,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":73,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":356,"org.easymock.tests2.UsageTest.resumeIfFailure":81,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":320,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":502,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":350,"org.easymock.tests2.StubTest.stubWithReturnValue":32,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":220,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":131,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":56,"org.easymock.tests2.SerializationTest.testAllMockedMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":382,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":3,"org.easymock.samples.SupportTest.voteForRemovals":20,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":473,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":388,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":259,"org.easymock.tests.UsageExpectAndThrowTest.object":471,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":411,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":54,"org.easymock.tests2.DelegateToTest.testWrongClass":188,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":182,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":183,"org.easymock.samples.ConstructorCalledMockTest.testTax":191,"org.easymock.tests.UsageStrictMockTest.range":169,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":257,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":472,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":119,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":195,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":403,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":440,"org.easymock.tests2.CaptureTest.testCaptureNone":26,"org.easymock.tests.UsageUnorderedTest.message":227,"org.easymock.tests.UsageVerifyTest.twoReturns":177,"org.easymock.tests.UsageVarargTest.varargByteAccepted":344,"org.easymock.tests2.ThreadingTest.testThreadSafe":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":209,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":430,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":486,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":242,"org.easymock.tests2.CaptureTest.testCapture_2617107":245,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":446,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":386,"org.easymock.tests2.UsageConstraintsTest.any":44,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":454,"org.easymock.tests2.StubTest.stub":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":408,"org.easymock.tests.UsageExpectAndThrowTest.longType":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":329,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":453,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":283,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests.LimitationsTest.mockNativeMethod":149,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":141,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":265,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":284,"org.easymock.tests2.NameTest.nameForMocksControl":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":267,"org.easymock.tests2.MockedExceptionTest.testMockedException":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":199,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":153,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":465,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":157,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":317,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":83,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":120,"org.easymock.tests.MockingTest.testNicePartialClassMocking":156,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":88,"org.easymock.tests2.CaptureTest.testCaptureLast":25,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":263,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":445,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":42,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":66,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":55,"org.easymock.tests.MockingTest.testTwoMocks":397,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":194,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":469,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":225,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":58,"org.easymock.samples.ExampleTest.removeNonExistingDocument":239,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":451,"org.easymock.tests.UsageStrictMockTest.differentMethods":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":269,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":300,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":327,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":95,"org.easymock.tests2.MockBuilderTest.testCreateMockString":315,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":353,"org.easymock.tests.UsageExpectAndThrowTest.floatType":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":200,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":197,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":497,"org.easymock.tests.UsageVerifyTest.twoThrows":232,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":72,"org.easymock.samples.ExampleTest.voteAgainstRemoval":18,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":377,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests.LimitationsTest.privateConstructor":333,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":217,"org.easymock.tests2.UsageConstraintsTest.testNotNull":57,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":148,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":235,"org.easymock.tests2.UsageTest.defaultResetToNice":80,"org.easymock.samples.ExampleTest.voteAgainstRemovals":16,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":264,"org.easymock.tests.UsageVarargTest.differentLength":341,"org.easymock.tests2.CallbackTest.callback":293,"org.easymock.tests2.UsageConstraintsTest.equals":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":498,"org.easymock.tests.UsageTest.openCallCountByLastCall":152,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":459,"org.easymock.tests.UsageCallCountTest.tooFewCalls":428,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":405,"org.easymock.tests.UsageThrowableTest.throwCheckedException":145,"org.easymock.tests.MockingTest.testStrictClassMocking":395,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":412,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":268,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":456,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":64,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":262,"org.easymock.tests.ObjectMethodsTest.testHashCode":484,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":493,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":97,"org.easymock.tests2.NameTest.nameForNiceMock":291,"org.easymock.tests2.DependencyTest.testInterfaceMocking":101,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":491,"org.easymock.samples.ExampleTest.addDocument":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":210,"org.easymock.tests2.DelegateToTest.testStubDelegate":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":214,"org.easymock.tests2.AnswerTest.stubAnswer":68,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":168,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":506,"org.easymock.tests.UsageVarargTest.varargLongAccepted":343,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":375,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":140,"org.easymock.tests.UsageExpectAndReturnTest.floatType":124,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":33,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":192,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":437,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":52,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":306,"org.easymock.tests.UsageThrowableTest.noUpperLimit":319,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":35,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":255,"org.easymock.tests2.SerializationTest.test":12,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":246,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":123,"org.easymock.tests2.UsageConstraintsTest.testSame":40,"org.easymock.samples.SupportTest.addDocument":241,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":505,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":201,"org.easymock.tests.GenericTest.testPackageScope":171,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":305,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":399,"org.easymock.tests2.NameTest.nameForMock":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":134,"org.easymock.tests2.UsageStrictMockTest.differentMethods":100,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":223,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":277,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":126,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":475,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":482,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":161,"org.easymock.tests2.MockedExceptionTest.testRealException":310,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":325,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":496,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":379,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":458,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":180,"org.easymock.tests2.NameTest.nameForStrictMock":290,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":313,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":501,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":316,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":256,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":53,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":328,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":117,"org.easymock.tests2.UsageStrictMockTest.range":99,"org.easymock.tests2.UsageConstraintsTest.lessThan":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":302,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":492,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":374,"org.easymock.tests2.CaptureTest.testCaptureRightOne":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":205,"org.easymock.tests2.UsageConstraintsTest.testOr":41,"org.easymock.tests.UsageRangeTest.combination":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":84,"org.easymock.tests.UsageTest.wrongArguments":229,"org.easymock.tests2.MockBuilderTest.testWithConstructor":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":202,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":354,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":367,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":9,"org.easymock.tests.UsageVarargTest.varargShortAccepted":342,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":431,"org.easymock.tests2.UsageConstraintsTest.cmpTo":45,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":369,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":79,"org.easymock.tests2.CaptureTest.testCaptureFromStub":248,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":448,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":312,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":429,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":136,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":415,"org.easymock.tests2.UsageConstraintsTest.constraints":36,"org.easymock.samples.ExampleTest.addAndChangeDocument":240,"org.easymock.tests.UsageStrictMockTest.testVerify":417,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":244,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":414,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":391,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":128,"org.easymock.tests.LimitationsTest.abstractClass":332,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":109,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":336}}]
