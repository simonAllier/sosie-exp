[{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[25,26,27,28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[29,30],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,25,26,27,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,23,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,0,1,162,163,164,165,166,2,3,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,4,194,5,6,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,7,8,9,10,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,29,294,295,296,30,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,12,359,13,360,361,14,15,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,16,17,402,18,19,403,404,405,406,407,408,409,410,411,412,413,414,415,416,24,417,418,419,420,421,422,423,424,425,426,20,21,22,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[446],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[31,43,44,46,46,47,47,25,27,70,109,110,111,112,115,116,139,142,151,157,170,171,173,174,175,176,178,181,182,183,184,233,235,237,241,242,243,245,248,249,251,301,322,370,371,372,374,406,407,408,410],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[29,30],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[490],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[177],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[31,241,243,245,491],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[111,171,181,184],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[73,92,95,492],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[83,89,101,493],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,25,26,27,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,23,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,0,1,162,163,164,165,166,2,3,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,4,194,5,6,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,7,8,9,10,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,29,294,295,296,30,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,12,359,13,360,361,14,15,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,16,17,402,18,19,403,404,405,406,407,408,409,410,411,412,413,414,415,416,24,417,418,419,420,421,422,423,424,425,426,20,21,22,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[71,494,495,496,497,498,244],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[25,26,27,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[94],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[31,33,35,36,38,42,64,70,109,110,111,112,114,115,116,139,142,151,157,170,171,172,173,174,175,178,182,183,184,190,4,5,6,198,199,237,241,243,245,249,255,256,257,258,259,260,263,264,266,267,268,270,271,272,273,274,301,329,330,331,332,371,372,374,378,379,380,381,386,387,388,389,390,396,17,18,19,406,408,411,435,436,455,480,481,482],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[84],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[46,47,25,70,71,111,116,117,136,137,138,139,140,141,142,143,144,145,23,146,147,148,149,150,151,152,153,154,155,156,157,158,159,499,500,236,239,244,247,501,250],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[83,89,101,493],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[502,503,504,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[405],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[440],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[25,26,27,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[71,494,495,496,497,498,244],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[25,26,27,28],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[101,506],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[48,50,58,75,76,79,81,82,84,94,99],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[73,75,92,98,507],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[48,50,58,75,82],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,508,509,510,511,512,513,514,12,359,13,14,15,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[506,492,515,493,507],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":76,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":358,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":210,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":344,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":163,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":32,"org.easymock.tests2.DelegateToTest.testReturnException":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":316,"org.easymock.tests.MockingTest.testPartialClassMocking":371,"org.easymock.tests.MockClassControlTest.testToString":323,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":213,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":396,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":460,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":142,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":11,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":199,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":494,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":455,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":384,"org.easymock.samples.ExampleTest.answerVsDelegate":34,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":289,"org.easymock.tests2.UsageConstraintsTest.testNull":79,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":376,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":173,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":209,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":328,"org.easymock.tests2.CaptureTest.testPrimitive":51,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":459,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":479,"org.easymock.tests.UsageTest.moreThanOneArgument":12,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":331,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":414,"org.easymock.tests.UsageTest.argumentsOrdered":15,"org.easymock.tests.UsageVarargTest.varargIntAccepted":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":386,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":235,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":229,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":390,"org.easymock.tests.ReplayStateInvalidUsageTest.times":451,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests2.DependencyTest.testClassMocking":196,"org.easymock.tests2.AnswerTest.answer":118,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":218,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":286,"org.easymock.tests2.UsageTest.strictResetToDefault":161,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":204,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":380,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":417,"org.easymock.tests2.DelegateToTest.testDelegate":67,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":475,"org.easymock.tests.LimitationsTest.mockFinalMethod":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":319,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":367,"org.easymock.tests2.DependencyTest.testClassMockingSupport":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":440,"org.easymock.tests2.CaptureTest.testCapture1_2446744":52,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":177,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":473,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":216,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":445,"org.easymock.tests.UsageThrowableTest.throwError":275,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":288,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":394,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":333,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":159,"org.easymock.samples.PartialClassMockTest.testGetArea":31,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":446,"org.easymock.tests.MockingTest.testInterfaceMocking":373,"org.easymock.tests2.CompareToTest.testLessOrEqual":507,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":387,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":435,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":488,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":461,"org.easymock.tests2.UsageTest.niceToStrict":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":241,"org.easymock.tests2.MockBuilderTest.testCreateMock":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":154,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":132,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":508,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":469,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":205,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":285,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":439,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":418,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":382,"org.easymock.tests.UsageOverloadedMethodTest.overloading":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":150,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":430,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":89,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":411,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":266,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":88,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":57,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":306,"org.easymock.tests2.EasyMockSupportClassTest.testAll":139,"org.easymock.tests.MockClassControlTest.testEquals":327,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":407,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":509,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":477,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":365,"org.easymock.tests.MockNameTest.defaultName":489,"org.easymock.tests2.UsageConstraintsTest.testMatches":90,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":332,"org.easymock.samples.ExampleTest.voteForRemovals":38,"org.easymock.tests.UsageVarargTest.allKinds":314,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":20,"org.easymock.samples.BasicClassMockTest.testPrintContent":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":366,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":281,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":192,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":66,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":320,"org.easymock.tests2.UsageConstraintsTest.greaterThan":92,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":140,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":379,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":184,"org.easymock.samples.ExampleTest.voteForRemoval":35,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":298,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":188,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":185,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":290,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":105,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":176,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":410,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":160,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":202,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":315,"org.easymock.tests2.CaptureTest.testCaptureFirst":61,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":203,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":433,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":262,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":190,"org.easymock.tests2.UsageTest.moreThanOneArgument":0,"org.easymock.tests2.CaptureTest.testCapture2_2446744":60,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":352,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":313,"org.easymock.tests.GenericTest.testBridgedEquals":409,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":425,"org.easymock.tests.UsageExpectAndReturnTest.longType":258,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":363,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":491,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":478,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":482,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":97,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":476,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":392,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":329,"org.easymock.tests.UsageCallCountTest.tooManyCalls":426,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":155,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":134,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":465,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":280,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":110,"org.easymock.tests.MockingTest.testNiceClassMocking":377,"org.easymock.tests.MockingTest.testClassMocking":369,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":419,"org.easymock.tests2.UsageConstraintsTest.testContains":87,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":233,"org.easymock.tests2.UsageConstraintsTest.testFind":78,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":413,"org.easymock.tests.MockTypeTest.fromEasyMockClass":287,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":400,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":254,"org.easymock.tests.UsageExpectAndReturnTest.object":265,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":208,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":495,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":308,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":486,"org.easymock.tests.UsageTest.exactCallCountByLastCall":362,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":415,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":395,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":514,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":71,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":271,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":303,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":429,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":220,"org.easymock.tests.MockClassControlTest.testHashCode":326,"org.easymock.tests2.EasyMockSupportTest.testVerify":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":148,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":416,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":438,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":215,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":169,"org.easymock.tests.UsageVarargTest.varargCharAccepted":307,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":292,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":357,"org.easymock.tests2.UsageTest.openCallCountByLastCall":164,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":211,"org.easymock.tests.DefaultClassInstantiatorTest.object":293,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":437,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":484,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":127,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":219,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":182,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":466,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":157,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":324,"org.easymock.tests2.UsageTest.resumeIfFailure":167,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":284,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":318,"org.easymock.tests2.StubTest.stubWithReturnValue":69,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":244,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":264,"org.easymock.tests2.SerializationTest.testAllMockedMethod":27,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":350,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":510,"org.easymock.samples.SupportTest.voteForRemovals":42,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":222,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":472,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":28,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":356,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":119,"org.easymock.tests.UsageExpectAndThrowTest.object":470,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":397,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":95,"org.easymock.tests2.DelegateToTest.testWrongClass":65,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":480,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":481,"org.easymock.samples.ConstructorCalledMockTest.testTax":46,"org.easymock.tests.UsageStrictMockTest.range":18,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":107,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":109,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":471,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":243,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":136,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":383,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":512,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":436,"org.easymock.tests2.CaptureTest.testCaptureNone":56,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":503,"org.easymock.tests.UsageUnorderedTest.message":283,"org.easymock.tests.UsageVerifyTest.twoReturns":22,"org.easymock.tests.UsageVarargTest.varargByteAccepted":312,"org.easymock.tests2.ThreadingTest.testThreadSafe":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":152,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":423,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":487,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":43,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":511,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":354,"org.easymock.tests2.UsageConstraintsTest.any":85,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":450,"org.easymock.tests2.StubTest.stub":68,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":393,"org.easymock.tests.UsageExpectAndThrowTest.longType":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":355,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":296,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":449,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":194,"org.easymock.tests2.SerializationTest.testClass":25,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":224,"org.easymock.tests.LimitationsTest.mockNativeMethod":301,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":408,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":274,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":126,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":195,"org.easymock.tests2.NameTest.nameForMocksControl":10,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":128,"org.easymock.tests2.MockedExceptionTest.testMockedException":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":141,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":361,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":464,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":253,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":374,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":170,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":245,"org.easymock.tests.MockingTest.testNicePartialClassMocking":372,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":175,"org.easymock.tests2.CompareToTest.testCompareEqual":515,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":124,"org.easymock.tests2.CaptureTest.testCaptureLast":55,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":441,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":116,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":82,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":96,"org.easymock.tests.MockingTest.testTwoMocks":370,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":468,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":100,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":505,"org.easymock.samples.ExampleTest.removeNonExistingDocument":39,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":131,"org.easymock.tests.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":221,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":294,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":189,"org.easymock.tests2.MockBuilderTest.testCreateMockString":251,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":321,"org.easymock.tests.UsageExpectAndThrowTest.floatType":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":143,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":138,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":121,"org.easymock.tests.UsageVerifyTest.twoThrows":21,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":72,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":151,"org.easymock.samples.ExampleTest.voteAgainstRemoval":36,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":345,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":183,"org.easymock.tests.LimitationsTest.privateConstructor":300,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":500,"org.easymock.tests2.UsageConstraintsTest.testNotNull":99,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":231,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":282,"org.easymock.tests2.UsageTest.defaultResetToNice":166,"org.easymock.samples.ExampleTest.voteAgainstRemovals":33,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":346,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":125,"org.easymock.tests.UsageVarargTest.differentLength":309,"org.easymock.tests2.CallbackTest.callback":214,"org.easymock.tests2.UsageConstraintsTest.equals":77,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":179,"org.easymock.tests.UsageTest.openCallCountByLastCall":360,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":457,"org.easymock.tests.UsageCallCountTest.tooFewCalls":421,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":112,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":385,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":504,"org.easymock.tests.UsageThrowableTest.throwCheckedException":279,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":513,"org.easymock.tests.MockingTest.testStrictClassMocking":368,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":399,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":130,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":111,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":452,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":114,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":123,"org.easymock.tests2.CompareToTest.testGreateOrEqual":493,"org.easymock.tests.ObjectMethodsTest.testHashCode":485,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":497,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":191,"org.easymock.tests2.NameTest.nameForNiceMock":9,"org.easymock.tests2.DependencyTest.testInterfaceMocking":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":496,"org.easymock.samples.ExampleTest.addDocument":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":158,"org.easymock.tests2.DelegateToTest.testStubDelegate":64,"org.easymock.tests2.AnswerTest.stubAnswer":122,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":17,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":246,"org.easymock.tests.UsageVarargTest.varargLongAccepted":311,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":343,"org.easymock.tests.UsageExpectAndReturnTest.floatType":257,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":273,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":70,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":47,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":228,"org.easymock.tests.UsageThrowableTest.noUpperLimit":276,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":102,"org.easymock.tests2.SerializationTest.test":26,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":53,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":29,"org.easymock.tests2.UsageConstraintsTest.testSame":80,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":256,"org.easymock.samples.SupportTest.addDocument":41,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":113,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":144,"org.easymock.tests.GenericTest.testPackageScope":406,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":227,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":375,"org.easymock.tests2.NameTest.nameForMock":7,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":267,"org.easymock.tests2.UsageStrictMockTest.differentMethods":6,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":250,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":180,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":259,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":474,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":483,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":381,"org.easymock.tests2.MockedExceptionTest.testRealException":234,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":291,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":456,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":454,"org.easymock.tests2.NameTest.nameForStrictMock":8,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":240,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":174,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":106,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":94,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":295,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":237,"org.easymock.tests2.UsageStrictMockTest.range":5,"org.easymock.tests2.UsageConstraintsTest.lessThan":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":223,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":490,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":147,"org.easymock.tests2.CaptureTest.testCaptureRightOne":58,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":502,"org.easymock.tests2.UsageConstraintsTest.testOr":81,"org.easymock.tests.UsageRangeTest.combination":378,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":171,"org.easymock.tests.UsageTest.wrongArguments":13,"org.easymock.tests2.MockBuilderTest.testWithConstructor":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":145,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":335,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":30,"org.easymock.tests.UsageVarargTest.varargShortAccepted":310,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":424,"org.easymock.tests2.UsageConstraintsTest.cmpTo":86,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":120,"org.easymock.tests2.CompareToTest.testLessThan":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":337,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":165,"org.easymock.tests2.CaptureTest.testCaptureFromStub":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":444,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":238,"org.easymock.tests.UsageTest.unexpectedCallWithArray":359,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":422,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":269,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":402,"org.easymock.tests2.UsageConstraintsTest.constraints":75,"org.easymock.samples.ExampleTest.addAndChangeDocument":40,"org.easymock.tests.UsageStrictMockTest.testVerify":404,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":45,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":401,"org.easymock.tests2.CompareToTest.testGreateThan":492,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":364,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":388,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":261,"org.easymock.tests.LimitationsTest.abstractClass":299,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":432,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":206,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":304}}]
