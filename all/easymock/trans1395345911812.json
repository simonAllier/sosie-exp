[{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"message"}},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:169","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","m":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[126],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[127,128,129,130,3,131,132,133,134,109,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,126,150,151,110,152,153,0,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,9,10,172,11,12,13,15,19,20,21,24,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,27,30,32,33,36,111,190,191,192,193,194,195,196,112,40,197,41,42,43,44,198,45,46,47,199,52,55,65,71,200,201,75,77,202,115,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,116,224,225,226,227,228,118,229,230,231,232,233,234,89,90,91,235,236,237,238,239,240,97,121,241,242,243,122,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[262,207,213,220,221,248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[113,263],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[134,135,264,191,202,203,265,228,117,118,266,241,267,268,269,270,271,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[150,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[273,273,2,2,3,4,5,9,10,11,12,13,14,15,18,19,20,21,24,26,274,27,28,30,31,32,33,35,36,275,37,40,41,42,43,44,45,46,47,48,52,55,65,71,276,277,278,75,76,77,88,89,90,91,93,94,97,100,107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[279,170,280,281,113,263,282],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[83,283,284],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[110,12,285,286],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[134,135,264,191,202,203,265,228,117,118,266,241,261],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[127,279,128,129,287,130,288,289,290,291,131,4,5,132,133,292,293,294,295,296,134,108,109,135,264,136,137,138,139,140,141,142,143,144,145,146,147,148,149,126,150,151,110,152,153,0,154,155,297,156,157,158,159,160,161,298,162,163,299,300,164,165,166,167,301,168,169,170,302,171,281,9,10,172,11,12,13,15,21],"status":-3,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[25,303,304,305,306,307,308],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[134,170,111,193,194,112,202,228,118,121,242,243,122],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:358","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[14,23,26,31,38],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[279,170,280,281,113,263,282],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[244,309],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":140,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":188,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":285,"org.easymock.tests2.StubTest.stubWithReturnValue":201,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":303,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":290,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":213,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":156,"org.easymock.tests2.SerializationTest.testAllMockedMethod":48,"org.easymock.tests.MockingTest.testPartialClassMocking":89,"org.easymock.samples.SupportTest.voteForRemovals":131,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":74,"org.easymock.tests.MockClassControlTest.testToString":101,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":59,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":55,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":133,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":154,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":304,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":252,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":253,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":249,"org.easymock.samples.ConstructorCalledMockTest.testTax":273,"org.easymock.tests.UsageStrictMockTest.range":115,"org.easymock.samples.ExampleTest.answerVsDelegate":279,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":185,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":94,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":41,"org.easymock.tests2.UsageConstraintsTest.testNull":142,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":270,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":11,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":32,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":106,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":187,"org.easymock.tests2.CaptureTest.testPrimitive":162,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":251,"org.easymock.tests.UsageTest.moreThanOneArgument":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":49,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":237,"org.easymock.tests2.CaptureTest.testCaptureNone":165,"org.easymock.tests.UsageUnorderedTest.message":125,"org.easymock.tests.UsageVerifyTest.twoReturns":118,"org.easymock.tests2.ThreadingTest.testThreadSafe":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":66,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":4,"org.easymock.tests2.CaptureTest.testCapture_2617107":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":244,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":308,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":232,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":31,"org.easymock.tests2.UsageConstraintsTest.any":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":233,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":83,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":286,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":108,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":197,"org.easymock.tests2.SerializationTest.testClass":47,"org.easymock.tests.LimitationsTest.mockNativeMethod":97,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":223,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":77,"org.easymock.tests2.AnswerTest.answer":170,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":1,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":278,"org.easymock.tests2.CaptureTest.testAnd":160,"org.easymock.tests2.UsageTest.strictResetToDefault":190,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":18,"org.easymock.tests2.MockedExceptionTest.testMockedException":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":182,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":243,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":293,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":267,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":91,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":9,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":33,"org.easymock.tests.MockingTest.testNicePartialClassMocking":90,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":13,"org.easymock.tests.LimitationsTest.mockFinalMethod":98,"org.easymock.tests2.CaptureTest.testCaptureLast":164,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":46,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":145,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":155,"org.easymock.tests.MockingTest.testTwoMocks":88,"org.easymock.tests2.CaptureTest.testCapture1_2446744":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":268,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":158,"org.easymock.tests.UsageThrowableTest.throwError":254,"org.easymock.tests.UsageStrictMockTest.differentMethods":203,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":81,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":175,"org.easymock.tests2.MockBuilderTest.testCreateMockString":37,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":56,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":51,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":302,"org.easymock.tests.UsageVerifyTest.twoThrows":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":65,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":245,"org.easymock.samples.ExampleTest.voteAgainstRemoval":129,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":236,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":231,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":20,"org.easymock.tests2.UsageTest.niceToStrict":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":60,"org.easymock.tests.LimitationsTest.privateConstructor":96,"org.easymock.tests2.UsageConstraintsTest.testNotNull":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":260,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":38,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":30,"org.easymock.tests2.UsageTest.defaultResetToNice":195,"org.easymock.tests2.MockBuilderTest.testCreateMock":35,"org.easymock.samples.ExampleTest.voteAgainstRemovals":127,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":68,"org.easymock.tests2.CallbackTest.callback":113,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":16,"org.easymock.tests.UsageTest.openCallCountByLastCall":242,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":269,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":183,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":137,"org.easymock.tests.UsageOverloadedMethodTest.overloading":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":64,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":150,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":215,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":44,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":283,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":126,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":166,"org.easymock.tests.UsageThrowableTest.throwCheckedException":257,"org.easymock.tests2.EasyMockSupportClassTest.testAll":52,"org.easymock.tests.MockClassControlTest.testEquals":105,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":76,"org.easymock.tests.MockingTest.testStrictClassMocking":86,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":309,"org.easymock.tests2.CaptureTest.testCaptureAll":161,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":45,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":43,"org.easymock.tests2.UsageConstraintsTest.testMatches":151,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":198,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":281,"org.easymock.tests2.CompareToTest.testGreateOrEqual":272,"org.easymock.samples.ExampleTest.voteForRemovals":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":307,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":177,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":228,"org.easymock.tests2.DependencyTest.testInterfaceMocking":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":306,"org.easymock.samples.BasicClassMockTest.testPrintContent":5,"org.easymock.samples.ExampleTest.addDocument":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":67,"org.easymock.tests2.DelegateToTest.testStubDelegate":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":72,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":259,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":295,"org.easymock.tests2.AnswerTest.stubAnswer":171,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":202,"org.easymock.tests2.UsageConstraintsTest.greaterThan":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":53,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":224,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":21,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":230,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":85,"org.easymock.samples.ExampleTest.voteForRemoval":128,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":22,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":174,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":222,"org.easymock.tests.UsageExpectAndReturnTest.floatType":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":14,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":24,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":153,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":107,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":111,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":138,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":6,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":299,"org.easymock.tests2.SerializationTest.test":199,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":34,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":284,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":180,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":205,"org.easymock.tests2.UsageConstraintsTest.testSame":143,"org.easymock.samples.SupportTest.addDocument":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":50,"org.easymock.tests2.CaptureTest.testCaptureFirst":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":181,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":112,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":57,"org.easymock.tests.GenericTest.testPackageScope":75,"org.easymock.tests2.CaptureTest.testCapture2_2446744":168,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":176,"org.easymock.tests2.UsageTest.moreThanOneArgument":191,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":36,"org.easymock.tests.GenericTest.testBridgedEquals":78,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":119,"org.easymock.tests.UsageExpectAndReturnTest.longType":207,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":178,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":216,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":297,"org.easymock.tests2.UsageStrictMockTest.differentMethods":135,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":208,"org.easymock.tests.UsageCallCountTest.tooManyCalls":120,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":263,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":258,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":250,"org.easymock.tests.MockingTest.testNiceClassMocking":92,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":42,"org.easymock.tests.MockingTest.testClassMocking":87,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":274,"org.easymock.tests2.UsageConstraintsTest.testContains":149,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":40,"org.easymock.tests2.UsageConstraintsTest.testFind":141,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":240,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":29,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":292,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":12,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":294,"org.easymock.tests.UsageExpectAndReturnTest.object":214,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":8,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":82,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":15,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":27,"org.easymock.tests2.UsageStrictMockTest.range":109,"org.easymock.tests2.UsageConstraintsTest.lessThan":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":305,"org.easymock.tests.UsageTest.exactCallCountByLastCall":122,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":229,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":61,"org.easymock.tests2.CaptureTest.testCaptureRightOne":167,"org.easymock.tests2.UsageConstraintsTest.testOr":144,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":25,"org.easymock.tests.UsageRangeTest.combination":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":10,"org.easymock.tests.MockClassControlTest.testHashCode":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":58,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":62,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":282,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":84,"org.easymock.tests2.UsageConstraintsTest.cmpTo":148,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":280,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":234,"org.easymock.tests2.UsageTest.openCallCountByLastCall":193,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":194,"org.easymock.tests.DefaultClassInstantiatorTest.object":79,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":189,"org.easymock.tests2.CaptureTest.testCaptureFromStub":301,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":63,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":256,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":218,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":19,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":103,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":114,"org.easymock.tests2.UsageConstraintsTest.constraints":139,"org.easymock.samples.ExampleTest.addAndChangeDocument":288,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":221,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":71,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":102,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":300,"org.easymock.tests2.UsageTest.resumeIfFailure":196,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":210,"org.easymock.tests.LimitationsTest.abstractClass":95,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":93,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":247,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":184,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":7}}]
