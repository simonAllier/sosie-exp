[{"position":"org.easymock.internal.MockBuilder:205","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[7,14,24,28,29,34],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[37,38,39,40,41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[42,43,44,45,46,47],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[48,49,50,51,52,53,54,42,55,56,57,58,59,60,61,62,63,0,64,65,1,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,2,188,189,3,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,37,221,222,223,224,225,226,38,227,228,229,39,230,231,232,233,40,41,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,45,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,4,282,283,284,285,286,287,288,289,290,5,5,6,6,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,7,9,10,12,13,14,15,17,19,20,21,23,308,309,310,311,312,313,314,315,316,317,24,318,319,25,320,321,26,27,322,323,28,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,29,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,30,393,394,31,32,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,34,423,424,425,426,427,428,429,430,431,35,432,433,434,435,436,36,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[217,482,483],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[16,484,485,486,487,488,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[324,343,346,489],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[3],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[490],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[278,283,285,286,288,294],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[42,43,44,45,46,47],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[326,327,330,332,333,335,345,350,468,470,478],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[5,5,6,6,18,19,25,30,31,32],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[48,49,50,51,52,53,54,56,57,60,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,102,103,104,105,117,133,135,136,140,141,142,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,189,191,192,193,194,195,196,250,251,252,253,254,255,257,258,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,299,300,301,302,306,307,13,15,17,310,311,313,316,27,327,330,332,333,350,353,356,357,369,370,371,373,374,380,388,389,390,392,30,393,395,396,397,398,399,400,401,403,404,405,406,444,452,453,454,455,456,457,458,459,468,469,475,476,478,481],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[48,49,50,51,52,53,54,56,57,60,62,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,106,109,117,118,122,123,125,129,130,131,132,133,135,136,138,140,141,142,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,188,3,191,192,193,194,195,196,199,233,237,251,253,254,257,258,259,260,261,262,263,264,265,266,267,276,277,278,279,280,4,283,284,285,286,288,290,5,5,6,6,294,295,296,297,299,301,302,303,306,307,9,13,15,17,21,310,311,312,313,314,315,316,317,319,26,27,322,324,325,326,327,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,29,363,364,365,366,368,369,370,371,372,373,374,380,387,388,389,390,391,392,30,393,31,395,396,397,398,399,400,401,402,403,404,405,406,420,34,35,36,444,453,455,456,458,459,461,462,463,464,465,466,467,468,469,471,472,475,476,477,478,479,480,481],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[30,393,394],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[339],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockInvocationHandler:37","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[143,144,233],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[491,492,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1,106,119,120,121,122,123,125,128,2,188,189,3,190,197,198,199,200,213,214,215,216,217,218,219,248,268,269,270,271,272,273,274,275,4,5,5,6,6,291,292,7,494,9,10,12,13,14,15,17,19,20,21,495,23,312,313,315,316,317,24,319,25,320,321,26,27,322,323,28,29,363,364,496,497,498,499,500,30,394,31,32,413,414,417,418,419,420,421,422,34,423,424,425,426,427,428,429,430,431,35,432,433,434,435,436,36,437,438,461,462,463,464,466,467],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[342],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[278,283,285,286,288,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[48,49,50,51,52,53,54,42,55,56,57,58,59,60,501,501,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,109,110,111,112,113,114,115,117,118,122,123,125,129,131,132,133,135,136,139,140,141,142,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,196,199,239,240,241,242,249,250,45,251,252,253,254,255,257,258,276,277,278,279,280,281,4,282,283,284,285,286,287,288,290,5,6,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,7,9,13,14,15,17,20,21,23,310,311,312,313,314,315,316,317,24,319,321,26,27,322,324,325,326,327,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,356,357,358,359,360,361,362,29,363,364,365,366,368,369,370,371,372,373,374,380,388,389,390,392,30,393,394,31,395,396,397,398,399,400,401,402,403,404,405,406,407,420,34,35,36,444,451,452,453,454,455,456,457,458,459,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[48,49,50,51,52,53,54,42,55,56,57,58,59,60,61,62,63,0,502,503,64,65,1,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,175,176,177,178,179,180,181,182,183,184,185,186,187,2,188,189,3,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,37,221,222,223,224,225,226,38,227,228,229,39,230,231,232,233,40,41,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,45,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,4,282,283,284,285,286,287,288,289,290,5,6,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,7,9,10,12,13,14,15,17,18,19,20,21,23,308,309,310,311,312,313,314,315,316,317,24,318,319,25,320,321,26,27,322,323,28,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,526,527,528,529,530,353,354,355,356,357,358,359,360,361,362,29,363,364,365,366,367,368,369,531,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,30,393,394,31,32,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,532,533,414,415,416,417,418,419,420,421,422,34,423,424,425,426,427,428,429,430,431,35,432,433,434,435,436,36,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,534,465,466,467,535,468,469,470,471,472,473,474,475,476,477,478,479,480,481],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[276],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[2,188,189,3,190],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[68,69,70,118,149,191,192,193,194,195,196,211,226,29,363,364,365,459],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[23,27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[214,218],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[266],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[328],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[122,123,125,2,4,5,6,24,26,27,29,462,463,466,467],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[5,6,536,22,537,25],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":327,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":53,"org.easymock.tests2.UsageTest.argumentsOrdered":305,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":228,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":300,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":282,"org.easymock.tests2.DelegateToTest.testReturnException":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":192,"org.easymock.tests.MockingTest.testPartialClassMocking":122,"org.easymock.tests.MockClassControlTest.testToString":270,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":408,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":62,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":426,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":74,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":311,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":525,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":484,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":147,"org.easymock.tests2.UsageTest.wrongArguments":298,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":450,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":241,"org.easymock.samples.ExampleTest.answerVsDelegate":284,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":1,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":127,"org.easymock.tests2.UsageConstraintsTest.testNull":330,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":315,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":404,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":275,"org.easymock.tests2.CaptureTest.testPrimitive":471,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":151,"org.easymock.tests.UsageTest.moreThanOneArgument":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":93,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":50,"org.easymock.tests.UsageTest.argumentsOrdered":59,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":263,"org.easymock.tests.UsageVarargTest.varargIntAccepted":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":276,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":488,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":7,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":533,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":385,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":280,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":509,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":444,"org.easymock.tests.ReplayStateInvalidUsageTest.times":209,"org.easymock.tests2.DependencyTest.testClassMocking":308,"org.easymock.tests2.AnswerTest.answer":353,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":40,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":362,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":503,"org.easymock.tests2.CaptureTest.testAnd":468,"org.easymock.tests2.UsageTest.strictResetToDefault":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":11,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":399,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":131,"org.easymock.tests2.DelegateToTest.testDelegate":392,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":267,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":508,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":89,"org.easymock.tests.LimitationsTest.mockFinalMethod":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":187,"org.easymock.tests2.DependencyTest.testClassMockingSupport":309,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":143,"org.easymock.tests2.CaptureTest.testCapture1_2446744":472,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":87,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":360,"org.easymock.tests.UsageThrowableTest.throwError":175,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":203,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":65,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":386,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":52,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":537,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":438,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":512,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.MockingTest.testInterfaceMocking":124,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":277,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":427,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":75,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":248,"org.easymock.tests2.UsageTest.niceToStrict":299,"org.easymock.tests2.ThreadingTest.testChangeDefault":531,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":220,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":13,"org.easymock.tests2.MockBuilderTest.testCreateMock":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":434,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":447,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":46,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":83,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":400,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":502,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":73,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":107,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":239,"org.easymock.tests.UsageOverloadedMethodTest.overloading":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":431,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":136,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":166,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":140,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":482,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":339,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":477,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":97,"org.easymock.tests2.EasyMockSupportClassTest.testAll":420,"org.easymock.tests.MockClassControlTest.testEquals":274,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":189,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":91,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":496,"org.easymock.tests2.CaptureTest.testCaptureAll":469,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":185,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":361,"org.easymock.tests.MockNameTest.defaultName":116,"org.easymock.tests2.UsageConstraintsTest.testMatches":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":51,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":201,"org.easymock.samples.ExampleTest.voteForRemovals":288,"org.easymock.tests.UsageVarargTest.allKinds":105,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":186,"org.easymock.samples.BasicClassMockTest.testPrintContent":292,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":181,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":451,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":382,"org.easymock.tests2.UsageConstraintsTest.greaterThan":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":421,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":130,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":322,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":513,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":219,"org.easymock.samples.ExampleTest.voteForRemoval":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":323,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":370,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":24,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":505,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":106,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":295,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":397,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":191,"org.easymock.tests2.CaptureTest.testCaptureFirst":481,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":398,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":307,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":162,"org.easymock.tests2.CaptureTest.testCapture2_2446744":480,"org.easymock.tests2.UsageTest.moreThanOneArgument":297,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":41,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":21,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":104,"org.easymock.tests.GenericTest.testBridgedEquals":190,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":114,"org.easymock.tests.UsageExpectAndReturnTest.longType":158,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":395,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":183,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":495,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":92,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":262,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":48,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":69,"org.easymock.tests.UsageCallCountTest.tooManyCalls":115,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":435,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":449,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":79,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":180,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":462,"org.easymock.tests.MockingTest.testNiceClassMocking":128,"org.easymock.tests.MockingTest.testClassMocking":120,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":494,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":108,"org.easymock.tests2.UsageConstraintsTest.testContains":338,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":364,"org.easymock.tests2.UsageConstraintsTest.testFind":329,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":142,"org.easymock.tests.MockTypeTest.fromEasyMockClass":64,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":249,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":368,"org.easymock.tests.UsageExpectAndReturnTest.object":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":403,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":485,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":99,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":246,"org.easymock.tests.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":224,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":61,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":171,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":94,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":135,"org.easymock.tests.MockClassControlTest.testHashCode":273,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":376,"org.easymock.tests2.EasyMockSupportTest.testVerify":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":429,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":265,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":133,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":72,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":359,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":460,"org.easymock.tests.UsageVarargTest.varargCharAccepted":98,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":238,"org.easymock.tests2.UsageTest.openCallCountByLastCall":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":492,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":406,"org.easymock.tests.DefaultClassInstantiatorTest.object":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":71,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":430,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":81,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":500,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":442,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":375,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":511,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":26,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":272,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":80,"org.easymock.tests.CapturesMatcherTest.test":501,"org.easymock.tests.ReplayStateInvalidCallsTest.times":517,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":172,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":68,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":518,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":36,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":271,"org.easymock.tests2.UsageTest.resumeIfFailure":306,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":0,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":532,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":194,"org.easymock.tests2.StubTest.stubWithReturnValue":459,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":16,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":349,"org.easymock.tests2.SerializationTest.testAllMockedMethod":394,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":233,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":47,"org.easymock.samples.SupportTest.voteForRemovals":294,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":86,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":237,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":354,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":63,"org.easymock.tests.UsageExpectAndThrowTest.object":84,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":346,"org.easymock.tests2.DelegateToTest.testWrongClass":390,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":515,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":257,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":258,"org.easymock.samples.ConstructorCalledMockTest.testTax":5,"org.easymock.tests.UsageStrictMockTest.range":253,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":415,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":85,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":417,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":58,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":43,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":507,"org.easymock.tests2.CaptureTest.testCaptureNone":476,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":261,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":527,"org.easymock.tests.UsageUnorderedTest.message":146,"org.easymock.tests.UsageVerifyTest.twoReturns":154,"org.easymock.tests.UsageVarargTest.varargByteAccepted":103,"org.easymock.tests2.ThreadingTest.testThreadSafe":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":432,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":112,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":247,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":291,"org.easymock.tests2.CaptureTest.testCapture_2617107":470,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":235,"org.easymock.tests2.UsageConstraintsTest.any":336,"org.easymock.tests2.StubTest.stub":458,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":70,"org.easymock.tests.UsageExpectAndThrowTest.longType":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":236,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":217,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":207,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":454,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":380,"org.easymock.tests.LimitationsTest.mockNativeMethod":199,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":174,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":3,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":499,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":441,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":523,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":457,"org.easymock.tests2.NameTest.nameForMocksControl":412,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":443,"org.easymock.tests2.MockedExceptionTest.testMockedException":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":422,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":57,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":78,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":367,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":312,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":17,"org.easymock.tests.MockingTest.testNicePartialClassMocking":123,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":317,"org.easymock.tests2.CaptureTest.testCaptureLast":475,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":439,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":144,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":522,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":467,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":333,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":347,"org.easymock.tests.MockingTest.testTwoMocks":121,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":519,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":535,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":82,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":304,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":351,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":530,"org.easymock.samples.ExampleTest.removeNonExistingDocument":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":446,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":205,"org.easymock.tests.UsageStrictMockTest.differentMethods":254,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":377,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":529,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":215,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":371,"org.easymock.tests2.MockBuilderTest.testCreateMockString":23,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":423,"org.easymock.tests.UsageExpectAndThrowTest.floatType":76,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":419,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":356,"org.easymock.tests.UsageVerifyTest.twoThrows":153,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":33,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":35,"org.easymock.samples.ExampleTest.voteAgainstRemoval":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":229,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":259,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":27,"org.easymock.tests.LimitationsTest.privateConstructor":198,"org.easymock.tests2.UsageConstraintsTest.testNotNull":350,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":182,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":29,"org.easymock.tests2.UsageTest.defaultResetToNice":303,"org.easymock.samples.ExampleTest.voteAgainstRemovals":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":39,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":440,"org.easymock.tests.UsageVarargTest.differentLength":100,"org.easymock.tests2.CallbackTest.callback":374,"org.easymock.tests2.UsageConstraintsTest.equals":328,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":25,"org.easymock.tests.UsageTest.openCallCountByLastCall":56,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":149,"org.easymock.tests.UsageCallCountTest.tooFewCalls":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":464,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":242,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":528,"org.easymock.tests.UsageThrowableTest.throwCheckedException":179,"org.easymock.tests.MockingTest.testStrictClassMocking":119,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":44,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":466,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":118,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":463,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":445,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":210,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":465,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":358,"org.easymock.tests.ObjectMethodsTest.testHashCode":245,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":487,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":521,"org.easymock.tests2.NameTest.nameForNiceMock":411,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":373,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":516,"org.easymock.tests2.DependencyTest.testInterfaceMocking":310,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":486,"org.easymock.samples.ExampleTest.addDocument":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":437,"org.easymock.tests2.DelegateToTest.testStubDelegate":389,"org.easymock.tests2.AnswerTest.stubAnswer":357,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":251,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":18,"org.easymock.tests.UsageVarargTest.varargLongAccepted":102,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":227,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":173,"org.easymock.tests.UsageExpectAndReturnTest.floatType":157,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":31,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":384,"org.easymock.tests.UsageThrowableTest.noUpperLimit":176,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":344,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":325,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":413,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":473,"org.easymock.tests2.SerializationTest.test":393,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":483,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":156,"org.easymock.tests2.UsageConstraintsTest.testSame":331,"org.easymock.samples.SupportTest.addDocument":293,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":534,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":506,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":424,"org.easymock.tests.GenericTest.testPackageScope":188,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":223,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":383,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":126,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":504,"org.easymock.tests2.NameTest.nameForMock":409,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":167,"org.easymock.tests2.UsageStrictMockTest.differentMethods":456,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":22,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":320,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":159,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":88,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":243,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":132,"org.easymock.tests2.MockedExceptionTest.testRealException":365,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":67,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":231,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":230,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":148,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":212,"org.easymock.tests2.NameTest.nameForStrictMock":410,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":12,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":493,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":366,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":316,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":414,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":216,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":345,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":9,"org.easymock.tests2.UsageStrictMockTest.range":455,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":510,"org.easymock.tests2.UsageConstraintsTest.lessThan":352,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":379,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":490,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":38,"org.easymock.tests2.CaptureTest.testCaptureRightOne":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":428,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":526,"org.easymock.tests2.UsageConstraintsTest.testOr":332,"org.easymock.tests.UsageRangeTest.combination":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":313,"org.easymock.tests.UsageTest.wrongArguments":55,"org.easymock.tests2.MockBuilderTest.testWithConstructor":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":425,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":37,"org.easymock.tests.UsageVarargTest.varargShortAccepted":101,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":218,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":113,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":524,"org.easymock.tests2.UsageConstraintsTest.cmpTo":337,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":355,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":222,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":302,"org.easymock.tests2.CaptureTest.testCaptureFromStub":479,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":202,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":10,"org.easymock.tests.UsageTest.unexpectedCallWithArray":42,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":520,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":111,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":536,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":169,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":252,"org.easymock.tests2.UsageConstraintsTest.constraints":326,"org.easymock.samples.ExampleTest.addAndChangeDocument":290,"org.easymock.tests.UsageStrictMockTest.testVerify":256,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":281,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":250,"org.easymock.tests2.CompareToTest.testGreateThan":489,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":184,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":474,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":498,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":161,"org.easymock.tests.LimitationsTest.abstractClass":197,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":138,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":401,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":95}}]
