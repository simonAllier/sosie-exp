[{"position":"org.easymock.internal.RecordState:274","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[11,12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[32,33,34,35],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[36,37,38],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[63,0,64,65,66,67,68,69,39,70,71,72,73,40,41,74,75,42,32,33,34,76,77,78,79,80,81,82,83,84,85,86,87,88,43,89,90,44,91,92,15,93,94,95,96,97,98,99,100,101,102,103,104,19,20,21,22,1,4,5,6,105,106,107,108,109,110,111,112,113,114,115,116,117,25,118,119,120,121,45,122,123,124,125,126,127,128,7,129,130,131,132,26,133,134,135,136,137,138,8,9,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,47,176,177,178,179,180,181,182,183,184,185,186,187,188,27,28,29,189,190,191,192,193,194,195,196,48,49,50,51,52,53,197,55,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,56,57,60,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,61,62],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[82,96,101,237],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[0,1,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[238],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[16,63,64,65,67,239,69,39,71,240,40,41,74,75,241,42,32,33,77,80,81,82,83,84,85,86,87,88,43,89,90,44,91,92,15,93,94,95,96,97,98,99,100,101,102,103,104,242,19,20,243,244,21,22,5,245,246,247,248,249,250,105,106,107,251,252,109,110,253,111,254,112,113,114,115,116,24,25,255,118,119,256,11,120,45,257,122,124,258,259,260,261,262,263,264,265,266,267,268,269,270,271,134,272,137,273,274,275,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,276,160,277,278,279,280,281,161,282,283,284,285,286,287,183,288,289,290,27,28,29,189,190,191,192,48,49,50,51,52,291,53,55,292,198,201,293,294,204,205,212,214,215,295,296,56,57,60,61,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[30,297],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[5,6],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[96,298],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[82,96,101,237],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[299,300],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[301],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[302,303,304,305,306,307,308],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[257,46,309,310,292,213,214],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[85,43],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[44,53],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[311,312,313,257,46,314,315,316,317,318,319,292,213,214,320],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[321,322,323],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[80,250,252,276,160,277,278,279,280,281,47,324,287,289,205,213,325,326,327,328,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[69,70,75,84,85,87,43,89,329,98,102],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[80,26,133,134,135,172,173,174,175,47,176,54],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[261,268,330,331],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":85,"org.easymock.tests2.UsageTest.argumentsOrdered":313,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":287,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":175,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":108,"org.easymock.tests2.StubTest.stubWithReturnValue":80,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":308,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":101,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":148,"org.easymock.tests2.SerializationTest.testAllMockedMethod":34,"org.easymock.tests2.DelegateToTest.testReturnException":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":173,"org.easymock.tests.MockingTest.testPartialClassMocking":27,"org.easymock.samples.SupportTest.voteForRemovals":239,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":30,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":229,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":35,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":247,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":217,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":2,"org.easymock.tests.UsageExpectAndThrowTest.object":227,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":13,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":258,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":303,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":61,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":62,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":90,"org.easymock.tests2.UsageTest.wrongArguments":311,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":56,"org.easymock.tests.UsageStrictMockTest.range":292,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":195,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":242,"org.easymock.tests2.UsageConstraintsTest.testNull":87,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":228,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":273,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":268,"org.easymock.tests2.CaptureTest.testPrimitive":71,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":60,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":317,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":236,"org.easymock.tests.UsageTest.moreThanOneArgument":183,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":194,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":180,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":296,"org.easymock.tests2.CaptureTest.testCaptureNone":41,"org.easymock.tests.UsageUnorderedTest.message":46,"org.easymock.tests.UsageVerifyTest.twoReturns":214,"org.easymock.tests.UsageVarargTest.varargByteAccepted":169,"org.easymock.tests2.ThreadingTest.testThreadSafe":118,"org.easymock.tests.UsageTest.argumentsOrdered":318,"org.easymock.tests.UsageVarargTest.varargIntAccepted":164,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":211,"org.easymock.tests2.CaptureTest.testCapture_2617107":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":307,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":136,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":284,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":59,"org.easymock.tests2.UsageConstraintsTest.any":44,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":138,"org.easymock.tests2.StubTest.stub":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":285,"org.easymock.tests.UsageExpectAndThrowTest.longType":220,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":174,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":36,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":271,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":245,"org.easymock.tests.LimitationsTest.mockNativeMethod":161,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":31,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":293,"org.easymock.tests2.AnswerTest.answer":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":158,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":132,"org.easymock.tests2.CaptureTest.testAnd":69,"org.easymock.tests2.UsageTest.strictResetToDefault":105,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":117,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":123,"org.easymock.tests2.NameTest.nameForMocksControl":128,"org.easymock.tests2.MockedExceptionTest.testMockedException":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":263,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":191,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":289,"org.easymock.tests2.DelegateToTest.testDelegate":78,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":221,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":29,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":111,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":274,"org.easymock.tests.MockingTest.testNicePartialClassMocking":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":232,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":115,"org.easymock.tests2.CompareToTest.testNotComparable":238,"org.easymock.tests2.CaptureTest.testCaptureLast":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":47,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":89,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":22,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":188,"org.easymock.tests2.CaptureTest.testCapture1_2446744":240,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":225,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":130,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":312,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":103,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":299,"org.easymock.tests.UsageThrowableTest.throwError":276,"org.easymock.tests.UsageStrictMockTest.differentMethods":198,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":256,"org.easymock.tests.UsageExpectAndThrowTest.floatType":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":182,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":95,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":4,"org.easymock.tests.UsageVerifyTest.twoThrows":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":248,"org.easymock.samples.PartialClassMockTest.testGetArea":16,"org.easymock.tests2.CompareToTest.testLessOrEqual":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":49,"org.easymock.samples.ExampleTest.voteAgainstRemoval":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":283,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":218,"org.easymock.tests2.UsageTest.niceToStrict":107,"org.easymock.tests2.ThreadingTest.testChangeDefault":300,"org.easymock.tests2.UsageConstraintsTest.testNotNull":102,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":281,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":26,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":137,"org.easymock.tests2.UsageTest.defaultResetToNice":109,"org.easymock.samples.ExampleTest.voteAgainstRemovals":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":154,"org.easymock.tests2.CallbackTest.callback":7,"org.easymock.tests.UsageTest.openCallCountByLastCall":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":226,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":264,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":82,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":193,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":58,"org.easymock.tests.UsageCallCountTest.tooFewCalls":209,"org.easymock.tests.UsageOverloadedMethodTest.overloading":204,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":325,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":93,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":150,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":15,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":37,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":74,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":196,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":301,"org.easymock.tests.UsageThrowableTest.throwCheckedException":278,"org.easymock.tests2.EasyMockSupportClassTest.testAll":246,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":202,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":234,"org.easymock.tests2.CaptureTest.testCaptureAll":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":186,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":54,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":21,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":20,"org.easymock.tests2.UsageConstraintsTest.testMatches":94,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":244,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":6,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":181,"org.easymock.samples.ExampleTest.voteForRemovals":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":306,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":120,"org.easymock.tests2.NameTest.nameForNiceMock":127,"org.easymock.tests.UsageVarargTest.allKinds":171,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":212,"org.easymock.tests2.DependencyTest.testInterfaceMocking":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":187,"org.easymock.samples.ExampleTest.addDocument":66,"org.easymock.tests2.DelegateToTest.testStubDelegate":77,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":280,"org.easymock.tests2.AnswerTest.stubAnswer":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":176,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":55,"org.easymock.tests2.UsageConstraintsTest.greaterThan":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":190,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":255,"org.easymock.tests.UsageVarargTest.varargLongAccepted":168,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":282,"org.easymock.samples.ExampleTest.voteForRemoval":64,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":119,"org.easymock.tests.UsageExpectAndReturnTest.floatType":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":157,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":23,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":97,"org.easymock.tests.UsageThrowableTest.noUpperLimit":159,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":250,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":203,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":83,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":72,"org.easymock.tests2.SerializationTest.test":33,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":38,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":261,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":160,"org.easymock.tests2.UsageConstraintsTest.testSame":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":172,"org.easymock.tests2.CaptureTest.testCaptureFirst":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":262,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":253,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":14,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":146,"org.easymock.tests.GenericTest.testPackageScope":201,"org.easymock.tests2.CaptureTest.testCapture2_2446744":241,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":11,"org.easymock.tests2.UsageTest.moreThanOneArgument":106,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":275,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":170,"org.easymock.tests.GenericTest.testBridgedEquals":297,"org.easymock.tests2.NameTest.nameForMock":125,"org.easymock.tests.UsageExpectAndReturnTest.longType":142,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":151,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":233,"org.easymock.tests2.UsageStrictMockTest.differentMethods":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":178,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":143,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":231,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":330,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":192,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":208,"org.easymock.tests2.MockedExceptionTest.testRealException":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":222,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":57,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":19,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":207,"org.easymock.tests2.UsageConstraintsTest.testContains":92,"org.easymock.tests2.NameTest.nameForStrictMock":126,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":134,"org.easymock.tests2.UsageConstraintsTest.testFind":86,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":205,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":8,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":114,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":9,"org.easymock.tests.UsageExpectAndReturnTest.object":149,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":309,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":98,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":116,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":272,"org.easymock.tests2.UsageStrictMockTest.range":257,"org.easymock.tests2.UsageConstraintsTest.lessThan":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":304,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":166,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":331,"org.easymock.tests.UsageTest.exactCallCountByLastCall":290,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":53,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":260,"org.easymock.tests2.CaptureTest.testCaptureRightOne":75,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":12,"org.easymock.tests2.UsageConstraintsTest.testOr":43,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":302,"org.easymock.tests.UsageRangeTest.combination":189,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":254,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":155,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":162,"org.easymock.tests.UsageTest.wrongArguments":316,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":152,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":327,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":323,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":10,"org.easymock.tests.UsageVarargTest.varargShortAccepted":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":129,"org.easymock.tests2.UsageConstraintsTest.cmpTo":91,"org.easymock.tests.UsageVarargTest.varargCharAccepted":165,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":324,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":286,"org.easymock.tests2.UsageTest.openCallCountByLastCall":251,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":252,"org.easymock.tests.DefaultClassInstantiatorTest.object":321,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":270,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":326,"org.easymock.tests.UsageTest.unexpectedCallWithArray":315,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":314,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":224,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":319,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":277,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":210,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":153,"org.easymock.tests2.UsageConstraintsTest.constraints":84,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":223,"org.easymock.samples.ExampleTest.addAndChangeDocument":68,"org.easymock.tests.UsageStrictMockTest.testVerify":200,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":249,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests2.CompareToTest.testGreateThan":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":185,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":73,"org.easymock.tests2.UsageTest.resumeIfFailure":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":145,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":51,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":265,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":163}}]
