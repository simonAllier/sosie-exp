[{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,9,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,0,261,1,262,2,3,4,263,264,5,6,8,265,266,267,268,269,270,271],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,92,272,273,274,275,93,276,94,95,96,97,98,101,102,103,104,105,106,107,108,10,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,277,278,279,280,281,136,137,138,139,140,141,142,143,144,145,282,283,284,285,286,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,195,196,197,198,200,201,202,211,214,215,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,241,242,9,243,244,245,246,247,248,249,250,251,252,253,254,255,256,259,260,0,261,1,262,2,3,4,263,264,5,6,7,8,265,266,267,268,269,270,287,288,271,289],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[290,291,190,292,199,207,293,294,295,296,297,258,298],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[35,221,228,245],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[299,300,301,302,303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[38,40,44,81,84,85,90,272,273,274,275,93,276,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,136,138,139,140,141,142,143,153,170,177,287,288,271,289],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,9,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,0,261,1,262,2,3,4,263,264,5,6,8,265,266,267,268,269,270,271],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[327,327,328,328,14,23,24,329,330,331,48,49,50,92,107,108,291,10,132,277,332,333,334,335,336,278,279,337,190,199,201,202,203,204,205,338,206,339,207,340,208,209,295,210,296,211,212,213,214,216,217,250,251,253,254,255,341,256,342,257,258,259,298,271],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[13,14,16,18,19,21,48,49,50,51,52,53,54,55,56,59,60,62,63,64,66,67,68,69,70,74,76,77,82,94,95,96,97,98,132,133,134,282,283,284,285,146,147,148,149,167,168,185,187,188,190,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,221,250,251,252,253,254,255,256,257,258,259,268],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[292,343,344,345,346,302,303],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[347,348,349,38,40,85,90,93,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,307,136,138,139,140,141,142,143,153,170],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[264,350,6,265],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[11,327,328,12,13,14,15,16,17,18,19,20,21,351,22,23,24,347,348,349,25,26,27,352,28,29,30,31,32,33,34,35,353,36,37,38,39,40,41,354,42,43,44,45,46,47,355,356,357,329,358,359,360,361,330,362,363,364,365,331,48,49,366,50,367,368,369,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,370,371,372,373,374,375,80,81,82,83,84,85,86,87,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,88,391,89,90,392,91,393,92,272,273,274,275,93,276,94,95,96,97,98,99,394,395,396,397,398,399,400,100,401,101,102,103,104,402,105,106,290,107,108,291,10,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,403,404,132,405,133,134,135,277,332,333,334,335,336,278,279,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,406,320,321,322,323,324,407,325,408,409,410,411,412,413,414,280,415,416,281,417,337,136,137,138,139,140,141,142,143,418,144,145,419,420,282,283,284,285,286,146,147,148,149,150,421,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,422,423,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,292,424,191,192,193,194,195,425,426,196,197,198,427,428,429,430,199,200,201,431,432,433,202,434,435,203,436,437,438,439,440,441,442,443,444,204,445,446,447,448,449,205,450,451,338,206,339,452,207,340,208,209,293,294,295,210,296,453,211,212,213,214,454,215,216,217,455,218,219,220,221,222,223,224,225,226,456,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,9,243,244,245,246,247,248,249,250,251,252,253,254,255,341,457,256,297,458,342,257,258,259,459,298,460,461,462,463,464,260,465,466,467,468,469,470,471,472,473,474,0,261,1,262,2,3,4,263,264,5,6,7,8,265,475,476,477,478,479,266,480,481,482,483,484,485,486,267,268,269,487,270,287,288,271,289],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[290,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[488],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:362","sourceCode":"return this","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[37,38,39,41,74,77,78,91,172,185,188,189],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[206,210,257,298],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[327,328,489,490,491,297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[11,327,327,328,328,12,13,14,15,16,17,18,19,20,21,351,22,23,24,347,348,349,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,354,42,43,44,45,46,47,355,356,331,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,370,371,372,374,80,81,82,83,84,85,86,87,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,88,391,89,90,392,91,393,92,272,273,274,275,93,276,94,95,96,97,98,99,394,395,396,397,398,399,400,100,401,101,102,103,104,402,105,106,107,108,291,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,277,332,333,334,335,336,278,279,406,407,408,415,416,281,136,137,138,139,140,141,142,143,418,144,145,419,420,282,283,284,285,286,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,425,426,196,197,198,427,428,429,430,199,200,201,202,203,204,205,338,206,207,340,208,209,295,210,296,453,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,9,243,244,245,246,247,248,249,250,251,252,253,254,255,341,256,342,257,258,259,260,0,261,1,262,2,3,4,263,264,5,6,7,8,265,266,486,267,268,269,487,270,287,288,271,289],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[37,38,39,41,74,77,78,100,101,102,172,185,188,189,191,192,193,194],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":226,"org.easymock.tests2.UsageTest.argumentsOrdered":180,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":40,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":314,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":175,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":15,"org.easymock.tests2.DelegateToTest.testReturnException":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":273,"org.easymock.tests.MockingTest.testPartialClassMocking":48,"org.easymock.tests.MockClassControlTest.testToString":333,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":424,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":374,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":439,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":112,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":203,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":344,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":232,"org.easymock.tests2.UsageTest.wrongArguments":173,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":82,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":485,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":389,"org.easymock.samples.ExampleTest.answerVsDelegate":17,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":330,"org.easymock.tests2.UsageConstraintsTest.testNull":228,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":368,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":253,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":163,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":279,"org.easymock.tests2.CaptureTest.testPrimitive":262,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":86,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":131,"org.easymock.tests.UsageTest.moreThanOneArgument":41,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":284,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":418,"org.easymock.tests.UsageTest.argumentsOrdered":46,"org.easymock.tests.UsageVarargTest.varargIntAccepted":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":94,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":303,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":469,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":98,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":266,"org.easymock.tests.ReplayStateInvalidUsageTest.times":383,"org.easymock.tests2.DependencyTest.testClassMocking":422,"org.easymock.tests2.AnswerTest.answer":195,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":430,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":359,"org.easymock.tests2.UsageTest.strictResetToDefault":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":283,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":158,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":148,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":420,"org.easymock.tests2.DelegateToTest.testDelegate":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":127,"org.easymock.tests.LimitationsTest.mockFinalMethod":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":397,"org.easymock.tests2.DependencyTest.testClassMockingSupport":423,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":355,"org.easymock.tests2.CaptureTest.testCapture1_2446744":2,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":428,"org.easymock.tests.UsageThrowableTest.throwError":136,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":377,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":361,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":470,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":451,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.MockingTest.testInterfaceMocking":366,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":95,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":440,"org.easymock.tests2.UsageTest.niceToStrict":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":113,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":304,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":207,"org.easymock.tests2.MockBuilderTest.testCreateMock":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":447,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":482,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":121,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":159,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":358,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":349,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":100,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":387,"org.easymock.tests.UsageOverloadedMethodTest.overloading":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":444,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":90,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":238,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":109,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":62,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":237,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":5,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":352,"org.easymock.tests2.EasyMockSupportClassTest.testAll":202,"org.easymock.tests.MockClassControlTest.testEquals":278,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":108,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":129,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":395,"org.easymock.tests2.CaptureTest.testCaptureAll":261,"org.easymock.tests.MockNameTest.defaultName":353,"org.easymock.tests2.UsageConstraintsTest.testMatches":239,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":285,"org.easymock.samples.ExampleTest.voteForRemovals":21,"org.easymock.tests.UsageVarargTest.allKinds":35,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":396,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":142,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":183,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":276,"org.easymock.tests2.UsageConstraintsTest.greaterThan":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":147,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":259,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":414,"org.easymock.samples.ExampleTest.voteForRemoval":18,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":459,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":219,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":362,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":341,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":92,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":156,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":272,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":486,"org.easymock.tests2.CaptureTest.testCaptureFirst":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":157,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":393,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":58,"org.easymock.tests2.UsageTest.moreThanOneArgument":172,"org.easymock.tests2.CaptureTest.testCapture2_2446744":8,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":221,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":321,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":34,"org.easymock.tests.GenericTest.testBridgedEquals":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":105,"org.easymock.tests.UsageExpectAndReturnTest.longType":54,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":130,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":36,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":245,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":128,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":399,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":282,"org.easymock.tests.UsageCallCountTest.tooManyCalls":106,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":448,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":484,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":117,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":141,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":212,"org.easymock.tests.MockingTest.testNiceClassMocking":369,"org.easymock.tests.MockingTest.testClassMocking":365,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":401,"org.easymock.tests2.UsageConstraintsTest.testContains":236,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":271,"org.easymock.tests2.UsageConstraintsTest.testFind":227,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":111,"org.easymock.tests.MockTypeTest.fromEasyMockClass":360,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":151,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":71,"org.easymock.tests.UsageExpectAndReturnTest.object":61,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":256,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":483,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":162,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":345,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":281,"org.easymock.tests.UsageTest.exactCallCountByLastCall":47,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":144,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":373,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":292,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":67,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":89,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":461,"org.easymock.tests.MockClassControlTest.testHashCode":336,"org.easymock.tests2.EasyMockSupportTest.testVerify":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":442,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":145,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":88,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":348,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":488,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":427,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":453,"org.easymock.tests.UsageVarargTest.varargCharAccepted":28,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":325,"org.easymock.tests2.UsageTest.openCallCountByLastCall":176,"org.easymock.tests.DefaultClassInstantiatorTest.object":408,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":347,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":443,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":119,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":478,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":460,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":257,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":335,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":118,"org.easymock.tests.CapturesMatcherTest.test":326,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":68,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":205,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":334,"org.easymock.tests2.UsageTest.resumeIfFailure":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":275,"org.easymock.tests2.StubTest.stubWithReturnValue":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":343,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":60,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":246,"org.easymock.tests2.SerializationTest.testAllMockedMethod":201,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":406,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":300,"org.easymock.samples.SupportTest.voteForRemovals":13,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":124,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":407,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":425,"org.easymock.tests.UsageExpectAndThrowTest.object":122,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":375,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":243,"org.easymock.tests2.DelegateToTest.testWrongClass":269,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":133,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":134,"org.easymock.tests.UsageStrictMockTest.range":76,"org.easymock.samples.ConstructorCalledMockTest.testTax":327,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":473,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":123,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":431,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":385,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":388,"org.easymock.tests2.CaptureTest.testCaptureNone":264,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":372,"org.easymock.tests.UsageUnorderedTest.message":135,"org.easymock.tests.UsageVerifyTest.twoReturns":39,"org.easymock.tests.UsageVarargTest.varargByteAccepted":33,"org.easymock.tests2.ThreadingTest.testThreadSafe":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":445,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":104,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":417,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":357,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":323,"org.easymock.tests2.UsageConstraintsTest.any":234,"org.easymock.tests2.StubTest.stub":152,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":382,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":400,"org.easymock.tests.UsageExpectAndThrowTest.longType":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":324,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":412,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":381,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":186,"org.easymock.tests2.SerializationTest.testClass":199,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":260,"org.easymock.tests.LimitationsTest.mockNativeMethod":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":70,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":291,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":477,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests2.NameTest.nameForMocksControl":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":479,"org.easymock.tests2.MockedExceptionTest.testMockedException":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":435,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":44,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":421,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":116,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":50,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":250,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":209,"org.easymock.tests.MockingTest.testNicePartialClassMocking":49,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":255,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":475,"org.easymock.tests2.CaptureTest.testCaptureLast":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":301,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":356,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":217,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":231,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":244,"org.easymock.tests.MockingTest.testTwoMocks":331,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":455,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":51,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":120,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":179,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":248,"org.easymock.samples.ExampleTest.removeNonExistingDocument":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":481,"org.easymock.tests.UsageStrictMockTest.differentMethods":77,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":462,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":410,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":220,"org.easymock.tests2.MockBuilderTest.testCreateMockString":296,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":436,"org.easymock.tests.UsageExpectAndThrowTest.floatType":114,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":196,"org.easymock.tests.UsageVerifyTest.twoThrows":38,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":204,"org.easymock.samples.ExampleTest.voteAgainstRemoval":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":315,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":370,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":258,"org.easymock.tests.LimitationsTest.privateConstructor":404,"org.easymock.tests2.UsageConstraintsTest.testNotNull":247,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":143,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":287,"org.easymock.tests2.UsageTest.defaultResetToNice":178,"org.easymock.samples.ExampleTest.voteAgainstRemovals":16,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":316,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":476,"org.easymock.tests.UsageVarargTest.differentLength":30,"org.easymock.tests2.CallbackTest.callback":169,"org.easymock.tests2.UsageConstraintsTest.equals":456,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":297,"org.easymock.tests.UsageTest.openCallCountByLastCall":43,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":84,"org.easymock.tests.UsageCallCountTest.tooFewCalls":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":214,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":390,"org.easymock.tests.UsageThrowableTest.throwCheckedException":140,"org.easymock.tests.MockingTest.testStrictClassMocking":364,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":81,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":480,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":213,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":384,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":215,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":198,"org.easymock.tests.ObjectMethodsTest.testHashCode":416,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":302,"org.easymock.tests2.NameTest.nameForNiceMock":193,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":222,"org.easymock.tests2.DependencyTest.testInterfaceMocking":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":346,"org.easymock.samples.ExampleTest.addDocument":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":450,"org.easymock.tests2.DelegateToTest.testStubDelegate":268,"org.easymock.tests2.AnswerTest.stubAnswer":197,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":74,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":293,"org.easymock.tests.UsageVarargTest.varargLongAccepted":32,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":313,"org.easymock.tests.UsageExpectAndReturnTest.floatType":53,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":69,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":190,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":328,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":468,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":392,"org.easymock.tests.UsageThrowableTest.noUpperLimit":137,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":242,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":224,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":471,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":3,"org.easymock.tests2.SerializationTest.test":200,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":409,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":52,"org.easymock.tests2.UsageConstraintsTest.testSame":229,"org.easymock.samples.SupportTest.addDocument":12,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":454,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":437,"org.easymock.tests.GenericTest.testPackageScope":107,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":467,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":367,"org.easymock.tests2.NameTest.nameForMock":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":63,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":491,"org.easymock.tests2.UsageStrictMockTest.differentMethods":188,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":458,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":55,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":126,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":280,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":149,"org.easymock.tests2.MockedExceptionTest.testRealException":289,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":363,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":299,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":317,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":83,"org.easymock.tests2.NameTest.nameForStrictMock":192,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":452,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":150,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":254,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":472,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":411,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":206,"org.easymock.tests2.UsageStrictMockTest.range":187,"org.easymock.tests2.UsageConstraintsTest.lessThan":249,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":464,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":441,"org.easymock.tests2.CaptureTest.testCaptureRightOne":6,"org.easymock.tests2.UsageConstraintsTest.testOr":230,"org.easymock.tests.UsageRangeTest.combination":146,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":251,"org.easymock.tests.UsageTest.wrongArguments":42,"org.easymock.tests2.MockBuilderTest.testWithConstructor":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":438,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":56,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":305,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":413,"org.easymock.tests.UsageVarargTest.varargShortAccepted":31,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":402,"org.easymock.tests2.UsageConstraintsTest.cmpTo":235,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":307,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests2.CaptureTest.testCaptureFromStub":7,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":376,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":339,"org.easymock.tests.UsageTest.unexpectedCallWithArray":354,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":73,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":103,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":65,"org.easymock.tests2.CaptureTest.testCapture":350,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":75,"org.easymock.tests2.UsageConstraintsTest.constraints":225,"org.easymock.samples.ExampleTest.addAndChangeDocument":22,"org.easymock.tests.UsageStrictMockTest.testVerify":79,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":11,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":394,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":96,"org.easymock.tests.LimitationsTest.abstractClass":403,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":97,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":160,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":26}}]
