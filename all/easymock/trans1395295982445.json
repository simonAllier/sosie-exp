[{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[3,4,5,6,7,8,9],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,10,90,91,11,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,0,228,229,230,231,232,2,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"this.org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,40,42,43,57,58,61,82,84,85,86,87,88,89,10,91,11,92,93,94,95,96,104,105,108,109,112,113,114,115,141,143,145,146,147,148,149,150,151,152,160,161,163,164,166,169,170,172,173,176,177,178,179,181,182,183,184,185,186,187,188,190,193,196,199,201,202,204,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,0,228,229,230,231,232,2,233,235,236,237,238,240,243,244,245,246,305,247,248,249,250,251,252,253,254,255,256,258,259,260,261,263,264,266,267,268,270,272,273,277,278,281,282,283,284,285,286,287,290,292,293,301,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult","delegateTo":"value","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[306,307,308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[309,263,264,265],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[310,311,169,170,171,172,173,174,175,176,178,312,179,180,181,182],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[313,314,315,316],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[317,131,162,168,279,280,301,318,302,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[132,162,239,241,242],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[319,320,321,322,323,324,37,39,40,41,42,43,44,325,45,46,49,50,51,326,327,84,328,329,330,331,332,333,104,105,106,107,110,111,112,125,334,335,336,337,134,135,141,142,143,168,184,191,194,338,339,340,341,342,197,199,200,201,202,203,209,343,216,229,249,344,251,253,255,256,258,259,266,268,269,270,271,275,276,277,278,282,283,286,287,288,289,345,292,293,294,295,296],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[346,14,347,348,15,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"position":"org.easymock.internal.Range:36","failures":[350,351,16,352,353,354,355,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,319,356,357,320,321,322,323,324,37,38,39,40,41,42,43,44,358,359,360,361,362,363,325,364,45,46,47,48,49,50,51,52,53,54,55,56,326,327,365,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,366,367,368,369,82,83,370,371,84,372,85,86,373,328,374,375,329,330,376,377,331,332,333,378,379,380,87,88,89,10,90,91,11,92,93,94,95,96,97,381,98,99,100,101,102,103,382,313,314,104,105,106,107,108,109,110,111,112,383,384,385,113,114,386,115,387,388,389,116,117,118,119,390,346,14,347,348,12,15,391,349,120,121,122,392,123,124,125,126,127,128,129,130,393,394,395,396,397,398,399,400,401,402,403,404,405,317,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,334,131,335,132,133,336,337,134,135,136,137,138,139,140,141,142,143,144,145,146,428,147,148,149,150,151,429,315,316,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,430,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,431,190,432,433,191,192,193,194,434,338,195,196,435,339,340,341,342,197,198,199,200,201,202,203,204,3,436,205,206,207,208,437,438,439,440,441,442,209,343,443,444,445,446,447,448,449,450,210,451,452,211,453,454,455,456,457,458,459,460,461,212,462,463,464,465,466,213,467,468,214,215,216,217,469,218,219,220,221,222,223,470,224,225,226,227,0,228,229,230,231,232,2,233,234,235,236,237,238,471,239,240,241,472,242,473,474,243,244,245,246,305,247,248,475,476,477,478,479,249,344,480,481,482,483,484,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,485,280,486,487,488,489,490,491,492,281,282,283,284,493,285,286,287,494,288,495,289,345,496,497,290,291,292,9,293,498,499,294,295,500,296,297,298,299,300,301,501,318,302,303,304],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[40,42,43,326,327,105,107,110,111,135,141,142,143,199,201,202,502,503,308,504,505,506,507,268,269,275,276],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[204,3,4,5,6,508,263,9,499],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[354,366,367,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[346,14,15],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,10,90,91,11,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,310,310,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,0,228,229,230,231,232,2,233,234,235,236,237,238,239,240,241,242,243,244,245,246,305,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[509,510,511],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[169,171,179,216,217,219,221,222,470,232,236],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:218","failures":[369,370,152,155,156,432,193,338,204,3,211,212,263,290,498,499,294,296],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[309,263,264,265],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[223,0,238,1],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[230,512],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[39,513,514,106,515,505],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[60,407,414,418,195],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:104","sourceCode":"java.lang.StringBuffer.append(org.easymock.internal.Invocation.getMockAndMethodName())","type":"CtInvocationImpl"},"failures":[39,40,42,43,326,327,105,107,110,111,135,141,142,143,339,340,341,342,199,201,202,268,269,275,276],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[359,362,363,401],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[204,3,4,5,6,508,263,9,499],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[169,171,172,173,174,175,176,178,312,179,180,182],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":217,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":104,"org.easymock.tests2.UsageTest.argumentsOrdered":276,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":403,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":271,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":158,"org.easymock.tests2.DelegateToTest.testReturnException":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":99,"org.easymock.tests.MockingTest.testPartialClassMocking":113,"org.easymock.tests.MockClassControlTest.testToString":331,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":435,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":456,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":62,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":211,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":244,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":4,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":57,"org.easymock.tests2.UsageTest.wrongArguments":269,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":447,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":118,"org.easymock.samples.ExampleTest.answerVsDelegate":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":322,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":388,"org.easymock.tests2.UsageConstraintsTest.testNull":219,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":186,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":259,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":380,"org.easymock.tests2.CaptureTest.testPrimitive":172,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":61,"org.easymock.tests.UsageTest.moreThanOneArgument":105,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":81,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":138,"org.easymock.tests.UsageTest.argumentsOrdered":111,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":359,"org.easymock.tests.UsageVarargTest.varargIntAccepted":122,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":8,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":288,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":488,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":483,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":151,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":308,"org.easymock.tests.ReplayStateInvalidUsageTest.times":424,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":209,"org.easymock.tests2.DependencyTest.testClassMocking":473,"org.easymock.tests2.AnswerTest.answer":301,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":409,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":208,"org.easymock.tests2.CaptureTest.testAnd":169,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":357,"org.easymock.tests2.UsageTest.strictResetToDefault":267,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":496,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":85,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":254,"org.easymock.tests2.DelegateToTest.testDelegate":242,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":77,"org.easymock.tests.LimitationsTest.mockFinalMethod":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":56,"org.easymock.tests2.DependencyTest.testClassMockingSupport":474,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":326,"org.easymock.tests2.CaptureTest.testCapture1_2446744":173,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":431,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":206,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":418,"org.easymock.tests.UsageThrowableTest.throwError":10,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":321,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":484,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":428,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":468,"org.easymock.samples.PartialClassMockTest.testGetArea":152,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":419,"org.easymock.tests.MockingTest.testInterfaceMocking":386,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":148,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":457,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":63,"org.easymock.tests2.UsageTest.niceToStrict":270,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":290,"org.easymock.tests2.MockBuilderTest.testCreateMock":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":464,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":444,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":515,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":71,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":255,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":325,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":116,"org.easymock.tests.UsageOverloadedMethodTest.overloading":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":133,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":0,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":28,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":87,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":227,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":178,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":392,"org.easymock.tests2.EasyMockSupportClassTest.testAll":210,"org.easymock.tests.MockClassControlTest.testEquals":379,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":83,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":79,"org.easymock.tests2.CaptureTest.testCaptureAll":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":54,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":207,"org.easymock.tests.MockNameTest.defaultName":334,"org.easymock.tests2.UsageConstraintsTest.testMatches":228,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":416,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":139,"org.easymock.samples.ExampleTest.voteForRemovals":166,"org.easymock.tests.UsageVarargTest.allKinds":130,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":141,"org.easymock.samples.BasicClassMockTest.testPrintContent":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":55,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":94,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":480,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":508,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":391,"org.easymock.tests2.UsageConstraintsTest.greaterThan":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":451,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":372,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":194,"org.easymock.samples.ExampleTest.voteForRemoval":163,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":349,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":434,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":246,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":323,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":189,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":144,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":266,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":252,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":98,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":471,"org.easymock.tests2.CaptureTest.testCaptureFirst":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":253,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":278,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":134,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":24,"org.easymock.tests2.CaptureTest.testCapture2_2446744":181,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":247,"org.easymock.tests2.UsageTest.moreThanOneArgument":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":410,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":295,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":129,"org.easymock.tests.GenericTest.testBridgedEquals":371,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":50,"org.easymock.tests.UsageExpectAndReturnTest.longType":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":52,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":250,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":80,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":234,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":381,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":136,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":315,"org.easymock.tests.UsageCallCountTest.tooManyCalls":51,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":306,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":465,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":25,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":93,"org.easymock.tests.MockingTest.testNiceClassMocking":389,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":282,"org.easymock.tests.MockingTest.testClassMocking":384,"org.easymock.tests2.UsageConstraintsTest.testContains":226,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":364,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":299,"org.easymock.tests2.UsageConstraintsTest.testFind":218,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":89,"org.easymock.tests.MockTypeTest.fromEasyMockClass":320,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":37,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":280,"org.easymock.tests.UsageExpectAndReturnTest.object":27,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":190,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":258,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":5,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":375,"org.easymock.tests.UsageTest.exactCallCountByLastCall":112,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":353,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":3,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":120,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":33,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":132,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":476,"org.easymock.tests.MockClassControlTest.testHashCode":378,"org.easymock.tests2.EasyMockSupportTest.testVerify":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":459,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":307,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":361,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":131,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":205,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":437,"org.easymock.tests.UsageVarargTest.varargCharAccepted":123,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":390,"org.easymock.tests2.CaptureTest.testCaptureMultiple":311,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastCall":272,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":261,"org.easymock.tests.DefaultClassInstantiatorTest.object":346,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":382,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":460,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":69,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":475,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":192,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":333,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":68,"org.easymock.tests.CapturesMatcherTest.test":310,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":34,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":213,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":332,"org.easymock.tests2.UsageTest.resumeIfFailure":277,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":319,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":487,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":101,"org.easymock.tests2.StubTest.stubWithReturnValue":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":26,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":235,"org.easymock.tests2.SerializationTest.testAllMockedMethod":265,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":408,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":505,"org.easymock.samples.SupportTest.voteForRemovals":160,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":369,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":478,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":74,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":309,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":414,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":501,"org.easymock.tests.UsageExpectAndThrowTest.object":72,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":355,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":2,"org.easymock.tests2.DelegateToTest.testWrongClass":241,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":145,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":146,"org.easymock.samples.ConstructorCalledMockTest.testTax":155,"org.easymock.tests.UsageStrictMockTest.range":42,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":491,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":257,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":73,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":448,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":426,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":110,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":117,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":513,"org.easymock.tests2.CaptureTest.testCaptureNone":177,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":368,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":510,"org.easymock.tests.UsageUnorderedTest.message":135,"org.easymock.tests.UsageVerifyTest.twoReturns":143,"org.easymock.tests.UsageVarargTest.varargByteAccepted":128,"org.easymock.tests2.ThreadingTest.testThreadSafe":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":462,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":48,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":153,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":329,"org.easymock.tests2.CaptureTest.testCapture_2617107":171,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":507,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":60,"org.easymock.tests2.UsageConstraintsTest.any":224,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":423,"org.easymock.tests2.StubTest.stub":195,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":100,"org.easymock.tests.UsageExpectAndThrowTest.longType":65,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":12,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":422,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":200,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":249,"org.easymock.tests2.SerializationTest.testClass":263,"org.easymock.tests.LimitationsTest.mockNativeMethod":16,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":36,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":440,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":203,"org.easymock.tests2.NameTest.nameForMocksControl":342,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":442,"org.easymock.tests2.MockedExceptionTest.testMockedException":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":452,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":109,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":485,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":115,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":66,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":183,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":293,"org.easymock.tests.MockingTest.testNicePartialClassMocking":114,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":188,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":438,"org.easymock.tests2.CaptureTest.testCaptureLast":176,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":327,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":222,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":287,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":233,"org.easymock.tests.MockingTest.testTwoMocks":385,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":494,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":70,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":275,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":237,"org.easymock.samples.ExampleTest.removeNonExistingDocument":430,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":443,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":420,"org.easymock.tests.UsageStrictMockTest.differentMethods":43,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":477,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":511,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":347,"org.easymock.tests2.ConstraintsToStringTest.andToString":504,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":305,"org.easymock.tests2.MockBuilderTest.testCreateMockString":296,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":453,"org.easymock.tests.UsageExpectAndThrowTest.floatType":64,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":436,"org.easymock.tests.UsageVerifyTest.twoThrows":142,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":212,"org.easymock.samples.ExampleTest.voteAgainstRemoval":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":404,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":366,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":193,"org.easymock.tests.LimitationsTest.privateConstructor":351,"org.easymock.tests2.UsageConstraintsTest.testNotNull":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":95,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":297,"org.easymock.tests2.UsageTest.defaultResetToNice":274,"org.easymock.samples.ExampleTest.voteAgainstRemovals":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":405,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":32,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":439,"org.easymock.tests.UsageVarargTest.differentLength":125,"org.easymock.tests2.CallbackTest.callback":168,"org.easymock.tests2.UsageConstraintsTest.equals":469,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":432,"org.easymock.tests.UsageTest.openCallCountByLastCall":108,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":59,"org.easymock.tests.UsageCallCountTest.tooFewCalls":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":119,"org.easymock.tests.UsageThrowableTest.throwCheckedException":92,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":514,"org.easymock.tests.MockingTest.testStrictClassMocking":383,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":97,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":286,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":343,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":425,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":285,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":304,"org.easymock.tests2.CompareToTest.testGreateOrEqual":1,"org.easymock.tests.ObjectMethodsTest.testHashCode":374,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":7,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":248,"org.easymock.tests2.NameTest.nameForNiceMock":341,"org.easymock.tests2.DependencyTest.testInterfaceMocking":243,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":6,"org.easymock.samples.ExampleTest.addDocument":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":467,"org.easymock.tests2.DelegateToTest.testStubDelegate":240,"org.easymock.tests2.AnswerTest.stubAnswer":303,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":40,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":498,"org.easymock.tests.UsageVarargTest.varargLongAccepted":127,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":35,"org.easymock.tests.UsageExpectAndReturnTest.floatType":19,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":204,"org.easymock.tests2.ConstraintsToStringTest.orToString":502,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":482,"org.easymock.tests.UsageThrowableTest.noUpperLimit":90,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":231,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":215,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":486,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":174,"org.easymock.tests2.SerializationTest.test":264,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":13,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":18,"org.easymock.tests2.UsageConstraintsTest.testSame":220,"org.easymock.samples.SupportTest.addDocument":159,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":493,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":454,"org.easymock.tests.GenericTest.testPackageScope":82,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":481,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":387,"org.easymock.tests2.NameTest.nameForMock":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":29,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":500,"org.easymock.tests2.UsageStrictMockTest.differentMethods":202,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":433,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":21,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":76,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":373,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":86,"org.easymock.tests2.MockedExceptionTest.testRealException":300,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":324,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":317,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":427,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":58,"org.easymock.tests2.NameTest.nameForStrictMock":340,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":497,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":279,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":187,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":490,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":232,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":348,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":289,"org.easymock.tests2.UsageStrictMockTest.range":201,"org.easymock.tests2.UsageConstraintsTest.lessThan":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":458,"org.easymock.tests2.CaptureTest.testCaptureRightOne":179,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":509,"org.easymock.tests2.UsageConstraintsTest.testOr":221,"org.easymock.tests.UsageRangeTest.combination":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":184,"org.easymock.tests.UsageTest.wrongArguments":107,"org.easymock.tests2.MockBuilderTest.testWithConstructor":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":455,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":377,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":30,"org.easymock.tests.UsageVarargTest.varargShortAccepted":126,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":15,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":49,"org.easymock.tests2.UsageConstraintsTest.cmpTo":225,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":396,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":273,"org.easymock.tests2.CaptureTest.testCaptureFromStub":180,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":417,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":345,"org.easymock.tests.UsageTest.unexpectedCallWithArray":106,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":31,"org.easymock.tests2.CaptureTest.testCapture":312,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":41,"org.easymock.tests2.UsageConstraintsTest.constraints":216,"org.easymock.samples.ExampleTest.addAndChangeDocument":167,"org.easymock.tests2.ConstraintsToStringTest.notToString":503,"org.easymock.tests.UsageStrictMockTest.testVerify":358,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":157,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":38,"org.easymock.tests2.CompareToTest.testGreateThan":512,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":53,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":149,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":23,"org.easymock.tests.LimitationsTest.abstractClass":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":150,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":121,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":256}}]
