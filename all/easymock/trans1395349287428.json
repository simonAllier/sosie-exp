[{"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"failures":[81,82,83,84,85,86,9,13,15,25,26,37,87],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[88,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[90],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","i":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[91],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[113,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[114],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[115,116,117,118,2,3,4,5,119,120,121,122,123,123,124,124,46,125,126,127,128,47,129,48,130,49,50,131,51,132,133,134,53,54,55,56,59,60,62,63,64,135,65,136,66,67,68,72,137,138,139,73,74,75,76,78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[141],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[142,143,104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[94,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[144,145,146,147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[115,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,115,182,183,116,184,185,186,81,187,188,117,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,118,2,3,208,4,209,210,211,212,213,5,214,82,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,119,120,121,233,0,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,83,256,84,257,258,259,260,261,262,263,264,265,266,267,268,269,85,86,270,271,141,272,273,274,275,276,88,277,278,279,280,281,140,6,282,7,8,283,284,9,10,285,286,287,288,289,290,291,292,148,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,11,12,13,14,15,16,314,315,17,18,316,19,20,21,317,22,23,24,25,26,27,28,29,30,31,32,33,34,35,318,319,320,321,36,322,323,324,325,326,122,327,328,329,330,331,332,37,38,39,40,333,334,335,336,41,337,42,43,338,44,339,340,341,342,45,123,123,124,124,343,46,125,126,127,344,47,129,345,346,48,130,49,347,50,348,131,51,349,133,350,351,352,52,353,354,87,355,356,357,358,359,53,360,361,54,362,363,364,365,366,367,368,369,370,55,371,372,373,374,375,56,376,377,378,379,380,381,382,383,384,385,386,387,388,389,57,58,390,391,392,393,394,395,396,397,398,399,400,401,402,59,60,61,62,63,64,135,403,65,404,405,136,66,67,68,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,69,424,70,71,425,426,427,428,429,430,142,431,93,94,432,95,96,97,98,99,100,101,102,433,434,92,435,436,437,143,438,103,104,439,440,441,105,106,442,72,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,137,465,466,467,468,469,470,471,472,473,474,475,476,477,138,478,139,73,74,75,76,77,78,79,479,480,80,481,482,483,107,108,109,110,484,485,486,487,488,489,111,112,490,491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[115,116,121,46,127,47,129,48,130,49,50,131,51,133,54,55,56,135,66,67,407,138],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[94],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[0,7,319,320,492,493,70],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[437],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[72,443],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[388,389],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[205,0,244,245,248,249,140,7,494,319,320,393,399,400,70],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[495,100,435,442],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":94,"org.easymock.tests2.UsageTest.argumentsOrdered":400,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":242,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":419,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":159,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":395,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":343,"org.easymock.tests2.DelegateToTest.testReturnException":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":215,"org.easymock.tests.MockingTest.testPartialClassMocking":2,"org.easymock.tests.MockClassControlTest.testToString":327,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":383,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":271,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":54,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":254,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":58,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":100,"org.easymock.tests2.UsageTest.wrongArguments":393,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":36,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":456,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":187,"org.easymock.samples.ExampleTest.answerVsDelegate":337,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":116,"org.easymock.tests2.UsageConstraintsTest.testNull":96,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":210,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":62,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":418,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":332,"org.easymock.tests2.CaptureTest.testPrimitive":110,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":325,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":86,"org.easymock.tests.UsageTest.moreThanOneArgument":243,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":61,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":39,"org.easymock.tests.UsageTest.argumentsOrdered":249,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":309,"org.easymock.tests.UsageVarargTest.varargIntAccepted":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":31,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":476,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":35,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":450,"org.easymock.tests.ReplayStateInvalidUsageTest.times":305,"org.easymock.tests2.DependencyTest.testClassMocking":388,"org.easymock.tests2.AnswerTest.answer":457,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":356,"org.easymock.tests2.CaptureTest.testAnd":107,"org.easymock.tests2.UsageTest.strictResetToDefault":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":136,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":38,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":413,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":29,"org.easymock.tests2.DelegateToTest.testDelegate":483,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":267,"org.easymock.tests.LimitationsTest.mockFinalMethod":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":218,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":238,"org.easymock.tests2.DependencyTest.testClassMockingSupport":389,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":291,"org.easymock.tests2.CaptureTest.testCapture1_2446744":484,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":87,"org.easymock.tests.UsageThrowableTest.throwError":191,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":299,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":183,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":477,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":333,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":377,"org.easymock.samples.PartialClassMockTest.testGetArea":46,"org.easymock.tests.MockingTest.testInterfaceMocking":208,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":32,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":240,"org.easymock.tests2.UsageTest.niceToStrict":394,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":255,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":149,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":48,"org.easymock.tests2.MockBuilderTest.testCreateMock":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":373,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":453,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":261,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":414,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":253,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":186,"org.easymock.tests.UsageOverloadedMethodTest.overloading":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":375,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":435,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":19,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":334,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":113,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":92,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":489,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":223,"org.easymock.tests2.EasyMockSupportClassTest.testAll":53,"org.easymock.tests.MockClassControlTest.testEquals":331,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":120,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":269,"org.easymock.tests2.CaptureTest.testCaptureAll":108,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":236,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":355,"org.easymock.tests.MockNameTest.defaultName":296,"org.easymock.tests2.UsageConstraintsTest.testMatches":436,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":40,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":297,"org.easymock.samples.ExampleTest.voteForRemovals":44,"org.easymock.tests.UsageVarargTest.allKinds":231,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":318,"org.easymock.samples.BasicClassMockTest.testPrintContent":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":237,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":197,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":422,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":482,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":219,"org.easymock.tests2.UsageConstraintsTest.greaterThan":143,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":360,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":28,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":68,"org.easymock.samples.ExampleTest.voteForRemoval":42,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":279,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":406,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":351,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":184,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":135,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":390,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":117,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":411,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":82,"org.easymock.tests2.CaptureTest.testCaptureFirst":491,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":412,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":402,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":315,"org.easymock.tests2.CaptureTest.testCapture2_2446744":490,"org.easymock.tests2.UsageTest.moreThanOneArgument":392,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":167,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":51,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":230,"org.easymock.tests.GenericTest.testBridgedEquals":233,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":180,"org.easymock.tests.UsageExpectAndReturnTest.longType":14,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":409,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":234,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":132,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":85,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":440,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":321,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":37,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":294,"org.easymock.tests.UsageCallCountTest.tooManyCalls":181,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":455,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":196,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":74,"org.easymock.tests.MockingTest.testNiceClassMocking":211,"org.easymock.tests.MockingTest.testClassMocking":207,"org.easymock.tests2.UsageConstraintsTest.testContains":434,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":174,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":128,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":137,"org.easymock.tests2.UsageConstraintsTest.testFind":95,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":336,"org.easymock.tests.MockTypeTest.fromEasyMockClass":182,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":380,"org.easymock.tests.UsageExpectAndReturnTest.object":316,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":417,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":225,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":288,"org.easymock.tests.UsageTest.exactCallCountByLastCall":250,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":154,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":270,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":443,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":23,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":220,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":201,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":467,"org.easymock.tests.MockClassControlTest.testHashCode":330,"org.easymock.tests2.EasyMockSupportTest.testVerify":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":368,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":311,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":199,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":354,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":430,"org.easymock.tests.UsageVarargTest.varargCharAccepted":224,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":272,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":172,"org.easymock.tests2.UsageTest.openCallCountByLastCall":396,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":420,"org.easymock.tests.DefaultClassInstantiatorTest.object":273,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":251,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":286,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":494,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":369,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":448,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":466,"org.easymock.tests2.ConstraintsToStringTest.anyToString":1,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":66,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":258,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":24,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":56,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":328,"org.easymock.tests2.UsageTest.resumeIfFailure":401,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":217,"org.easymock.tests2.StubTest.stubWithReturnValue":382,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":347,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":441,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":18,"org.easymock.tests2.SerializationTest.testAllMockedMethod":139,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":165,"org.easymock.samples.SupportTest.voteForRemovals":45,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":469,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":264,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":171,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":458,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":141,"org.easymock.tests.UsageExpectAndThrowTest.object":262,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":104,"org.easymock.tests2.DelegateToTest.testWrongClass":481,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":9,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":10,"org.easymock.samples.ConstructorCalledMockTest.testTax":123,"org.easymock.tests.UsageStrictMockTest.range":7,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":428,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":263,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":49,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":248,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":81,"org.easymock.tests2.CaptureTest.testCaptureNone":488,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":241,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":145,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.UsageVerifyTest.twoReturns":320,"org.easymock.tests.UsageVarargTest.varargByteAccepted":229,"org.easymock.tests2.ThreadingTest.testThreadSafe":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":371,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":178,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":125,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":289,"org.easymock.tests2.CaptureTest.testCapture_2617107":109,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":324,"org.easymock.tests2.UsageConstraintsTest.any":102,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":304,"org.easymock.tests2.StubTest.stub":381,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":216,"org.easymock.tests.UsageExpectAndThrowTest.longType":256,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":88,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":303,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":424,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":471,"org.easymock.tests2.SerializationTest.testClass":138,"org.easymock.tests.LimitationsTest.mockNativeMethod":5,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":121,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":26,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":447,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":425,"org.easymock.tests2.NameTest.nameForMocksControl":387,"org.easymock.tests2.MockedExceptionTest.testMockedException":464,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":361,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":247,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":4,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":84,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":379,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":59,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":50,"org.easymock.tests.MockingTest.testNicePartialClassMocking":3,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":64,"org.easymock.tests2.CaptureTest.testCaptureLast":487,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":445,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":292,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":99,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":79,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":439,"org.easymock.tests.MockingTest.testTwoMocks":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":11,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":260,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":399,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":106,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":147,"org.easymock.samples.ExampleTest.removeNonExistingDocument":339,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":452,"org.easymock.tests.UsageStrictMockTest.differentMethods":8,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":301,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":468,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":275,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":352,"org.easymock.tests2.MockBuilderTest.testCreateMockString":133,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":326,"org.easymock.tests.UsageExpectAndThrowTest.floatType":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":362,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":460,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":444,"org.easymock.tests.UsageVerifyTest.twoThrows":319,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":55,"org.easymock.samples.ExampleTest.voteAgainstRemoval":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":239,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":67,"org.easymock.tests.LimitationsTest.privateConstructor":213,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":90,"org.easymock.tests2.UsageConstraintsTest.testNotNull":105,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":463,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":198,"org.easymock.tests2.UsageTest.defaultResetToNice":398,"org.easymock.samples.ExampleTest.voteAgainstRemovals":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":161,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":22,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":446,"org.easymock.tests.UsageVarargTest.differentLength":226,"org.easymock.tests2.CallbackTest.callback":408,"org.easymock.tests2.UsageConstraintsTest.equals":432,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":404,"org.easymock.tests.UsageTest.openCallCountByLastCall":246,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":323,"org.easymock.tests.UsageCallCountTest.tooFewCalls":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":188,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":146,"org.easymock.tests.UsageThrowableTest.throwCheckedException":195,"org.easymock.tests.MockingTest.testStrictClassMocking":206,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":190,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":78,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":451,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":75,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":77,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":462,"org.easymock.tests2.CompareToTest.testGreateOrEqual":495,"org.easymock.tests.ObjectMethodsTest.testHashCode":287,"org.easymock.tests2.NameTest.nameForNiceMock":386,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":353,"org.easymock.tests2.DependencyTest.testInterfaceMocking":57,"org.easymock.samples.ExampleTest.addDocument":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":372,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":376,"org.easymock.tests2.AnswerTest.stubAnswer":461,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests.UsageVarargTest.varargLongAccepted":228,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":25,"org.easymock.tests.UsageExpectAndReturnTest.floatType":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":72,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":124,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":475,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":438,"org.easymock.tests.UsageThrowableTest.noUpperLimit":192,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":431,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":426,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":485,"org.easymock.tests2.SerializationTest.test":478,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":89,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":274,"org.easymock.tests2.UsageConstraintsTest.testSame":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":12,"org.easymock.samples.SupportTest.addDocument":342,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":363,"org.easymock.tests.GenericTest.testPackageScope":119,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":153,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":474,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":209,"org.easymock.tests2.NameTest.nameForMock":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":20,"org.easymock.tests2.UsageStrictMockTest.differentMethods":71,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":349,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":405,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":15,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":266,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":285,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":30,"org.easymock.tests2.MockedExceptionTest.testRealException":465,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":185,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":162,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":69,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":308,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":322,"org.easymock.tests2.NameTest.nameForStrictMock":385,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":346,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":378,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":427,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":492,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":103,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":276,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":47,"org.easymock.tests2.UsageStrictMockTest.range":70,"org.easymock.tests2.UsageConstraintsTest.lessThan":442,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":470,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":157,"org.easymock.tests2.CaptureTest.testCaptureRightOne":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":367,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":144,"org.easymock.tests2.UsageConstraintsTest.testOr":98,"org.easymock.tests.UsageRangeTest.combination":27,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":60,"org.easymock.tests.UsageTest.wrongArguments":245,"org.easymock.tests2.MockBuilderTest.testWithConstructor":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":364,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":21,"org.easymock.tests.UsageVarargTest.varargShortAccepted":227,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":277,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":179,"org.easymock.tests2.UsageConstraintsTest.cmpTo":433,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":152,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":397,"org.easymock.tests2.CaptureTest.testCaptureFromStub":112,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":298,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":129,"org.easymock.tests.UsageTest.unexpectedCallWithArray":244,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":177,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":114,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":317,"org.easymock.tests2.UsageConstraintsTest.constraints":93,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":282,"org.easymock.samples.ExampleTest.addAndChangeDocument":340,"org.easymock.tests.UsageStrictMockTest.testVerify":284,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":341,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":235,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":486,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":33,"org.easymock.tests.LimitationsTest.abstractClass":212,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":34,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":493,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":415,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":221}}]
