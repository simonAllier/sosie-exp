[{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod"}},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[7,8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[29,30,31,11,32,33,34,35,36,12,37,13,14,15,16,17,38,39,40,18,19,20,41,21,42,43,22,23,24,44,45,46,47,48,49,50,51,52,53,54,55,25,56],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[57,58,59,37,40,18,19,41,42,60,43,61,62,63,64,55,56,65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[0,66,1,67,2,68,69,70,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:120","sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,71,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,10,137,138,139,140,141],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[143,144,145,146,147,148,149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[8,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[8,150,151,154,155,158,159,160,161,164],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[165,166,167,57,168,58,59,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,29,213,214,30,31,11,215,216,217,218,219,220,221,222,223,224,225,226,227,37,13,14,228,229,15,16,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,143,248,249,250,144,145,28,251,252,253,254,255,256,257,146,258,259,260,261,147,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,17,309,310,311,312,313,148,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,149,38,39,334,40,18,19,335,336,337,338,339,340,341,20,41,342,21,42,60,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,142,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,9,389,390,43,22,391,392,393,394,395,23,24,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,61,62,63,64,436,437,438,439,440,441,442,443,444,445,446,447,139,140,141,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,0,465,66,1,67,2,68,3,466,69,4,467,5,468,469,470,471,55,472,25,56,65],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[473],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[474,18,19,21,25],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[7,8,9,10],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[133,136,475,476,477,150,478,479,480,481,155],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[13,20,21,42,25,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[212,345,400,405,449],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:61","failures":[242,310,311,312,363,364,367,369,142,386,0,465,66,3,466,4,468],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[378],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[482,483,484,103,113,8,485,486,487,488,489,490,491,492,493,494,495,496],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[37,14,15,16,17,497,498,474,40,18,19,20,41,21,42,43,22,23,24,61,62,63,64,55,25,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[76,77,78,484,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod","bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[361,379,385,499],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[150,155,158,159,160,162,163],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[363,364,369,142,371,381,0,66,4],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[185,194,195,197,198,199,200,201,16,17,18,109,117,364,142,370,372,375,381,382,383,385,392,24,425,432,433,4],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":364,"org.easymock.tests2.UsageTest.argumentsOrdered":24,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":227,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":254,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":392,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":352,"org.easymock.tests2.DelegateToTest.testReturnException":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":207,"org.easymock.tests.MockingTest.testPartialClassMocking":83,"org.easymock.tests.MockClassControlTest.testToString":96,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":435,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":266,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":497,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":458,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":158,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":370,"org.easymock.tests2.UsageTest.wrongArguments":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":309,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":447,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":204,"org.easymock.samples.ExampleTest.answerVsDelegate":345,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":483,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":308,"org.easymock.tests2.UsageConstraintsTest.testNull":367,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":110,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":431,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":101,"org.easymock.tests2.CaptureTest.testPrimitive":1,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":313,"org.easymock.tests.UsageTest.moreThanOneArgument":37,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":285,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":331,"org.easymock.tests.UsageTest.argumentsOrdered":16,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":335,"org.easymock.tests.UsageVarargTest.varargIntAccepted":233,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":217,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":485,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":420,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":221,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":48,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":441,"org.easymock.tests.ReplayStateInvalidUsageTest.times":321,"org.easymock.tests2.AnswerTest.answer":400,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":409,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":390,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":477,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":426,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":327,"org.easymock.tests2.DelegateToTest.testDelegate":464,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":339,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":281,"org.easymock.tests.LimitationsTest.mockFinalMethod":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":226,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":38,"org.easymock.tests2.CaptureTest.testCapture1_2446744":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":407,"org.easymock.tests.UsageThrowableTest.throwError":194,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":315,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":178,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":333,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":480,"org.easymock.samples.PartialClassMockTest.testGetArea":103,"org.easymock.tests.MockingTest.testInterfaceMocking":306,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":316,"org.easymock.tests2.CompareToTest.testLessOrEqual":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":218,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":182,"org.easymock.tests2.UsageTest.niceToStrict":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":126,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":267,"org.easymock.tests2.ThreadingTest.testChangeDefault":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":143,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":6,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":489,"org.easymock.tests2.MockBuilderTest.testCreateMock":493,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":444,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":45,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":275,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":427,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":167,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":202,"org.easymock.tests.UsageOverloadedMethodTest.overloading":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":130,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":214,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":376,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":297,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":375,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":69,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":234,"org.easymock.tests2.EasyMockSupportClassTest.testAll":122,"org.easymock.tests.MockClassControlTest.testEquals":100,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":78,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":283,"org.easymock.tests2.CaptureTest.testCaptureAll":465,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":408,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":224,"org.easymock.tests.MockNameTest.defaultName":193,"org.easymock.tests2.UsageConstraintsTest.testMatches":377,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":332,"org.easymock.samples.ExampleTest.voteForRemovals":349,"org.easymock.tests.UsageVarargTest.allKinds":242,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":40,"org.easymock.samples.BasicClassMockTest.testPrintContent":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":225,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":200,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":470,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":463,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":211,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":164,"org.easymock.tests2.UsageConstraintsTest.greaterThan":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":326,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":118,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":93,"org.easymock.samples.ExampleTest.voteForRemoval":346,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":451,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":119,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":179,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":113,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":389,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":102,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":251,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":424,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":206,"org.easymock.tests2.CaptureTest.testCaptureFirst":468,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":28,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":425,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":397,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":11,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":293,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":453,"org.easymock.tests2.UsageTest.moreThanOneArgument":43,"org.easymock.tests2.CaptureTest.testCapture2_2446744":5,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":261,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":241,"org.easymock.tests.GenericTest.testBridgedEquals":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":172,"org.easymock.tests.UsageExpectAndReturnTest.longType":289,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":422,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":222,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":495,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":284,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":384,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":149,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":329,"org.easymock.tests.UsageCallCountTest.tooManyCalls":173,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":33,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":271,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":199,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":132,"org.easymock.tests.MockingTest.testNiceClassMocking":86,"org.easymock.tests.MockingTest.testClassMocking":81,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":486,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":168,"org.easymock.tests2.UsageConstraintsTest.testContains":374,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":141,"org.easymock.tests2.UsageConstraintsTest.testFind":366,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":186,"org.easymock.tests.MockTypeTest.fromEasyMockClass":177,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":340,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":360,"org.easymock.tests.UsageExpectAndReturnTest.object":296,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":430,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":159,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":236,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":190,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":473,"org.easymock.tests.UsageTest.exactCallCountByLastCall":230,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":145,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":243,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":336,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":36,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":155,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":231,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":302,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":213,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":411,"org.easymock.tests.MockClassControlTest.testHashCode":99,"org.easymock.tests2.EasyMockSupportTest.testVerify":434,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":47,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":166,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":406,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":469,"org.easymock.tests.UsageVarargTest.varargCharAccepted":235,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":265,"org.easymock.tests2.UsageTest.openCallCountByLastCall":393,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":433,"org.easymock.tests.DefaultClassInstantiatorTest.object":87,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":165,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":188,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":127,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":273,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":410,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":116,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":98,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":272,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":303,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":174,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":97,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":49,"org.easymock.tests2.UsageTest.resumeIfFailure":396,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":209,"org.easymock.tests2.StubTest.stubWithReturnValue":456,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":150,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":385,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":295,"org.easymock.tests2.SerializationTest.testAllMockedMethod":10,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":259,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":153,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":52,"org.easymock.samples.SupportTest.voteForRemovals":355,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":76,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":413,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":278,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":7,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":264,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":401,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":245,"org.easymock.tests.UsageExpectAndThrowTest.object":276,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":382,"org.easymock.tests2.DelegateToTest.testWrongClass":462,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":215,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":216,"org.easymock.samples.ConstructorCalledMockTest.testTax":104,"org.easymock.tests.UsageStrictMockTest.range":21,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":398,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":429,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":277,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":121,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":203,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":32,"org.easymock.tests2.CaptureTest.testCaptureNone":466,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":183,"org.easymock.tests.UsageUnorderedTest.message":17,"org.easymock.tests.UsageVerifyTest.twoReturns":19,"org.easymock.tests.UsageVarargTest.varargByteAccepted":240,"org.easymock.tests2.ThreadingTest.testThreadSafe":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":128,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":170,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":191,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":106,"org.easymock.tests2.CaptureTest.testCapture_2617107":66,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":262,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":312,"org.easymock.tests2.UsageConstraintsTest.any":372,"org.easymock.tests2.StubTest.stub":455,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":263,"org.easymock.tests.UsageExpectAndThrowTest.longType":269,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":91,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":319,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":472,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":415,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests.LimitationsTest.mockNativeMethod":74,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":484,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":305,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":438,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":65,"org.easymock.tests2.NameTest.nameForMocksControl":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":440,"org.easymock.tests2.MockedExceptionTest.testMockedException":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":123,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":270,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":359,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":108,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":492,"org.easymock.tests.MockingTest.testNicePartialClassMocking":84,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":112,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":436,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":157,"org.easymock.tests2.CaptureTest.testCaptureLast":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":39,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":142,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":136,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":383,"org.easymock.tests.MockingTest.testTwoMocks":82,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":274,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":23,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":387,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":26,"org.easymock.samples.ExampleTest.removeNonExistingDocument":350,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":443,"org.easymock.tests.UsageStrictMockTest.differentMethods":42,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":412,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":89,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":452,"org.easymock.tests2.ConstraintsToStringTest.andToString":51,"org.easymock.tests2.MockBuilderTest.testCreateMockString":496,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":124,"org.easymock.tests.UsageExpectAndThrowTest.floatType":268,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":378,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":403,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":156,"org.easymock.tests.UsageVerifyTest.twoThrows":18,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":29,"org.easymock.samples.ExampleTest.voteAgainstRemoval":347,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":255,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":117,"org.easymock.tests.LimitationsTest.privateConstructor":73,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":481,"org.easymock.tests2.UsageConstraintsTest.testNotNull":386,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":139,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":201,"org.easymock.tests2.UsageTest.defaultResetToNice":395,"org.easymock.samples.ExampleTest.voteAgainstRemovals":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":256,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":301,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":437,"org.easymock.tests.UsageVarargTest.differentLength":237,"org.easymock.tests2.CallbackTest.callback":449,"org.easymock.tests2.UsageConstraintsTest.equals":365,"org.easymock.tests.UsageTest.openCallCountByLastCall":228,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":361,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":311,"org.easymock.tests.UsageCallCountTest.tooFewCalls":59,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":205,"org.easymock.tests.UsageThrowableTest.throwCheckedException":198,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":34,"org.easymock.tests.MockingTest.testStrictClassMocking":80,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":135,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":442,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":133,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":357,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":405,"org.easymock.tests.ObjectMethodsTest.testHashCode":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":162,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":454,"org.easymock.tests2.NameTest.nameForNiceMock":63,"org.easymock.tests2.DependencyTest.testInterfaceMocking":457,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":160,"org.easymock.samples.ExampleTest.addDocument":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":129,"org.easymock.tests2.DelegateToTest.testStubDelegate":461,"org.easymock.tests2.AnswerTest.stubAnswer":404,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":41,"org.easymock.tests.UsageVarargTest.varargLongAccepted":239,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":253,"org.easymock.tests.UsageExpectAndReturnTest.floatType":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":154,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":105,"org.easymock.tests2.ConstraintsToStringTest.orToString":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":419,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":30,"org.easymock.tests.UsageThrowableTest.noUpperLimit":195,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":362,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":137,"org.easymock.tests2.SerializationTest.test":9,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":287,"org.easymock.tests2.UsageConstraintsTest.testSame":368,"org.easymock.samples.SupportTest.addDocument":354,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":125,"org.easymock.tests.GenericTest.testPackageScope":77,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":144,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":418,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":307,"org.easymock.tests2.NameTest.nameForMock":61,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":298,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":479,"org.easymock.tests2.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":115,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":290,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":280,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":328,"org.easymock.tests2.MockedExceptionTest.testRealException":448,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":180,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":146,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":152,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":310,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":324,"org.easymock.tests2.NameTest.nameForStrictMock":62,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":358,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":111,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":138,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":498,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":90,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":381,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":487,"org.easymock.tests2.UsageStrictMockTest.range":25,"org.easymock.tests2.UsageConstraintsTest.lessThan":388,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":414,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":423,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":252,"org.easymock.tests2.CaptureTest.testCaptureRightOne":4,"org.easymock.tests2.UsageConstraintsTest.testOr":369,"org.easymock.tests.UsageRangeTest.combination":325,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":109,"org.easymock.tests.UsageTest.wrongArguments":14,"org.easymock.tests2.MockBuilderTest.testWithConstructor":476,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":95,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":299,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":92,"org.easymock.tests.UsageVarargTest.varargShortAccepted":238,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":171,"org.easymock.tests2.UsageConstraintsTest.cmpTo":373,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":250,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":394,"org.easymock.tests2.CaptureTest.testCaptureFromStub":467,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":314,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":488,"org.easymock.tests.UsageTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":169,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":478,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":300,"org.easymock.tests2.CaptureTest.testCapture":70,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":342,"org.easymock.tests2.UsageConstraintsTest.constraints":363,"org.easymock.samples.ExampleTest.addAndChangeDocument":351,"org.easymock.tests2.ConstraintsToStringTest.notToString":46,"org.easymock.tests.UsageStrictMockTest.testVerify":343,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":353,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":341,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":223,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":219,"org.easymock.tests.LimitationsTest.abstractClass":72,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":292,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":31,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":220,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":428,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":232}}]
