[{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[93,94],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[95,96,97,98,99,100,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"i"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[102],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[103,104],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[105,3,4,24,64],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:57","sourceCode":"return (((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[106,107],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,0,127,128,129,130,106,2,3,4,5,6,8,131,132,9,10,11,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,20,153,21,22,23,24,25,26,154,103,155,156,107,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,32,33,175,176,35,36,177,178,108,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,37,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,44,225,226,227,228,229,230,231,45,232,46,233,47,48,49,50,234,235,236,237,238,51,52,239,53,54,55,56,240,241,57,58,59,60,61,242,62,63,64,65,66,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,83,102,260,261,262,263,264,265,104,266,267,268,269,270,84,271,272,273,274,93,94,275,276,277,278,279,85,280,281,282,283,284,87,89,285,286,287,288,289,290,291,292,293,294,295,296,297,298,91,299,300,301,302,303,304,305,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[109,112,307,308,309,310,311,89,90,312,313,314,315,316,317,318,319,320,321,91,92,322,323,324,325,326],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[264,265,285,286,287,288,295,296],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[327],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:97","sourceCode":"if ((org.easymock.internal.Result == null) && (boolean)) {\n    org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType()));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[329],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:56","sourceCode":"if ((java.lang.Object[][((java.lang.Object[].int) - 1)]) == null) {\n    return java.lang.Object[];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[303,304,305,306],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[330,331,332],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[333,247,248],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[111,334,113,115,116,118,335,336,337,133,134,135,136,137,138,141,142,144,145,146,148,149,150,151,152,22,24,25,156,170,171,172,173,174,202,203,204,220,221,222,223,44,338,225,226,237,238,62,64,65,339,249,340,341,342,72,343,74,75,77,250,79,80,251,252,81,82,256,279,85,280,281,282,283,284,344,345,87,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[346,346,347,347,334,120,121,14,17,348,335,336,337,163,177,178,349,202,350,339,333,248,249,340,341,342,71,351,72,73,343,352,74,75,76,77,353,78,250,79,80,251,81,82,279,85,281,282,283,354,284,86,344,345,87,355,356,357,305],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[3,5,132,212,52,241],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[310,320],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":102,"org.easymock.tests2.UsageTest.argumentsOrdered":58,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":167,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":56,"org.easymock.tests2.StubTest.stubWithReturnValue":230,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":96,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":275,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":112,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":142,"org.easymock.tests2.SerializationTest.testAllMockedMethod":248,"org.easymock.tests2.DelegateToTest.testReturnException":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":165,"org.easymock.tests.MockingTest.testPartialClassMocking":335,"org.easymock.samples.SupportTest.voteForRemovals":111,"org.easymock.tests.MockClassControlTest.testToString":38,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":310,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":88,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":182,"org.easymock.tests.UsageExpectAndThrowTest.object":192,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":274,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":238,"org.easymock.tests2.DelegateToTest.testWrongClass":301,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":97,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":203,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":204,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":265,"org.easymock.tests2.UsageTest.wrongArguments":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":156,"org.easymock.samples.ConstructorCalledMockTest.testTax":346,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":326,"org.easymock.tests.UsageStrictMockTest.range":24,"org.easymock.samples.ExampleTest.answerVsDelegate":114,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":250,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":17,"org.easymock.tests2.UsageConstraintsTest.testNull":261,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":193,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":74,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":50,"org.easymock.tests2.CaptureTest.testPrimitive":288,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":159,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":201,"org.easymock.tests.UsageTest.moreThanOneArgument":6,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":222,"org.easymock.tests2.CaptureTest.testCaptureNone":293,"org.easymock.tests.UsageUnorderedTest.message":37,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":329,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests.UsageVarargTest.varargByteAccepted":129,"org.easymock.tests2.ThreadingTest.testThreadSafe":253,"org.easymock.tests.UsageTest.argumentsOrdered":10,"org.easymock.tests.UsageVarargTest.varargIntAccepted":124,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":176,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":42,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":120,"org.easymock.tests2.CaptureTest.testCapture_2617107":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":170,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":71,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":315,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":158,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":352,"org.easymock.tests2.UsageConstraintsTest.any":104,"org.easymock.tests2.StubTest.stub":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":166,"org.easymock.tests.UsageExpectAndThrowTest.longType":185,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":63,"org.easymock.tests2.SerializationTest.testClass":333,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":89,"org.easymock.tests.LimitationsTest.mockNativeMethod":202,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":91,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":349,"org.easymock.tests2.AnswerTest.answer":243,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":152,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":357,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":319,"org.easymock.tests2.CaptureTest.testAnd":285,"org.easymock.tests2.UsageTest.strictResetToDefault":239,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":328,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":86,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":66,"org.easymock.tests2.NameTest.nameForMocksControl":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":321,"org.easymock.tests2.MockedExceptionTest.testMockedException":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":233,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":225,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":132,"org.easymock.tests2.DelegateToTest.testDelegate":302,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":337,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":186,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":279,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":75,"org.easymock.tests.MockingTest.testNicePartialClassMocking":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":197,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":283,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":317,"org.easymock.tests2.CaptureTest.testCaptureLast":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":168,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":13,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":264,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":82,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":93,"org.easymock.tests.MockingTest.testTwoMocks":348,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":12,"org.easymock.tests2.CaptureTest.testCapture1_2446744":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":133,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":190,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":277,"org.easymock.tests.UsageThrowableTest.throwError":210,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":322,"org.easymock.tests.UsageStrictMockTest.differentMethods":25,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":309,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":16,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":255,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":316,"org.easymock.tests2.MockBuilderTest.testCreateMockString":78,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":224,"org.easymock.tests.UsageExpectAndThrowTest.floatType":184,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":84,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":244,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":341,"org.easymock.samples.PartialClassMockTest.testGetArea":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":171,"org.easymock.samples.ExampleTest.voteAgainstRemoval":116,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":345,"org.easymock.tests2.UsageTest.niceToStrict":55,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":183,"org.easymock.tests2.UsageConstraintsTest.testNotNull":276,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":217,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":343,"org.easymock.tests2.MockBuilderTest.testCreateMock":76,"org.easymock.samples.ExampleTest.voteAgainstRemovals":113,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":148,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":318,"org.easymock.tests.UsageVarargTest.differentLength":0,"org.easymock.tests2.CallbackTest.callback":51,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":323,"org.easymock.tests.UsageTest.openCallCountByLastCall":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":191,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":47,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":258,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":157,"org.easymock.tests.UsageCallCountTest.tooFewCalls":33,"org.easymock.tests.UsageOverloadedMethodTest.overloading":180,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":269,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":144,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":179,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":268,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":294,"org.easymock.tests.UsageThrowableTest.throwCheckedException":214,"org.easymock.tests2.EasyMockSupportClassTest.testAll":249,"org.easymock.tests.MockClassControlTest.testEquals":206,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":178,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":199,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":355,"org.easymock.tests2.CaptureTest.testCaptureAll":286,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":81,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":92,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":80,"org.easymock.tests.MockNameTest.defaultName":1,"org.easymock.tests2.UsageConstraintsTest.testMatches":270,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":252,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":223,"org.easymock.samples.ExampleTest.voteForRemovals":118,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":100,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":257,"org.easymock.tests2.NameTest.nameForNiceMock":69,"org.easymock.tests.UsageVarargTest.allKinds":106,"org.easymock.tests2.DependencyTest.testInterfaceMocking":237,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":2,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":99,"org.easymock.samples.BasicClassMockTest.testPrintContent":121,"org.easymock.samples.ExampleTest.addDocument":117,"org.easymock.tests2.DelegateToTest.testStubDelegate":300,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":216,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":61,"org.easymock.tests2.AnswerTest.stubAnswer":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":169,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":22,"org.easymock.tests2.UsageConstraintsTest.greaterThan":271,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":338,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":87,"org.easymock.tests.UsageVarargTest.varargLongAccepted":128,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":26,"org.easymock.samples.ExampleTest.voteForRemoval":115,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":254,"org.easymock.tests.UsageExpectAndReturnTest.floatType":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":151,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":18,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":354,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":339,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":314,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":272,"org.easymock.tests.UsageThrowableTest.noUpperLimit":211,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":28,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":259,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":163,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":290,"org.easymock.tests2.SerializationTest.test":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":327,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":331,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":232,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":212,"org.easymock.tests2.UsageConstraintsTest.testSame":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":134,"org.easymock.samples.SupportTest.addDocument":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":164,"org.easymock.tests2.CaptureTest.testCaptureFirst":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":46,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":30,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":140,"org.easymock.tests.GenericTest.testPackageScope":177,"org.easymock.tests2.CaptureTest.testCapture2_2446744":297,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":256,"org.easymock.tests2.UsageTest.moreThanOneArgument":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":77,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":313,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":130,"org.easymock.tests.GenericTest.testBridgedEquals":108,"org.easymock.tests2.NameTest.nameForMock":67,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":35,"org.easymock.tests.UsageExpectAndReturnTest.longType":136,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":231,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":353,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":145,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":94,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":198,"org.easymock.tests2.UsageStrictMockTest.differentMethods":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":137,"org.easymock.tests.UsageCallCountTest.tooManyCalls":36,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":196,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":208,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":226,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":32,"org.easymock.tests2.MockedExceptionTest.testRealException":306,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":325,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":107,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":79,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":351,"org.easymock.tests2.UsageConstraintsTest.testContains":267,"org.easymock.tests2.NameTest.nameForStrictMock":68,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":305,"org.easymock.tests2.UsageConstraintsTest.testFind":260,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":181,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":227,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":282,"org.easymock.tests.MockTypeTest.fromEasyMockClass":15,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":228,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":20,"org.easymock.tests.UsageExpectAndReturnTest.object":143,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":284,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":72,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":324,"org.easymock.tests2.UsageStrictMockTest.range":64,"org.easymock.tests2.UsageConstraintsTest.lessThan":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":98,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":311,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":209,"org.easymock.tests.UsageTest.exactCallCountByLastCall":11,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":103,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":45,"org.easymock.tests2.CaptureTest.testCaptureRightOne":295,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":218,"org.easymock.tests2.UsageConstraintsTest.testOr":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":95,"org.easymock.tests.UsageRangeTest.combination":44,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":85,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":149,"org.easymock.tests.UsageTest.wrongArguments":8,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":161,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":308,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":350,"org.easymock.tests2.EasyMockSupportTest.testVerify":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":146,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":219,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":332,"org.easymock.tests.UsageVarargTest.varargShortAccepted":127,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":160,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":34,"org.easymock.tests2.UsageConstraintsTest.cmpTo":266,"org.easymock.tests.UsageVarargTest.varargCharAccepted":125,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":242,"org.easymock.tests2.UsageTest.openCallCountByLastCall":240,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":241,"org.easymock.tests.DefaultClassInstantiatorTest.object":330,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":235,"org.easymock.tests2.CaptureTest.testCaptureFromStub":296,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":73,"org.easymock.tests.UsageTest.unexpectedCallWithArray":7,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":41,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":213,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":307,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":147,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":344,"org.easymock.tests2.UsageConstraintsTest.constraints":83,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":23,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":40,"org.easymock.samples.ExampleTest.addAndChangeDocument":119,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":188,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":150,"org.easymock.tests.UsageStrictMockTest.testVerify":154,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":342,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":39,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":153,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":291,"org.easymock.tests2.UsageTest.resumeIfFailure":59,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":172,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":14,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":139,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":29,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":48,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":105,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":123}}]
