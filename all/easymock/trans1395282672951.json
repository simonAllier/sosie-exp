[{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,1,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,36,81,82,83,84,85,39,86],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[87,88,89,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[91,57,92,93,94,80,95,96,97,98,39,86,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[117,118,119,120],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[45,121,122,123,124,125,126,127,101,103,111],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[128,129,130,131,132,41,133,134,135,42,43,136,137,44,138,139,140,141,142,45,121,143,122,144,123,124,145,146,147,148,149,87,150,46,151,152,126,153,88,154,155,127,156,89,157,47,158,159,160,161,49,50,162,163,164,165,51,166,167,168,169,170,171,52,172,53,173,174,175,176,177,178,179,180,181,182,183,184,185,101,102,103,104,105,106,107,108,186,109,111,112,113,114,187,188,189,0,190,191,192,193,194,54,195,91,55,56,57,92,196,197,198,199,200,1,201,93,58,59,60,202,2,203,61,62,63,64,204,205,118,119,206,207,208,65,209,210,211,212,213,214,215,216,217,218,218,219,219,220,221,222,223,224,225,226,227,228,229,230,231,3,232,4,5,6,7,8,9,233,234,235,236,237,238,239,10,240,241,242,243,244,66,245,246,247,248,249,250,251,69,252,253,254,255,256,257,258,259,11,260,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,261,262,263,264,265,266,267,73,74,268,269,270,271,272,273,274,275,276,75,277,278,279,280,281,76,282,77,94,78,79,80,95,283,284,36,96,81,82,285,37,83,84,85,286,287,288,289,38,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,98,39,86,315,316,317,318,319,320,321,322,323,324,40,99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[325,326,327,328,329,330,331],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[141,142,143,122,144,123,148,87,150,151,152,127,156,89,112,0,91,218,218,219,219,233,234,235,236,237,332,255,257,258,260,268,269,333,334,335,336,337,94,315,316,317,318,319],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[214,338,320,321,322],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[132,41,133,134,135,42,43,136,137,44,138,139,140,141,142,45,121,143,122,144,123,124,145,146,147,148,149,87,150,46,151,152,126,153,88,154,155,127,156,89,157,47,158,159,160,161,48,49,50,162,163,164,165,51,166,167,168,169,339,170,171,52,172,53,173,174,175,176,177,178,179,180,181,182,183,184,185,101,102,103,104,105,106,107,108,186,109,111,112,113,114,187,188,189,0,190,191,192,193,194,54,195,91,55,56,57,92,196,197,198,199,200,1,201,93,58,59,60,202,2,203,61,62,63,64,204,205,118,119,206,207,208,65,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,3,232,4,5,6,7,8,9,233,234,235,236,237,115,115,238,239,10,240,241,242,243,244,66,245,246,247,248,249,250,251,69,253,254,255,256,257,258,259,11,260,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,264,265,266,267,72,73,74,268,269,276,75,277,278,279,280,281,76,282,77,94,78,79,80,95,284,36,96,81,82,285,37,83,84,85,286,287,288,289,38,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,98,39,86,315,316,317,318,319,320,321,322,323,324,40,340],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[189,11,341,342],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[343,344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[345],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[149],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[45,124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"value","i":"i"}},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[346,347],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[325,348,162,326,327,328,349,350,194,331],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[141,151,155,351],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":121,"org.easymock.tests2.UsageTest.argumentsOrdered":62,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":36,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":289,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":60,"org.easymock.tests2.StubTest.stubWithReturnValue":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":325,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":304,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":220,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":155,"org.easymock.tests2.SerializationTest.testAllMockedMethod":164,"org.easymock.tests2.DelegateToTest.testReturnException":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":287,"org.easymock.tests.MockingTest.testPartialClassMocking":320,"org.easymock.samples.SupportTest.voteForRemovals":224,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":24,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":342,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":12,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":117,"org.easymock.tests.UsageExpectAndThrowTest.object":22,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":153,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":188,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":326,"org.easymock.tests2.DelegateToTest.testWrongClass":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":268,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":269,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":257,"org.easymock.tests2.UsageTest.wrongArguments":58,"org.easymock.samples.ConstructorCalledMockTest.testTax":218,"org.easymock.tests.UsageStrictMockTest.range":79,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":293,"org.easymock.samples.ExampleTest.answerVsDelegate":226,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":209,"org.easymock.tests2.UsageConstraintsTest.testNull":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":167,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":44,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":160,"org.easymock.tests2.CaptureTest.testPrimitive":104,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":260,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":31,"org.easymock.tests.UsageTest.moreThanOneArgument":96,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":292,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":317,"org.easymock.tests2.CaptureTest.testCaptureNone":186,"org.easymock.tests.UsageUnorderedTest.message":75,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":67,"org.easymock.tests.UsageVerifyTest.twoReturns":86,"org.easymock.tests.UsageVarargTest.varargByteAccepted":247,"org.easymock.tests2.ThreadingTest.testThreadSafe":177,"org.easymock.tests.UsageTest.argumentsOrdered":84,"org.easymock.tests.UsageVarargTest.varargIntAccepted":242,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":267,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":233,"org.easymock.tests2.CaptureTest.testCapture_2617107":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":330,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":157,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":97,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":11,"org.easymock.tests2.UsageConstraintsTest.any":146,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":159,"org.easymock.tests2.StubTest.stub":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":288,"org.easymock.tests.UsageExpectAndThrowTest.longType":15,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":273,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":55,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":206,"org.easymock.tests2.SerializationTest.testClass":162,"org.easymock.tests.LimitationsTest.mockNativeMethod":276,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":314,"org.easymock.tests2.AnswerTest.answer":204,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":125,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":176,"org.easymock.tests2.CaptureTest.testAnd":101,"org.easymock.tests2.UsageTest.strictResetToDefault":201,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":92,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":171,"org.easymock.tests2.NameTest.nameForMocksControl":131,"org.easymock.tests2.MockedExceptionTest.testMockedException":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":316,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":135,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":37,"org.easymock.tests2.DelegateToTest.testDelegate":185,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":16,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":165,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":161,"org.easymock.tests.MockingTest.testNicePartialClassMocking":321,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":27,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":169,"org.easymock.tests2.CaptureTest.testCaptureLast":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":38,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":215,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":124,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":281,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":88,"org.easymock.tests2.CaptureTest.testCapture1_2446744":105,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":338,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":295,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":174,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":61,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":156,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":346,"org.easymock.tests.UsageThrowableTest.throwError":3,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":272,"org.easymock.tests.UsageStrictMockTest.differentMethods":80,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":179,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":68,"org.easymock.tests2.MockBuilderTest.testCreateMockString":50,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":319,"org.easymock.tests.UsageExpectAndThrowTest.floatType":14,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":46,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":205,"org.easymock.tests.UsageVerifyTest.twoThrows":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":198,"org.easymock.samples.PartialClassMockTest.testGetArea":221,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":271,"org.easymock.tests2.CompareToTest.testLessOrEqual":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":234,"org.easymock.samples.ExampleTest.voteAgainstRemoval":228,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":172,"org.easymock.tests2.UsageTest.niceToStrict":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":13,"org.easymock.tests2.ThreadingTest.testChangeDefault":347,"org.easymock.tests2.UsageConstraintsTest.testNotNull":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":9,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":158,"org.easymock.tests2.UsageTest.defaultResetToNice":203,"org.easymock.tests2.MockBuilderTest.testCreateMock":48,"org.easymock.samples.ExampleTest.voteAgainstRemovals":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":310,"org.easymock.tests.UsageVarargTest.differentLength":66,"org.easymock.tests2.CallbackTest.callback":65,"org.easymock.tests.UsageTest.openCallCountByLastCall":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":21,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":42,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":141,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":259,"org.easymock.tests.UsageCallCountTest.tooFewCalls":265,"org.easymock.tests.UsageOverloadedMethodTest.overloading":239,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":87,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":306,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":212,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":149,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":109,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":294,"org.easymock.tests.UsageThrowableTest.throwCheckedException":6,"org.easymock.tests2.EasyMockSupportClassTest.testAll":196,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":251,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":279,"org.easymock.tests2.CaptureTest.testCaptureAll":102,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":175,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":256,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":214,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":211,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":274,"org.easymock.tests2.UsageConstraintsTest.testMatches":150,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":213,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":318,"org.easymock.samples.ExampleTest.voteForRemovals":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":329,"org.easymock.tests2.NameTest.nameForNiceMock":130,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":181,"org.easymock.tests.UsageVarargTest.allKinds":249,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":98,"org.easymock.tests2.DependencyTest.testInterfaceMocking":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":328,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":280,"org.easymock.samples.BasicClassMockTest.testPrintContent":217,"org.easymock.samples.ExampleTest.addDocument":229,"org.easymock.tests2.DelegateToTest.testStubDelegate":183,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":8,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":54,"org.easymock.tests2.AnswerTest.stubAnswer":118,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":290,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":94,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":350,"org.easymock.tests2.UsageConstraintsTest.greaterThan":151,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":252,"org.easymock.tests.UsageVarargTest.varargLongAccepted":246,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":53,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":95,"org.easymock.samples.ExampleTest.voteForRemoval":227,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":178,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":313,"org.easymock.tests.UsageExpectAndReturnTest.floatType":297,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":116,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":194,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":219,"org.easymock.tests.UsageThrowableTest.noUpperLimit":232,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":152,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":284,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":1,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":142,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":106,"org.easymock.tests2.SerializationTest.test":163,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":133,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":296,"org.easymock.tests2.UsageConstraintsTest.testSame":144,"org.easymock.samples.SupportTest.addDocument":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":286,"org.easymock.tests2.CaptureTest.testCaptureFirst":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":134,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":64,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":302,"org.easymock.tests.GenericTest.testPackageScope":250,"org.easymock.tests2.UsageTest.moreThanOneArgument":93,"org.easymock.tests2.CaptureTest.testCapture2_2446744":113,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":180,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":248,"org.easymock.tests.GenericTest.testBridgedEquals":344,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":73,"org.easymock.tests2.NameTest.nameForMock":128,"org.easymock.tests.UsageExpectAndReturnTest.longType":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":277,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":30,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":332,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":154,"org.easymock.tests2.UsageStrictMockTest.differentMethods":57,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":315,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":299,"org.easymock.tests.UsageCallCountTest.tooManyCalls":74,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":26,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":254,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":264,"org.easymock.tests2.MockedExceptionTest.testRealException":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":17,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":258,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":7,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":210,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":263,"org.easymock.tests2.NameTest.nameForStrictMock":129,"org.easymock.tests2.UsageConstraintsTest.testContains":148,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":192,"org.easymock.tests2.UsageConstraintsTest.testFind":143,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":10,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":207,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":208,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":76,"org.easymock.tests.UsageExpectAndReturnTest.object":305,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":170,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":47,"org.easymock.tests2.UsageStrictMockTest.range":56,"org.easymock.tests2.UsageConstraintsTest.lessThan":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":327,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":244,"org.easymock.tests.UsageTest.exactCallCountByLastCall":85,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":349,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":41,"org.easymock.tests2.CaptureTest.testCaptureRightOne":111,"org.easymock.tests2.UsageConstraintsTest.testOr":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":331,"org.easymock.tests.UsageRangeTest.combination":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":311,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":240,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":51,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":324,"org.easymock.tests.UsageTest.wrongArguments":82,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":300,"org.easymock.tests2.EasyMockSupportTest.testVerify":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":323,"org.easymock.tests.UsageVarargTest.varargShortAccepted":245,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":34,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":72,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":70,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":173,"org.easymock.tests2.UsageConstraintsTest.cmpTo":147,"org.easymock.tests.UsageVarargTest.varargCharAccepted":243,"org.easymock.tests2.CaptureTest.testCaptureMultiple":100,"org.easymock.tests2.CompareToTest.testLessThan":90,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":32,"org.easymock.tests2.UsageTest.openCallCountByLastCall":202,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":2,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":139,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":33,"org.easymock.tests2.CaptureTest.testCaptureFromStub":112,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":270,"org.easymock.tests.UsageTest.unexpectedCallWithArray":81,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":19,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":77,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":309,"org.easymock.tests2.CaptureTest.testCapture":110,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":78,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":52,"org.easymock.tests2.UsageConstraintsTest.constraints":45,"org.easymock.samples.ExampleTest.addAndChangeDocument":231,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":18,"org.easymock.tests.CapturesMatcherTest.test":115,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":312,"org.easymock.tests.UsageStrictMockTest.testVerify":283,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":222,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":278,"org.easymock.tests2.UsageTest.resumeIfFailure":63,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":107,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":235,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":301,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":236,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":99,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":241,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":43}}]
