[{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[15,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[19,20],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[21,22,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[26],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[27,28],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[29,30,31,32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[34,35],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[36,3,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[48,49,50,51,52,53],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[54,54,55,55,56,57],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[61,54,54,55,55,62,63,21,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,36,2,3,37,89,4,5,38,39,6,7,40,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,8,41,118,9,119,120,121,122,123,124,125,126,127,128,129,19,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,10,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,42,235,236,11,237,238,43,44,33,12,13,239,45,240,241,46,242,14,243,244,245,246,247,248,249,47,250,251,252,253,254,255,58,59,60,256,257,258,259,29,22,23,24,30,260,261,262,263,264,265,266,267,268,269,270,271,272,273,27,15,274,275,276,16,28,277,17,278,279,280,281,282,283,284,285,286,18,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,31,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,26,327,328,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[330,331,192],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[61,62,63,21,64,65,66,67,68,69,70,71,72,73,77,78,79,80,81,82,83,84,85,86,87,88,36,2,3,37,89,5,38,39,6,7,40,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,8,41,118,9,119,120,121,126,127,128,129,19,130,131,132,133,134,135,136,137,138,139,144,146,147,148,149,150,332,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,10,191,193,194,195,196,197,198,199,200,202,203,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,42,235,236,11,237,238,43,44,33,12,13,239,45,240,241,46,242,14,243,244,245,246,247,248,249,47,252,253,254,58,59,60,256,257,258,259,29,22,23,24,30,260,261,262,263,264,265,266,267,268,269,270,271,272,273,27,15,274,275,276,16,28,277,17,278,279,280,281,282,283,284,285,286,18,287,288,289,290,291,292,293,294,295,296,297,298,299,301,31,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,322,323,324,326,328],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[333,2,3,9,14],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[130,330,331,192,217],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[277,282,293,334],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[245,48,58,49,335,336,337,338,50,51,52,339,340,341,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:381","sourceCode":"while (java.lang.Class<?> != null) {\n    for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n        final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n        if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n            java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[342,343,344],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:228","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[326],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[268,269],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[272,27,282,285,293,345,346,347,334,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[349,350],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":15,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":143,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":238,"org.easymock.tests2.StubTest.stubWithReturnValue":218,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":49,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":290,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":64,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":105,"org.easymock.tests2.SerializationTest.testAllMockedMethod":60,"org.easymock.tests2.DelegateToTest.testReturnException":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":141,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":191,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":337,"org.easymock.tests.MockingTest.testPartialClassMocking":93,"org.easymock.samples.SupportTest.voteForRemovals":63,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":34,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":32,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":179,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":257,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":167,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":250,"org.easymock.tests.UsageExpectAndThrowTest.object":177,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":287,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":233,"org.easymock.tests2.DelegateToTest.testWrongClass":324,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":50,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":188,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":189,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":277,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":128,"org.easymock.samples.ConstructorCalledMockTest.testTax":54,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.samples.ExampleTest.answerVsDelegate":66,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":226,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":260,"org.easymock.tests2.UsageConstraintsTest.testNull":275,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":178,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":228,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":23,"org.easymock.tests2.CaptureTest.testPrimitive":309,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":131,"org.easymock.tests.UsageTest.moreThanOneArgument":89,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":186,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":208,"org.easymock.tests2.CaptureTest.testCaptureNone":314,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":124,"org.easymock.tests.UsageUnorderedTest.message":10,"org.easymock.tests.UsageVerifyTest.twoReturns":3,"org.easymock.tests.UsageVarargTest.varargByteAccepted":85,"org.easymock.tests2.ThreadingTest.testThreadSafe":267,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":201,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.UsageVarargTest.varargIntAccepted":79,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":158,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":331,"org.easymock.tests2.CaptureTest.testCapture_2617107":308,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":341,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":130,"org.easymock.tests2.UsageConstraintsTest.any":278,"org.easymock.tests2.StubTest.stub":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":142,"org.easymock.tests.UsageExpectAndThrowTest.longType":170,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":342,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":242,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":305,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":320,"org.easymock.tests.LimitationsTest.mockNativeMethod":187,"org.easymock.tests2.AnswerTest.answer":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":115,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":163,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":17,"org.easymock.tests2.CaptureTest.testAnd":306,"org.easymock.tests2.UsageTest.strictResetToDefault":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":302,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":244,"org.easymock.tests2.NameTest.nameForMocksControl":249,"org.easymock.tests2.MockedExceptionTest.testMockedException":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":223,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":213,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":39,"org.easymock.tests2.DelegateToTest.testDelegate":326,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":205,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":171,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":294,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":24,"org.easymock.tests.MockingTest.testNicePartialClassMocking":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":182,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":299,"org.easymock.tests2.CompareToTest.testCompareEqual":347,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":338,"org.easymock.tests2.CaptureTest.testCaptureLast":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":144,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":91,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":266,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":28,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":288,"org.easymock.tests.MockingTest.testTwoMocks":92,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":90,"org.easymock.tests2.CaptureTest.testCapture1_2446744":310,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":96,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":175,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":292,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":330,"org.easymock.tests.UsageThrowableTest.throwError":193,"org.easymock.tests.UsageStrictMockTest.differentMethods":119,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":269,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":210,"org.easymock.tests.UsageExpectAndThrowTest.floatType":169,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":284,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":252,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":258,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests2.CompareToTest.testLessOrEqual":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":147,"org.easymock.samples.ExampleTest.voteAgainstRemoval":68,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":122,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":123,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":303,"org.easymock.tests2.UsageTest.niceToStrict":237,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":168,"org.easymock.tests2.UsageConstraintsTest.testNotNull":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":200,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":26,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":22,"org.easymock.tests2.UsageTest.defaultResetToNice":33,"org.easymock.samples.ExampleTest.voteAgainstRemovals":65,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":111,"org.easymock.tests.UsageVarargTest.differentLength":82,"org.easymock.tests2.CallbackTest.callback":234,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":57,"org.easymock.tests.UsageTest.openCallCountByLastCall":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":176,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":224,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":272,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":76,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":19,"org.easymock.tests.UsageCallCountTest.tooFewCalls":156,"org.easymock.tests.UsageOverloadedMethodTest.overloading":165,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":282,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":107,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":164,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":343,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":281,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":315,"org.easymock.tests.UsageThrowableTest.throwCheckedException":197,"org.easymock.tests2.EasyMockSupportClassTest.testAll":256,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":162,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":184,"org.easymock.tests2.CaptureTest.testCaptureAll":307,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":265,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":127,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":262,"org.easymock.tests2.UsageConstraintsTest.testMatches":283,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":264,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":209,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":132,"org.easymock.tests2.CompareToTest.testGreateOrEqual":334,"org.easymock.samples.ExampleTest.voteForRemovals":70,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":340,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":271,"org.easymock.tests2.NameTest.nameForNiceMock":248,"org.easymock.tests.UsageVarargTest.allKinds":87,"org.easymock.tests2.DependencyTest.testInterfaceMocking":232,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":52,"org.easymock.samples.BasicClassMockTest.testPrintContent":73,"org.easymock.samples.ExampleTest.addDocument":69,"org.easymock.tests2.DelegateToTest.testStubDelegate":323,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":199,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":240,"org.easymock.tests2.AnswerTest.stubAnswer":253,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":145,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":41,"org.easymock.tests2.UsageConstraintsTest.greaterThan":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":53,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":212,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":304,"org.easymock.tests.UsageVarargTest.varargLongAccepted":84,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":120,"org.easymock.samples.ExampleTest.voteForRemoval":67,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":268,"org.easymock.tests.UsageExpectAndReturnTest.floatType":98,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":245,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":55,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":286,"org.easymock.tests.UsageThrowableTest.noUpperLimit":194,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":273,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":139,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":311,"org.easymock.tests2.SerializationTest.test":59,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":335,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":221,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":195,"org.easymock.tests2.UsageConstraintsTest.testSame":276,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":97,"org.easymock.samples.SupportTest.addDocument":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":140,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":321,"org.easymock.tests2.CaptureTest.testCaptureFirst":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":222,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":45,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":103,"org.easymock.tests.GenericTest.testPackageScope":161,"org.easymock.tests2.CaptureTest.testCapture2_2446744":318,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":270,"org.easymock.tests2.UsageTest.moreThanOneArgument":236,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":204,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":30,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":86,"org.easymock.tests.GenericTest.testBridgedEquals":350,"org.easymock.tests2.NameTest.nameForMock":246,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":159,"org.easymock.tests.UsageExpectAndReturnTest.longType":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":332,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":219,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":25,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":108,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":185,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":289,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":88,"org.easymock.tests2.UsageStrictMockTest.differentMethods":243,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":206,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":100,"org.easymock.tests.UsageCallCountTest.tooManyCalls":160,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":214,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":155,"org.easymock.tests2.MockedExceptionTest.testRealException":329,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":104,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":336,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":172,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":129,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":261,"org.easymock.tests2.UsageConstraintsTest.testContains":280,"org.easymock.tests2.NameTest.nameForStrictMock":247,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":328,"org.easymock.tests2.UsageConstraintsTest.testFind":274,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":166,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":215,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":298,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":216,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":116,"org.easymock.tests.UsageExpectAndReturnTest.object":106,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":301,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":29,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":227,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":51,"org.easymock.tests.UsageTest.exactCallCountByLastCall":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":126,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":339,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":220,"org.easymock.tests2.CaptureTest.testCaptureRightOne":316,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":202,"org.easymock.tests2.UsageConstraintsTest.testOr":16,"org.easymock.tests.UsageRangeTest.combination":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":295,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":77,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":112,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":135,"org.easymock.tests2.EasyMockSupportTest.testVerify":231,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":101,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":109,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":203,"org.easymock.tests.UsageVarargTest.varargShortAccepted":83,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":75,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":133,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":255,"org.easymock.tests2.UsageConstraintsTest.cmpTo":279,"org.easymock.tests.UsageVarargTest.varargCharAccepted":80,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":251,"org.easymock.tests2.CompareToTest.testLessThan":345,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":241,"org.easymock.tests2.UsageTest.openCallCountByLastCall":43,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":44,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":230,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":74,"org.easymock.tests2.CaptureTest.testCaptureFromStub":317,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":1,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":174,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":196,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":157,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":110,"org.easymock.tests2.UsageConstraintsTest.constraints":27,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":31,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":118,"org.easymock.samples.ExampleTest.addAndChangeDocument":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":113,"org.easymock.tests.UsageStrictMockTest.testVerify":121,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":151,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":259,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":117,"org.easymock.tests2.CompareToTest.testGreateThan":346,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":312,"org.easymock.tests2.UsageTest.resumeIfFailure":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":148,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":102,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":138,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":149,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":225,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":78}}]
