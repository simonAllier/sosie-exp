[{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:158","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl()","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,1,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matching"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[41,42,43,317],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[100,106,112,113,318,236,244,247,254,255,258,259,295,296],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[116,319,320,117,118,119,120,121,122,128,311],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:129","sourceCode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[321,322,323,324,325,326,327,328,329,330,331,332,333,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,1,27,28,29,30,31,32,33,36,37,334,335,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,336,89,90,91,92,93,94,95,96,97,98,99,100,101,102,337,338,339,340,341,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,342,120,121,122,343,123,124,344,345,125,126,346,347,348,349,350,351,352,353,354,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,208,209,210,211,212,213,214,221,222,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294,295,296,297,298,299,300,301,304,305,307,311,313,314,316],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[8,9,11,13,14,355,25,29,71,73,81],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[41,42,43,317],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[32,356,33,34,357,35,36,37,334,358,335,359,360,38,39,361,40,41,50,362,54,55,363,91,95,364,365,338,339,340,348,349,351,366,367,215,218],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[368,369,356,357,358,360,370,361,41,95,364,371,372,373,337,374,375,338,376,377,378,379,380,381,382,383,384,339,385,386,387,388,389,340,390,391,124,126,392,348,349],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[393,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"otherArgument":"this","myArgument":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[358,360,41,394,395,396,397,398,95,364],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[23,399],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[22],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[358,394,395,396,400,401,364],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[322,326,327,330,8,22,33,38,39,40,45,54,56,96,99,100,101,103,106,107,108,112,113,114,115,122,156,402,403,164,404,318,212,213,214,236,242,244,246,247,248,252,254,255,258,259,260,295,296],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[41,42,43,317],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[319,118,119],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[100,106,112,113,318,236,244,247,254,255,258,259,295,296],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[57,64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[89,173,225,405,406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[368,369,356,357,358,370,361,364,124,126,392],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[358,394,395,396,400,401,364],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[407],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[319,118,119,408],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[41,42,43,317],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[409,410,411,412],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[41,42,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"transplant":{"position":"org.easymock.internal.Injector:198","sourceCode":"final java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:156","sourceCode":"final java.lang.StackTraceElement[] java.lang.StackTraceElement[] = java.lang.Throwable.getStackTrace()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[366,162,163,367,413],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[162,367,413],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":9,"org.easymock.tests2.UsageTest.argumentsOrdered":113,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":252,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":331,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":108,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":350,"org.easymock.tests2.DelegateToTest.testReturnException":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":262,"org.easymock.tests.MockingTest.testPartialClassMocking":304,"org.easymock.tests.MockClassControlTest.testToString":200,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":379,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":178,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":338,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":336,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":394,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":15,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":170,"org.easymock.tests2.UsageTest.wrongArguments":106,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":269,"org.easymock.samples.ExampleTest.answerVsDelegate":128,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":218,"org.easymock.tests2.UsageConstraintsTest.testNull":11,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":309,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":47,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":205,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":330,"org.easymock.tests2.CaptureTest.testPrimitive":74,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":197,"org.easymock.tests.UsageTest.moreThanOneArgument":253,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":46,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":299,"org.easymock.tests.UsageTest.argumentsOrdered":259,"org.easymock.tests.UsageVarargTest.varargIntAccepted":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":401,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":32,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":147,"org.easymock.tests.ReplayStateInvalidUsageTest.times":231,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":341,"org.easymock.tests2.AnswerTest.answer":116,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":61,"org.easymock.tests2.CaptureTest.testAnd":71,"org.easymock.tests2.UsageTest.strictResetToDefault":104,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":53,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":357,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":298,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":325,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":0,"org.easymock.tests2.DelegateToTest.testDelegate":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":241,"org.easymock.tests2.CaptureTest.testCapture1_2446744":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":191,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":59,"org.easymock.tests.UsageThrowableTest.throwError":135,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":225,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":217,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":301,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":391,"org.easymock.samples.PartialClassMockTest.testGetArea":351,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":226,"org.easymock.tests.MockingTest.testInterfaceMocking":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":411,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":179,"org.easymock.tests2.UsageTest.niceToStrict":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":380,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":36,"org.easymock.tests2.MockBuilderTest.testCreateMock":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":387,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":187,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":326,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":267,"org.easymock.tests.UsageOverloadedMethodTest.overloading":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":20,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":314,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":283,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":19,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":80,"org.easymock.tests.MockClassControlTest.testEquals":204,"org.easymock.tests2.EasyMockSupportClassTest.testAll":337,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":163,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":195,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":60,"org.easymock.tests2.CaptureTest.testCaptureAll":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":239,"org.easymock.tests2.UsageConstraintsTest.testMatches":21,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":300,"org.easymock.samples.ExampleTest.voteForRemovals":132,"org.easymock.tests.UsageVarargTest.allKinds":161,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":240,"org.easymock.samples.BasicClassMockTest.testPrintContent":347,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":141,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":266,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":398,"org.easymock.tests2.UsageConstraintsTest.greaterThan":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":165,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":56,"org.easymock.samples.ExampleTest.voteForRemoval":129,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":57,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":63,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":50,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":103,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":251,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":323,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":261,"org.easymock.tests2.CaptureTest.testCaptureFirst":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":324,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":115,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":279,"org.easymock.tests2.UsageTest.moreThanOneArgument":105,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":65,"org.easymock.tests2.CaptureTest.testCapture2_2446744":83,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":39,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":160,"org.easymock.tests.GenericTest.testBridgedEquals":413,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":213,"org.easymock.tests.UsageExpectAndReturnTest.longType":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":237,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":321,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":196,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":27,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":297,"org.easymock.tests.UsageCallCountTest.tooManyCalls":214,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":280,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":183,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":140,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":123,"org.easymock.tests.MockingTest.testNiceClassMocking":310,"org.easymock.tests.MockingTest.testClassMocking":303,"org.easymock.tests2.UsageConstraintsTest.testContains":18,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":207,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":93,"org.easymock.tests2.UsageConstraintsTest.testFind":10,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":150,"org.easymock.tests.MockTypeTest.fromEasyMockClass":216,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":121,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":242,"org.easymock.tests.UsageExpectAndReturnTest.object":282,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":329,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":395,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":155,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":177,"org.easymock.tests.UsageTest.exactCallCountByLastCall":260,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":364,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":151,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":288,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":313,"org.easymock.tests.MockClassControlTest.testHashCode":203,"org.easymock.tests2.EasyMockSupportTest.testVerify":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":382,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":311,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":404,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":58,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":87,"org.easymock.tests.UsageVarargTest.varargCharAccepted":154,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":97,"org.easymock.tests2.UsageTest.openCallCountByLastCall":109,"org.easymock.tests.DefaultClassInstantiatorTest.object":271,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":332,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":175,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":383,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":138,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":54,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":289,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":340,"org.easymock.tests2.UsageTest.resumeIfFailure":114,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":264,"org.easymock.tests2.StubTest.stubWithReturnValue":90,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":358,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":28,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":281,"org.easymock.tests2.SerializationTest.testAllMockedMethod":43,"org.easymock.samples.SupportTest.voteForRemovals":354,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":366,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":190,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":317,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":406,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":319,"org.easymock.tests.UsageExpectAndThrowTest.object":188,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":26,"org.easymock.tests2.DelegateToTest.testWrongClass":69,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":221,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":222,"org.easymock.tests.UsageStrictMockTest.range":247,"org.easymock.samples.ConstructorCalledMockTest.testTax":348,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":328,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":189,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":334,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":233,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":412,"org.easymock.tests2.CaptureTest.testCaptureNone":79,"org.easymock.tests.UsageUnorderedTest.message":236,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":402,"org.easymock.tests.UsageVerifyTest.twoReturns":296,"org.easymock.tests.UsageVarargTest.varargByteAccepted":159,"org.easymock.tests2.ThreadingTest.testThreadSafe":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":385,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":211,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":346,"org.easymock.tests2.CaptureTest.testCapture_2617107":73,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":173,"org.easymock.tests2.UsageConstraintsTest.any":16,"org.easymock.tests2.StubTest.stub":89,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":230,"org.easymock.tests.UsageExpectAndThrowTest.longType":181,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":263,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":229,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":99,"org.easymock.tests2.SerializationTest.testClass":41,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":342,"org.easymock.tests.LimitationsTest.mockNativeMethod":235,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":291,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":367,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":102,"org.easymock.tests2.NameTest.nameForMocksControl":5,"org.easymock.tests2.MockedExceptionTest.testMockedException":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":375,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":257,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":182,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":307,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":44,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":335,"org.easymock.tests.MockingTest.testNicePartialClassMocking":305,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":49,"org.easymock.tests2.CaptureTest.testCaptureLast":78,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":292,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":126,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":14,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":1,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":186,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":112,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":30,"org.easymock.samples.ExampleTest.removeNonExistingDocument":133,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":227,"org.easymock.tests.UsageStrictMockTest.differentMethods":248,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":64,"org.easymock.tests2.MockBuilderTest.testCreateMockString":40,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":198,"org.easymock.tests.UsageExpectAndThrowTest.floatType":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":376,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":117,"org.easymock.tests.UsageVerifyTest.twoThrows":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":365,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":339,"org.easymock.samples.ExampleTest.voteAgainstRemoval":130,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":410,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":55,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":369,"org.easymock.tests2.UsageConstraintsTest.testNotNull":29,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":142,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":91,"org.easymock.tests2.UsageTest.defaultResetToNice":111,"org.easymock.samples.ExampleTest.voteAgainstRemovals":127,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":287,"org.easymock.tests.UsageVarargTest.differentLength":156,"org.easymock.tests2.CallbackTest.callback":122,"org.easymock.tests2.UsageConstraintsTest.equals":393,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":362,"org.easymock.tests.UsageTest.openCallCountByLastCall":256,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":172,"org.easymock.tests.UsageCallCountTest.tooFewCalls":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":270,"org.easymock.tests.UsageThrowableTest.throwCheckedException":139,"org.easymock.tests.MockingTest.testStrictClassMocking":302,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":169,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":125,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":124,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":232,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":345,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":119,"org.easymock.tests.ObjectMethodsTest.testHashCode":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":400,"org.easymock.tests2.NameTest.nameForNiceMock":4,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":66,"org.easymock.tests2.DependencyTest.testInterfaceMocking":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":396,"org.easymock.samples.ExampleTest.addDocument":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.DelegateToTest.testStubDelegate":68,"org.easymock.tests2.AnswerTest.stubAnswer":118,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":245,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":359,"org.easymock.tests.UsageVarargTest.varargLongAccepted":158,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":249,"org.easymock.tests.UsageExpectAndReturnTest.floatType":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":95,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":349,"org.easymock.tests.UsageThrowableTest.noUpperLimit":136,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":24,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":7,"org.easymock.tests2.SerializationTest.test":42,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":76,"org.easymock.tests2.UsageConstraintsTest.testSame":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":273,"org.easymock.samples.SupportTest.addDocument":353,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":377,"org.easymock.tests.GenericTest.testPackageScope":162,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":308,"org.easymock.tests2.NameTest.nameForMock":2,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":284,"org.easymock.tests2.UsageStrictMockTest.differentMethods":101,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":361,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":276,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":192,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":167,"org.easymock.tests2.MockedExceptionTest.testRealException":94,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":220,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":86,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":407,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":171,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":234,"org.easymock.tests2.NameTest.nameForStrictMock":3,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":35,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":120,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":48,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":85,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":25,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":100,"org.easymock.tests2.UsageConstraintsTest.lessThan":31,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":397,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":322,"org.easymock.tests2.CaptureTest.testCaptureRightOne":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":381,"org.easymock.tests2.UsageConstraintsTest.testOr":13,"org.easymock.tests.UsageRangeTest.combination":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":45,"org.easymock.tests.UsageTest.wrongArguments":255,"org.easymock.tests2.MockBuilderTest.testWithConstructor":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":378,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":199,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":285,"org.easymock.tests.UsageVarargTest.varargShortAccepted":157,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":212,"org.easymock.tests2.UsageConstraintsTest.cmpTo":17,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":320,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":110,"org.easymock.tests2.CaptureTest.testCaptureFromStub":82,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":224,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":34,"org.easymock.tests.UsageTest.unexpectedCallWithArray":254,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":244,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":210,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":370,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":286,"org.easymock.tests2.UsageConstraintsTest.constraints":8,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":246,"org.easymock.samples.ExampleTest.addAndChangeDocument":134,"org.easymock.tests.UsageStrictMockTest.testVerify":250,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":352,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":243,"org.easymock.tests2.CompareToTest.testGreateThan":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":238,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":77,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":145,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":146,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":327}}]
