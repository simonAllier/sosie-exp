[{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"expected","this":"actual"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,0,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[508,509,510,94,95,187],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[41,511,512,513,514,515,516],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"i","java.lang.Integer.MAX_VALUE":"i"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[20,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[88,102,188,221],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[49,50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[517],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[165],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[147,152,155],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3,5,6,8,14,18,20,21,22,23,29,38,39,40,44,46,47,49,50,59,60,61,62,64,65,66,68,69,71,72,75,76,77,78,80,81,82,83,84,85,86,87,90,94,95,96,104,111,125,129,130,131,132,133,134,135,136,137,138,139,140,143,144,145,146,147,149,150,151,152,153,154,156,157,158,0,159,160,161,162,163,164,165,166,168,169,170,171,177,181,184,187,189,190,194,202,203,204,206,208,209,210,213,214,218,221,231,237,263,264,265,266,270,272,273,274,275,276,277,279,284,286,287,288,289,290,291,295,297,298,341,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,382,407,414,422,423,426,427,428,429,442,443,452,453,455,495,496,497,498,499,500,503,504,507],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[518,519,520,521,294,501],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[305,309,312],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[302,303,469,470],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[46,522,271,272,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"candidateParameters","i":"i"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[147,153,164],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type","org.easymock.MockType.STRICT":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[480,482,491,492,494],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[409,412,413,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,10,11,11,12,12,13,14,15,16,17,18,20,21,22,23,29,38,39,40,42,43,44,45,46,47,48,49,50,51,58,59,60,61,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,95,96,99,101,102,103,104,105,111,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,0,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,187,189,190,194,202,203,204,205,206,207,208,209,210,211,212,213,214,218,221,231,237,262,263,264,265,270,271,272,273,274,275,276,277,279,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,317,318,319,320,321,322,331,333,334,335,336,338,339,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,407,409,410,411,412,413,414,415,417,422,423,424,425,426,427,428,429,430,431,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,451,452,453,455,459,467,468,469,470,487,493,495,496,497,498,499,500,502,503,504,505,506,507],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[474],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":147,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":499,"org.easymock.tests2.UsageTest.argumentsOrdered":212,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":481,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":207,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":13,"org.easymock.tests2.DelegateToTest.testReturnException":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":318,"org.easymock.tests.MockingTest.testPartialClassMocking":452,"org.easymock.tests.MockClassControlTest.testToString":461,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":172,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":384,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":221,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":39,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":261,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":511,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":422,"org.easymock.tests2.UsageTest.wrongArguments":205,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":35,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":268,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":328,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":457,"org.easymock.tests2.UsageConstraintsTest.testNull":150,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":85,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":466,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":138,"org.easymock.tests2.CaptureTest.testPrimitive":71,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":426,"org.easymock.tests.UsageTest.moreThanOneArgument":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":403,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":446,"org.easymock.tests.UsageTest.argumentsOrdered":506,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":409,"org.easymock.tests.UsageVarargTest.varargIntAccepted":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":486,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":515,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":116,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":198,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":473,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":277,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":245,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":29,"org.easymock.tests.ReplayStateInvalidUsageTest.times":373,"org.easymock.tests2.DependencyTest.testClassMocking":36,"org.easymock.tests2.AnswerTest.answer":177,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":488,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":122,"org.easymock.tests2.CaptureTest.testAnd":68,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":325,"org.easymock.tests2.UsageTest.strictResetToDefault":203,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":445,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":497,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":133,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":413,"org.easymock.tests2.DelegateToTest.testDelegate":128,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":244,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":399,"org.easymock.tests.LimitationsTest.mockFinalMethod":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":421,"org.easymock.tests2.DependencyTest.testClassMockingSupport":37,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":281,"org.easymock.tests2.CaptureTest.testCapture1_2446744":72,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":397,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":120,"org.easymock.tests.UsageThrowableTest.throwError":284,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":367,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":327,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":239,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":248,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.MockingTest.testInterfaceMocking":454,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":274,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":385,"org.easymock.tests2.UsageTest.niceToStrict":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":226,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":316,"org.easymock.tests2.ThreadingTest.testChangeDefault":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":471,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":187,"org.easymock.tests2.MockBuilderTest.testCreateMock":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":234,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":32,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":518,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":393,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":134,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":470,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":266,"org.easymock.tests.UsageOverloadedMethodTest.overloading":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":236,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":159,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":380,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":356,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":77,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":433,"org.easymock.tests.MockClassControlTest.testEquals":465,"org.easymock.tests2.EasyMockSupportClassTest.testAll":218,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":401,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":508,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":419,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":121,"org.easymock.tests2.CaptureTest.testCaptureAll":69,"org.easymock.tests.MockNameTest.defaultName":416,"org.easymock.tests2.UsageConstraintsTest.testMatches":160,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":447,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":365,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":441,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":420,"org.easymock.samples.BasicClassMockTest.testPrintContent":16,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":290,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":42,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":322,"org.easymock.tests2.UsageConstraintsTest.greaterThan":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":219,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":496,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":96,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":249,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":310,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":97,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":20,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":329,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":88,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":241,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":467,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":202,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":131,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":317,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":123,"org.easymock.tests2.CaptureTest.testCaptureFirst":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":132,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":214,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":352,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":22,"org.easymock.tests2.CaptureTest.testCapture2_2446744":80,"org.easymock.tests2.UsageTest.moreThanOneArgument":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":489,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":194,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":440,"org.easymock.tests.GenericTest.testBridgedEquals":344,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":338,"org.easymock.tests.UsageExpectAndReturnTest.longType":348,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":417,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":402,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":167,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":262,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":400,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":444,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":302,"org.easymock.tests.UsageCallCountTest.tooManyCalls":339,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":389,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":289,"org.easymock.tests.MockingTest.testNiceClassMocking":458,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":60,"org.easymock.tests.MockingTest.testClassMocking":450,"org.easymock.tests2.UsageConstraintsTest.testContains":158,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":332,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":104,"org.easymock.tests2.UsageConstraintsTest.testFind":149,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":429,"org.easymock.tests.MockTypeTest.fromEasyMockClass":326,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":101,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests.UsageExpectAndReturnTest.object":355,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":33,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":512,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":435,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":314,"org.easymock.tests.UsageTest.exactCallCountByLastCall":507,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":410,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":41,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":430,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":361,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":379,"org.easymock.tests.MockClassControlTest.testHashCode":464,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":107,"org.easymock.tests2.EasyMockSupportTest.testVerify":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":228,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":411,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":469,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":377,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":119,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":118,"org.easymock.tests.UsageVarargTest.varargCharAccepted":434,"org.easymock.tests2.CaptureTest.testCaptureMultiple":517,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":494,"org.easymock.tests2.UsageTest.openCallCountByLastCall":208,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":140,"org.easymock.tests.DefaultClassInstantiatorTest.object":304,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":468,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":229,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":510,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":27,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":106,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":463,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":94,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":390,"org.easymock.tests.ReplayStateInvalidCallsTest.times":253,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":301,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":254,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":237,"org.easymock.tests2.UsageTest.resumeIfFailure":213,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":323,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":320,"org.easymock.tests2.StubTest.stubWithReturnValue":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":516,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":168,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":354,"org.easymock.tests2.SerializationTest.testAllMockedMethod":51,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":487,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":519,"org.easymock.samples.SupportTest.voteForRemovals":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":109,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":396,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":493,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":178,"org.easymock.tests.UsageExpectAndThrowTest.object":394,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":280,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":165,"org.easymock.tests2.DelegateToTest.testWrongClass":126,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":442,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":251,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":443,"org.easymock.samples.ConstructorCalledMockTest.testTax":11,"org.easymock.tests.UsageStrictMockTest.range":297,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":200,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":59,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":395,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":189,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":215,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":267,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":520,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":243,"org.easymock.tests2.CaptureTest.testCaptureNone":76,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":265,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":53,"org.easymock.tests.UsageUnorderedTest.message":404,"org.easymock.tests.UsageVerifyTest.twoReturns":272,"org.easymock.tests.UsageVarargTest.varargByteAccepted":439,"org.easymock.tests2.ThreadingTest.testThreadSafe":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":232,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":336,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":15,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":315,"org.easymock.tests2.CaptureTest.testCapture_2617107":70,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":491,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":425,"org.easymock.tests2.UsageConstraintsTest.any":156,"org.easymock.tests2.StubTest.stub":142,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":372,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":492,"org.easymock.tests.UsageExpectAndThrowTest.longType":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":319,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":308,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":371,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":45,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":111,"org.easymock.tests2.SerializationTest.testClass":49,"org.easymock.tests.LimitationsTest.mockNativeMethod":407,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":343,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":364,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":509,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":26,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":259,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":48,"org.easymock.tests2.NameTest.nameForMocksControl":176,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":54,"org.easymock.tests2.MockedExceptionTest.testMockedException":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":220,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":504,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":455,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":388,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":100,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":82,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":190,"org.easymock.tests.MockingTest.testNicePartialClassMocking":453,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":24,"org.easymock.tests2.CaptureTest.testCaptureLast":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":282,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":153,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":66,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":258,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":166,"org.easymock.tests.MockingTest.testTwoMocks":451,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":255,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":67,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":392,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":211,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":170,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":57,"org.easymock.samples.ExampleTest.removeNonExistingDocument":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":31,"org.easymock.tests.UsageStrictMockTest.differentMethods":298,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":108,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":56,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":306,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":21,"org.easymock.tests2.MockBuilderTest.testCreateMockString":195,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":459,"org.easymock.tests.UsageExpectAndThrowTest.floatType":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":222,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":217,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":180,"org.easymock.tests.UsageVerifyTest.twoThrows":271,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":231,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":482,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":263,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":95,"org.easymock.tests.LimitationsTest.privateConstructor":406,"org.easymock.tests2.UsageConstraintsTest.testNotNull":169,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":102,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":291,"org.easymock.tests2.UsageTest.defaultResetToNice":210,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":360,"org.easymock.tests.UsageVarargTest.differentLength":436,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":25,"org.easymock.tests2.CallbackTest.callback":58,"org.easymock.tests2.UsageConstraintsTest.equals":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":91,"org.easymock.tests.UsageTest.openCallCountByLastCall":503,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":424,"org.easymock.tests.UsageCallCountTest.tooFewCalls":334,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":269,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":55,"org.easymock.tests.UsageThrowableTest.throwCheckedException":288,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":521,"org.easymock.tests.MockingTest.testStrictClassMocking":449,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":415,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":30,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":61,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":374,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":64,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":182,"org.easymock.tests.ObjectMethodsTest.testHashCode":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":514,"org.easymock.tests2.NameTest.nameForNiceMock":175,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":23,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":257,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":252,"org.easymock.tests2.DependencyTest.testInterfaceMocking":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":513,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":233,"org.easymock.tests2.DelegateToTest.testStubDelegate":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":238,"org.easymock.tests2.AnswerTest.stubAnswer":181,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":295,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":191,"org.easymock.tests.UsageVarargTest.varargLongAccepted":438,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.floatType":347,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":40,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":12,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":115,"org.easymock.tests.UsageThrowableTest.noUpperLimit":285,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":145,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":196,"org.easymock.tests2.SerializationTest.test":50,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":73,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":305,"org.easymock.tests2.UsageConstraintsTest.testSame":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":346,"org.easymock.samples.SupportTest.addDocument":1,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":63,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":242,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":223,"org.easymock.tests.GenericTest.testPackageScope":341,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":114,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":456,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":240,"org.easymock.tests2.NameTest.nameForMock":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":357,"org.easymock.tests2.UsageStrictMockTest.differentMethods":47,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":92,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":349,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":398,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":311,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":498,"org.easymock.tests2.MockedExceptionTest.testRealException":105,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":485,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":484,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":423,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":376,"org.easymock.tests2.NameTest.nameForStrictMock":174,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":186,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":99,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":86,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":199,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":164,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":307,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":184,"org.easymock.tests2.UsageStrictMockTest.range":46,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":246,"org.easymock.tests2.UsageConstraintsTest.lessThan":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":130,"org.easymock.tests2.CaptureTest.testCaptureRightOne":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":227,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":52,"org.easymock.tests2.UsageConstraintsTest.testOr":152,"org.easymock.tests.UsageRangeTest.combination":495,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":83,"org.easymock.tests.UsageTest.wrongArguments":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":224,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":358,"org.easymock.tests.UsageVarargTest.varargShortAccepted":437,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":309,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":337,"org.easymock.tests2.UsageConstraintsTest.cmpTo":157,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":260,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":179,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":474,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":209,"org.easymock.tests2.CaptureTest.testCaptureFromStub":79,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":366,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":185,"org.easymock.tests.UsageTest.unexpectedCallWithArray":501,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":256,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":359,"org.easymock.tests2.UsageConstraintsTest.constraints":146,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests.UsageStrictMockTest.testVerify":300,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":17,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":418,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":275,"org.easymock.tests.LimitationsTest.abstractClass":405,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":276,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":522,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":431,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":135}}]
