[{"transplant":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[25,26,27,28,29,30,31,32,33,33,34,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,55,56,57,58,59,60,61,62,63,1,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,2,88,89,3,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,4,117,118,119,5,120,121,6,122,123,124,7,125,126,127,128,129,8,130,131,132,133,134,9,135,136,10,137,138,139,140,141,142,143,144,145,146,147,148,149,11,12,150,151,152,153,154,155,13,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,16,267,17,268,269,270,18,271,19,272,273,274,275,276,21,277,278,279,280,281,282,283,284,285,286,287,288,22,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,23,305,306,307,308,309,24,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"hashCodeMethod","finalizeMethod":"hashCodeMethod"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[311,312,313,314,267,297],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[311,312,313,314,267,297],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[25,26,27,28,316,29,30,317,318,319,320,31,321,32,35,36,37,38,39,40,322,323,324,43,45,46,47,48,49,0,50,51,52,53,54,55,56,57,58,59,60,61,62,63,1,64,65,66,67,68,69,70,71,72,73,74,75,79,82,83,84,86,2,88,89,3,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,325,113,114,115,116,4,117,118,119,5,120,121,6,122,123,326,124,7,126,127,128,129,8,130,131,132,133,134,9,135,136,10,137,138,139,140,141,142,143,327,144,145,146,147,148,149,11,12,150,151,152,153,155,13,156,158,160,161,162,163,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,328,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,229,230,329,330,331,332,333,334,14,335,336,337,233,234,235,236,237,238,239,240,241,266,16,17,268,269,270,18,271,275,338,276,339,340,341,20,342,21,277,278,279,280,281,283,288,22,289,290,291,292,293,294,296,343,297,298,299,300,301,302,344,303,304,23,305,306,307,308,309],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[311,312,313,314,267,297],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[111,112,325,345],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[346],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[25,26,27,28,29,30,31,32,33,33,34,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,55,57,58,59,60,61,62,63,1,64,65,66,67,69,70,71,72,73,74,75,79,80,81,82,83,84,86,2,88,89,3,91,92,93,94,95,96,97,98,100,101,104,105,106,107,108,109,110,111,112,113,114,115,116,4,117,118,119,5,120,121,6,122,123,124,7,126,127,128,8,131,132,133,135,136,10,137,138,139,140,141,142,144,146,147,149,11,12,150,151,152,153,155,13,156,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,241,245,246,247,254,255,256,266,16,268,269,271,275,276,21,277,278,279,280,282,283,284,285,286,287,288,22,289,290,291,292,293,294,295,298,300,301,303,304,23,305,306,307,308,309,24,310],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[37,347],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[348],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[25,26,27,28,316,29,349,30,317,318,319,320,31,321,32,33,34,35,36,37,38,39,350,40,322,323,324,41,42,43,44,45,351,46,47,48,49,0,352,50,51,52,53,54,55,56,57,58,59,60,61,62,63,1,64,65,66,67,68,69,70,71,72,353,354,73,74,75,355,356,357,76,77,78,358,79,80,81,82,83,84,85,359,86,87,360,361,2,362,88,363,89,364,365,366,3,367,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,325,113,114,115,116,4,117,118,119,5,120,121,6,122,123,326,124,368,369,370,371,372,7,125,373,374,375,376,377,126,127,128,129,8,130,131,132,133,134,9,135,136,10,137,138,139,378,140,141,142,379,143,327,144,145,146,147,148,149,11,12,150,151,152,380,346,153,381,382,154,155,13,156,347,157,383,384,385,386,387,158,159,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,160,403,404,161,405,406,407,408,409,410,411,412,413,162,414,415,416,417,418,163,419,420,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,421,422,423,192,193,424,194,425,426,427,315,195,328,196,348,197,198,199,200,201,428,429,202,430,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,431,432,433,434,435,436,437,438,439,440,441,442,329,330,331,443,332,333,334,14,335,336,337,233,234,235,236,237,238,239,240,241,15,444,242,243,244,445,446,447,245,246,247,248,249,250,251,252,253,254,255,256,257,448,449,258,259,260,261,262,263,264,265,450,266,16,267,17,268,269,270,18,271,451,19,272,452,273,274,453,454,455,456,457,458,459,460,461,275,338,462,276,339,340,341,463,20,342,21,277,278,279,280,281,282,464,283,284,285,286,465,287,466,288,22,289,290,291,467,292,293,468,294,469,295,296,343,297,298,299,300,301,302,344,303,304,23,305,306,307,308,309,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,24,487,488,489,490,491,310,492],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[25,26,27,28,316,29,349,30,317,318,319,320,31,321,32,33,34,35,36,37,38,39,40,322,323,324,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,55,57,58,59,60,61,62,63,1,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,358,79,82,83,84,85,86,2,362,88,89,366,3,90,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,325,113,114,115,116,4,117,118,119,5,120,121,6,122,123,326,124,7,126,127,128,129,8,130,131,132,133,134,9,135,136,10,137,138,139,140,141,142,143,327,144,145,146,147,148,149,11,12,150,151,152,380,153,154,155,13,156,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,328,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,431,432,433,434,435,436,437,438,439,440,441,442,329,330,331,332,333,334,14,335,336,337,233,234,235,236,237,238,239,240,241,15,444,242,243,244,445,446,447,248,249,250,251,252,263,264,265,450,266,16,267,17,268,269,270,18,271,19,272,452,454,275,338,462,276,339,340,341,463,20,342,21,277,278,279,280,283,288,22,289,290,291,292,293,294,469,296,343,297,298,299,300,301,302,344,303,304,23,305,306,307,308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[25,26,27,28,29,30,31,32,33,33,34,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,55,57,58,59,60,61,62,63,1,64,65,66,67,69,70,71,72,73,74,75,79,80,81,82,83,84,86,2,88,89,3,91,92,93,94,95,96,97,98,100,101,104,105,106,107,108,109,110,111,112,113,114,115,116,4,117,118,119,5,120,121,6,122,123,124,7,126,127,128,8,131,132,133,135,136,10,137,138,139,140,141,142,144,146,147,149,11,12,150,151,152,153,155,13,156,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,241,245,246,247,254,255,256,266,16,268,269,271,275,276,21,277,278,279,280,282,283,284,285,286,287,288,22,289,290,291,292,293,294,295,298,300,301,303,304,23,305,306,307,308,309,24,310],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[129,134,9,146,493,267,17,270,18,283,469,297,300,304,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[25,26,27,28,316,29,349,30,317,318,319,320,31,321,32,33,33,34,34,35,36,37,38,39,40,322,323,324,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,55,57,58,59,60,61,62,63,1,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,358,79,82,83,84,85,86,2,362,88,89,366,3,90,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,325,113,114,115,116,4,117,118,119,5,120,121,6,122,123,326,124,7,126,127,128,129,8,130,131,132,133,134,9,135,136,10,137,138,139,140,141,142,143,327,144,145,146,147,148,149,11,12,150,151,152,380,153,154,155,13,156,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,328,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,431,432,433,434,435,436,437,438,439,440,441,442,329,330,331,332,333,334,14,335,336,337,233,234,235,236,237,238,239,240,241,15,444,242,243,244,445,446,447,248,249,250,251,252,263,264,265,450,266,16,267,17,268,269,270,18,271,19,272,452,454,275,338,462,276,339,340,341,463,20,342,21,277,278,279,280,283,288,22,289,290,291,292,293,294,469,296,343,297,298,299,300,301,302,344,303,304,23,305,306,307,308,309],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[38,45,46,47,48,49,0,50,51,52,53,54,55,56,57,58,59,60,61,62,63,1,64,65,66,67,68,69,70,71,72,97,98,99,100,101,102,103,104,105,106,107,108,109,110,144,153,168,170,171,197,198,199,200,201,233,21,277,278,279,280,283,297,298,305,306],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"c":"c","this":"this"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[494,97,99,100,101,102,103,104,106,495,107,108,110],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[496,497,498,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"failures":[311,312,313,314,297],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":9,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":266,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":481,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":130,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":317,"org.easymock.tests2.DelegateToTest.testReturnException":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":165,"org.easymock.tests.MockingTest.testPartialClassMocking":192,"org.easymock.tests.MockClassControlTest.testToString":242,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":350,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":408,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":172,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":161,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":74,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":55,"org.easymock.tests2.UsageTest.wrongArguments":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":21,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":392,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":265,"org.easymock.samples.ExampleTest.answerVsDelegate":26,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":260,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":426,"org.easymock.tests2.UsageConstraintsTest.testNull":51,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":150,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":447,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":6,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":280,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":191,"org.easymock.tests.UsageTest.moreThanOneArgument":16,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":12,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":225,"org.easymock.tests.UsageTest.argumentsOrdered":18,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":228,"org.easymock.tests.UsageVarargTest.varargIntAccepted":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":486,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":197,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":85,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":395,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":376,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":473,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":201,"org.easymock.tests.ReplayStateInvalidUsageTest.times":439,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":158,"org.easymock.tests2.DependencyTest.testClassMocking":353,"org.easymock.tests2.AnswerTest.answer":79,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":487,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":358,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":449,"org.easymock.tests2.CaptureTest.testAnd":97,"org.easymock.tests2.UsageTest.strictResetToDefault":127,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":154,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":224,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":118,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":289,"org.easymock.tests2.DelegateToTest.testDelegate":96,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":187,"org.easymock.tests.LimitationsTest.mockFinalMethod":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":252,"org.easymock.tests2.DependencyTest.testClassMockingSupport":354,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":281,"org.easymock.tests2.CaptureTest.testCapture1_2446744":101,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":185,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":77,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":433,"org.easymock.tests.UsageThrowableTest.throwError":234,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":259,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":470,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":377,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":420,"org.easymock.samples.PartialClassMockTest.testGetArea":31,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":434,"org.easymock.tests.MockingTest.testInterfaceMocking":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":198,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":409,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":173,"org.easymock.tests2.UsageTest.niceToStrict":8,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":471,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":2,"org.easymock.tests2.MockBuilderTest.testCreateMock":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":416,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":389,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":181,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":311,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":119,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":448,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":263,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":497,"org.easymock.tests.UsageOverloadedMethodTest.overloading":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":61,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":293,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":214,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":307,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":60,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":106,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":443,"org.easymock.tests.MockClassControlTest.testEquals":446,"org.easymock.tests2.EasyMockSupportClassTest.testAll":160,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":328,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":189,"org.easymock.tests2.CaptureTest.testCaptureAll":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":250,"org.easymock.tests.MockNameTest.defaultName":253,"org.easymock.tests2.UsageConstraintsTest.testMatches":62,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":226,"org.easymock.samples.ExampleTest.voteForRemovals":29,"org.easymock.tests.UsageVarargTest.allKinds":233,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":251,"org.easymock.samples.BasicClassMockTest.testPrintContent":320,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":240,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":169,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":373,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":460,"org.easymock.tests2.UsageConstraintsTest.greaterThan":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":22,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":156,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":461,"org.easymock.samples.ExampleTest.voteForRemoval":27,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":36,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":347,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":261,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":396,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":380,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":126,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":275,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":4,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":164,"org.easymock.tests2.CaptureTest.testCaptureFirst":110,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":117,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":136,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":469,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":210,"org.easymock.tests2.UsageTest.moreThanOneArgument":128,"org.easymock.tests2.CaptureTest.testCapture2_2446744":109,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":488,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":3,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":337,"org.easymock.tests.GenericTest.testBridgedEquals":348,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":498,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":20,"org.easymock.tests.UsageExpectAndReturnTest.longType":206,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":190,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":68,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":295,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":223,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":255,"org.easymock.tests.UsageCallCountTest.tooManyCalls":342,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":211,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":391,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":177,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":239,"org.easymock.tests.MockingTest.testNiceClassMocking":427,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":137,"org.easymock.tests.MockingTest.testClassMocking":422,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":462,"org.easymock.tests2.UsageConstraintsTest.testContains":59,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":43,"org.easymock.tests2.UsageConstraintsTest.testFind":50,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":309,"org.easymock.tests.MockTypeTest.fromEasyMockClass":258,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":46,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":296,"org.easymock.tests.UsageExpectAndReturnTest.object":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":390,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":121,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":333,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":452,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":499,"org.easymock.tests.UsageTest.exactCallCountByLastCall":271,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":229,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":355,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":219,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":329,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":292,"org.easymock.tests.MockClassControlTest.testHashCode":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":369,"org.easymock.tests2.EasyMockSupportTest.testVerify":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":411,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":230,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":285,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":291,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":76,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":357,"org.easymock.tests.UsageVarargTest.varargCharAccepted":332,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":453,"org.easymock.tests2.CaptureTest.testCaptureMultiple":494,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":492,"org.easymock.tests2.UsageTest.openCallCountByLastCall":131,"org.easymock.tests.DefaultClassInstantiatorTest.object":454,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":123,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":284,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":19,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":412,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":386,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":368,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":155,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":220,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":163,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":243,"org.easymock.tests2.UsageTest.resumeIfFailure":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":257,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":167,"org.easymock.tests2.StubTest.stubWithReturnValue":114,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":363,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":212,"org.easymock.tests2.SerializationTest.testAllMockedMethod":325,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":24,"org.easymock.samples.SupportTest.voteForRemovals":32,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":312,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":315,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":371,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":184,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":345,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":310,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":80,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":466,"org.easymock.tests.UsageExpectAndThrowTest.object":182,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":66,"org.easymock.tests2.DelegateToTest.testWrongClass":94,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":305,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":306,"org.easymock.samples.ConstructorCalledMockTest.testTax":33,"org.easymock.tests.UsageStrictMockTest.range":300,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":398,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":120,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":183,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":88,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":400,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":270,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":264,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":313,"org.easymock.tests2.CaptureTest.testCaptureNone":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":247,"org.easymock.tests.UsageUnorderedTest.message":283,"org.easymock.tests.UsageVerifyTest.twoReturns":23,"org.easymock.tests.UsageVarargTest.varargByteAccepted":336,"org.easymock.tests2.ThreadingTest.testThreadSafe":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":414,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":341,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":273,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":319,"org.easymock.tests2.CaptureTest.testCapture_2617107":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":490,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":279,"org.easymock.tests2.UsageConstraintsTest.any":57,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":438,"org.easymock.tests2.StubTest.stub":113,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":491,"org.easymock.tests.UsageExpectAndThrowTest.longType":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":166,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":458,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":437,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":145,"org.easymock.tests2.SerializationTest.testClass":111,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":7,"org.easymock.tests.LimitationsTest.mockNativeMethod":202,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":196,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":222,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":385,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":148,"org.easymock.tests2.NameTest.nameForMocksControl":324,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":387,"org.easymock.tests2.MockedExceptionTest.testMockedException":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":404,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":269,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":176,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":194,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":351,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":149,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":89,"org.easymock.tests.MockingTest.testNicePartialClassMocking":193,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":152,"org.easymock.tests2.CaptureTest.testCaptureLast":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":383,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":282,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":142,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":54,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":67,"org.easymock.tests.MockingTest.testTwoMocks":423,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":379,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":180,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":134,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":71,"org.easymock.samples.ExampleTest.removeNonExistingDocument":349,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":435,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":388,"org.easymock.tests.UsageStrictMockTest.differentMethods":301,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":370,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":456,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":37,"org.easymock.tests2.MockBuilderTest.testCreateMockString":90,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":405,"org.easymock.tests.UsageExpectAndThrowTest.floatType":174,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":82,"org.easymock.tests.UsageVerifyTest.twoThrows":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":356,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":162,"org.easymock.samples.ExampleTest.voteAgainstRemoval":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":482,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":245,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":13,"org.easymock.tests.LimitationsTest.privateConstructor":429,"org.easymock.tests2.UsageConstraintsTest.testNotNull":70,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":241,"org.easymock.tests2.UsageTest.defaultResetToNice":133,"org.easymock.samples.ExampleTest.voteAgainstRemovals":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":218,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":384,"org.easymock.tests.UsageVarargTest.differentLength":334,"org.easymock.tests2.CallbackTest.callback":124,"org.easymock.tests2.UsageConstraintsTest.equals":352,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":381,"org.easymock.tests.UsageTest.openCallCountByLastCall":268,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":278,"org.easymock.tests.UsageCallCountTest.tooFewCalls":339,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":139,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":450,"org.easymock.tests.UsageThrowableTest.throwCheckedException":238,"org.easymock.tests.MockingTest.testStrictClassMocking":421,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":314,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":171,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":159,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":138,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":440,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":140,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":84,"org.easymock.tests.ObjectMethodsTest.testHashCode":272,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":39,"org.easymock.tests2.NameTest.nameForNiceMock":323,"org.easymock.tests2.DependencyTest.testInterfaceMocking":73,"org.easymock.samples.ExampleTest.addDocument":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":419,"org.easymock.tests2.DelegateToTest.testStubDelegate":93,"org.easymock.tests2.AnswerTest.stubAnswer":83,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":298,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":364,"org.easymock.tests.UsageVarargTest.varargLongAccepted":335,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.floatType":205,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":75,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":34,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":468,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":64,"org.easymock.tests.UsageThrowableTest.noUpperLimit":235,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":375,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":48,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":393,"org.easymock.tests2.SerializationTest.test":112,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":102,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":455,"org.easymock.tests2.UsageConstraintsTest.testSame":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":204,"org.easymock.samples.SupportTest.addDocument":321,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":378,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":406,"org.easymock.tests.GenericTest.testPackageScope":195,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":374,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":425,"org.easymock.tests2.NameTest.nameForMock":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":215,"org.easymock.tests2.UsageStrictMockTest.differentMethods":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":367,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":382,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":207,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":186,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":451,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":290,"org.easymock.tests2.MockedExceptionTest.testRealException":44,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":485,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":484,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":144,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":277,"org.easymock.tests2.NameTest.nameForStrictMock":322,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":361,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":496,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":45,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":151,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":397,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":457,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":65,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":86,"org.easymock.tests2.UsageStrictMockTest.range":146,"org.easymock.tests2.UsageConstraintsTest.lessThan":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":410,"org.easymock.tests2.CaptureTest.testCaptureRightOne":107,"org.easymock.tests2.UsageConstraintsTest.testOr":53,"org.easymock.tests.UsageRangeTest.combination":288,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":11,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests2.MockBuilderTest.testWithConstructor":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":407,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":444,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":472,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":216,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":459,"org.easymock.tests.UsageVarargTest.varargShortAccepted":14,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":463,"org.easymock.tests2.UsageConstraintsTest.cmpTo":58,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":474,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":132,"org.easymock.tests2.CaptureTest.testCaptureFromStub":108,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":432,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":87,"org.easymock.tests.UsageTest.unexpectedCallWithArray":267,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":340,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":217,"org.easymock.tests2.CaptureTest.testCapture":495,"org.easymock.tests2.UsageConstraintsTest.constraints":49,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":299,"org.easymock.samples.ExampleTest.addAndChangeDocument":30,"org.easymock.tests.UsageStrictMockTest.testVerify":344,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":318,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":343,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":249,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":199,"org.easymock.tests.LimitationsTest.abstractClass":428,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":200,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":5,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":330}}]
