[{"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:71","failures":[1,2,3,4,5,6,7],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[11,12,13,14,15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:269","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[18,19,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[22,23,24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:734","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[41,42,43,1,44,45,46,47,48,49,27,28,50,51,29,30,52,53,31,32,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,33,79,80,34,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,35,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,36,9,138,10,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,37,170,171,172,173,174,38,39,175,176,177,178,179,40,180,181,182,183,184,185,186,187,188,22,23,189,190,191,3,4,5,6,7,192,193,194,195,196,197,198],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:275","sourceCode":"return java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[199,41,42,200,43,1,201,44,45,46,47,202,48,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,49,27,28,50,51,29,30,52,53,31,32,54,224,225,226,227,228,229,230,231,232,233,234,235,236,237,55,56,238,57,239,240,241,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,242,33,79,80,34,81,243,244,245,246,247,248,249,250,82,83,84,85,86,87,88,251,252,253,254,255,256,257,258,259,260,261,262,89,90,91,92,93,263,94,95,264,265,35,266,96,97,98,99,100,101,102,103,104,105,106,107,108,109,267,110,268,269,270,271,272,273,274,275,276,277,278,279,280,111,281,282,283,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,284,285,135,286,136,137,36,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,9,354,138,10,139,140,141,142,355,356,357,358,359,143,144,145,146,147,148,360,149,150,361,362,363,364,151,152,153,154,155,156,157,158,159,160,161,162,163,365,366,367,164,165,166,167,168,169,37,170,171,172,173,174,38,39,175,176,177,368,178,179,40,180,369,181,11,25,370,371,372,373,182,374,375,376,183,184,185,186,187,188,22,23,24,377,378,379,380,381,382,189,383,384,385,386,387,388,389,390,391,190,392,393,394,395,396,191,397,398,399,2,400,401,3,402,4,5,403,404,405,6,7,406,192,193,194,195,407,196,197,198,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,8,430,431,21,432,433,0,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[221,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1333","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[41,42,43,1,44,45,46,47,48,49,27,28,50,51,29,30,52,53,31,32,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,33,79,80,34,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,35,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,36,9,138,10,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,37,170,171,172,173,174,38,39,175,176,177,178,179,40,180,181,182,183,184,185,186,187,188,22,23,189,190,191,3,4,5,6,7,192,193,194,195,196,197,198],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[477,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[518],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cl":"cl","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","bridgeMethod":"bridgeMethod","candidateMethods":"candidateMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[519],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:163","failures":[183,184],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[11,12,13,14,15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[95,517],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[520,521,522],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[511],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[94,319,503,505,506,507],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":418,"org.easymock.tests2.UsageTest.argumentsOrdered":39,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":50,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":327,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":171,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":201,"org.easymock.tests2.DelegateToTest.testReturnException":503,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":97,"org.easymock.tests.MockingTest.testPartialClassMocking":55,"org.easymock.tests.MockClassControlTest.testToString":289,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":25,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":249,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":189,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":115,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":165,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":316,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":13,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":425,"org.easymock.tests2.UsageTest.wrongArguments":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":84,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":501,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":91,"org.easymock.samples.ExampleTest.answerVsDelegate":45,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":232,"org.easymock.tests2.UsageConstraintsTest.testNull":421,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":240,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":444,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":161,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":294,"org.easymock.tests2.CaptureTest.testPrimitive":479,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":88,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":134,"org.easymock.tests.UsageTest.moreThanOneArgument":51,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":443,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":145,"org.easymock.tests.UsageTest.argumentsOrdered":32,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":355,"org.easymock.tests.UsageVarargTest.varargIntAccepted":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":102,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":399,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":17,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":468,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":106,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":300,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":495,"org.easymock.tests.ReplayStateInvalidUsageTest.times":259,"org.easymock.tests2.DependencyTest.testClassMocking":366,"org.easymock.tests2.AnswerTest.answer":182,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":188,"org.easymock.tests2.CaptureTest.testAnd":476,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":229,"org.easymock.tests2.UsageTest.strictResetToDefault":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":452,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":156,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":149,"org.easymock.tests2.DelegateToTest.testDelegate":507,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":359,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":130,"org.easymock.tests.LimitationsTest.mockFinalMethod":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":100,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":110,"org.easymock.tests2.DependencyTest.testClassMockingSupport":367,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":224,"org.easymock.tests2.CaptureTest.testCapture1_2446744":480,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":128,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":186,"org.easymock.tests.UsageThrowableTest.throwError":9,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":253,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":231,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":469,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":398,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":303,"org.easymock.samples.PartialClassMockTest.testGetArea":1,"org.easymock.tests.MockingTest.testInterfaceMocking":238,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":254,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":103,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":387,"org.easymock.tests2.UsageTest.niceToStrict":170,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":116,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":353,"org.easymock.tests2.ThreadingTest.testChangeDefault":410,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":3,"org.easymock.tests2.MockBuilderTest.testCreateMock":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":394,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":124,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":157,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":228,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":209,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":271,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":89,"org.easymock.tests.UsageOverloadedMethodTest.overloading":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":430,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":95,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":69,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":8,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":485,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":213,"org.easymock.tests.MockClassControlTest.testEquals":293,"org.easymock.tests2.EasyMockSupportClassTest.testAll":380,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":132,"org.easymock.tests2.CaptureTest.testCaptureAll":477,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":109,"org.easymock.tests.MockNameTest.defaultName":222,"org.easymock.tests2.UsageConstraintsTest.testMatches":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":251,"org.easymock.samples.ExampleTest.voteForRemovals":48,"org.easymock.tests.UsageVarargTest.allKinds":221,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":49,"org.easymock.samples.BasicClassMockTest.testPrintContent":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":267,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":141,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":177,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":506,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":101,"org.easymock.tests2.UsageConstraintsTest.greaterThan":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":381,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":360,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":455,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":304,"org.easymock.samples.ExampleTest.voteForRemoval":46,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":347,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":456,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":411,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":447,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":296,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":167,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":266,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":154,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":96,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":502,"org.easymock.tests2.CaptureTest.testCaptureFirst":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":155,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":176,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":65,"org.easymock.tests2.CaptureTest.testCapture2_2446744":488,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":413,"org.easymock.tests2.UsageTest.moreThanOneArgument":169,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":335,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":220,"org.easymock.tests.GenericTest.testBridgedEquals":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":278,"org.easymock.tests.UsageExpectAndReturnTest.longType":61,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":152,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":133,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":436,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":223,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":269,"org.easymock.tests.UsageCallCountTest.tooManyCalls":279,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":500,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":140,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":193,"org.easymock.tests.MockingTest.testNiceClassMocking":241,"org.easymock.tests.MockingTest.testClassMocking":236,"org.easymock.tests2.UsageConstraintsTest.testContains":429,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":272,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":516,"org.easymock.tests2.UsageConstraintsTest.testFind":420,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":114,"org.easymock.tests.MockTypeTest.fromEasyMockClass":230,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":78,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":363,"org.easymock.tests.UsageExpectAndReturnTest.object":68,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":449,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":499,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":14,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":215,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":351,"org.easymock.tests.UsageTest.exactCallCountByLastCall":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":248,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":74,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":210,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":94,"org.easymock.tests.ResultTest.createThrowResultToString":522,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":459,"org.easymock.tests.MockClassControlTest.testHashCode":292,"org.easymock.tests2.EasyMockSupportTest.testVerify":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":389,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":357,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":93,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":185,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":406,"org.easymock.tests.UsageVarargTest.varargCharAccepted":214,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":340,"org.easymock.tests2.UsageTest.openCallCountByLastCall":172,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":18,"org.easymock.tests.DefaultClassInstantiatorTest.object":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":207,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":349,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":390,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":10,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":493,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":458,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":453,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":291,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":302,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":121,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":75,"org.easymock.tests.ReplayStateInvalidCallsTest.times":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":268,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":191,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":290,"org.easymock.tests2.UsageTest.resumeIfFailure":175,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":227,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":99,"org.easymock.tests2.StubTest.stubWithReturnValue":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":12,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":437,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":67,"org.easymock.tests2.SerializationTest.testAllMockedMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":333,"org.easymock.samples.SupportTest.voteForRemovals":43,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":127,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":339,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":374,"org.easymock.tests.UsageExpectAndThrowTest.object":125,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":250,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":434,"org.easymock.tests2.DelegateToTest.testWrongClass":505,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":136,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":306,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":137,"org.easymock.samples.ConstructorCalledMockTest.testTax":41,"org.easymock.tests.UsageStrictMockTest.range":34,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":474,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":159,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":126,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":4,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":90,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":298,"org.easymock.tests2.CaptureTest.testCaptureNone":484,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":247,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":509,"org.easymock.tests.UsageUnorderedTest.message":36,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":519,"org.easymock.tests.UsageVerifyTest.twoReturns":28,"org.easymock.tests.UsageVarargTest.varargByteAccepted":219,"org.easymock.tests2.ThreadingTest.testThreadSafe":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":392,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":276,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":205,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":352,"org.easymock.tests2.CaptureTest.testCapture_2617107":478,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":337,"org.easymock.tests2.UsageConstraintsTest.any":427,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":258,"org.easymock.tests2.StubTest.stub":364,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":270,"org.easymock.tests.UsageExpectAndThrowTest.longType":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":338,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":345,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":257,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":179,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":463,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests.LimitationsTest.mockNativeMethod":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":77,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":282,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":492,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":314,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":369,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":510,"org.easymock.tests2.NameTest.nameForMocksControl":373,"org.easymock.tests2.MockedExceptionTest.testMockedException":515,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":382,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":119,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":57,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":362,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":441,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":5,"org.easymock.tests.MockingTest.testNicePartialClassMocking":56,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":446,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":490,"org.easymock.tests2.CaptureTest.testCaptureLast":483,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":225,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":424,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":198,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":313,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":435,"org.easymock.tests.MockingTest.testTwoMocks":237,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":310,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":123,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":439,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":513,"org.easymock.samples.ExampleTest.removeNonExistingDocument":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":497,"org.easymock.tests.UsageStrictMockTest.differentMethods":81,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":255,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":460,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":512,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":343,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":412,"org.easymock.tests2.MockBuilderTest.testCreateMockString":7,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":287,"org.easymock.tests.UsageExpectAndThrowTest.floatType":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":383,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":379,"org.easymock.tests.ResultTest.createReturnResultToString":521,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":376,"org.easymock.tests.UsageVerifyTest.twoThrows":27,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":190,"org.easymock.tests.ResultTest.createDelegateResultToString":520,"org.easymock.samples.ExampleTest.voteAgainstRemoval":47,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":328,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":454,"org.easymock.tests.LimitationsTest.privateConstructor":285,"org.easymock.tests2.UsageConstraintsTest.testNotNull":438,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":514,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":142,"org.easymock.tests2.UsageTest.defaultResetToNice":174,"org.easymock.samples.ExampleTest.voteAgainstRemovals":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":329,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":491,"org.easymock.tests.UsageVarargTest.differentLength":216,"org.easymock.tests2.CallbackTest.callback":166,"org.easymock.tests2.UsageConstraintsTest.equals":419,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":450,"org.easymock.tests.UsageTest.openCallCountByLastCall":52,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":415,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":86,"org.easymock.tests.UsageCallCountTest.tooFewCalls":274,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":195,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":92,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":511,"org.easymock.tests.UsageThrowableTest.throwCheckedException":139,"org.easymock.tests.MockingTest.testStrictClassMocking":235,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":83,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":197,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":496,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":194,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":260,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":196,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":184,"org.easymock.tests.ObjectMethodsTest.testHashCode":350,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":16,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":414,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":312,"org.easymock.tests2.NameTest.nameForNiceMock":372,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":307,"org.easymock.tests2.DependencyTest.testInterfaceMocking":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":15,"org.easymock.samples.ExampleTest.addDocument":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":393,"org.easymock.tests2.DelegateToTest.testStubDelegate":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.AnswerTest.stubAnswer":183,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":79,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":403,"org.easymock.tests.UsageVarargTest.varargLongAccepted":218,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":326,"org.easymock.tests.UsageExpectAndReturnTest.floatType":60,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":76,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":181,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":42,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":467,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":433,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests.UsageThrowableTest.noUpperLimit":354,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":416,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":470,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":481,"org.easymock.tests2.SerializationTest.test":23,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":342,"org.easymock.tests2.UsageConstraintsTest.testSame":422,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":59,"org.easymock.samples.SupportTest.addDocument":200,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":407,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":297,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":384,"org.easymock.tests.GenericTest.testPackageScope":111,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":466,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":239,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":295,"org.easymock.tests2.NameTest.nameForMock":370,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":70,"org.easymock.tests2.UsageStrictMockTest.differentMethods":180,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":451,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":62,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":129,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":348,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":150,"org.easymock.tests2.MockedExceptionTest.testRealException":517,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":234,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":85,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":262,"org.easymock.tests2.NameTest.nameForStrictMock":371,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":401,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":19,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":361,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":445,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":473,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":344,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":2,"org.easymock.tests2.UsageStrictMockTest.range":40,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":301,"org.easymock.tests2.UsageConstraintsTest.lessThan":440,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":518,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":462,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":325,"org.easymock.tests2.CaptureTest.testCaptureRightOne":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":388,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":508,"org.easymock.tests2.UsageConstraintsTest.testOr":423,"org.easymock.tests.UsageRangeTest.combination":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":442,"org.easymock.tests.UsageTest.wrongArguments":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":385,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":288,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":318,"org.easymock.tests.UsageVarargTest.varargShortAccepted":217,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":346,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":277,"org.easymock.tests2.UsageConstraintsTest.cmpTo":428,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":315,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":375,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":320,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":173,"org.easymock.tests2.CaptureTest.testCaptureFromStub":487,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":252,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":400,"org.easymock.tests.UsageTest.unexpectedCallWithArray":29,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":311,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":275,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":72,"org.easymock.tests2.UsageConstraintsTest.constraints":417,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":80,"org.easymock.samples.ExampleTest.addAndChangeDocument":204,"org.easymock.tests.UsageStrictMockTest.testVerify":244,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":199,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":108,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":482,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":104,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":64,"org.easymock.tests.LimitationsTest.abstractClass":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":105,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":158,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":211}}]
