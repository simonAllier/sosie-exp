[{"position":"org.easymock.internal.RecordState:327","failures":[0,1,2,3],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[335],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,336,26,27,28,29,30,31,32,33,34,337,35,36,37,38,39,338,40,41,42,43,44,45,339,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,340,341,63,64,66,67,68,69,70,71,342,343,72,73,74,75,76,344,345,77,78,79,80,81,82,83,346,84,85,86,347,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,348,349,350,351,352,121,353,354,355,356,357,358,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,359,142,143,144,145,146,147,148,149,150,151,152,153,154,155,360,156,361,157,158,159,160,362,363,364,365,366,367,368,161,369,370,371,372,373,374,375,376,377,378,379,380,162,381,163,382,383,384,385,164,386,387,388,389,390,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,391,392,393,394,395,396,397,398,197,198,399,400,199,200,201,202,203,401,402,204,403,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,404,405,406,407,408,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,409,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,410,411,412,269,270,271,272,273,413,414,0,1,415,416,417,418,419,420,274,275,276,277,278,279,280,281,282,283,284,285,286,421,287,288,289,422,423,424,290,425,426,427,428,429,430,431,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,432,306,433,307,434,2,3,435,436,437,308,309,310,311,312,313,314,315,438,316,317,439,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[230,439,440,444,445,454,459],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,464],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[428,465,466],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,339,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,71,342,343,72,73,74,76,77,79,80,82,346,84,85,86,347,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,393,194,195,196,197,198,399,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,404,405,406,407,408,230,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,410,411,412,414,0,1,278,279,281,282,283,284,285,286,291,292,294,295,296,297,299,300,301,302,303,304,305,432,306,307,434,2,3,436,308,309,310,311,312,313,314,315,438,316,439,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,456,462],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[79,418],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[4,5,6,7,8,9,11,12,13,14,15,17,18,21,22,23,24,25,26,34,35,36,37,38,39,40,41,42,43,44,45,339,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,71,342,343,72,73,77,79,80,346,84,85,86,347,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,142,143,144,145,146,147,148,150,153,156,157,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,411,412,414,0,1,278,279,281,282,283,284,285,286,301,302,303,304,305,432,306,307,434,2,3,436,312,313,314,315,438,316,439,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,456,462],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,31,32,33,34,337,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,291,294,295,296,297,298,299,300,301,302,303,304,305,307,308,310,311,312,314,315,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[19,19,20,20,65,467,468,102,469],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[290,291],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"position":"org.easymock.internal.RecordState:173","failures":[85],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[38,52,76,81,82,83,108,112,113,116,120,122,125,126,127,131,132,133,134,142,145,146,147,150,158,160,247,470,471,278,280,281,284,285,286,298,299,300,307,308,318,320,322,323,324,328,329,472,473],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[398,400],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[102,103,104,474],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[38,44,88,90,98],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[475,476,477,478,280,320],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:40","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(double.double, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[480],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[475,476,477,478,280,320],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[37,38,40,42,43,48,51,54,61,105,128,129,133,146,147,178,182,183,185,188,209,213,214,216,219,254,282,283,294,308,309,310,311,323,324,327,334],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"range"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[125,131,132,146,471,280,281,284,285,307,317,320,323,328,329],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[38,39,41,43,44,339,55,60,88,90,98],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,11,12,13,14,15,16,17,18,21,22,23,24,25,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,71,72,73,77,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,156,159,161,162,163,164,165,170,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,405,406,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,278,279,281,282,283,284,285,286,291,294,295,296,297,299,300,301,302,303,304,305,307,308,310,311,312,314,315,316,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:136","failures":[14,15,16,19,19,20,20,30,31,32,340,341,65,467,75,76,344,345,77,78,79,80,468,81,82,83,102,104,135,136,137,138,140,141,149,150,152,153,154,155,156,469,361,157,158,159,160,362,363,375,481,482,376,379,380,483,162,484,381,163,382,383,485,486,384,487,488,385,489,164,386,387,388,389,390,165,490,491,391,392,393,194,195,196,397,398,197,198,399,400,401,402,204,403,261,262,263,264,265,266,267,268,415,418,290,425,426,427,428,429,431,291],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[5,26,27,28,29,41,42,46,47,60,61,71,87,122,124,125,128,129,131,132,134,144,146,147,405,406,242,252,253,255,278,279,281,282,283,284,285,286,295,297,300,307,320,321,323,324,327,328,329,334],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":39,"org.easymock.tests2.UsageTest.argumentsOrdered":132,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":278,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":450,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":127,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":12,"org.easymock.tests2.DelegateToTest.testReturnException":84,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":167,"org.easymock.tests.MockingTest.testPartialClassMocking":194,"org.easymock.tests.MockClassControlTest.testToString":263,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":336,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":486,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":174,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":163,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":64,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":45,"org.easymock.tests2.UsageTest.wrongArguments":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":301,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":276,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":418,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":396,"org.easymock.tests2.UsageConstraintsTest.testNull":41,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":152,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":116,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":268,"org.easymock.tests2.CaptureTest.testPrimitive":91,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":305,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":193,"org.easymock.tests.UsageTest.moreThanOneArgument":279,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":227,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":404,"org.easymock.tests.UsageTest.argumentsOrdered":285,"org.easymock.tests.UsageVarargTest.varargIntAccepted":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":455,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":199,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":75,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":482,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":357,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":203,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":161,"org.easymock.tests.ReplayStateInvalidUsageTest.times":238,"org.easymock.tests2.DependencyTest.testClassMocking":340,"org.easymock.tests2.AnswerTest.answer":71,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":457,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":70,"org.easymock.tests2.CaptureTest.testAnd":88,"org.easymock.tests2.UsageTest.strictResetToDefault":123,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":111,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":310,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":408,"org.easymock.tests2.DelegateToTest.testDelegate":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":189,"org.easymock.tests.LimitationsTest.mockFinalMethod":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":273,"org.easymock.tests2.DependencyTest.testClassMockingSupport":341,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":432,"org.easymock.tests2.CaptureTest.testCapture1_2446744":92,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":187,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":68,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":232,"org.easymock.tests.UsageThrowableTest.throwError":253,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":417,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":473,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":358,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":491,"org.easymock.samples.PartialClassMockTest.testGetArea":16,"org.easymock.tests.MockingTest.testInterfaceMocking":394,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":233,"org.easymock.tests2.CompareToTest.testLessOrEqual":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":200,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":411,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":384,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":175,"org.easymock.tests2.UsageTest.niceToStrict":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":77,"org.easymock.tests2.MockBuilderTest.testCreateMock":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":388,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":371,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":475,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":183,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":112,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":292,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":274,"org.easymock.tests.UsageOverloadedMethodTest.overloading":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":390,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":50,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":216,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":332,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":465,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":49,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":97,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":409,"org.easymock.tests2.EasyMockSupportClassTest.testAll":162,"org.easymock.tests.MockClassControlTest.testEquals":267,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":198,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":191,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":69,"org.easymock.tests2.CaptureTest.testCaptureAll":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":271,"org.easymock.tests.MockNameTest.defaultName":413,"org.easymock.tests2.UsageConstraintsTest.testMatches":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":228,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":230,"org.easymock.samples.ExampleTest.voteForRemovals":9,"org.easymock.tests.UsageVarargTest.allKinds":252,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":327,"org.easymock.samples.BasicClassMockTest.testPrintContent":15,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":272,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":259,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":171,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":354,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":480,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":430,"org.easymock.tests2.UsageConstraintsTest.greaterThan":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":484,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":160,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":431,"org.easymock.samples.ExampleTest.voteForRemoval":6,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":22,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":362,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":419,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":155,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":122,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":291,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":109,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":166,"org.easymock.tests2.CaptureTest.testCaptureFirst":101,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":446,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":110,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":134,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":212,"org.easymock.tests2.UsageTest.moreThanOneArgument":124,"org.easymock.tests2.CaptureTest.testCapture2_2446744":100,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":458,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":82,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":251,"org.easymock.tests.GenericTest.testBridgedEquals":400,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":299,"org.easymock.tests.UsageExpectAndReturnTest.longType":208,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":269,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":192,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":439,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":58,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":190,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":0,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":225,"org.easymock.tests.UsageCallCountTest.tooManyCalls":300,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":258,"org.easymock.tests.MockingTest.testNiceClassMocking":397,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":136,"org.easymock.tests.MockingTest.testClassMocking":392,"org.easymock.tests2.UsageConstraintsTest.testContains":48,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":293,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":32,"org.easymock.tests2.UsageConstraintsTest.testFind":40,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":334,"org.easymock.tests.MockTypeTest.fromEasyMockClass":416,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":35,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":318,"org.easymock.tests.UsageExpectAndReturnTest.object":215,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":115,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":246,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":289,"org.easymock.tests.UsageTest.exactCallCountByLastCall":286,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":435,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":405,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":467,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":221,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":242,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":314,"org.easymock.tests.MockClassControlTest.testHashCode":266,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":349,"org.easymock.tests2.EasyMockSupportTest.testVerify":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":488,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":406,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":2,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":312,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":470,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":67,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":66,"org.easymock.tests.UsageVarargTest.varargCharAccepted":245,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":424,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":463,"org.easymock.tests2.UsageTest.openCallCountByLastCall":128,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":118,"org.easymock.tests.DefaultClassInstantiatorTest.object":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":434,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":287,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":385,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":256,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":348,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":158,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":265,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":180,"org.easymock.tests.CapturesMatcherTest.test":464,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":222,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":165,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":264,"org.easymock.tests2.UsageTest.resumeIfFailure":133,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":415,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":169,"org.easymock.tests2.StubTest.stubWithReturnValue":106,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":59,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":214,"org.easymock.tests2.SerializationTest.testAllMockedMethod":104,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":456,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":476,"org.easymock.samples.SupportTest.voteForRemovals":18,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":398,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":351,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":186,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":474,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":462,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":342,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":437,"org.easymock.tests.UsageExpectAndThrowTest.object":184,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":56,"org.easymock.tests2.DelegateToTest.testWrongClass":86,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":330,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":331,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.UsageStrictMockTest.range":323,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":377,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":114,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":135,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":185,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":79,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":240,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":275,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":477,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":412,"org.easymock.tests2.CaptureTest.testCaptureNone":96,"org.easymock.tests.UsageUnorderedTest.message":307,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":472,"org.easymock.tests.UsageVerifyTest.twoReturns":329,"org.easymock.tests.UsageVarargTest.varargByteAccepted":250,"org.easymock.tests2.ThreadingTest.testThreadSafe":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":386,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":297,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":422,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":14,"org.easymock.tests2.CaptureTest.testCapture_2617107":90,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":304,"org.easymock.tests2.UsageConstraintsTest.any":46,"org.easymock.tests2.StubTest.stub":105,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndThrowTest.longType":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":168,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":428,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":236,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":145,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":121,"org.easymock.tests2.SerializationTest.testClass":102,"org.easymock.tests.LimitationsTest.mockNativeMethod":204,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":399,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":224,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":366,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":148,"org.easymock.tests2.NameTest.nameForMocksControl":29,"org.easymock.tests2.MockedExceptionTest.testMockedException":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":381,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":283,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":178,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":196,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":337,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":149,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":80,"org.easymock.tests.MockingTest.testNicePartialClassMocking":195,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":154,"org.easymock.tests2.CaptureTest.testCaptureLast":95,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":364,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":306,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":141,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":44,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":57,"org.easymock.tests.MockingTest.testTwoMocks":393,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":205,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":182,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":131,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":61,"org.easymock.samples.ExampleTest.removeNonExistingDocument":10,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":234,"org.easymock.tests.UsageStrictMockTest.differentMethods":324,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":370,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":350,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":426,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":23,"org.easymock.tests2.MockBuilderTest.testCreateMockString":83,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":261,"org.easymock.tests.UsageExpectAndThrowTest.floatType":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":382,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":483,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":72,"org.easymock.tests.UsageVerifyTest.twoThrows":328,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":164,"org.easymock.samples.ExampleTest.voteAgainstRemoval":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":410,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":159,"org.easymock.tests.LimitationsTest.privateConstructor":402,"org.easymock.tests2.UsageConstraintsTest.testNotNull":60,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":30,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":260,"org.easymock.tests2.UsageTest.defaultResetToNice":130,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":220,"org.easymock.tests.UsageVarargTest.differentLength":247,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":365,"org.easymock.tests2.CallbackTest.callback":120,"org.easymock.tests2.UsageConstraintsTest.equals":338,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":469,"org.easymock.tests.UsageTest.openCallCountByLastCall":282,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":303,"org.easymock.tests.UsageCallCountTest.tooFewCalls":295,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":277,"org.easymock.tests.UsageThrowableTest.throwCheckedException":257,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":478,"org.easymock.tests.MockingTest.testStrictClassMocking":391,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":173,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":140,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":139,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":74,"org.easymock.tests.ObjectMethodsTest.testHashCode":288,"org.easymock.tests2.NameTest.nameForNiceMock":28,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":25,"org.easymock.tests2.DependencyTest.testInterfaceMocking":63,"org.easymock.samples.ExampleTest.addDocument":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":490,"org.easymock.tests2.DelegateToTest.testStubDelegate":85,"org.easymock.tests2.AnswerTest.stubAnswer":73,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":321,"org.easymock.tests.UsageVarargTest.varargLongAccepted":249,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.floatType":207,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":223,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":65,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":438,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":54,"org.easymock.tests.UsageThrowableTest.noUpperLimit":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":37,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":375,"org.easymock.tests2.SerializationTest.test":103,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":93,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":466,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":425,"org.easymock.tests2.UsageConstraintsTest.testSame":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":206,"org.easymock.samples.SupportTest.addDocument":17,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":383,"org.easymock.tests.GenericTest.testPackageScope":197,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":355,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":395,"org.easymock.tests2.NameTest.nameForMock":26,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":217,"org.easymock.tests2.UsageStrictMockTest.differentMethods":147,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":361,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":209,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":188,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":421,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":311,"org.easymock.tests2.MockedExceptionTest.testRealException":33,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":378,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":453,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":144,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":302,"org.easymock.tests2.NameTest.nameForStrictMock":27,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":345,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":153,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":376,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":427,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":76,"org.easymock.tests2.UsageStrictMockTest.range":146,"org.easymock.tests2.UsageConstraintsTest.lessThan":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":487,"org.easymock.tests2.CaptureTest.testCaptureRightOne":98,"org.easymock.tests2.UsageConstraintsTest.testOr":43,"org.easymock.tests.UsageRangeTest.combination":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":150,"org.easymock.tests.UsageTest.wrongArguments":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":485,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":218,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":429,"org.easymock.tests.UsageVarargTest.varargShortAccepted":248,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":298,"org.easymock.tests2.UsageConstraintsTest.cmpTo":47,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":443,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":129,"org.easymock.tests2.CaptureTest.testCaptureFromStub":99,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":231,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":344,"org.easymock.tests.UsageTest.unexpectedCallWithArray":280,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":320,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":296,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":219,"org.easymock.tests2.UsageConstraintsTest.constraints":38,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":322,"org.easymock.samples.ExampleTest.addAndChangeDocument":11,"org.easymock.tests.UsageStrictMockTest.testVerify":326,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":13,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":319,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":270,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":94,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":201,"org.easymock.tests.LimitationsTest.abstractClass":401,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":202,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":113,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":243}}]
