[{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:266","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[41,42,43,44,45,46],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[47,48],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[49,50,51],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[52,53,54,55],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[56,57,58,59,60,28,61,44,62,63,64,65,66,67,68,69,70,71,72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[74,75,76],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[77,78,79,80,81,82,36,83,84,85,86,87],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[88],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[89,77,60,90,91,78,27,92,36,62,93,94,95,96,97,98,99,75,100,72,101,102,103,104],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:58","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[105,106,107,108,109,90,110,111,112,113,62,114,63,115,116,117,118,119,120,121,122,123,72,124,73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[0,56,57,58,59,126,127,128,129,130,131,132,106,133,134,135,60,136,28,61,137,44,62,138,114,63,139,38,64,65,140,141,66,67,142,143,144,121,123,145,146,147,148,149,150,151,68,69,70,71,152,72,153,124,73,154],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[156,157],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[56,57,58,59,158,60,136,28,61,44,62,114,63,64,65,66,67,68,69,70,71,72,124,73],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockHandler:80","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[159,160,161,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[162,163,164],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[166,167,168,169,170,171,172],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[56,158,173,136,28,61,62,63,139,64,72,73,154],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[174],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:92","failures":[145,74,75,175,76,125,176,177,178],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[179,180,181,182,183,184],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[166,167,168,169,170,171,172],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[156,157],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[185,186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[175],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[56,57,58,59,158,60,136,28,61,44,62,114,63,64,65,66,67,68,69,70,71,72,124,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[49,50,51],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":74,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":77,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.UsageTest.argumentsOrdered":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":82,"org.easymock.tests2.CompareToTest.testGreateOrEqual":55,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":141,"org.easymock.tests2.StubTest.stubWithReturnValue":40,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":170,"org.easymock.tests2.SerializationTest.testAllMockedMethod":164,"org.easymock.tests2.NameTest.nameForNiceMock":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":80,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":155,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":136,"org.easymock.tests2.DependencyTest.testInterfaceMocking":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":169,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":46,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":156,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":17,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":83,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":185,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":62,"org.easymock.tests2.UsageConstraintsTest.greaterThan":47,"org.easymock.tests.UsageExpectAndThrowTest.object":15,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":133,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":117,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":107,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":123,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":167,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":139,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":93,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":184,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":94,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":52,"org.easymock.tests2.UsageTest.wrongArguments":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":90,"org.easymock.tests.UsageStrictMockTest.range":114,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests2.SerializationTest.test":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":16,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":151,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":180,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":92,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":174,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":30,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":24,"org.easymock.tests.UsageTest.moreThanOneArgument":56,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":58,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":105,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":79,"org.easymock.tests2.CaptureTest.testCaptureFirst":104,"org.easymock.tests2.CaptureTest.testCaptureNone":103,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.UsageUnorderedTest.message":60,"org.easymock.tests2.UsageTest.moreThanOneArgument":64,"org.easymock.tests.UsageVerifyTest.twoReturns":61,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":144,"org.easymock.tests.UsageTest.argumentsOrdered":59,"org.easymock.tests.GenericTest.testBridgedEquals":157,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":160,"org.easymock.tests2.CaptureTest.testCapture_2617107":177,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":131,"org.easymock.tests2.NameTest.nameForMock":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":95,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":171,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":112,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":27,"org.easymock.tests2.UsageConstraintsTest.any":100,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":21,"org.easymock.tests2.UsageStrictMockTest.differentMethods":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":99,"org.easymock.tests.UsageExpectAndThrowTest.longType":8,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":81,"org.easymock.tests.UsageCallCountTest.tooManyCalls":132,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":153,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":19,"org.easymock.tests2.SerializationTest.testClass":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":109,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":76,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":129,"org.easymock.tests2.MockedExceptionTest.testRealException":87,"org.easymock.tests2.CaptureTest.testAnd":176,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":154,"org.easymock.tests2.NameTest.nameForMocksControl":71,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":10,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":72,"org.easymock.tests2.MockedExceptionTest.testMockedException":85,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":91,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":108,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":1,"org.easymock.tests2.NameTest.nameForStrictMock":69,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":9,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":20,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":26,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":51,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":119,"org.easymock.tests2.CaptureTest.testCaptureLast":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":36,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":137,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":182,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":175,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":134,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":125,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":120,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":143,"org.easymock.tests2.UsageStrictMockTest.range":124,"org.easymock.tests2.UsageConstraintsTest.lessThan":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":168,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":18,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":13,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":161,"org.easymock.tests.UsageTest.exactCallCountByLastCall":126,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":66,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":89,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":148,"org.easymock.tests.UsageThrowableTest.throwError":29,"org.easymock.tests2.CaptureTest.testCaptureRightOne":178,"org.easymock.tests.UsageStrictMockTest.differentMethods":63,"org.easymock.tests2.UsageConstraintsTest.testOr":75,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":172,"org.easymock.tests.UsageRangeTest.combination":106,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":118,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":181,"org.easymock.tests.UsageTest.wrongArguments":57,"org.easymock.tests.UsageExpectAndThrowTest.floatType":7,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":113,"org.easymock.tests.UsageVerifyTest.twoThrows":28,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":3,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":96,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":122,"org.easymock.tests2.UsageTest.niceToStrict":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":6,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":39,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":35,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":84,"org.easymock.tests.DefaultClassInstantiatorTest.object":179,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":50,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":2,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":49,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":115,"org.easymock.tests.UsageVarargTest.differentLength":127,"org.easymock.tests2.CallbackTest.callback":147,"org.easymock.tests.UsageTest.unexpectedCallWithArray":41,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":12,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":14,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":149,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":31,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":78,"org.easymock.tests.UsageCallCountTest.tooFewCalls":130,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":159,"org.easymock.tests2.UsageConstraintsTest.constraints":145,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":138,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":121,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":11,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":25,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":111,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":165,"org.easymock.tests.UsageThrowableTest.throwCheckedException":32,"org.easymock.tests2.CompareToTest.testGreateThan":48,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":97,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":98,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":43,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":150,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":135,"org.easymock.tests2.CaptureTest.testCaptureAll":101}}]
