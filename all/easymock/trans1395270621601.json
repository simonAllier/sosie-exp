[{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[50,51,52,53,54,55],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:183","sourceCode":"net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:174","sourceCode":"try {\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n} catch (final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException) {\n    net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader());\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","this":"this"}},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[56,57,58,35,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:217","failures":[6,15,16,61,62,24,31,63,64],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[65,66,67,68],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1,70,3,71,72,4,5,6,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,11,12,108,109,110,111,13,112,113,114,115,116,117,118,119,120,14,121,122,123,124,125,126,15,16,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,61,149,150,151,152,153,154,155,156,157,158,18,62,19,20,21,159,160,161,162,163,164,165,166,167,168,169,56,170,171,172,173,174,175,176,177,178,179,180,181,24,182,183,25,26,27,184,185,28,29,30,31,186,187,188,189,190,191,36,192,193,194,195,196,197,198,199,39,200,201,65,202,203,204,205,206,207,208,209,210,211,40,212,213,67,214,215,216,217,68,218,219,63,220,221,222,223,224,225,226,227,228,229,41,230,231,232,233,234,235,236,237,238,239,42,240,241,242,43,44,243,45,244,245,246,247,59,60,248,249,250,64,47,48,49,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[274,275,276,277,278,279,280],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[36,281,38,282,283,284,256,285],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[114,286,172,63,287,288,41],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[108,289,14,121,122,123,124,125,156,62,160,161,164,165,166,167,168,203,206,64,262,268,269,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"failures":[2,290,291,18,292,293],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:314","failures":[294,295,296,297],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[298,299,300,301,302,59],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[102,108,289,14,121,122,123,124,125,156,18,62,160,161,164,165,166,167,168,196,198,199,39,200,201,65,202,203,204,205,66,206,207,208,209,210,211,40,212,213,67,214,215,216,217,68,218,219,223,224,228,64,303,261,262,263,264,265,266,267,268,269,270,271,304,272,273],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[305,306,307,308,309,1,70,2,3,71,72,4,5,6,310,311,312,313,314,315,316,317,318,319,320,321,294,295,322,296,297,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,323,96,97,9,98,99,100,101,102,103,324,325,104,105,106,107,10,11,12,326,108,289,327,328,329,109,110,330,111,331,332,333,13,334,112,113,114,335,115,116,336,117,337,118,119,120,338,339,340,14,121,122,123,124,125,126,15,16,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,61,149,150,151,152,153,341,342,343,344,345,346,154,155,347,348,349,350,351,352,156,353,354,355,157,356,357,358,359,360,361,362,363,364,365,69,366,367,368,50,51,52,53,369,54,370,55,371,372,373,374,375,376,377,378,379,380,381,382,383,286,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,17,158,18,62,19,20,21,159,404,160,161,405,406,407,408,409,162,163,410,411,23,412,413,414,415,416,417,418,419,164,165,166,167,168,169,56,170,171,172,173,174,175,176,420,177,57,58,178,179,180,181,24,182,183,25,26,27,184,185,421,28,29,30,31,298,422,32,423,424,425,186,299,187,274,188,426,427,33,34,428,35,429,430,189,190,191,36,192,193,194,195,300,431,196,432,433,281,37,197,38,434,301,198,199,39,200,435,201,65,202,203,204,205,66,206,207,208,209,210,211,40,212,213,67,214,215,216,217,68,218,219,63,436,287,220,221,288,437,438,439,440,302,441,222,442,223,0,224,225,226,227,228,229,41,443,444,445,446,447,230,448,449,450,451,452,453,454,231,232,233,455,234,235,236,237,238,280,456,239,42,240,241,242,43,44,457,243,45,244,245,246,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,247,473,474,59,475,476,477,478,479,480,481,482,282,60,483,484,485,486,487,248,283,284,488,489,490,491,492,249,493,494,495,496,497,498,46,250,64,47,48,49,251,252,253,303,254,255,256,257,499,258,259,260,285,261,262,263,264,265,266,267,268,269,270,271,304,272,273],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[2,290,291,18,292,293],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[500,235,236,237],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[305,306,307,308,309,1,70,71,72,6,311,321,294,295,322,296,297,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,102,103,104,108,289,109,110,111,13,334,112,113,114,115,116,117,118,119,120,339,14,121,122,123,124,125,126,15,16,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,61,149,150,151,152,153,154,347,349,350,351,352,156,353,157,386,392,18,62,20,21,160,161,405,406,407,408,409,162,163,410,411,164,165,166,167,168,56,171,172,173,174,176,177,57,57,58,58,181,24,182,183,26,184,185,421,30,31,32,186,187,188,34,189,190,191,36,192,193,194,195,196,37,197,38,198,199,39,200,201,65,202,203,204,205,66,206,207,208,209,210,211,40,212,213,67,214,215,216,217,68,218,219,63,436,287,220,221,288,302,441,222,442,223,224,225,226,227,228,229,41,230,454,231,232,233,455,234,235,236,238,239,42,240,241,242,43,44,457,243,45,244,245,247,59,60,248,249,64,48,49,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,304,272,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[348],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[214],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[68],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[18,62,20,21,404,193,195,64,48,49],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[446,491],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[205,210,219,502],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[2,3,4,5,8,14,15,16,18,20,25,28,29,48],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[70,2,3,4,5,290,503,291,504,505,506,8,338,339,14,126,15,16,18,62,20,21,507,292,508,509,510,511,512,513,293,514,515,183,25,28,29,40,64,48,49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[305,306,307,308,309,1,70,2,3,71,72,4,5,6,310,311,312,313,314,315,316,317,318,319,320,321,294,295,322,296,297,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,323,96,97,9,98,99,100,101,102,103,324,325,104,105,106,107,10,11,12,326,108,289,327,328,329,109,110,330,111,331,332,333,13,334,112,113,114,335,115,116,336,117,337,118,119,120,338,339,340,14,121,122,123,124,125,126,15,16,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,61,149,150,151,152,153,341,342,343,344,345,346,154,155,347,348,349,350,351,352,156,353,354,355,157,356,357,358,359,360,361,362,363,364,365,69,366,367,368,50,51,52,53,369,54,370,55,371,372,373,374,375,376,377,378,379,380,381,382,383,286,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,17,158,18,62,19,20,21,159,404,160,161,405,406,407,408,409,162,163,410,411,23,412,413,414,415,416,417,418,419,164,165,166,167,168,169,56,170,171,172,173,174,175,176,420,177,57,58,178,179,180,181,24,182,183,25,26,27,184,185,421,28,29,30,31,298,422,32,423,424,425,186,299,187,274,188,426,427,33,34,428,35,429,430,189,190,191,36,192,193,194,195,300,431,196,432,433,281,37,197,38,434,301,198,199,39,200,435,201,65,202,203,204,205,66,206,207,208,209,210,211,40,212,213,67,214,215,216,217,68,218,219,63,436,287,220,221,288,437,438,439,440,302,441,222,442,223,0,224,225,226,227,228,229,41,443,444,445,446,447,230,448,449,450,451,452,453,454,231,232,233,455,234,235,236,237,238,280,456,239,42,240,241,242,43,44,457,243,45,244,245,246,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,247,473,474,59,475,476,477,478,479,480,481,482,282,60,483,484,485,486,487,248,283,284,488,489,490,491,492,249,493,494,495,496,497,498,46,250,64,47,48,49,251,252,253,303,254,255,256,257,499,258,259,260,285,261,262,263,264,265,266,267,268,269,270,271,304,272,273],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[305,306,307,308,309,1,70,2,3,71,72,4,5,6,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,9,98,99,100,101,102,103,104,105,106,107,10,11,12,108,289,109,110,111,13,112,113,114,115,116,337,118,119,120,14,121,122,123,124,125,126,15,16,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,61,149,150,151,152,153,341,342,343,344,345,154,155,349,350,351,352,156,353,157,394,395,396,397,17,158,18,62,19,20,21,159,160,161,164,165,166,167,168,169,56,170,171,172,173,174,175,176,177,57,58,178,179,180,181,24,182,183,25,26,27,184,185,421,28,29,30,31,298,32,186,299,187,188,33,34,35,189,190,191,36,192,193,194,195,300,196,281,37,197,38,198,199,39,200,201,65,202,203,204,205,206,207,208,209,210,211,40,212,213,67,214,215,216,217,68,218,219,63,220,221,288,437,438,439,440,302,441,222,442,223,0,224,225,226,227,228,229,41,230,231,232,233,234,235,236,237,238,239,42,240,241,242,43,44,457,243,45,244,245,246,247,59,60,248,249,46,250,64,47,48,49,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,304,272,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[516],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[2,290,291,18,292,293],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":200,"org.easymock.tests2.UsageTest.argumentsOrdered":29,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":1,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":244,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":381,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":27,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":170,"org.easymock.tests2.DelegateToTest.testReturnException":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":350,"org.easymock.tests.MockingTest.testPartialClassMocking":109,"org.easymock.tests.MockClassControlTest.testToString":414,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":458,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":478,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":59,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":73,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":275,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":121,"org.easymock.tests2.UsageTest.wrongArguments":25,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":498,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":396,"org.easymock.samples.ExampleTest.answerVsDelegate":172,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":318,"org.easymock.tests2.UsageConstraintsTest.testNull":65,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":332,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":193,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":419,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":45,"org.easymock.tests2.CaptureTest.testPrimitive":264,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":125,"org.easymock.tests.UsageTest.moreThanOneArgument":70,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":92,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":307,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":409,"org.easymock.tests.UsageTest.argumentsOrdered":5,"org.easymock.tests.UsageVarargTest.varargIntAccepted":95,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":279,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":452,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":168,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":510,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":249,"org.easymock.tests.ReplayStateInvalidUsageTest.times":365,"org.easymock.tests2.DependencyTest.testClassMocking":429,"org.easymock.tests2.AnswerTest.answer":63,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":387,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":440,"org.easymock.tests2.CaptureTest.testAnd":261,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":315,"org.easymock.tests2.UsageTest.strictResetToDefault":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":424,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":306,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":242,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":411,"org.easymock.tests2.DelegateToTest.testDelegate":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":88,"org.easymock.tests.LimitationsTest.mockFinalMethod":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":345,"org.easymock.tests2.DependencyTest.testClassMockingSupport":430,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":338,"org.easymock.tests2.CaptureTest.testCapture1_2446744":265,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":431,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":86,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":438,"org.easymock.tests.UsageThrowableTest.throwError":147,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":359,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":317,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":453,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":284,"org.easymock.samples.PartialClassMockTest.testGetArea":56,"org.easymock.tests.MockingTest.testInterfaceMocking":330,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":479,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":403,"org.easymock.tests2.UsageTest.niceToStrict":26,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":186,"org.easymock.tests2.MockBuilderTest.testCreateMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":485,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":495,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":82,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":292,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":43,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":314,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":394,"org.easymock.tests.UsageOverloadedMethodTest.overloading":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":282,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":116,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":138,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":118,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":209,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":270,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":323,"org.easymock.tests.MockClassControlTest.testEquals":418,"org.easymock.tests2.EasyMockSupportClassTest.testAll":247,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":155,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":512,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":439,"org.easymock.tests2.CaptureTest.testCaptureAll":262,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":343,"org.easymock.tests.MockNameTest.defaultName":326,"org.easymock.tests2.UsageConstraintsTest.testMatches":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":308,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":357,"org.easymock.samples.ExampleTest.voteForRemovals":176,"org.easymock.tests.UsageVarargTest.allKinds":102,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":126,"org.easymock.samples.BasicClassMockTest.testPrintContent":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":344,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":152,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":46,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":455,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":353,"org.easymock.tests2.UsageConstraintsTest.greaterThan":212,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":473,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":334,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":38,"org.easymock.samples.ExampleTest.voteForRemoval":173,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":55,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":434,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":226,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":319,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":466,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":300,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":103,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":24,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":240,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":349,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":454,"org.easymock.tests2.CaptureTest.testCaptureFirst":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":241,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":31,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":134,"org.easymock.tests2.UsageTest.moreThanOneArgument":183,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":228,"org.easymock.tests2.CaptureTest.testCapture2_2446744":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":388,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":34,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":101,"org.easymock.tests.GenericTest.testBridgedEquals":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":11,"org.easymock.tests.UsageExpectAndReturnTest.longType":130,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":341,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":91,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":408,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":216,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":89,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":294,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":305,"org.easymock.tests.UsageCallCountTest.tooManyCalls":12,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":503,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":497,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":78,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":151,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":255,"org.easymock.tests.MockingTest.testNiceClassMocking":333,"org.easymock.tests.MockingTest.testClassMocking":328,"org.easymock.tests2.UsageConstraintsTest.testContains":208,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":325,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":222,"org.easymock.tests2.UsageConstraintsTest.testFind":201,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":120,"org.easymock.tests.MockTypeTest.fromEasyMockClass":316,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":17,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":224,"org.easymock.tests.UsageExpectAndReturnTest.object":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":496,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":243,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":97,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":276,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":401,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":501,"org.easymock.tests.UsageTest.exactCallCountByLastCall":6,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":162,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":310,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":506,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":280,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":143,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":93,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":115,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":444,"org.easymock.tests.MockClassControlTest.testHashCode":417,"org.easymock.tests2.EasyMockSupportTest.testVerify":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":481,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":509,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":163,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":114,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":437,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":7,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":303,"org.easymock.tests.UsageVarargTest.varargCharAccepted":96,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":368,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":393,"org.easymock.tests2.UsageTest.openCallCountByLastCall":184,"org.easymock.tests.DefaultClassInstantiatorTest.object":50,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":245,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":322,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":399,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":482,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":491,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":443,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":416,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":37,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":79,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":144,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":321,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":511,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":248,"org.easymock.tests2.UsageTest.resumeIfFailure":30,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":313,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":352,"org.easymock.tests2.StubTest.stubWithReturnValue":253,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":274,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":217,"org.easymock.tests2.SerializationTest.testAllMockedMethod":237,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":386,"org.easymock.samples.SupportTest.voteForRemovals":181,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":293,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":85,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":500,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":392,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":436,"org.easymock.tests.UsageExpectAndThrowTest.object":83,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":312,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":214,"org.easymock.tests2.DelegateToTest.testWrongClass":233,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":160,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":161,"org.easymock.tests.UsageStrictMockTest.range":20,"org.easymock.samples.ConstructorCalledMockTest.testTax":57,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":468,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":457,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":470,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":4,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":395,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":407,"org.easymock.tests2.CaptureTest.testCaptureNone":269,"org.easymock.tests.UsageUnorderedTest.message":14,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":22,"org.easymock.tests.UsageVerifyTest.twoReturns":16,"org.easymock.tests.UsageVarargTest.varargByteAccepted":100,"org.easymock.tests2.ThreadingTest.testThreadSafe":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":483,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":107,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":402,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":178,"org.easymock.tests2.CaptureTest.testCapture_2617107":263,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":515,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":390,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":124,"org.easymock.tests2.UsageConstraintsTest.any":206,"org.easymock.tests2.StubTest.stub":252,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":364,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndThrowTest.longType":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":351,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":363,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":47,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":230,"org.easymock.tests2.SerializationTest.testClass":235,"org.easymock.tests.LimitationsTest.mockNativeMethod":157,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":146,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":490,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":251,"org.easymock.tests2.NameTest.nameForMocksControl":462,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":492,"org.easymock.tests2.MockedExceptionTest.testMockedException":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":474,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":72,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":111,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":0,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":77,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":191,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":188,"org.easymock.tests.MockingTest.testNicePartialClassMocking":110,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":195,"org.easymock.tests2.CompareToTest.testNotComparable":516,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":488,"org.easymock.tests2.CaptureTest.testCaptureLast":268,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":339,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":204,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":260,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":215,"org.easymock.tests.MockingTest.testTwoMocks":329,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":285,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":81,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":218,"org.easymock.samples.ExampleTest.removeNonExistingDocument":420,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":494,"org.easymock.tests.UsageStrictMockTest.differentMethods":21,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":445,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":52,"org.easymock.tests2.ConstraintsToStringTest.andToString":513,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":227,"org.easymock.tests2.MockBuilderTest.testCreateMockString":35,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":475,"org.easymock.tests.UsageExpectAndThrowTest.floatType":75,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":472,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":456,"org.easymock.tests.UsageVerifyTest.twoThrows":15,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":60,"org.easymock.samples.ExampleTest.voteAgainstRemoval":174,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":382,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":197,"org.easymock.tests.LimitationsTest.privateConstructor":355,"org.easymock.tests2.UsageConstraintsTest.testNotNull":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":153,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":302,"org.easymock.tests2.UsageTest.defaultResetToNice":421,"org.easymock.samples.ExampleTest.voteAgainstRemovals":171,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":383,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":489,"org.easymock.tests.UsageVarargTest.differentLength":9,"org.easymock.tests2.CallbackTest.callback":41,"org.easymock.tests2.UsageConstraintsTest.equals":435,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":504,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":432,"org.easymock.tests.UsageTest.openCallCountByLastCall":71,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":123,"org.easymock.tests.UsageCallCountTest.tooFewCalls":105,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":397,"org.easymock.tests.UsageThrowableTest.throwCheckedException":150,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":291,"org.easymock.tests.MockingTest.testStrictClassMocking":327,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":493,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":256,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":69,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":258,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":288,"org.easymock.tests2.CompareToTest.testGreateOrEqual":502,"org.easymock.tests.ObjectMethodsTest.testHashCode":400,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":278,"org.easymock.tests2.NameTest.nameForNiceMock":461,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":229,"org.easymock.tests2.DependencyTest.testInterfaceMocking":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":277,"org.easymock.samples.ExampleTest.addDocument":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":484,"org.easymock.tests2.DelegateToTest.testStubDelegate":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":283,"org.easymock.tests2.AnswerTest.stubAnswer":221,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":62,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":426,"org.easymock.tests.UsageVarargTest.varargLongAccepted":99,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":380,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":145,"org.easymock.tests.UsageExpectAndReturnTest.floatType":129,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":238,"org.easymock.tests2.ConstraintsToStringTest.orToString":507,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":451,"org.easymock.tests.UsageThrowableTest.noUpperLimit":148,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":213,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":199,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":463,"org.easymock.tests2.SerializationTest.test":236,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":266,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":128,"org.easymock.tests2.UsageConstraintsTest.testSame":202,"org.easymock.samples.SupportTest.addDocument":180,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":499,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":476,"org.easymock.tests.GenericTest.testPackageScope":154,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":450,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":331,"org.easymock.tests2.NameTest.nameForMock":459,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":139,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":428,"org.easymock.tests2.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":433,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":131,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":87,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":398,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":113,"org.easymock.tests2.MockedExceptionTest.testRealException":442,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":320,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":505,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":122,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":367,"org.easymock.tests2.NameTest.nameForStrictMock":460,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":425,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":223,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":194,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":467,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":53,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":67,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":32,"org.easymock.tests2.UsageStrictMockTest.range":48,"org.easymock.tests2.UsageConstraintsTest.lessThan":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":447,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":480,"org.easymock.tests2.CaptureTest.testCaptureRightOne":271,"org.easymock.tests2.UsageConstraintsTest.testOr":203,"org.easymock.tests.UsageRangeTest.combination":13,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":36,"org.easymock.tests.UsageTest.wrongArguments":3,"org.easymock.tests2.MockBuilderTest.testWithConstructor":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":477,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":132,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":372,"org.easymock.tests.UsageVarargTest.varargShortAccepted":98,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":54,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":10,"org.easymock.tests2.UsageConstraintsTest.cmpTo":207,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":374,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":185,"org.easymock.tests2.CaptureTest.testCaptureFromStub":304,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":358,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":423,"org.easymock.tests.UsageTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":106,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":141,"org.easymock.tests2.UsageConstraintsTest.constraints":39,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":19,"org.easymock.samples.ExampleTest.addAndChangeDocument":177,"org.easymock.tests2.ConstraintsToStringTest.notToString":508,"org.easymock.tests.UsageStrictMockTest.testVerify":404,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":169,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":342,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":166,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":133,"org.easymock.tests.LimitationsTest.abstractClass":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":167,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":44,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":94}}]
