[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:60","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[48,49,50,51,52],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[53,54,0,55,1,56,57,58,59,16,60,17,61],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[62,63,64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[65,66,67,68,48,69,70,71,72,73,74,75,76,77,78,79,80,81,0,82,83,84,85,86,87,56,88,89,90,91,92,93,94,13,59,95,96,97,16,98,99,100,101,61,102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matched"}},{"transplant":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[105,106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[107],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[108],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[53,67,68,109,82,85,86,110,111,112,113,90,57,92,93,58,13,59,114,99,100,101,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[115],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[83],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,65,133,53,66,67,68,134,135,136,137,138,48,139,108,140,141,142,49,143,144,145,146,147,148,149,150,69,151,152,153,154,155,156,157,158,159,160,50,161,51,162,163,164,165,166,167,168,52,169,170,171,54,172,115,173,174,175,70,176,177,178,71,179,72,180,181,73,182,183,184,74,185,186,187,75,76,188,189,77,190,191,192,193,194,195,0,196,109,82,83,84,55,1,197,85,86,87,56,198,199,200,201,202,203,204,205,206,88,207,6,208,209,210,211,212,213,89,214,90,57,91,92,93,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,7,8,9,10,11,12,237,58,13,59,238,14,239,240,241,242,243,244,245,246,247,15,248,249,250,16,114,99,60,17,100,101,61,251,252,253,254,255,102,256,257,258,259,260,261,262,263,264,265,266,267,268,269,18,19,270,271,272,273,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,103,40,274,41,42,43,44,45,46,275,276,277,278,279,280,47,281,282,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":139,"org.easymock.tests2.UsageTest.argumentsOrdered":86,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":16,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":10,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":84,"org.easymock.tests2.StubTest.stubWithReturnValue":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":226,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":124,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":157,"org.easymock.tests2.DelegateToTest.testReturnException":202,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":8,"org.easymock.tests.MockingTest.testPartialClassMocking":243,"org.easymock.samples.SupportTest.voteForRemovals":126,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":32,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":20,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":172,"org.easymock.tests.UsageExpectAndThrowTest.object":30,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":130,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":154,"org.easymock.tests2.DelegateToTest.testWrongClass":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":271,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":272,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":268,"org.easymock.tests2.UsageTest.wrongArguments":82,"org.easymock.tests.UsageStrictMockTest.range":92,"org.easymock.samples.ExampleTest.answerVsDelegate":117,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":188,"org.easymock.tests2.UsageConstraintsTest.testNull":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":31,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":194,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":77,"org.easymock.tests2.CaptureTest.testPrimitive":162,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":39,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests.UsageTest.moreThanOneArgument":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":211,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":245,"org.easymock.tests2.CaptureTest.testCaptureNone":167,"org.easymock.tests.UsageUnorderedTest.message":103,"org.easymock.tests.UsageVerifyTest.twoReturns":59,"org.easymock.tests.UsageVarargTest.varargByteAccepted":258,"org.easymock.tests2.ThreadingTest.testThreadSafe":180,"org.easymock.tests.UsageTest.argumentsOrdered":101,"org.easymock.tests.UsageVarargTest.varargIntAccepted":253,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":261,"org.easymock.tests2.CaptureTest.testCapture_2617107":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":19,"org.easymock.tests2.UsageConstraintsTest.any":145,"org.easymock.tests2.StubTest.stub":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":265,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":250,"org.easymock.tests.UsageExpectAndThrowTest.longType":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":9,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":62,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":66,"org.easymock.tests2.SerializationTest.testClass":199,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":236,"org.easymock.tests2.AnswerTest.answer":54,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":144,"org.easymock.tests2.CaptureTest.testAnd":50,"org.easymock.tests2.UsageTest.strictResetToDefault":196,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":178,"org.easymock.tests2.NameTest.nameForMocksControl":113,"org.easymock.tests2.MockedExceptionTest.testMockedException":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":187,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":17,"org.easymock.tests2.DelegateToTest.testDelegate":206,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":24,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":35,"org.easymock.tests2.CaptureTest.testCaptureLast":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":11,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":240,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":49,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":155,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":239,"org.easymock.tests2.CaptureTest.testCapture1_2446744":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":33,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":28,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":85,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":159,"org.easymock.tests.UsageThrowableTest.throwError":40,"org.easymock.tests.UsageStrictMockTest.differentMethods":93,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":73,"org.easymock.tests2.MockBuilderTest.testCreateMockString":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":213,"org.easymock.tests.UsageExpectAndThrowTest.floatType":22,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":69,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":173,"org.easymock.tests.UsageVerifyTest.twoThrows":13,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":279,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":107,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":262,"org.easymock.samples.ExampleTest.voteAgainstRemoval":119,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":244,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":179,"org.easymock.tests2.UsageTest.niceToStrict":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":21,"org.easymock.tests2.UsageConstraintsTest.testNotNull":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":2,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":46,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":193,"org.easymock.tests2.UsageTest.defaultResetToNice":197,"org.easymock.tests2.MockBuilderTest.testCreateMock":79,"org.easymock.samples.ExampleTest.voteAgainstRemovals":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":232,"org.easymock.tests.UsageVarargTest.differentLength":102,"org.easymock.tests2.CallbackTest.callback":88,"org.easymock.tests.UsageTest.openCallCountByLastCall":60,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":29,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":75,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":137,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":277,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":18,"org.easymock.tests.UsageOverloadedMethodTest.overloading":247,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":47,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":149,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":228,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":63,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":148,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":168,"org.easymock.tests.UsageThrowableTest.throwCheckedException":43,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":37,"org.easymock.tests2.CaptureTest.testCaptureAll":161,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":14,"org.easymock.tests2.UsageConstraintsTest.testMatches":150,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":212,"org.easymock.samples.ExampleTest.voteForRemovals":121,"org.easymock.tests2.NameTest.nameForNiceMock":112,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":183,"org.easymock.tests.UsageVarargTest.allKinds":260,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":58,"org.easymock.tests2.DependencyTest.testInterfaceMocking":129,"org.easymock.samples.BasicClassMockTest.testPrintContent":128,"org.easymock.samples.ExampleTest.addDocument":120,"org.easymock.tests2.DelegateToTest.testStubDelegate":203,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":45,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":65,"org.easymock.tests2.AnswerTest.stubAnswer":174,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":12,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":57,"org.easymock.tests2.UsageConstraintsTest.greaterThan":151,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":104,"org.easymock.tests.UsageVarargTest.varargLongAccepted":257,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":72,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":215,"org.easymock.samples.ExampleTest.voteForRemoval":118,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":181,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":235,"org.easymock.tests.UsageExpectAndReturnTest.floatType":219,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":281,"org.easymock.tests.UsageThrowableTest.noUpperLimit":274,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":152,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":267,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":138,"org.easymock.tests2.SerializationTest.test":200,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":164,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":185,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":41,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":218,"org.easymock.tests2.UsageConstraintsTest.testSame":141,"org.easymock.samples.SupportTest.addDocument":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":7,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":201,"org.easymock.tests2.CaptureTest.testCaptureFirst":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":186,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":56,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":224,"org.easymock.tests2.UsageTest.moreThanOneArgument":109,"org.easymock.tests2.CaptureTest.testCapture2_2446744":170,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":182,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":105,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":259,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":96,"org.easymock.tests2.NameTest.nameForMock":110,"org.easymock.tests.UsageExpectAndReturnTest.longType":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":273,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":38,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":266,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":156,"org.easymock.tests2.UsageStrictMockTest.differentMethods":68,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":36,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":209,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":221,"org.easymock.tests.UsageCallCountTest.tooManyCalls":97,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":34,"org.easymock.tests2.MockedExceptionTest.testRealException":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":225,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":44,"org.easymock.tests2.NameTest.nameForStrictMock":111,"org.easymock.tests2.UsageConstraintsTest.testContains":147,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":4,"org.easymock.tests2.UsageConstraintsTest.testFind":108,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":15,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":176,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":89,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":132,"org.easymock.tests.UsageExpectAndReturnTest.object":227,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":177,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":78,"org.easymock.tests2.UsageStrictMockTest.range":67,"org.easymock.tests2.UsageConstraintsTest.lessThan":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":189,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":255,"org.easymock.tests.UsageTest.exactCallCountByLastCall":61,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":238,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":74,"org.easymock.tests2.CaptureTest.testCaptureRightOne":52,"org.easymock.tests2.UsageConstraintsTest.testOr":142,"org.easymock.tests.UsageRangeTest.combination":94,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":251,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":70,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":280,"org.easymock.tests.UsageTest.wrongArguments":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":222,"org.easymock.tests2.EasyMockSupportTest.testVerify":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":230,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":106,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":278,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":276,"org.easymock.tests.UsageVarargTest.varargShortAccepted":256,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":95,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":135,"org.easymock.tests2.UsageConstraintsTest.cmpTo":146,"org.easymock.tests.UsageVarargTest.varargCharAccepted":254,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":115,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":133,"org.easymock.tests2.UsageTest.openCallCountByLastCall":55,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":1,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":191,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":275,"org.easymock.tests2.CaptureTest.testCaptureFromStub":169,"org.easymock.tests.UsageTest.unexpectedCallWithArray":98,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":27,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":42,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":231,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":91,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":71,"org.easymock.tests2.UsageConstraintsTest.constraints":48,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":26,"org.easymock.samples.ExampleTest.addAndChangeDocument":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":234,"org.easymock.tests.UsageStrictMockTest.testVerify":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":248,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":123,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":214,"org.easymock.tests2.UsageTest.resumeIfFailure":87,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":263,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":223,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":264,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":76}}]
