[{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[28,29,30,31,6,32,33,34,35,14,36,37,38,39,40,41,42],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[43,44,45,46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[47,48,49,50,51],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,8,9,67,68,69,70,71,10,72,73,74,75,76,11,77,78,79,12,80,13,81,82,83,84,85,86,87,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[89,90,91],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"value","capture":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[92,52,93,94,95,96,97,98,99,100,101,102,103,53,54,104,0,105,106,107,28,108,109,110,111,112,113,114,55,115,116,117,56,57,1,118,119,120,121,122,2,123,124,125,126,127,3,128,129,130,4,131,5,132,58,6,32,33,133,59,34,35,134,135,136,136,137,138,139,140,141,142,143,144,145,146,147,148,60,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,61,62,63,64,65,66,164,165,166,167,8,9,67,68,69,70,71,10,72,73,74,75,76,11,77,78,79,12,80,13,81,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,82,210,211,212,213,214,215,216,83,217,14,36,218,219,220,84,221,37,38,222,223,85,86,87,88,15,16,17,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,18,261,19,262,263,264,265,266,20,21,267,268,269,270,22,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,23,289,290,291,292,293,294,295,296,297,298,299,300,301,24,302,303,25,304,305,306,307,308,309,310,311,26,89,90,91,27],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[312],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[313],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[92,52,102,103,53,54,104,0,314,105,106,28,108,109,110,111,112,113,55,115,116,117,56,57,1,118,119,120,121,122,2,123,124,125,126,127,3,128,129,130,4,131,5,132,315,58,6,32,33,133,59,34,35,134,137,138,139,140,141,316,161,162,163,61,62,63,64,66,164,165,167,8,9,67,68,69,70,71,10,72,73,74,75,76,11,77,78,79,12,80,13,81,168,171,172,173,178,179,180,181,182,184,185,188,200,202,204,205,206,207,208,82,211,212,215,216,83,217,14,36,218,219,220,84,37,38,223,15,17,224,225,226,229,234,235,240,242,243,245,252,253,254,255,256,257,258,259,260,18,261,19,262,263,264,265,266,20,267,268,269,270,22,23,289,290,291,292,293,294,295,296,297,298,299,300,301,24,302,303,25,304,305,306,307,309,310,311,26,89,90,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:61","sourceCode":"java.io.InputStream java.io.InputStream = org.easymock.internal.EasyMockProperties.getClassLoader().getResourceAsStream(java.lang.String)","type":"CtLocalVariableImpl"},"failures":[92,52,317,318,319,320,321,93,94,95,96,97,98,99,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,100,101,345,346,102,103,53,54,104,0,347,348,349,350,314,351,352,353,354,355,356,357,358,359,105,360,106,107,28,108,109,110,111,112,361,113,114,55,115,116,117,56,57,1,118,119,120,121,122,2,123,124,125,126,127,3,128,129,130,4,131,5,132,362,315,363,364,365,366,58,6,32,33,133,59,34,35,134,367,368,369,370,371,372,373,374,375,376,377,378,7,379,380,381,382,383,384,385,386,387,388,389,390,391,392,135,137,138,139,140,141,142,143,144,145,146,147,393,148,60,394,316,149,150,151,152,395,153,154,155,156,157,158,159,160,396,397,398,399,400,401,402,403,404,405,406,407,408,161,162,409,163,410,411,412,61,62,63,64,65,66,413,414,415,416,417,418,419,420,421,422,423,424,425,164,165,426,427,428,429,430,431,432,433,434,166,167,8,9,67,68,69,70,71,10,72,73,74,75,76,11,77,78,79,12,80,13,81,168,435,169,170,171,172,173,174,175,176,177,436,437,438,439,440,441,442,178,179,180,181,182,183,184,185,186,187,188,443,189,190,191,192,193,194,195,196,197,198,444,445,446,447,448,199,449,450,451,452,453,454,455,456,200,201,202,203,204,205,206,207,208,209,82,457,458,459,460,461,462,210,211,212,213,463,214,215,216,464,83,217,14,36,218,219,220,84,221,37,38,222,223,85,86,87,88,15,465,16,17,224,225,226,466,467,468,469,470,471,227,228,472,473,229,230,231,232,474,233,234,235,475,476,477,236,478,479,237,480,481,482,483,484,485,486,487,488,238,489,490,491,492,493,239,494,495,240,241,242,243,244,245,246,496,247,497,498,248,249,250,251,499,500,252,501,502,253,254,255,256,313,257,43,44,503,45,504,46,505,258,259,260,506,18,261,19,262,263,264,265,266,20,21,267,268,269,270,22,271,272,273,274,275,276,277,278,279,280,281,282,283,507,508,509,510,511,284,512,513,514,515,516,517,285,286,287,288,23,289,290,291,518,292,293,294,295,296,297,519,298,299,300,301,24,302,303,25,304,305,306,307,308,309,310,311,26,89,90,91,27],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[447,510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"this"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[520,521,229,249,250],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[418],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[344,100,101,345,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"bridgeMethod","bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[136,522,19,270,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[320,93,94,97,98,99,0,106,28,108,109,110,111,112,362,315,58,6,32,33,34,35,134,393,394,316,149,155,400,403,404,418,421,422,423,424,425,426,429,430,431,168,171,172,173,199,449,202,204,205,206,207,208,211,212,215,216,83,14,36,218,219,37,38,222,223,468,469,470,471,227,228,472,231,232,233,234,235,241,248,251,500,272,274,276,277,279,280,284,512,290,303,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[523,89,90,91],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[89,90,91],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[92,101,102,103,53,54,104,0,107,108,109,110,111,112,113,114,55,115,116,117,56,57,1,118,119,120,121,122,2,123,124,125,126,127,3,128,129,130,4,131,5,132,58,6,133,59,134,137,138,139,140,141,147,148,60,150,151,152,153,154,156,157,158,159,160,61,62,63,64,65,66,164,165,166,167,8,9,67,68,69,70,71,10,72,73,74,75,76,11,77,78,79,12,80,13,81,171,172,173,178,179,180,181,182,183,184,185,186,187,188,189,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,82,83,217,14,218,219,220,84,222,223,15,16,17,225,229,231,232,241,244,250,252,253,254,258,259,260,18,261,19,20,21,268,22,271,272,273,274,275,276,277,279,280,281,282,284,291,293,295,296,310,89,90,27],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[524,525,526,527,528,226,466,529,474,89],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[136,261,19,262,263,264,265,266,20,267,268,269,270,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[437,441],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:98","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType()))","type":"CtAssignmentImpl"},"failures":[142,143,144,145,146,174,175,176,177,199,218,221,227,230,231,232,246,248,273,275,276,278,279,284,285,286,287,288],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[17],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[530,531,532,229,249,250],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[373,254],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,28,110,533,32,33,34,35,149,172,173,206,36,37,38],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[192,228,229,231,232,234,235],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":291,"org.easymock.tests2.UsageTest.argumentsOrdered":38,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":58,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":377,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":219,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":193,"org.easymock.tests2.DelegateToTest.testReturnException":258,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":62,"org.easymock.tests.MockingTest.testPartialClassMocking":161,"org.easymock.tests.MockClassControlTest.testToString":429,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":467,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":365,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":483,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":9,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":237,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":201,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":343,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":524,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":297,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":102,"org.easymock.tests2.UsageTest.wrongArguments":36,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":517,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":176,"org.easymock.samples.ExampleTest.answerVsDelegate":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":423,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":411,"org.easymock.tests2.UsageConstraintsTest.testNull":293,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":243,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":434,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":280,"org.easymock.tests2.CaptureTest.testPrimitive":263,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":104,"org.easymock.tests.UsageTest.moreThanOneArgument":6,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":81,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":180,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":413,"org.easymock.tests.UsageTest.argumentsOrdered":35,"org.easymock.tests.UsageVarargTest.varargIntAccepted":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":137,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":227,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":453,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":141,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":327,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":284,"org.easymock.tests.ReplayStateInvalidUsageTest.times":354,"org.easymock.tests2.DependencyTest.testClassMocking":455,"org.easymock.tests2.AnswerTest.answer":252,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":519,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":383,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":288,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":420,"org.easymock.tests2.CaptureTest.testAnd":261,"org.easymock.tests2.UsageTest.strictResetToDefault":217,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":275,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":417,"org.easymock.tests2.DelegateToTest.testDelegate":18,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":326,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":79,"org.easymock.tests.LimitationsTest.mockFinalMethod":360,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":146,"org.easymock.tests2.DependencyTest.testClassMockingSupport":456,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":362,"org.easymock.tests2.CaptureTest.testCapture1_2446744":264,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":496,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":286,"org.easymock.tests.UsageThrowableTest.throwError":113,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":349,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":422,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":454,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":495,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":330,"org.easymock.samples.PartialClassMockTest.testGetArea":192,"org.easymock.tests.MockingTest.testInterfaceMocking":409,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":350,"org.easymock.tests2.CompareToTest.testLessOrEqual":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":138,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":484,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":404,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":67,"org.easymock.tests2.UsageTest.niceToStrict":218,"org.easymock.tests2.ThreadingTest.testChangeDefault":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":229,"org.easymock.tests2.MockBuilderTest.testCreateMock":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":491,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":514,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":39,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":74,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":276,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":419,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":174,"org.easymock.tests.UsageOverloadedMethodTest.overloading":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":488,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":24,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":60,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":127,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":301,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":267,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":395,"org.easymock.tests.MockClassControlTest.testEquals":433,"org.easymock.tests2.EasyMockSupportClassTest.testAll":236,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":101,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":40,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":80,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":530,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":144,"org.easymock.tests2.CaptureTest.testCaptureAll":19,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":287,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":312,"org.easymock.tests.MockNameTest.defaultName":426,"org.easymock.tests2.UsageConstraintsTest.testMatches":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":181,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":347,"org.easymock.samples.ExampleTest.voteForRemovals":188,"org.easymock.tests.UsageVarargTest.allKinds":160,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":145,"org.easymock.samples.BasicClassMockTest.testPrintContent":196,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":56,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":202,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":506,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":450,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":66,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":528,"org.easymock.tests2.UsageConstraintsTest.greaterThan":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":478,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":435,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":251,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":331,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":442,"org.easymock.samples.ExampleTest.voteForRemoval":185,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":499,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":16,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":424,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":246,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":323,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":135,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":83,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":273,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":61,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":505,"org.easymock.tests2.CaptureTest.testCaptureFirst":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":274,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":223,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":149,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":123,"org.easymock.tests2.UsageTest.moreThanOneArgument":14,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":224,"org.easymock.tests2.CaptureTest.testCapture2_2446744":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":384,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":234,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":159,"org.easymock.tests.GenericTest.testBridgedEquals":346,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":98,"org.easymock.tests.UsageExpectAndReturnTest.longType":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":142,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":271,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":13,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":405,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":308,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":12,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":178,"org.easymock.tests.UsageCallCountTest.tooManyCalls":99,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":492,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":516,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":117,"org.easymock.tests.MockingTest.testNiceClassMocking":412,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":211,"org.easymock.tests.MockingTest.testClassMocking":407,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":521,"org.easymock.tests2.UsageConstraintsTest.testContains":300,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":321,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":87,"org.easymock.tests2.UsageConstraintsTest.testFind":292,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":8,"org.easymock.tests.MockTypeTest.fromEasyMockClass":421,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":106,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":257,"org.easymock.tests.UsageExpectAndReturnTest.object":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":515,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":525,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":154,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":402,"org.easymock.tests.UsageTest.exactCallCountByLastCall":134,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":414,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":364,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":31,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":466,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":4,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":148,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":445,"org.easymock.tests.MockClassControlTest.testHashCode":432,"org.easymock.tests2.EasyMockSupportTest.testVerify":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":486,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":415,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":147,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":285,"org.easymock.tests.UsageVarargTest.varargCharAccepted":153,"org.easymock.tests2.CaptureTest.testCaptureMultiple":522,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":389,"org.easymock.tests2.UsageTest.openCallCountByLastCall":220,"org.easymock.tests.DefaultClassInstantiatorTest.object":436,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":282,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":317,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":400,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":533,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":487,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":72,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":532,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":510,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":444,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":431,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":249,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":10,"org.easymock.tests.CapturesMatcherTest.test":136,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":131,"org.easymock.tests.ReplayStateInvalidCallsTest.times":335,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":390,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":336,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":239,"org.easymock.tests2.UsageTest.resumeIfFailure":222,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":418,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":64,"org.easymock.tests2.StubTest.stubWithReturnValue":82,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":529,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":125,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":309,"org.easymock.tests2.SerializationTest.testAllMockedMethod":91,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":382,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":41,"org.easymock.samples.SupportTest.voteForRemovals":198,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":447,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":11,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":523,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":388,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":501,"org.easymock.tests.UsageExpectAndThrowTest.object":75,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":366,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":306,"org.easymock.tests2.DelegateToTest.testWrongClass":260,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":164,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":333,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":165,"org.easymock.samples.ConstructorCalledMockTest.testTax":190,"org.easymock.tests.UsageStrictMockTest.range":110,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":461,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":278,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":76,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":475,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":175,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":29,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":325,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":398,"org.easymock.tests2.CaptureTest.testCaptureNone":21,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":44,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.UsageVerifyTest.twoReturns":173,"org.easymock.tests.UsageVarargTest.varargByteAccepted":158,"org.easymock.tests2.ThreadingTest.testThreadSafe":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":489,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":96,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":403,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":195,"org.easymock.tests2.CaptureTest.testCapture_2617107":262,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":42,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":54,"org.easymock.tests2.UsageConstraintsTest.any":298,"org.easymock.tests2.StubTest.stub":209,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":353,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":63,"org.easymock.tests.UsageExpectAndThrowTest.longType":69,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":440,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":352,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":205,"org.easymock.tests2.SerializationTest.testClass":89,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":199,"org.easymock.tests.LimitationsTest.mockNativeMethod":105,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":132,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":345,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":531,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":509,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":341,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":208,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":503,"org.easymock.tests2.NameTest.nameForMocksControl":471,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":511,"org.easymock.tests2.MockedExceptionTest.testMockedException":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":479,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":59,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":70,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":313,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":240,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":232,"org.easymock.tests.MockingTest.testNicePartialClassMocking":162,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":245,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":507,"org.easymock.tests2.CaptureTest.testCaptureLast":20,"org.easymock.tests2.CompareToTest.testCompareEqual":49,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":315,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":216,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":296,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":340,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":307,"org.easymock.tests.MockingTest.testTwoMocks":408,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":337,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":1,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":73,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":311,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":46,"org.easymock.samples.ExampleTest.removeNonExistingDocument":443,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":513,"org.easymock.tests.UsageStrictMockTest.differentMethods":111,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":314,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":446,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":504,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":438,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":17,"org.easymock.tests2.MockBuilderTest.testCreateMockString":235,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":480,"org.easymock.tests.UsageExpectAndThrowTest.floatType":68,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":477,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":253,"org.easymock.tests.UsageVerifyTest.twoThrows":172,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":238,"org.easymock.samples.ExampleTest.voteAgainstRemoval":186,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":378,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":250,"org.easymock.tests.LimitationsTest.privateConstructor":359,"org.easymock.tests2.UsageConstraintsTest.testNotNull":310,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":57,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":85,"org.easymock.tests2.UsageTest.defaultResetToNice":221,"org.easymock.samples.ExampleTest.voteAgainstRemovals":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":7,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":508,"org.easymock.tests.UsageVarargTest.differentLength":155,"org.easymock.tests2.CallbackTest.callback":27,"org.easymock.tests2.UsageConstraintsTest.equals":518,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":497,"org.easymock.tests.UsageTest.openCallCountByLastCall":133,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":53,"org.easymock.tests.UsageCallCountTest.tooFewCalls":94,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":177,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":45,"org.easymock.tests.UsageThrowableTest.throwCheckedException":116,"org.easymock.tests.MockingTest.testStrictClassMocking":406,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":30,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":52,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":215,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":512,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":212,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":355,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":214,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":255,"org.easymock.tests.ObjectMethodsTest.testHashCode":401,"org.easymock.tests2.CompareToTest.testGreateOrEqual":50,"org.easymock.tests2.NameTest.nameForNiceMock":470,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":225,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":339,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":334,"org.easymock.tests2.DependencyTest.testInterfaceMocking":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":526,"org.easymock.samples.ExampleTest.addDocument":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":494,"org.easymock.tests2.DelegateToTest.testStubDelegate":259,"org.easymock.tests2.AnswerTest.stubAnswer":254,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":108,"org.easymock.tests.UsageVarargTest.varargLongAccepted":157,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":376,"org.easymock.tests.UsageExpectAndReturnTest.floatType":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":5,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":226,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":191,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":452,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":394,"org.easymock.tests.UsageThrowableTest.noUpperLimit":114,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":304,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":289,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":457,"org.easymock.tests2.SerializationTest.test":90,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":265,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":437,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":118,"org.easymock.tests2.UsageConstraintsTest.testSame":294,"org.easymock.samples.SupportTest.addDocument":197,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":463,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":324,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":481,"org.easymock.tests.GenericTest.testPackageScope":100,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":451,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":410,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":322,"org.easymock.tests2.NameTest.nameForMock":468,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":3,"org.easymock.tests2.UsageStrictMockTest.differentMethods":207,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":498,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":121,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":78,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":399,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":170,"org.easymock.tests2.MockedExceptionTest.testRealException":88,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":425,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":379,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":103,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":357,"org.easymock.tests2.NameTest.nameForStrictMock":469,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":473,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":244,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":460,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":439,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":305,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":228,"org.easymock.tests2.UsageStrictMockTest.range":206,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":328,"org.easymock.tests2.UsageConstraintsTest.lessThan":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":448,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":520,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":527,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":485,"org.easymock.tests2.CaptureTest.testCaptureRightOne":268,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":43,"org.easymock.tests2.UsageConstraintsTest.testOr":295,"org.easymock.tests.UsageRangeTest.combination":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":241,"org.easymock.tests.UsageTest.wrongArguments":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":482,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":368,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":441,"org.easymock.tests.UsageVarargTest.varargShortAccepted":156,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":97,"org.easymock.tests2.UsageConstraintsTest.cmpTo":299,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":342,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":502,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":332,"org.easymock.tests2.CompareToTest.testLessThan":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":370,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":84,"org.easymock.tests2.CaptureTest.testCaptureFromStub":269,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":348,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":472,"org.easymock.tests.UsageTest.unexpectedCallWithArray":32,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":338,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":28,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":95,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":129,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":109,"org.easymock.tests2.UsageConstraintsTest.constraints":290,"org.easymock.samples.ExampleTest.addAndChangeDocument":189,"org.easymock.tests.UsageStrictMockTest.testVerify":361,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":194,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":143,"org.easymock.tests2.CompareToTest.testGreateThan":48,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":266,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":139,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":2,"org.easymock.tests.LimitationsTest.abstractClass":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":140,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":277}}]
