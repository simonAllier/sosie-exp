[{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[0,0,1,1,2,3,4,5,6,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[8,9,10,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[12,13,14,15,16],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[17,18,19,20],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,8,36,37,38,39,40,41,42,43,44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[45,46,36,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[59,60,61,62,63,64,65,66,67,68,69,0,1,70,71,72,21,22,73,74,23,75,24,25,26,27,76,28,29,30,31,77,32,33,34,35,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,36,47,122,123,124,125,126,39,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,41,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,14,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,3,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,11,44,253,254,255,256,257,258,17,259,260,261,262,263,264,265,266,267,268,269,270,271,19,272,273,274,20,275,276,277,278,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[279,270],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[280,116,281,282,283,284,285,118,8,36,49,50,51,286,130,143,184,193,200,205,206,208,209,210,212,213,55,239,240,56,57,287,244,44,260,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[288,45,121,36,47,289,290,122,48,49,50,51,53,130,54,131,291,292,293,294,217,295,238,55,56,57,244,58,245,253],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:317","failures":[296,297,298,299],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[12,176,14,177,178,300,179,180,181,183,184,15,16,185],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[59,60,61,62,63,64,65,301,66,67,68,69,0,1,70,71,72,21,22,73,74,23,75,24,25,26,27,76,28,29,30,31,77,32,33,34,35,302,303,304,305,306,307,308,78,79,309,310,288,45,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,311,312,313,314,315,316,317,105,318,319,320,321,322,323,324,325,326,327,106,107,108,109,110,111,112,113,114,328,296,297,329,115,330,331,332,333,334,335,280,116,117,281,282,283,284,285,118,119,336,8,120,121,36,47,337,338,339,289,340,341,342,290,37,122,48,49,343,38,50,51,344,123,124,125,126,39,127,345,346,347,348,349,128,52,286,129,53,130,350,54,131,132,133,351,352,353,134,135,354,136,355,356,357,358,359,360,40,361,362,363,364,365,366,367,368,369,370,371,9,372,373,374,375,376,377,10,378,137,138,139,140,141,142,379,380,381,382,143,41,144,145,146,147,148,383,291,384,385,292,386,387,388,389,390,391,392,393,394,395,396,397,398,149,150,151,152,153,399,298,299,154,155,156,400,157,158,401,159,160,161,162,163,164,165,402,403,166,404,293,294,167,168,405,169,170,171,172,406,407,173,2,408,174,409,175,410,411,412,176,14,177,178,300,179,180,181,182,183,184,15,16,185,186,187,413,414,188,415,416,417,189,418,419,190,420,421,422,423,424,425,426,427,428,191,429,430,431,432,433,192,434,435,193,194,195,196,197,198,436,437,199,200,201,3,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,438,439,440,441,442,217,443,444,445,446,447,448,218,219,220,221,449,222,223,224,450,451,225,226,227,228,452,229,230,453,454,231,232,455,456,457,458,459,233,234,235,460,236,4,5,461,462,463,464,465,466,467,468,469,295,470,42,237,238,55,239,240,471,43,241,56,57,242,472,287,243,244,473,58,245,246,247,248,249,250,474,475,251,252,11,44,476,477,478,479,480,253,481,482,483,484,485,486,254,255,256,257,487,258,17,259,260,261,262,18,263,264,265,266,267,268,269,270,271,19,272,273,488,274,20,275,276,489,277,490,278,6,7,491],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[3,492,493,494,495,496,460,5,6,7],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[296,297,298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[407,173,2,408,174,409,175,410,411,412,497,415,416,417,189,418,419,190,420,421,422,423,424,425,426,427,428,191,429,430,431,432,433,192,434,435,194,195,196,3,203,218,219,220,221,223,224,232,456,457,459,233,234,235,236,5,461,462,464,465,466,469,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[45,46,36,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[176,177,184,256,257,260,261,18,19],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"leafClass"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[441,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[45,100,498,327,499,46,36,47,37,48,49,50,51,344,286,53,350,54,131,379,380,381,401,405,409,410,193,205,209,210,213,456,461,462,464,42,55,239,240,56,57,242,472,287,473,58,245,256,269],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[500,501,502],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[452],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[318,325,503],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[121,343,38,54,131,41,471,43,58,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[308,78,79,309,310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[176,177,184,256,257,260,261,18,19],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[171,240,269],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[45,100,498,327,499,46,36,47,37,48,49,50,51,344,286,53,350,54,131,379,380,381,401,405,409,410,193,205,209,210,213,456,461,462,464,42,55,239,240,56,57,242,472,287,473,58,245,256,269],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[12,176,14,177,178,300,179,180,181,182,183,184,15,16,185],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[0,1,415,416,417,189,418,419,190,420,421,422,423,424,425,426,427,428,191,429,430,431,432,433,192,434,435,3,220,224,450,504,505,455,458,460,5,506,463,6,7],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[507,508,509],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":257,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests2.UsageTest.argumentsOrdered":57,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":367,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":240,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":72,"org.easymock.tests2.DelegateToTest.testReturnException":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":124,"org.easymock.tests.MockingTest.testPartialClassMocking":134,"org.easymock.tests.MockClassControlTest.testToString":330,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":451,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":21,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":252,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":492,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":262,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":118,"org.easymock.tests2.UsageTest.wrongArguments":55,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":448,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":108,"org.easymock.samples.ExampleTest.answerVsDelegate":61,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":341,"org.easymock.tests2.UsageConstraintsTest.testNull":17,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":356,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":170,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":213,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":335,"org.easymock.tests2.CaptureTest.testPrimitive":178,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":120,"org.easymock.tests.UsageTest.moreThanOneArgument":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":35,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":146,"org.easymock.tests.UsageTest.argumentsOrdered":51,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":313,"org.easymock.tests.UsageVarargTest.varargIntAccepted":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":149,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":485,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":467,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":153,"org.easymock.tests.ReplayStateInvalidUsageTest.times":395,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":217,"org.easymock.tests2.DependencyTest.testClassMocking":474,"org.easymock.tests2.AnswerTest.answer":198,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":250,"org.easymock.tests2.CaptureTest.testAnd":176,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":339,"org.easymock.tests2.UsageTest.strictResetToDefault":237,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":458,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":208,"org.easymock.tests2.DelegateToTest.testDelegate":231,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":317,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":77,"org.easymock.tests.LimitationsTest.mockFinalMethod":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":114,"org.easymock.tests2.DependencyTest.testClassMockingSupport":475,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":293,"org.easymock.tests2.CaptureTest.testCapture1_2446744":300,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":248,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":389,"org.easymock.tests.UsageThrowableTest.throwError":280,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":340,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":486,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":327,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":148,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":435,"org.easymock.samples.PartialClassMockTest.testGetArea":59,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":390,"org.easymock.tests.MockingTest.testInterfaceMocking":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":424,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":386,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":22,"org.easymock.tests2.UsageTest.niceToStrict":239,"org.easymock.tests2.ThreadingTest.testChangeDefault":497,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":233,"org.easymock.tests2.MockBuilderTest.testCreateMock":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":431,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":445,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":27,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":209,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":338,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":137,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":106,"org.easymock.tests.UsageOverloadedMethodTest.overloading":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":428,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":267,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":91,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":382,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":266,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":183,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":400,"org.easymock.tests2.EasyMockSupportClassTest.testAll":189,"org.easymock.tests.MockClassControlTest.testEquals":334,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":79,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":509,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":112,"org.easymock.tests2.CaptureTest.testCaptureAll":14,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":249,"org.easymock.tests.MockNameTest.defaultName":288,"org.easymock.tests2.UsageConstraintsTest.testMatches":268,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":147,"org.easymock.samples.ExampleTest.voteForRemovals":65,"org.easymock.tests.UsageVarargTest.allKinds":163,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":113,"org.easymock.samples.BasicClassMockTest.testPrintContent":71,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":284,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":287,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":482,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":496,"org.easymock.tests2.UsageConstraintsTest.greaterThan":270,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":418,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":101,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":410,"org.easymock.samples.ExampleTest.voteForRemoval":62,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":326,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":411,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":187,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":342,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":406,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":105,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":206,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":123,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":452,"org.easymock.tests2.CaptureTest.testCaptureFirst":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":207,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":472,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":52,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":87,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":414,"org.easymock.tests2.CaptureTest.testCapture2_2446744":16,"org.easymock.tests2.UsageTest.moreThanOneArgument":238,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":374,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":162,"org.easymock.tests.GenericTest.testBridgedEquals":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":380,"org.easymock.tests.UsageExpectAndReturnTest.longType":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":110,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":204,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":34,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":488,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":312,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":144,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":296,"org.easymock.tests.UsageCallCountTest.tooManyCalls":381,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":432,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":447,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":283,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":219,"org.easymock.tests.MockingTest.testNiceClassMocking":357,"org.easymock.tests.MockingTest.testClassMocking":352,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":138,"org.easymock.tests2.UsageConstraintsTest.testContains":265,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":196,"org.easymock.tests2.UsageConstraintsTest.testFind":258,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":41,"org.easymock.tests.MockTypeTest.fromEasyMockClass":289,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":278,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":286,"org.easymock.tests.UsageExpectAndReturnTest.object":90,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":446,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":212,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":493,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":158,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":385,"org.easymock.tests.UsageTest.exactCallCountByLastCall":344,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":305,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":314,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":7,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":154,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":96,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":477,"org.easymock.tests.MockClassControlTest.testHashCode":333,"org.easymock.tests2.EasyMockSupportTest.testVerify":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":426,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":507,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":315,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":298,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":345,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":499,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":247,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":489,"org.easymock.tests.UsageVarargTest.varargCharAccepted":157,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":318,"org.easymock.tests2.CaptureTest.testCaptureMultiple":13,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":378,"org.easymock.tests2.UsageTest.openCallCountByLastCall":471,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":501,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":215,"org.easymock.tests.DefaultClassInstantiatorTest.object":319,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":399,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":291,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":427,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":281,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":476,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":409,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":332,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":24,"org.easymock.tests.CapturesMatcherTest.test":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":328,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":192,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":331,"org.easymock.tests2.UsageTest.resumeIfFailure":242,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":337,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":126,"org.easymock.tests2.StubTest.stubWithReturnValue":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":460,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":89,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":274,"org.easymock.tests2.SerializationTest.testAllMockedMethod":203,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":372,"org.easymock.samples.SupportTest.voteForRemovals":68,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":308,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":29,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":10,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":436,"org.easymock.tests.UsageExpectAndThrowTest.object":76,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":307,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":272,"org.easymock.tests2.DelegateToTest.testWrongClass":453,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":164,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":165,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests.UsageStrictMockTest.range":54,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":295,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":218,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":28,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":415,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":397,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":107,"org.easymock.tests2.CaptureTest.testCaptureNone":182,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":304,"org.easymock.tests.UsageUnorderedTest.message":45,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":498,"org.easymock.tests.UsageVerifyTest.twoReturns":47,"org.easymock.tests.UsageVarargTest.varargByteAccepted":161,"org.easymock.tests2.ThreadingTest.testThreadSafe":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":429,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":142,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":70,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":292,"org.easymock.tests2.CaptureTest.testCapture_2617107":177,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":376,"org.easymock.tests2.UsageConstraintsTest.any":263,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":394,"org.easymock.tests2.StubTest.stub":11,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":125,"org.easymock.tests.UsageExpectAndThrowTest.longType":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":377,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":323,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":393,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":473,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":253,"org.easymock.tests.LimitationsTest.mockNativeMethod":166,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":99,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":309,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":440,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":246,"org.easymock.tests2.NameTest.nameForMocksControl":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":442,"org.easymock.tests2.MockedExceptionTest.testMockedException":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":419,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":38,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":490,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":136,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":23,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":168,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":236,"org.easymock.tests.MockingTest.testNicePartialClassMocking":135,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":172,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":438,"org.easymock.tests2.CaptureTest.testCaptureLast":181,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":294,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":224,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":261,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":273,"org.easymock.tests.MockingTest.testTwoMocks":353,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":450,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":26,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":56,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":275,"org.easymock.samples.ExampleTest.removeNonExistingDocument":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":444,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":391,"org.easymock.tests.UsageStrictMockTest.differentMethods":131,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":478,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":321,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":413,"org.easymock.tests2.MockBuilderTest.testCreateMockString":464,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":420,"org.easymock.tests.UsageExpectAndThrowTest.floatType":73,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":417,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":491,"org.easymock.tests.UsageVerifyTest.twoThrows":36,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":191,"org.easymock.samples.ExampleTest.voteAgainstRemoval":63,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":368,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":175,"org.easymock.tests.LimitationsTest.privateConstructor":403,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":505,"org.easymock.tests2.UsageConstraintsTest.testNotNull":20,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":285,"org.easymock.tests2.UsageTest.defaultResetToNice":241,"org.easymock.samples.ExampleTest.voteAgainstRemovals":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":369,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":439,"org.easymock.tests.UsageVarargTest.differentLength":401,"org.easymock.tests2.CallbackTest.callback":193,"org.easymock.tests2.UsageConstraintsTest.equals":487,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":2,"org.easymock.tests.UsageTest.openCallCountByLastCall":343,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":254,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":336,"org.easymock.tests.UsageCallCountTest.tooFewCalls":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":221,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":109,"org.easymock.tests.UsageThrowableTest.throwCheckedException":282,"org.easymock.tests.MockingTest.testStrictClassMocking":351,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":223,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":443,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":220,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":396,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":222,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":201,"org.easymock.tests.ObjectMethodsTest.testHashCode":384,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":188,"org.easymock.tests2.NameTest.nameForNiceMock":227,"org.easymock.tests2.DependencyTest.testInterfaceMocking":251,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":494,"org.easymock.samples.ExampleTest.addDocument":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":434,"org.easymock.tests2.DelegateToTest.testStubDelegate":230,"org.easymock.tests2.AnswerTest.stubAnswer":200,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":130,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":4,"org.easymock.tests.UsageVarargTest.varargLongAccepted":160,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":366,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":98,"org.easymock.tests.UsageExpectAndReturnTest.floatType":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":6,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":484,"org.easymock.tests.UsageThrowableTest.noUpperLimit":116,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":271,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":255,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":465,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":179,"org.easymock.tests2.SerializationTest.test":202,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":320,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":81,"org.easymock.tests2.UsageConstraintsTest.testSame":259,"org.easymock.samples.SupportTest.addDocument":67,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":503,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":449,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":421,"org.easymock.tests.GenericTest.testPackageScope":78,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":483,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":355,"org.easymock.tests2.NameTest.nameForMock":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":92,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":463,"org.easymock.tests2.UsageStrictMockTest.differentMethods":245,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":408,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":31,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":383,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":103,"org.easymock.tests2.MockedExceptionTest.testRealException":197,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":290,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":371,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":370,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":398,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":119,"org.easymock.tests2.NameTest.nameForStrictMock":226,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":459,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":502,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":171,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":469,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":19,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":322,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":456,"org.easymock.tests2.UsageStrictMockTest.range":58,"org.easymock.tests2.UsageConstraintsTest.lessThan":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":480,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":495,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":425,"org.easymock.tests2.CaptureTest.testCaptureRightOne":184,"org.easymock.tests2.UsageConstraintsTest.testOr":260,"org.easymock.tests.UsageRangeTest.combination":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":405,"org.easymock.tests.UsageTest.wrongArguments":49,"org.easymock.tests2.MockBuilderTest.testWithConstructor":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":422,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":359,"org.easymock.tests.UsageVarargTest.varargShortAccepted":159,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":324,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":379,"org.easymock.tests2.UsageConstraintsTest.cmpTo":264,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":40,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":43,"org.easymock.tests2.CaptureTest.testCaptureFromStub":15,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":388,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":457,"org.easymock.tests.UsageTest.unexpectedCallWithArray":48,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":141,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":506,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":94,"org.easymock.tests2.UsageConstraintsTest.constraints":256,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":350,"org.easymock.samples.ExampleTest.addAndChangeDocument":66,"org.easymock.tests.UsageStrictMockTest.testVerify":133,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":69,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":111,"org.easymock.tests2.CompareToTest.testGreateThan":279,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":180,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":151,"org.easymock.tests.LimitationsTest.abstractClass":402,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":152,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":128,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":210}}]
