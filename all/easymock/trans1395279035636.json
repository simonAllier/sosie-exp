[{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[133,139,140,233,488,335,336,339,340,362,463,464,478,481],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[377,381],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[61,68,98,108,114],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[233,489,463,464,481],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[224],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[43],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[17,18,70,73,490,491,492,493,494,236],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[31,39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[0,1,1,2,2,3,4,5,6,8,10,16,17,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,67,69,71,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,104,105,106,109,110,111,112,113,114,115,116,117,123,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,147,154,161,162,163,164,165,166,174,175,176,177,178,179,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,201,204,214,220,223,224,225,226,227,228,229,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,286,287,289,305,306,307,308,309,318,320,321,323,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,362,363,364,365,366,367,369,370,371,372,373,374,375,376,378,380,382,383,384,401,407,420,431,433,434,435,436,437,438,439,440,442,443,444,445,446,448,456,457,458,459,460,461,462,463,464,467,474,475,476,478,479,480,481,482,483,485,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[11,14,118,119,120,122,125,126,129,149,150,151,153,156,157,160],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[495,56],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[236,237,238,496],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[30,80,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[161,163,395],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[0,1,2,12,13,92,93,95,96,97,98,100,102,103,104,105,106,107,108,114,115,116,167,171,176,177,178,179,182,183,198,201,203,205,206,209,212,215,216,219,238,283,284,285,286,287,289,292,342,354,355,356,357,358,359,361,377,378,379,381,421,422,423,424,425,426,427,428,429,430,431,432],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[30,46,63,74,75,77,93,104,106,130,133,134,135,139,140,141,142,147,186,190,191,194,229,232,233,234,497,262,498,488,329,333,335,336,339,340,341,362,415,463,464,471,472,473,476,478,480,481,482],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[31,36],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1,1,2,2,12,13,17,18,61,499,63,64,66,67,68,69,71,73,74,75,500,77,92,93,95,96,97,98,100,101,102,103,104,105,106,107,108,114,115,116,167,171,176,177,178,179,182,183,501,502,503,504,505,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,236,238,283,284,285,286,287,289,292,310,315,342,354,355,356,357,358,359,361,377,378,379,380,381,421,422,423,424,425,426,427,428,429,430,431,432,455],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method","name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[233,489,463,464,481],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[506,507,508,99,509],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"key"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[508,99,509],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[493],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.LastControl:70","failures":[25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,148,231,362,366,367,420,433,434,435,436,437,442,443,444,445,446,460,474,475,478,479],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[4,25,27,147,223,224,225,226,227,228,318],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[1,1,2,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"failures":[498],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:85","sourceCode":"return ((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","type":"CtReturnImpl"},"failures":[28,29,30,31,33,35,36,37,38,40,42,43,44,45,46,47,48,49,50,51,53,55,56,75,78,79,80,81,82,83,84,85,87,88,89,90,91,133,134,135,139,140,147,175,186,187,188,189,190,191,193,194,195,196,227,229,231,233,234,329,336,339,340,366,369,370,372,373,374,375,376,383,433,436,463,476,478,479,481,482],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[510,511,512,513,335,478],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[514,78,80,81,82,83,84,85,87,515,88,89,91],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:120","sourceCode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[233,489,463,464,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[516,517,518],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,103,112,148,154,231,232,362,363,366,367,369,420,421,433,434,435,436,437,442,443,444,445,446,460,461,474,475,478,479],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":31,"org.easymock.tests2.UsageTest.argumentsOrdered":140,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":333,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":395,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":135,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":11,"org.easymock.tests2.DelegateToTest.testReturnException":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":457,"org.easymock.tests.MockingTest.testPartialClassMocking":286,"org.easymock.tests.MockClassControlTest.testToString":423,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":20,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":208,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":239,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":490,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":38,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":433,"org.easymock.tests2.UsageTest.wrongArguments":133,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":160,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":440,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":315,"org.easymock.tests2.UsageConstraintsTest.testNull":34,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":291,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":95,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":428,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":194,"org.easymock.tests2.CaptureTest.testPrimitive":81,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":437,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":258,"org.easymock.tests.UsageTest.moreThanOneArgument":334,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":307,"org.easymock.tests.UsageTest.argumentsOrdered":340,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":343,"org.easymock.tests.UsageVarargTest.varargIntAccepted":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":442,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":61,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":169,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":128,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":446,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":154,"org.easymock.tests.ReplayStateInvalidUsageTest.times":301,"org.easymock.tests2.DependencyTest.testClassMocking":143,"org.easymock.tests2.AnswerTest.answer":223,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":402,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":60,"org.easymock.tests2.CaptureTest.testAnd":78,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":312,"org.easymock.tests2.UsageTest.strictResetToDefault":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":103,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":189,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":331,"org.easymock.tests2.DelegateToTest.testDelegate":166,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":347,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":254,"org.easymock.tests.LimitationsTest.mockFinalMethod":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":460,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":352,"org.easymock.tests2.DependencyTest.testClassMockingSupport":144,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":325,"org.easymock.tests2.CaptureTest.testCapture1_2446744":82,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":99,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":58,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":295,"org.easymock.tests.UsageThrowableTest.throwError":369,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":314,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":129,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":222,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":288,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":443,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":486,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":455,"org.easymock.tests2.UsageTest.niceToStrict":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":240,"org.easymock.tests2.ThreadingTest.testChangeDefault":509,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":67,"org.easymock.tests2.MockBuilderTest.testCreateMock":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":157,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":510,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":248,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":190,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":311,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":365,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":465,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":438,"org.easymock.tests.UsageOverloadedMethodTest.overloading":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":219,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":44,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":274,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":382,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":43,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":87,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":412,"org.easymock.tests.MockClassControlTest.testEquals":427,"org.easymock.tests2.EasyMockSupportClassTest.testAll":201,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":256,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":501,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":59,"org.easymock.tests2.CaptureTest.testCaptureAll":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":350,"org.easymock.tests.MockNameTest.defaultName":368,"org.easymock.tests2.UsageConstraintsTest.testMatches":45,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":293,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":308,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":420,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":462,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":351,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":375,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":461,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":494,"org.easymock.tests2.UsageConstraintsTest.greaterThan":47,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":202,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":330,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":106,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":361,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":110,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":107,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":316,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":98,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":130,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":342,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":187,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":456,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":161,"org.easymock.tests2.CaptureTest.testCaptureFirst":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":188,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":270,"org.easymock.tests2.UsageTest.moreThanOneArgument":132,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":112,"org.easymock.tests2.CaptureTest.testCapture2_2446744":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":403,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":75,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":419,"org.easymock.tests.GenericTest.testBridgedEquals":381,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":472,"org.easymock.tests.UsageExpectAndReturnTest.longType":266,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":348,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":257,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":52,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":328,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":305,"org.easymock.tests.UsageCallCountTest.tooManyCalls":473,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":159,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":244,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":374,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":177,"org.easymock.tests.MockingTest.testNiceClassMocking":292,"org.easymock.tests.MockingTest.testClassMocking":284,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":499,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":466,"org.easymock.tests2.UsageConstraintsTest.testContains":42,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":116,"org.easymock.tests2.UsageConstraintsTest.testFind":33,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":384,"org.easymock.tests.MockTypeTest.fromEasyMockClass":313,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":476,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":27,"org.easymock.tests.UsageExpectAndReturnTest.object":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":158,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":491,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":414,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":453,"org.easymock.tests.UsageTest.exactCallCountByLastCall":341,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":447,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":344,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":18,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":409,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":279,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":320,"org.easymock.tests.MockClassControlTest.testHashCode":426,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":119,"org.easymock.tests2.EasyMockSupportTest.testVerify":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":211,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":345,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":318,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":364,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":498,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":57,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":148,"org.easymock.tests.UsageVarargTest.varargCharAccepted":413,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":353,"org.easymock.tests2.CaptureTest.testCaptureMultiple":514,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":408,"org.easymock.tests2.UsageTest.openCallCountByLastCall":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":516,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":196,"org.easymock.tests.DefaultClassInstantiatorTest.object":354,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":363,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":451,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":212,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":246,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":505,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":372,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":152,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":118,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":425,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":104,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":245,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":259,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":220,"org.easymock.tests2.UsageTest.resumeIfFailure":141,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":310,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":459,"org.easymock.tests2.StubTest.stubWithReturnValue":175,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":70,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":53,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":272,"org.easymock.tests2.SerializationTest.testAllMockedMethod":238,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":401,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":511,"org.easymock.samples.SupportTest.voteForRemovals":16,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":377,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":121,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":251,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":496,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":407,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":224,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":449,"org.easymock.tests.UsageExpectAndThrowTest.object":249,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":50,"org.easymock.tests2.DelegateToTest.testWrongClass":164,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":474,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":475,"org.easymock.tests.UsageStrictMockTest.range":481,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":172,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":192,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":250,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":198,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":303,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":439,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":512,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":487,"org.easymock.tests2.CaptureTest.testCaptureNone":86,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":506,"org.easymock.tests.UsageUnorderedTest.message":362,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":497,"org.easymock.tests.UsageVerifyTest.twoReturns":464,"org.easymock.tests.UsageVarargTest.varargByteAccepted":418,"org.easymock.tests2.ThreadingTest.testThreadSafe":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":215,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":470,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":454,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests2.CaptureTest.testCapture_2617107":80,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":327,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":405,"org.easymock.tests2.UsageConstraintsTest.any":40,"org.easymock.tests2.StubTest.stub":174,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndThrowTest.longType":242,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":358,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":299,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":232,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":123,"org.easymock.tests2.SerializationTest.testClass":236,"org.easymock.tests.LimitationsTest.mockNativeMethod":431,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":282,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":380,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":504,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":151,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":235,"org.easymock.tests2.NameTest.nameForMocksControl":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":153,"org.easymock.tests2.MockedExceptionTest.testMockedException":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":203,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":338,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":243,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":289,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":71,"org.easymock.tests.MockingTest.testNicePartialClassMocking":287,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":97,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":149,"org.easymock.tests2.CaptureTest.testCaptureLast":85,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":326,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":183,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":37,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":51,"org.easymock.tests.MockingTest.testTwoMocks":285,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":184,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":247,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":139,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":55,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":508,"org.easymock.samples.ExampleTest.removeNonExistingDocument":9,"org.easymock.tests.UsageStrictMockTest.differentMethods":482,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":156,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":297,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":120,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":507,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":356,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":111,"org.easymock.tests2.MockBuilderTest.testCreateMockString":77,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":205,"org.easymock.tests.UsageExpectAndThrowTest.floatType":241,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":200,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":226,"org.easymock.tests.UsageVerifyTest.twoThrows":463,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":19,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":214,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":396,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":105,"org.easymock.tests.LimitationsTest.privateConstructor":430,"org.easymock.tests2.UsageConstraintsTest.testNotNull":54,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":114,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":376,"org.easymock.tests2.UsageTest.defaultResetToNice":138,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":397,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":278,"org.easymock.tests.UsageVarargTest.differentLength":415,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":150,"org.easymock.tests2.CallbackTest.callback":147,"org.easymock.tests2.UsageConstraintsTest.equals":32,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":101,"org.easymock.tests.UsageTest.openCallCountByLastCall":337,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":435,"org.easymock.tests.UsageCallCountTest.tooFewCalls":468,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":179,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":441,"org.easymock.tests.UsageThrowableTest.throwCheckedException":373,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":513,"org.easymock.tests.MockingTest.testStrictClassMocking":283,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":367,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":155,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":302,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":181,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":228,"org.easymock.tests.ObjectMethodsTest.testHashCode":452,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":113,"org.easymock.tests2.NameTest.nameForNiceMock":23,"org.easymock.tests2.DependencyTest.testInterfaceMocking":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":492,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":216,"org.easymock.tests2.DelegateToTest.testStubDelegate":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":221,"org.easymock.tests2.AnswerTest.stubAnswer":227,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":479,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":72,"org.easymock.tests.UsageVarargTest.varargLongAccepted":417,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.floatType":265,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":281,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":17,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":127,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":48,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests.UsageThrowableTest.noUpperLimit":370,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":29,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":167,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":83,"org.easymock.tests2.SerializationTest.test":237,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":355,"org.easymock.tests2.UsageConstraintsTest.testSame":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":264,"org.easymock.samples.SupportTest.addDocument":15,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":180,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":206,"org.easymock.tests.GenericTest.testPackageScope":378,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":126,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":290,"org.easymock.tests2.NameTest.nameForMock":21,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":275,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":76,"org.easymock.tests2.UsageStrictMockTest.differentMethods":234,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":267,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":253,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":450,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":332,"org.easymock.tests2.MockedExceptionTest.testRealException":117,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":398,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":434,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":304,"org.easymock.tests2.NameTest.nameForStrictMock":22,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":517,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":25,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":96,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":171,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":49,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":357,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":63,"org.easymock.tests2.UsageStrictMockTest.range":233,"org.easymock.tests2.UsageConstraintsTest.lessThan":56,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":502,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":393,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":186,"org.easymock.tests2.CaptureTest.testCaptureRightOne":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":210,"org.easymock.tests2.UsageConstraintsTest.testOr":36,"org.easymock.tests.UsageRangeTest.combination":329,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":93,"org.easymock.tests.UsageTest.wrongArguments":336,"org.easymock.tests2.MockBuilderTest.testWithConstructor":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":207,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":422,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":386,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":276,"org.easymock.tests.UsageVarargTest.varargShortAccepted":416,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":359,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":471,"org.easymock.tests2.UsageConstraintsTest.cmpTo":41,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":225,"org.easymock.tests2.CompareToTest.testLessThan":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":388,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":137,"org.easymock.tests2.CaptureTest.testCaptureFromStub":89,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":294,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":64,"org.easymock.tests.UsageTest.unexpectedCallWithArray":335,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":478,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":469,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":277,"org.easymock.tests2.CaptureTest.testCapture":515,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":480,"org.easymock.tests2.UsageConstraintsTest.constraints":30,"org.easymock.samples.ExampleTest.addAndChangeDocument":10,"org.easymock.tests.UsageStrictMockTest.testVerify":484,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":14,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":477,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":349,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":84,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":503,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":444,"org.easymock.tests.LimitationsTest.abstractClass":429,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":269,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":445,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":489,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":191}}]
