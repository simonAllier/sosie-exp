[{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,0,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[123,508],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[406,509],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[510],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[511,365,366,367],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[0,93,320,324,327,365,432,436,437,438,440,500,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[80,512,513,253,514,515],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"lastControl","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[516],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[510,285,287,288,289,290,291,292,294,517,295,296,298],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,0,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,518,224,225,226,227,228,229,519,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,271,272,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,336,337,338,339,341,342,343,344,345,346,347,348,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,520,429,430,521,431,432,433,434,522,435,437,438,439,523,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,524,502,503,504,505,506,507],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[365,522,437,500,501,525,526,527,528],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:68","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int])","type":"CtLocalVariableImpl"},"failures":[511,365,366,367],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[529],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"arg"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[271,271,272,272,320,365,436,437,500,501],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[268,274,416,417,418,420,422,423,424,427,441,442,443,445,447,448,449,452],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[390],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[517],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,0,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,530,221,222,223,518,224,225,226,227,228,229,519,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,531,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,520,429,430,521,431,432,433,434,522,435,436,437,438,439,523,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,524,502,503,504,505,506,507],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[365,437],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[532],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[72,73,80,83,123,210,533,253,254,257,258,362,487,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[72,73,80,83,123,533,253,254,257,258,362,487,493,494],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[511,365,366,367],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[80,512,513,253,514,515],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[163,164,165],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[365,522,437,500,501,525,526,527,534,528],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[224,225,226,227,229,230],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[408],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":390,"org.easymock.tests2.UsageTest.argumentsOrdered":494,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":251,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":378,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":52,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":489,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":274,"org.easymock.tests2.DelegateToTest.testReturnException":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":29,"org.easymock.tests.MockingTest.testPartialClassMocking":214,"org.easymock.tests.MockClassControlTest.testToString":97,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":328,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":61,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":463,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":459,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":129,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":481,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":525,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":397,"org.easymock.tests2.UsageTest.wrongArguments":487,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":23,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":452,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":262,"org.easymock.samples.ExampleTest.answerVsDelegate":276,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":39,"org.easymock.tests2.UsageConstraintsTest.testNull":393,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":219,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":314,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":102,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":377,"org.easymock.tests2.CaptureTest.testPrimitive":288,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":27,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":148,"org.easymock.tests.UsageTest.moreThanOneArgument":252,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":170,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":10,"org.easymock.tests.UsageTest.argumentsOrdered":258,"org.easymock.tests.UsageVarargTest.varargIntAccepted":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":15,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":428,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":426,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":335,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":19,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":187,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":446,"org.easymock.tests.ReplayStateInvalidUsageTest.times":111,"org.easymock.tests2.DependencyTest.testClassMocking":478,"org.easymock.tests2.AnswerTest.answer":502,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":59,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":357,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":36,"org.easymock.tests2.CaptureTest.testAnd":285,"org.easymock.tests2.UsageTest.strictResetToDefault":485,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":521,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":322,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":169,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":372,"org.easymock.tests2.DelegateToTest.testDelegate":386,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":14,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":144,"org.easymock.tests.LimitationsTest.mockFinalMethod":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":70,"org.easymock.tests2.DependencyTest.testClassMockingSupport":479,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":20,"org.easymock.tests2.CaptureTest.testCapture1_2446744":289,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":142,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":355,"org.easymock.tests.UsageThrowableTest.throwError":115,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":105,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":38,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":530,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":477,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":190,"org.easymock.samples.PartialClassMockTest.testGetArea":273,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":106,"org.easymock.tests.MockingTest.testInterfaceMocking":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":16,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":222,"org.easymock.tests2.UsageTest.niceToStrict":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":464,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":130,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":6,"org.easymock.tests2.ThreadingTest.testChangeDefault":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":42,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":432,"org.easymock.tests2.MockBuilderTest.testCreateMock":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":472,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":449,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":514,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":138,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":373,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":35,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":266,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":173,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":260,"org.easymock.tests.UsageOverloadedMethodTest.overloading":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":468,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":403,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":207,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":242,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":402,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":294,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":152,"org.easymock.tests2.EasyMockSupportClassTest.testAll":456,"org.easymock.tests.MockClassControlTest.testEquals":101,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":68,"org.easymock.tests2.CaptureTest.testCaptureAll":286,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":356,"org.easymock.tests.MockNameTest.defaultName":124,"org.easymock.tests2.UsageConstraintsTest.testMatches":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":171,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":103,"org.easymock.samples.ExampleTest.voteForRemovals":280,"org.easymock.tests.UsageVarargTest.allKinds":160,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":69,"org.easymock.samples.BasicClassMockTest.testPrintContent":270,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":121,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":358,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":423,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":528,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":519,"org.easymock.tests2.UsageConstraintsTest.greaterThan":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":457,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":325,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":191,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":230,"org.easymock.samples.ExampleTest.voteForRemoval":277,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":326,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":341,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":516,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":531,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":317,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":183,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":484,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":74,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":370,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":28,"org.easymock.tests2.CaptureTest.testCaptureFirst":298,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":371,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":496,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":210,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":238,"org.easymock.tests2.UsageTest.moreThanOneArgument":486,"org.easymock.tests2.CaptureTest.testCapture2_2446744":297,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":343,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":60,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":159,"org.easymock.tests.GenericTest.testBridgedEquals":94,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":529,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":180,"org.easymock.tests.UsageExpectAndReturnTest.longType":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":66,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":368,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":147,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":411,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":267,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":164,"org.easymock.tests.UsageCallCountTest.tooManyCalls":181,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":473,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":120,"org.easymock.tests.MockingTest.testNiceClassMocking":220,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":346,"org.easymock.tests.MockingTest.testClassMocking":212,"org.easymock.tests2.UsageConstraintsTest.testContains":401,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":174,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":307,"org.easymock.tests2.UsageConstraintsTest.testFind":392,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":77,"org.easymock.tests.MockTypeTest.fromEasyMockClass":37,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":499,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":78,"org.easymock.tests.UsageExpectAndReturnTest.object":241,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":376,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":526,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":154,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":4,"org.easymock.tests.UsageTest.exactCallCountByLastCall":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":47,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":11,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":7,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":501,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":247,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":206,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":417,"org.easymock.tests.MockClassControlTest.testHashCode":100,"org.easymock.tests2.EasyMockSupportTest.testVerify":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":466,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":12,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":204,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":354,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":482,"org.easymock.tests.UsageVarargTest.varargCharAccepted":153,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":518,"org.easymock.tests2.CaptureTest.testCaptureMultiple":510,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":65,"org.easymock.tests2.UsageTest.openCallCountByLastCall":490,"org.easymock.tests.DefaultClassInstantiatorTest.object":224,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":379,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":264,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":2,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":533,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":467,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":118,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":416,"org.easymock.tests2.ConstraintsToStringTest.anyToString":508,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":189,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":99,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":135,"org.easymock.tests.ReplayStateInvalidCallsTest.times":195,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":248,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":163,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":475,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":98,"org.easymock.tests2.UsageTest.resumeIfFailure":495,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":34,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":31,"org.easymock.tests2.StubTest.stubWithReturnValue":310,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":522,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":412,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":240,"org.easymock.tests2.SerializationTest.testAllMockedMethod":367,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":58,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":515,"org.easymock.samples.SupportTest.voteForRemovals":284,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":419,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":141,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":511,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":64,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":503,"org.easymock.tests.UsageExpectAndThrowTest.object":139,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":9,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":409,"org.easymock.tests2.DelegateToTest.testWrongClass":384,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":161,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":162,"org.easymock.tests.UsageStrictMockTest.range":83,"org.easymock.samples.ConstructorCalledMockTest.testTax":271,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":337,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":375,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":453,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":113,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":261,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":512,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":185,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":223,"org.easymock.tests2.CaptureTest.testCaptureNone":293,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":300,"org.easymock.tests.UsageUnorderedTest.message":123,"org.easymock.tests.UsageVerifyTest.twoReturns":73,"org.easymock.tests.UsageVarargTest.varargByteAccepted":158,"org.easymock.tests2.ThreadingTest.testThreadSafe":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":470,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":178,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":5,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":269,"org.easymock.tests2.CaptureTest.testCapture_2617107":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":62,"org.easymock.tests2.UsageConstraintsTest.any":399,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":110,"org.easymock.tests2.StubTest.stub":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":165,"org.easymock.tests.UsageExpectAndThrowTest.longType":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":63,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":228,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":109,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":361,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":421,"org.easymock.tests2.SerializationTest.testClass":365,"org.easymock.tests.LimitationsTest.mockNativeMethod":127,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":93,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":250,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":443,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":201,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":364,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":301,"org.easymock.tests2.NameTest.nameForMocksControl":332,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":445,"org.easymock.tests2.MockedExceptionTest.testMockedException":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":458,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":498,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":133,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":217,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":311,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":435,"org.easymock.tests.MockingTest.testNicePartialClassMocking":215,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":316,"org.easymock.tests2.CompareToTest.testNotComparable":532,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":441,"org.easymock.tests2.CaptureTest.testCaptureLast":292,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":21,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":396,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":200,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":352,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":410,"org.easymock.tests.MockingTest.testTwoMocks":213,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":197,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":137,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":493,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":414,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":304,"org.easymock.samples.ExampleTest.removeNonExistingDocument":281,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":448,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":107,"org.easymock.tests.UsageStrictMockTest.differentMethods":84,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":418,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":226,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":303,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":342,"org.easymock.tests2.MockBuilderTest.testCreateMockString":440,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":460,"org.easymock.tests.UsageExpectAndThrowTest.floatType":131,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":505,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":524,"org.easymock.tests.UsageVerifyTest.twoThrows":72,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":469,"org.easymock.samples.ExampleTest.voteAgainstRemoval":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":221,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":324,"org.easymock.tests.LimitationsTest.privateConstructor":126,"org.easymock.tests2.UsageConstraintsTest.testNotNull":413,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":122,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":305,"org.easymock.tests2.UsageTest.defaultResetToNice":492,"org.easymock.samples.ExampleTest.voteAgainstRemovals":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":246,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":442,"org.easymock.tests.UsageVarargTest.differentLength":155,"org.easymock.tests2.CallbackTest.callback":483,"org.easymock.tests2.UsageConstraintsTest.equals":391,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":320,"org.easymock.tests.UsageTest.openCallCountByLastCall":255,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":25,"org.easymock.tests.UsageCallCountTest.tooFewCalls":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":263,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":302,"org.easymock.tests.UsageThrowableTest.throwCheckedException":119,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":513,"org.easymock.tests.MockingTest.testStrictClassMocking":211,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":167,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":447,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":347,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":112,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":350,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":507,"org.easymock.tests.ObjectMethodsTest.testHashCode":3,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":199,"org.easymock.tests2.NameTest.nameForNiceMock":331,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":344,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":194,"org.easymock.tests2.DependencyTest.testInterfaceMocking":480,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":527,"org.easymock.samples.ExampleTest.addDocument":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":476,"org.easymock.tests2.DelegateToTest.testStubDelegate":383,"org.easymock.tests2.AnswerTest.stubAnswer":506,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":81,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":436,"org.easymock.tests.UsageVarargTest.varargLongAccepted":157,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":51,"org.easymock.tests.UsageExpectAndReturnTest.floatType":233,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":249,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":500,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":272,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":425,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":407,"org.easymock.tests.UsageThrowableTest.noUpperLimit":116,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":208,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":388,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":333,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":290,"org.easymock.tests2.SerializationTest.test":366,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":225,"org.easymock.tests2.UsageConstraintsTest.testSame":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":232,"org.easymock.samples.SupportTest.addDocument":283,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":349,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":184,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":461,"org.easymock.tests.GenericTest.testPackageScope":91,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":46,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":424,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":218,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":182,"org.easymock.tests2.NameTest.nameForMock":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":243,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":523,"org.easymock.tests2.UsageStrictMockTest.differentMethods":363,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":321,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":235,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":143,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":1,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":90,"org.easymock.tests2.MockedExceptionTest.testRealException":308,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":55,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":360,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":24,"org.easymock.tests2.NameTest.nameForStrictMock":330,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":431,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":497,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":315,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":336,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":408,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":227,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":429,"org.easymock.tests2.UsageStrictMockTest.range":362,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":188,"org.easymock.tests2.UsageConstraintsTest.lessThan":415,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":420,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":534,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":50,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":465,"org.easymock.tests2.CaptureTest.testCaptureRightOne":295,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":299,"org.easymock.tests2.UsageConstraintsTest.testOr":395,"org.easymock.tests.UsageRangeTest.combination":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":312,"org.easymock.tests.UsageTest.wrongArguments":254,"org.easymock.tests2.MockBuilderTest.testWithConstructor":520,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":462,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":96,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":43,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":244,"org.easymock.tests.UsageVarargTest.varargShortAccepted":156,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":229,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":179,"org.easymock.tests2.UsageConstraintsTest.cmpTo":400,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":202,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":504,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":45,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":491,"org.easymock.tests2.CaptureTest.testCaptureFromStub":296,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":104,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":430,"org.easymock.tests.UsageTest.unexpectedCallWithArray":253,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":198,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":80,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":177,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":245,"org.easymock.tests2.CaptureTest.testCapture":517,"org.easymock.tests2.UsageConstraintsTest.constraints":389,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":82,"org.easymock.samples.ExampleTest.addAndChangeDocument":282,"org.easymock.tests.UsageStrictMockTest.testVerify":86,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":268,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":79,"org.easymock.tests2.CompareToTest.testGreateThan":509,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":67,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":291,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":17,"org.easymock.tests.LimitationsTest.abstractClass":125,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":18,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":209,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":374}}]
