[{"transplant":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,0,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[0,0,1,1,2,4,5,17,18,20,21,22,23,24,358,25,26,27,28,359,360,29,30,31,89,90,361,362,91,92,93,94,95,96,97,98,99,100,101,102,104,105,363,113,115,117,118,119,120,364,365,174,175,176,177,366,367,368,261,262,263,264,265,266,267,268,281,318,319,320,321,329],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1263","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[44,46,54,137,138,140,142,143,145,155,160],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[369,370],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[202,371,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[44,46,54,137,138,140,142,143,145,155,160],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[372,373,374],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[126],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[0,1,2,118,119],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[376,377,378,379,380,381,382],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[383],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[19,29,30,31,32,103,124,125,126,127,128,129,133,225,384,385,314],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[386,377,378,379,380,381,387,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[113,114,115,388],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[389,390,391,392,393,394,395,396,397,398,399,400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[376,386,377,378,379,380,381,387,382,113],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[401],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,402,24,403,358,25,26,27,28,359,360,29,30,31,32,33,34,35,36,37,38,39,404,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,405,389,390,406,391,58,407,392,393,408,409,394,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,361,362,91,92,93,94,410,95,96,97,98,382,99,100,101,102,103,104,105,411,363,412,413,106,107,108,109,110,111,113,114,115,414,395,396,415,397,116,416,398,399,417,418,400,419,420,421,117,422,423,118,424,425,426,427,428,429,430,431,432,119,433,434,435,436,437,120,438,439,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,440,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,441,442,163,164,165,443,166,167,168,169,170,171,172,173,364,365,174,175,176,444,177,445,446,366,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,447,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,367,448,449,368,450,451,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,452,453,454,455,456,457,458,459,460,461,462,463,371,464,465,466,273,467,468,469,470,471,274,472,275,276,277,473,278,279,280,474,475,281,384,476,477,372,385,478,479,282,283,284,480,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,375,319,320,321,481,482,322,483,323,324,325,326,327,328,484,485,329,486,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,125,127,128,129,169,454],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[487,488,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[490,135,153,159],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[376,410,377,378,379,491,387,98,382,113],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[21,152],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[491],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[6,7,8,9,10,11,12,13,17,18,19,20,21,22,23,24,358,25,26,27,28,359,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,89,90,361,362,91,92,95,96,97,98,100,101,104,105,492,493,494,363,413,106,109,110,111,112,113,114,115,121,122,123,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,172,173,364,365,175,176,444,177,445,446,366,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,221,447,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,367,448,449,368,450,451,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,323,324,325,326,327,328,329,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:92","failures":[44,46,54,137,138,142,143,145,155],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[0,0,1,1,403,495,410,98,382,113],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[496,497,498],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":138,"org.easymock.tests2.UsageTest.argumentsOrdered":73,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":247,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":462,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":68,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":3,"org.easymock.tests2.DelegateToTest.testReturnException":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":324,"org.easymock.tests.MockingTest.testPartialClassMocking":175,"org.easymock.tests.MockClassControlTest.testToString":263,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":404,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":427,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":227,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":377,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":187,"org.easymock.tests2.UsageTest.wrongArguments":66,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":394,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":259,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":368,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":446,"org.easymock.tests2.UsageConstraintsTest.testNull":140,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":85,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":268,"org.easymock.tests2.CaptureTest.testPrimitive":47,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":246,"org.easymock.tests.UsageTest.moreThanOneArgument":248,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":19,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":310,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":215,"org.easymock.tests.UsageTest.argumentsOrdered":254,"org.easymock.tests.UsageVarargTest.varargIntAccepted":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":313,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":381,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":493,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":418,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":317,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":497,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":58,"org.easymock.tests.ReplayStateInvalidUsageTest.times":202,"org.easymock.tests2.DependencyTest.testClassMocking":441,"org.easymock.tests2.AnswerTest.answer":106,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":62,"org.easymock.tests2.CaptureTest.testAnd":44,"org.easymock.tests2.UsageTest.strictResetToDefault":64,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":80,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":271,"org.easymock.tests2.DelegateToTest.testDelegate":129,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":242,"org.easymock.tests.LimitationsTest.mockFinalMethod":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":226,"org.easymock.tests2.DependencyTest.testClassMockingSupport":442,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":220,"org.easymock.tests2.CaptureTest.testCapture1_2446744":48,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":60,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":196,"org.easymock.tests.UsageThrowableTest.throwError":300,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":449,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":400,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":439,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.MockingTest.testInterfaceMocking":444,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":197,"org.easymock.tests2.CompareToTest.testLessOrEqual":490,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":314,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":331,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":428,"org.easymock.tests2.UsageTest.niceToStrict":67,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":228,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":91,"org.easymock.tests2.MockBuilderTest.testCreateMock":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":435,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":393,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":236,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":81,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":295,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":257,"org.easymock.tests.UsageOverloadedMethodTest.overloading":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":432,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":170,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":150,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":349,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":149,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":373,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":53,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":480,"org.easymock.tests2.EasyMockSupportClassTest.testAll":117,"org.easymock.tests.MockClassControlTest.testEquals":267,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":320,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":244,"org.easymock.tests2.CaptureTest.testCaptureAll":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":224,"org.easymock.tests.MockNameTest.defaultName":479,"org.easymock.tests2.UsageConstraintsTest.testMatches":151,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":311,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests.UsageVarargTest.allKinds":292,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":297,"org.easymock.samples.BasicClassMockTest.testPrintContent":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":225,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":306,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":398,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":387,"org.easymock.tests2.UsageConstraintsTest.greaterThan":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":28,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":478,"org.easymock.samples.ExampleTest.voteForRemoval":8,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":131,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":359,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":450,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":494,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":23,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":318,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":78,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":323,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":124,"org.easymock.tests2.CaptureTest.testCaptureFirst":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":79,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":75,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":173,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":345,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":133,"org.easymock.tests2.CaptureTest.testCapture2_2446744":56,"org.easymock.tests2.UsageTest.moreThanOneArgument":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":96,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":291,"org.easymock.tests.GenericTest.testBridgedEquals":481,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":213,"org.easymock.tests.UsageExpectAndReturnTest.longType":341,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":245,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":158,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":256,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":334,"org.easymock.tests.UsageCallCountTest.tooManyCalls":214,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":498,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":436,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":346,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":305,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":100,"org.easymock.tests.MockingTest.testNiceClassMocking":366,"org.easymock.tests.MockingTest.testClassMocking":365,"org.easymock.tests2.UsageConstraintsTest.testContains":148,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":207,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":31,"org.easymock.tests2.UsageConstraintsTest.testFind":139,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":277,"org.easymock.tests.MockTypeTest.fromEasyMockClass":448,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":178,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":166,"org.easymock.tests.UsageExpectAndReturnTest.object":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":84,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":378,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":280,"org.easymock.tests.UsageTest.exactCallCountByLastCall":255,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":482,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":382,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":282,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":169,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":395,"org.easymock.tests.MockClassControlTest.testHashCode":266,"org.easymock.tests2.EasyMockSupportTest.testVerify":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":430,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":496,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":217,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":167,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":59,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":112,"org.easymock.tests.UsageVarargTest.varargCharAccepted":285,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastCall":69,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":487,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":87,"org.easymock.tests.DefaultClassInstantiatorTest.object":281,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":293,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":431,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":414,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":26,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":265,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":233,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":355,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":120,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":264,"org.easymock.tests2.UsageTest.resumeIfFailure":74,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":367,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":492,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":326,"org.easymock.tests2.StubTest.stubWithReturnValue":123,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":376,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":159,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":347,"org.easymock.tests2.SerializationTest.testAllMockedMethod":115,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":273,"org.easymock.samples.SupportTest.voteForRemovals":15,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":375,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":415,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":239,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":388,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":274,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":107,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":483,"org.easymock.tests.UsageExpectAndThrowTest.object":237,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":156,"org.easymock.tests2.DelegateToTest.testWrongClass":127,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":192,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":193,"org.easymock.tests.UsageStrictMockTest.range":183,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":412,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":83,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":99,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":238,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":419,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":204,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":258,"org.easymock.tests2.CaptureTest.testCaptureNone":52,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":332,"org.easymock.tests.UsageUnorderedTest.message":296,"org.easymock.tests.UsageVerifyTest.twoReturns":299,"org.easymock.tests.UsageVarargTest.varargByteAccepted":290,"org.easymock.tests2.ThreadingTest.testThreadSafe":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":433,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":211,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":474,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":4,"org.easymock.tests2.CaptureTest.testCapture_2617107":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":190,"org.easymock.tests2.UsageConstraintsTest.any":146,"org.easymock.tests2.StubTest.stub":122,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":201,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndThrowTest.longType":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":325,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":372,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":200,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":116,"org.easymock.tests2.SerializationTest.testClass":113,"org.easymock.tests.LimitationsTest.mockNativeMethod":329,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":321,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":357,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":390,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":39,"org.easymock.tests2.NameTest.nameForMocksControl":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":391,"org.easymock.tests2.MockedExceptionTest.testMockedException":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":423,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":252,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":443,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":231,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":94,"org.easymock.tests.MockingTest.testNicePartialClassMocking":176,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":22,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":405,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":386,"org.easymock.tests2.CaptureTest.testCaptureLast":51,"org.easymock.tests2.CompareToTest.testCompareEqual":383,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":221,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":105,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":157,"org.easymock.tests.MockingTest.testTwoMocks":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":338,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":235,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":72,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":161,"org.easymock.samples.ExampleTest.removeNonExistingDocument":12,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":392,"org.easymock.tests.UsageStrictMockTest.differentMethods":184,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":198,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":396,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":476,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":370,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":132,"org.easymock.tests2.MockBuilderTest.testCreateMockString":97,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":424,"org.easymock.tests.UsageExpectAndThrowTest.floatType":229,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":421,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":109,"org.easymock.tests.UsageVerifyTest.twoThrows":298,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":119,"org.easymock.samples.ExampleTest.voteAgainstRemoval":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":463,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":330,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":27,"org.easymock.tests.LimitationsTest.privateConstructor":485,"org.easymock.tests2.UsageConstraintsTest.testNotNull":160,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":29,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":307,"org.easymock.tests2.UsageTest.defaultResetToNice":71,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":371,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":389,"org.easymock.tests.UsageVarargTest.differentLength":287,"org.easymock.tests2.CallbackTest.callback":121,"org.easymock.tests2.UsageConstraintsTest.equals":440,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":403,"org.easymock.tests.UsageTest.openCallCountByLastCall":251,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":189,"org.easymock.tests.UsageCallCountTest.tooFewCalls":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":102,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":260,"org.easymock.tests.UsageThrowableTest.throwCheckedException":304,"org.easymock.tests.MockingTest.testStrictClassMocking":364,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":104,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":337,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":407,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":101,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":203,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":103,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":111,"org.easymock.tests.ObjectMethodsTest.testHashCode":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":380,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":134,"org.easymock.tests2.NameTest.nameForNiceMock":42,"org.easymock.tests2.DependencyTest.testInterfaceMocking":163,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":379,"org.easymock.samples.ExampleTest.addDocument":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":438,"org.easymock.tests2.DelegateToTest.testStubDelegate":126,"org.easymock.tests2.AnswerTest.stubAnswer":110,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":181,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":495,"org.easymock.tests.UsageVarargTest.varargLongAccepted":289,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.floatType":340,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":98,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":417,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":171,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":154,"org.easymock.tests.UsageThrowableTest.noUpperLimit":301,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":136,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":411,"org.easymock.tests2.SerializationTest.test":114,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":49,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":374,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":384,"org.easymock.tests2.UsageConstraintsTest.testSame":141,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":339,"org.easymock.samples.SupportTest.addDocument":14,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":425,"org.easymock.tests.GenericTest.testPackageScope":319,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":399,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":445,"org.easymock.tests2.NameTest.nameForMock":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":350,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":358,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":241,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":473,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":272,"org.easymock.tests2.MockedExceptionTest.testRealException":32,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":464,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":188,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":205,"org.easymock.tests2.NameTest.nameForStrictMock":41,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":362,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":488,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":363,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":477,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":155,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":90,"org.easymock.tests2.UsageStrictMockTest.range":37,"org.easymock.tests2.UsageConstraintsTest.lessThan":162,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":397,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":460,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":429,"org.easymock.tests2.CaptureTest.testCaptureRightOne":54,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":369,"org.easymock.tests2.UsageConstraintsTest.testOr":142,"org.easymock.tests.UsageRangeTest.combination":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.UsageTest.wrongArguments":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":426,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":351,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":385,"org.easymock.tests.UsageVarargTest.varargShortAccepted":288,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":212,"org.easymock.tests2.UsageConstraintsTest.cmpTo":147,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":108,"org.easymock.tests2.CompareToTest.testLessThan":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":455,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":70,"org.easymock.tests2.CaptureTest.testCaptureFromStub":55,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":195,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":361,"org.easymock.tests.UsageTest.unexpectedCallWithArray":249,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":180,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":210,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":352,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":182,"org.easymock.tests2.UsageConstraintsTest.constraints":137,"org.easymock.samples.ExampleTest.addAndChangeDocument":13,"org.easymock.tests.UsageStrictMockTest.testVerify":186,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":16,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":223,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":315,"org.easymock.tests.LimitationsTest.abstractClass":484,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":344,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":82,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":283}}]
