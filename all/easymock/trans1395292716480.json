[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[24,25,26,27,28,29,20,30,31,32],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[33,34,35],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[36,37,38],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[39,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[41,42,43,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[44,45],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[39,46,47,48,49,50,51,52,53,54,55,56,57,58,58,59,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,40,92,93,94,95,96,97,98],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[99,100,101,102,103,104,105,106,107,108],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[109,110,111,112,113,114],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[115,116],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[117,118,119,17,120,121,122,123,24,25,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[124,111,125,126,127,10,128,129,112,130,131,132,133,134],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[20,30,31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[33,34,35],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[109,110,111,112,113,114],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[135,136,137,138,139,140,141],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[14,142],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[99,101,102,103,104,106,107],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[124,111,125,126,127,10,128,129,112,130,131,132,133,134],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[118,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[144],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[120],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[145,10,146,147,148,149,150,128,129,16,130,151,152,23,134,153],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[33,34,35],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[154,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,0,181,182,135,183,184,1,2,3,4,5,6,7,185,186,187,188,189,190,145,111,125,191,192,126,127,193,194,195,196,197,198,199,200,201,202,203,204,47,8,9,48,49,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,52,53,54,10,11,12,13,14,15,245,246,247,248,249,250,251,252,56,150,128,129,253,254,112,16,255,130,151,256,57,257,137,258,259,260,261,262,58,59,263,264,265,266,60,61,62,63,267,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,268,81,82,269,270,271,272,117,118,273,119,274,17,120,275,18,276,277,278,279,280,281,282,283,122,284,285,286,287,123,288,44,83,289,84,85,87,89,90,91,40,92,93,95,290,291,152,131,292,293,294,295,296,132,133,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,96,322,323,98,324,325,326,327,328,329,330,142,331,332,333,138,334,139,141,24,19,25,26,27,28,29,20,21,30,32,335,336,22,337,338,23,339,134,153,340],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[37,38],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[274],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[39,40],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[37,38],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[341,342,343,177,178,179,180,0,181,9,344,13,345,322,323,98,324,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":118,"org.easymock.tests2.UsageTest.argumentsOrdered":133,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":190,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":180,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":293,"org.easymock.tests2.StubTest.stubWithReturnValue":331,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":99,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":287,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":263,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":234,"org.easymock.tests2.SerializationTest.testAllMockedMethod":84,"org.easymock.tests2.DelegateToTest.testReturnException":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":178,"org.easymock.tests.MockingTest.testPartialClassMocking":52,"org.easymock.samples.SupportTest.voteForRemovals":266,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":114,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":143,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":205,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":74,"org.easymock.tests.UsageExpectAndThrowTest.object":215,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":146,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":333,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":284,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":102,"org.easymock.tests2.DelegateToTest.testWrongClass":139,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":1,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":2,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":11,"org.easymock.tests2.UsageTest.wrongArguments":131,"org.easymock.samples.ConstructorCalledMockTest.testTax":58,"org.easymock.tests.UsageStrictMockTest.range":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":175,"org.easymock.samples.ExampleTest.answerVsDelegate":137,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":315,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":77,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":46,"org.easymock.tests2.UsageConstraintsTest.testNull":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":216,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":64,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":317,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":91,"org.easymock.tests2.CaptureTest.testPrimitive":26,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":15,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":345,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":224,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":126,"org.easymock.tests.UsageTest.moreThanOneArgument":145,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":250,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":109,"org.easymock.tests2.CaptureTest.testCaptureNone":21,"org.easymock.tests.UsageUnorderedTest.message":10,"org.easymock.tests.UsageVerifyTest.twoReturns":129,"org.easymock.tests.UsageVarargTest.varargByteAccepted":202,"org.easymock.tests2.ThreadingTest.testThreadSafe":326,"org.easymock.tests.UsageTest.argumentsOrdered":127,"org.easymock.tests.UsageVarargTest.varargIntAccepted":196,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":158,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":25,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":90,"org.easymock.tests2.UsageConstraintsTest.any":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":136,"org.easymock.tests2.StubTest.stub":142,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":7,"org.easymock.tests.UsageExpectAndThrowTest.longType":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":179,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":339,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":307,"org.easymock.tests2.SerializationTest.testClass":83,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":321,"org.easymock.tests.LimitationsTest.mockNativeMethod":47,"org.easymock.tests2.AnswerTest.answer":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":244,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":50,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":306,"org.easymock.tests2.CaptureTest.testAnd":24,"org.easymock.tests2.UsageTest.strictResetToDefault":291,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":69,"org.easymock.tests2.MockedExceptionTest.testMockedException":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":246,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.DelegateToTest.testDelegate":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":209,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":54,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":62,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":40,"org.easymock.tests.MockingTest.testNicePartialClassMocking":53,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":220,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":66,"org.easymock.tests2.CaptureTest.testCaptureLast":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":0,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":82,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":120,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":189,"org.easymock.tests.MockingTest.testTwoMocks":51,"org.easymock.tests2.CaptureTest.testCapture1_2446744":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":218,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":304,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":213,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":132,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":288,"org.easymock.tests.UsageThrowableTest.throwError":165,"org.easymock.tests.UsageStrictMockTest.differentMethods":151,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":328,"org.easymock.tests2.MockBuilderTest.testCreateMockString":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":252,"org.easymock.tests.UsageExpectAndThrowTest.floatType":207,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":281,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":300,"org.easymock.tests.UsageVerifyTest.twoThrows":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":75,"org.easymock.samples.PartialClassMockTest.testGetArea":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":4,"org.easymock.samples.ExampleTest.voteAgainstRemoval":259,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":71,"org.easymock.tests2.UsageTest.niceToStrict":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":206,"org.easymock.tests2.UsageConstraintsTest.testNotNull":123,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":172,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":33,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":89,"org.easymock.tests2.UsageTest.defaultResetToNice":296,"org.easymock.tests2.MockBuilderTest.testCreateMock":92,"org.easymock.samples.ExampleTest.voteAgainstRemovals":257,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":240,"org.easymock.tests.UsageVarargTest.differentLength":199,"org.easymock.tests2.CallbackTest.callback":325,"org.easymock.tests.UsageTest.openCallCountByLastCall":191,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":214,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":113,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":313,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":13,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":173,"org.easymock.tests.UsageCallCountTest.tooFewCalls":156,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":41,"org.easymock.tests.UsageOverloadedMethodTest.overloading":163,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":279,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":236,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":80,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":162,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":278,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":176,"org.easymock.tests.UsageThrowableTest.throwCheckedException":169,"org.easymock.tests2.EasyMockSupportClassTest.testAll":73,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":222,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":305,"org.easymock.tests2.CaptureTest.testCaptureAll":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":187,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":81,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":9,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":79,"org.easymock.tests2.UsageConstraintsTest.testMatches":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":268,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":251,"org.easymock.samples.ExampleTest.voteForRemovals":261,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":106,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":330,"org.easymock.tests.UsageVarargTest.allKinds":204,"org.easymock.tests2.DependencyTest.testInterfaceMocking":332,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":150,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":104,"org.easymock.samples.BasicClassMockTest.testPrintContent":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":188,"org.easymock.samples.ExampleTest.addDocument":260,"org.easymock.tests2.DelegateToTest.testStubDelegate":334,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":171,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":337,"org.easymock.tests2.AnswerTest.stubAnswer":301,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":181,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":16,"org.easymock.tests2.UsageConstraintsTest.greaterThan":282,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":108,"org.easymock.tests.UsageVarargTest.varargLongAccepted":201,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":72,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":256,"org.easymock.samples.ExampleTest.voteForRemoval":258,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":243,"org.easymock.tests.UsageExpectAndReturnTest.floatType":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":96,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":59,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":283,"org.easymock.tests.UsageThrowableTest.noUpperLimit":166,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":290,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":272,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":56,"org.easymock.tests2.SerializationTest.test":289,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":344,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":310,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":37,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":167,"org.easymock.tests2.UsageConstraintsTest.testSame":274,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":226,"org.easymock.samples.SupportTest.addDocument":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":177,"org.easymock.tests2.CaptureTest.testCaptureFirst":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":311,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":298,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":232,"org.easymock.tests.GenericTest.testPackageScope":48,"org.easymock.tests2.CaptureTest.testCapture2_2446744":336,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":329,"org.easymock.tests2.UsageTest.moreThanOneArgument":152,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":93,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":203,"org.easymock.tests.GenericTest.testBridgedEquals":144,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":42,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":160,"org.easymock.tests.UsageExpectAndReturnTest.longType":228,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":308,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":237,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":223,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":94,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":286,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":221,"org.easymock.tests2.UsageStrictMockTest.differentMethods":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":229,"org.easymock.tests.UsageCallCountTest.tooManyCalls":161,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":219,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":247,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":155,"org.easymock.tests2.MockedExceptionTest.testRealException":324,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":233,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":100,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":210,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":115,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":170,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":78,"org.easymock.tests2.UsageConstraintsTest.testContains":277,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":86,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":98,"org.easymock.tests2.UsageConstraintsTest.testFind":273,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":269,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":35,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":65,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":270,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":253,"org.easymock.tests.UsageExpectAndReturnTest.object":235,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":122,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":147,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":68,"org.easymock.tests.ErrorMessageTest.testGetters":148,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":87,"org.easymock.tests2.UsageStrictMockTest.range":134,"org.easymock.tests2.UsageConstraintsTest.lessThan":44,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":316,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":103,"org.easymock.tests.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":43,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":8,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":309,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":105,"org.easymock.tests2.CaptureTest.testCaptureRightOne":32,"org.easymock.tests2.UsageConstraintsTest.testOr":17,"org.easymock.tests.UsageRangeTest.combination":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":101,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":241,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":194,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":63,"org.easymock.tests.UsageTest.wrongArguments":125,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":135,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":55,"org.easymock.tests2.EasyMockSupportTest.testVerify":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":238,"org.easymock.tests.UsageVarargTest.varargShortAccepted":200,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":38,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":182,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":303,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":159,"org.easymock.tests2.UsageConstraintsTest.cmpTo":276,"org.easymock.tests.UsageVarargTest.varargCharAccepted":197,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":116,"org.easymock.tests2.CompareToTest.testLessThan":45,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":338,"org.easymock.tests2.UsageTest.openCallCountByLastCall":294,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":295,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":319,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":34,"org.easymock.tests.DefaultClassInstantiatorTest.object":36,"org.easymock.tests2.CaptureTest.testCaptureFromStub":335,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":88,"org.easymock.tests.UsageTest.unexpectedCallWithArray":111,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":124,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":212,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":168,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":157,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":239,"org.easymock.tests2.CaptureTest.testCapture":31,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":70,"org.easymock.tests2.UsageConstraintsTest.constraints":117,"org.easymock.samples.ExampleTest.addAndChangeDocument":262,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":211,"org.easymock.tests.CapturesMatcherTest.test":154,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":341,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":264,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":186,"org.easymock.tests2.UsageTest.resumeIfFailure":297,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":29,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":5,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":231,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":314,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":195,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":149}}]
