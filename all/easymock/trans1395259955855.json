[{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[18,19],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[3,20,21,9,10,11,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[22,23,24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[25,26,4,12,27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[29,30,31,32],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1848","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[33,34,35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:53","failures":[60],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,22,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,0,164,165,166,167,168,1,2,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,60,19,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,15,23,238,239,240,241,61,242,62,63,64,65,66,67,243,68,70,71,244,72,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,3,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,29,30,31,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,33,34,35,36,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,4,5,333,334,6,7,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,16,352,353,354,17,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,8,378,379,380,381,382,383,384,385,386,387,388,389,37,390,391,392,393,394,395,396,397,398,399,400,401,402,9,10,403,404,405,406,407,408,409,410,411,11,412,413,414,24,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,12,492,493,13,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[78,79,80,81,82,83,85,90,91,22,92,93,106,112,113,136,137,138,140,142,143,147,148,150,159,160,161,162,163,0,164,165,166,167,168,1,2,169,170,173,175,176,177,178,179,181,182,185,186,187,193,194,195,196,198,199,200,201,202,203,205,206,207,208,209,210,60,19,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,235,237,239,61,242,62,63,64,65,66,67,243,68,70,71,244,72,271,272,273,3,274,275,29,30,31,300,301,302,303,304,305,306,307,308,309,313,314,315,316,33,34,325,326,327,328,329,330,331,332,5,333,334,6,7,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,359,360,361,362,364,365,369,370,371,372,374,375,377,381,382,384,390,391,392,394,395,397,398,399,400,401,402,9,10,403,405,406,11,415,425,428,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,474,475,476,477,478,488,489,491,12,492,493,13,494,495,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,520,14],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[74,75,76,76,77,77,86,106,521,108,109,111,112,113,114,116,118,119,120,522,122,141,142,143,144,147,148,152,156,523,524,175,176,177,224,225,227,228,229,230,232,233,234,235,236,237,15,23,238,239,240,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,29,31,292,297,317,33,34,35,36,324,349,351,16,352,353,354,17,356,378,379,380,381,382,384,387,423,424,425,426,480,481,482,483,484,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,525,91,22,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,111,112,113,114,116,117,118,119,120,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,0,164,165,166,167,168,1,2,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,60,19,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,15,23,238,526,527,528,529,530,531,239,240,61,242,62,63,64,65,66,67,243,68,70,71,244,72,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,3,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,29,30,31,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,310,311,312,313,314,315,316,317,33,34,35,36,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,4,5,333,334,6,7,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,16,352,353,354,17,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,8,378,379,380,381,382,383,384,385,386,387,388,389,37,390,391,392,393,394,395,396,397,398,399,400,401,402,9,10,403,404,405,406,407,408,409,410,411,11,412,413,414,24,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,480,481,482,483,484,485,486,487,488,489,490,491,12,492,493,13,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[29,30,31,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"equalsMethod","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[532,219],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[74,75,76,77,86,141,142,143,144,147,148,152,156,175,176,177,224,225,227,228,229,230,232,234,235,236,237,15,23,238,245,248,250,252,253,256,259,262,263,266,31,317,33,34,36,349,351,16,352,353,354,17,356,378,379,380,381,382,384,387,423,424,425,426,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[73,74,75,78,79,80,81,82,83,85,87,88,89,90,91,22,92,93,99,128,136,137,138,140,141,144,146,150,159,160,161,162,163,0,164,165,166,167,1,2,169,170,173,174,175,176,177,178,179,181,182,185,186,187,193,194,195,196,198,199,200,201,202,203,205,206,207,208,209,210,60,19,211,212,213,214,215,216,217,218,219,224,225,226,227,228,229,232,15,61,242,62,63,64,65,66,67,243,68,70,71,244,72,248,270,271,272,273,3,274,275,276,277,278,279,280,281,282,284,285,286,287,288,30,31,300,301,302,303,304,33,34,36,319,322,325,326,327,328,329,330,331,332,5,333,334,6,7,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,359,360,361,362,364,365,369,370,371,372,374,375,390,391,392,394,395,396,397,398,399,400,401,402,9,10,403,405,406,408,409,11,412,425,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,474,475,476,477,478,486,487,488,489,490,491,12,492,493,13,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[29,30,31,32],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[317,33,34,35,36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[92,99,151,159,179,181,182,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,60,19,211,212,213,214,215,216,217,218,219,220,232,235,61,242,62,63,64,65,66,67,243,68,70,71,244,72,272,273,300,301,302,303,304,329,330,336,337,338,339,340,341,401,402,11,412,488,489,490,12,492,497,498],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[76,76,77,77,160,193,194,198,199,200,201,207,209,210,19,211,212,217,218,219,71,272,300,301,304,336,337,338,339,340,474,475,476,477,478,488,492,497,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[160,175,176,177,178,302,325,326,327,328,329,330,489],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[533],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":196,"org.easymock.tests2.UsageTest.argumentsOrdered":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":331,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":286,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":460,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":165,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":87,"org.easymock.tests2.DelegateToTest.testReturnException":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":326,"org.easymock.tests.MockingTest.testPartialClassMocking":381,"org.easymock.tests.MockClassControlTest.testToString":482,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":188,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":255,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":430,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":251,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":174,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":59,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":203,"org.easymock.tests2.UsageTest.wrongArguments":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":300,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":105,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":315,"org.easymock.samples.ExampleTest.answerVsDelegate":79,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":297,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":386,"org.easymock.tests2.UsageConstraintsTest.testNull":199,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":227,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":487,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":285,"org.easymock.tests2.CaptureTest.testPrimitive":63,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":304,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":449,"org.easymock.tests.UsageTest.moreThanOneArgument":332,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":476,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":407,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.UsageVarargTest.varargIntAccepted":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":465,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":336,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":154,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":133,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":340,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":43,"org.easymock.tests.ReplayStateInvalidUsageTest.times":419,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests2.DependencyTest.testClassMocking":171,"org.easymock.tests2.AnswerTest.answer":182,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":223,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":294,"org.easymock.tests2.UsageTest.strictResetToDefault":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":235,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":475,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":280,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":411,"org.easymock.tests2.DelegateToTest.testDelegate":140,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":42,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":445,"org.easymock.tests.LimitationsTest.mockFinalMethod":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":329,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":309,"org.easymock.tests2.DependencyTest.testClassMockingSupport":172,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":427,"org.easymock.tests2.CaptureTest.testCapture1_2446744":64,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":443,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":221,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":414,"org.easymock.tests.UsageThrowableTest.throwError":341,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":296,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":479,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":269,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":46,"org.easymock.samples.PartialClassMockTest.testGetArea":86,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":24,"org.easymock.tests.MockingTest.testInterfaceMocking":383,"org.easymock.tests2.CompareToTest.testLessOrEqual":533,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":337,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":389,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":431,"org.easymock.tests2.UsageTest.niceToStrict":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":256,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":324,"org.easymock.tests2.ThreadingTest.testChangeDefault":525,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":112,"org.easymock.tests2.MockBuilderTest.testCreateMock":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":264,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":102,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":439,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":25,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":281,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":293,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":368,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":313,"org.easymock.tests.UsageOverloadedMethodTest.overloading":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":266,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":209,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":375,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":510,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":369,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":208,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":68,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":393,"org.easymock.tests.MockClassControlTest.testEquals":486,"org.easymock.tests2.EasyMockSupportClassTest.testAll":248,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":34,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":447,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":222,"org.easymock.tests2.CaptureTest.testCaptureAll":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":307,"org.easymock.tests.MockNameTest.defaultName":519,"org.easymock.tests2.UsageConstraintsTest.testMatches":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":477,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":412,"org.easymock.samples.ExampleTest.voteForRemovals":83,"org.easymock.tests.UsageVarargTest.allKinds":401,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":402,"org.easymock.samples.BasicClassMockTest.testPrintContent":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":308,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":347,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":270,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":330,"org.easymock.tests2.UsageConstraintsTest.greaterThan":19,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":404,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":15,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":47,"org.easymock.samples.ExampleTest.voteForRemoval":80,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":356,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":23,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":91,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":230,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":39,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":161,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":349,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":278,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":325,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":135,"org.easymock.tests2.CaptureTest.testCaptureFirst":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":279,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":506,"org.easymock.tests2.UsageTest.moreThanOneArgument":163,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":92,"org.easymock.tests2.CaptureTest.testCapture2_2446744":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":120,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":400,"org.easymock.tests.GenericTest.testBridgedEquals":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":364,"org.easymock.tests.UsageExpectAndReturnTest.longType":502,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":305,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":522,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":448,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":215,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":318,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":446,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":474,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":290,"org.easymock.tests.UsageCallCountTest.tooManyCalls":365,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":507,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":104,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":435,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":346,"org.easymock.tests.MockingTest.testNiceClassMocking":387,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":142,"org.easymock.tests.MockingTest.testClassMocking":379,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":521,"org.easymock.tests2.UsageConstraintsTest.testContains":207,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":358,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":177,"org.easymock.tests2.UsageConstraintsTest.testFind":198,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":371,"org.easymock.tests.MockTypeTest.fromEasyMockClass":295,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":490,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":181,"org.easymock.tests.UsageExpectAndReturnTest.object":509,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":103,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":284,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":395,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":322,"org.easymock.tests.UsageTest.exactCallCountByLastCall":335,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":408,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":240,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":515,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":390,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":374,"org.easymock.tests.MockClassControlTest.testHashCode":485,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":124,"org.easymock.tests2.EasyMockSupportTest.testVerify":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":258,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":409,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":367,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":372,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":520,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":220,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":151,"org.easymock.tests.UsageVarargTest.varargCharAccepted":394,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":350,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":473,"org.easymock.tests2.UsageTest.openCallCountByLastCall":166,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":287,"org.easymock.tests.DefaultClassInstantiatorTest.object":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":366,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":320,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":14,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":97,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":123,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":484,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":45,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":236,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":436,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":516,"org.easymock.tests.ReplayStateInvalidCallsTest.times":51,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":289,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":52,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":267,"org.easymock.tests2.UsageTest.resumeIfFailure":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":292,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":328,"org.easymock.tests2.StubTest.stubWithReturnValue":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":115,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":508,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":216,"org.easymock.tests2.SerializationTest.testAllMockedMethod":31,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":466,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":26,"org.easymock.samples.SupportTest.voteForRemovals":89,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":317,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":442,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":32,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":472,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":183,"org.easymock.tests.UsageExpectAndThrowTest.object":440,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":312,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":213,"org.easymock.tests2.DelegateToTest.testWrongClass":138,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":497,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":49,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":498,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.samples.ConstructorCalledMockTest.testTax":76,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":157,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":283,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":141,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":441,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":114,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":421,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":245,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":314,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":27,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":41,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":37,"org.easymock.tests2.CaptureTest.testCaptureNone":243,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":527,"org.easymock.tests.UsageUnorderedTest.message":11,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageVarargTest.varargByteAccepted":399,"org.easymock.tests2.ThreadingTest.testThreadSafe":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":262,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":362,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":74,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":323,"org.easymock.tests2.CaptureTest.testCapture_2617107":62,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":303,"org.easymock.tests2.UsageConstraintsTest.any":205,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":418,"org.easymock.tests2.StubTest.stub":159,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndThrowTest.longType":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":327,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":354,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":417,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":273,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests2.SerializationTest.testClass":29,"org.easymock.tests.LimitationsTest.mockNativeMethod":425,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":518,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":35,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":96,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":57,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":275,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":528,"org.easymock.tests2.NameTest.nameForMocksControl":192,"org.easymock.tests2.MockedExceptionTest.testMockedException":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":250,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":434,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":384,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":180,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":116,"org.easymock.tests.MockingTest.testNicePartialClassMocking":382,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":229,"org.easymock.tests2.CaptureTest.testCaptureLast":67,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":428,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":148,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":56,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":202,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":214,"org.easymock.tests.MockingTest.testTwoMocks":380,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":53,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":499,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":438,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":1,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":218,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":531,"org.easymock.samples.ExampleTest.removeNonExistingDocument":84,"org.easymock.tests.UsageStrictMockTest.differentMethods":494,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":415,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":101,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":125,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":530,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":352,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":22,"org.easymock.tests2.MockBuilderTest.testCreateMockString":122,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":480,"org.easymock.tests.UsageExpectAndThrowTest.floatType":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":252,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":247,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":185,"org.easymock.tests.UsageVerifyTest.twoThrows":9,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":241,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":261,"org.easymock.samples.ExampleTest.voteAgainstRemoval":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":388,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":237,"org.easymock.tests.LimitationsTest.privateConstructor":424,"org.easymock.tests2.UsageConstraintsTest.testNotNull":217,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":175,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":348,"org.easymock.tests2.UsageTest.defaultResetToNice":168,"org.easymock.samples.ExampleTest.voteAgainstRemovals":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":462,"org.easymock.tests.UsageVarargTest.differentLength":396,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":95,"org.easymock.tests2.CallbackTest.callback":150,"org.easymock.tests2.UsageConstraintsTest.equals":197,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":233,"org.easymock.tests.UsageTest.openCallCountByLastCall":333,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":193,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":302,"org.easymock.tests.UsageCallCountTest.tooFewCalls":360,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":144,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":316,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":529,"org.easymock.tests.UsageThrowableTest.throwCheckedException":345,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":28,"org.easymock.tests.MockingTest.testStrictClassMocking":378,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":489,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":147,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":143,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":100,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":420,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":146,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":187,"org.easymock.tests.ObjectMethodsTest.testHashCode":321,"org.easymock.tests2.NameTest.nameForNiceMock":191,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":55,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":93,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":50,"org.easymock.tests2.DependencyTest.testInterfaceMocking":173,"org.easymock.samples.ExampleTest.addDocument":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":263,"org.easymock.tests2.DelegateToTest.testStubDelegate":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":268,"org.easymock.tests2.AnswerTest.stubAnswer":186,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":492,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":117,"org.easymock.tests.UsageVarargTest.varargLongAccepted":398,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":517,"org.easymock.tests.UsageExpectAndReturnTest.floatType":501,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":239,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":132,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":211,"org.easymock.tests.UsageThrowableTest.noUpperLimit":342,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":194,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":152,"org.easymock.tests2.SerializationTest.test":30,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":65,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":16,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":500,"org.easymock.tests2.UsageConstraintsTest.testSame":200,"org.easymock.samples.SupportTest.addDocument":88,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":145,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":40,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":253,"org.easymock.tests.GenericTest.testPackageScope":33,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":131,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":385,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":38,"org.easymock.tests2.NameTest.nameForMock":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":511,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":121,"org.easymock.tests2.UsageStrictMockTest.differentMethods":274,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":503,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":444,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":319,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":406,"org.easymock.tests2.MockedExceptionTest.testRealException":178,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":463,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":272,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":422,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":301,"org.easymock.tests2.NameTest.nameForStrictMock":190,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":111,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":179,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":228,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":156,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":20,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":212,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":353,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":108,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":44,"org.easymock.tests2.UsageConstraintsTest.lessThan":219,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":523,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":277,"org.easymock.tests2.CaptureTest.testCaptureRightOne":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":257,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":526,"org.easymock.tests2.UsageConstraintsTest.testOr":201,"org.easymock.tests.UsageRangeTest.combination":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":225,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests2.MockBuilderTest.testWithConstructor":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":254,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":481,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":504,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":451,"org.easymock.tests.UsageVarargTest.varargShortAccepted":397,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":17,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":363,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":58,"org.easymock.tests2.UsageConstraintsTest.cmpTo":206,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":184,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":48,"org.easymock.tests2.CompareToTest.testLessThan":532,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":453,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests2.CaptureTest.testCaptureFromStub":71,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":413,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":109,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":54,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":361,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":513,"org.easymock.tests2.CaptureTest.testCapture":69,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":493,"org.easymock.tests2.UsageConstraintsTest.constraints":195,"org.easymock.samples.ExampleTest.addAndChangeDocument":85,"org.easymock.tests.UsageStrictMockTest.testVerify":496,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":73,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":491,"org.easymock.tests2.CompareToTest.testGreateThan":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":306,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":66,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":524,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":338,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":505,"org.easymock.tests.LimitationsTest.abstractClass":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":339,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":391,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":282}}]
