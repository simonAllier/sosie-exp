[{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"failures":[171,119,172,173],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[174,175,176,177,178,0,1,2,3,4,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,6,209,210,211,13,14,15,212,16,17,213,214,18,19,215,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,216,42,43,44,45,46,47,217,218,219,220,221,222,223,224,56,225,57,58,226,59,60,64,65,66,67,68,227,228,70,229,71,72,230,73,231,232,233,234,74,75,76,77,78,235,79,80,81,82,83,84,85,86,87,89,92,95,99,101,103,104,119,122,236,123,124,125,126,128,237,129,238,130,239,240,131,132,134,135,136,137,138,139,140,141,142,143,144,149,241,150,242,151,152,243,244,153,161,162,165,166,168,170],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[174,175,176,177,178,0,1,245,246,2,3,247,248,4,249,5,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,265,202,203,266,204,205,206,207,208,267,268,269,270,271,272,273,274,275,276,277,6,278,279,280,281,7,8,282,9,283,284,285,10,286,11,12,209,287,210,211,288,289,290,13,14,15,291,292,293,212,16,17,213,214,18,19,215,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,41,216,42,43,44,45,46,47,316,317,318,319,320,321,48,217,49,322,218,219,220,221,222,223,323,324,50,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,51,354,52,355,356,357,358,359,360,361,362,53,54,363,55,364,365,366,367,368,369,370,371,372,373,374,224,375,56,225,57,58,226,376,59,60,61,62,63,377,378,379,380,381,382,383,384,385,386,387,388,389,390,64,65,66,67,68,227,69,228,70,229,71,72,230,73,391,231,392,393,232,233,234,74,75,76,77,394,78,235,79,80,395,396,397,81,82,398,399,400,401,83,402,84,85,403,404,405,406,407,408,409,86,87,88,89,90,91,92,93,410,411,94,412,413,414,415,95,416,417,418,96,97,98,99,419,100,101,102,103,104,105,420,106,107,108,109,110,111,112,113,114,115,116,117,171,118,119,120,121,421,122,422,423,236,123,424,425,426,427,428,429,430,431,432,172,433,173,124,434,125,126,127,128,237,435,436,437,438,439,129,440,441,442,443,444,445,446,238,130,239,447,240,131,132,448,133,449,134,135,136,137,138,139,140,450,141,142,143,144,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,145,466,467,146,468,469,470,471,472,473,474,475,476,147,477,478,479,480,481,148,482,483,484,485,486,487,488,149,489,490,491,492,493,494,495,241,150,242,151,152,243,244,153,496,154,155,156,157,497,158,159,160,498,161,162,499,163,164,500,501,165,166,167,168,502,169,170],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[321,48,217,49,322,218],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[131,132,448],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[1,179,185,191,195,197,15,212,21,27,33,37,39,355,359,231,77,96,110,113,121,172,173,124,125,237,240,162,165,166,170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[414,418,455],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[342,503,504],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[214,244],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[1,245,246,2,247,248,505,506,507,508,509,510,511,262,204,287,210,211,288,289,290,291,292,212,19,215,20,224,375,56,57,58,226,376,512,513,514,515,516,517,518,519,520,521,522,75,77,394,235,396,397,398,89,90,95,416,99,113,129,136,140,142,241,150,242,151,152,243,244],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:317","failures":[260,261,263,264],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[41,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.Range:36","failures":[174,175,176,177,178,0,1,245,246,2,3,247,248,4,249,5,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,265,202,203,266,204,205,206,207,208,267,268,269,270,271,272,273,274,275,276,277,6,278,279,280,281,7,8,282,9,283,284,285,10,286,11,12,209,287,210,211,288,289,290,13,14,15,291,292,293,212,16,17,213,214,18,19,215,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,216,42,43,44,45,46,47,316,317,318,319,320,321,48,217,49,322,218,219,220,221,222,223,323,324,50,325,326,327,328,329,330,331,332,333,334,335,336,337,523,338,339,340,341,342,343,524,344,345,346,347,348,349,350,351,352,353,51,354,52,355,356,357,358,359,360,361,362,53,54,363,55,364,365,366,367,368,369,370,371,372,373,374,224,375,56,225,57,58,226,376,59,60,61,62,63,377,378,379,380,381,382,525,383,384,385,386,387,388,389,390,64,65,66,67,68,227,69,228,70,229,71,72,230,73,391,231,392,393,232,233,234,74,75,76,77,394,78,235,79,80,395,396,397,81,82,398,526,399,400,527,401,83,402,84,528,85,403,404,405,406,529,407,408,409,86,87,88,89,90,91,92,93,410,411,94,412,413,414,415,95,416,417,418,96,97,98,99,419,100,101,102,103,104,105,420,106,107,108,109,110,111,112,113,114,115,116,117,171,118,119,120,121,122,422,423,236,123,424,425,426,427,428,429,430,431,432,172,433,173,124,125,126,127,128,237,435,436,437,438,439,129,440,441,442,443,444,445,446,238,130,239,447,240,131,132,448,133,449,530,134,135,136,137,138,139,140,450,141,142,143,144,451,452,453,454,455,456,457,458,459,531,460,461,462,463,464,465,145,466,467,146,468,469,470,471,472,473,474,475,476,147,477,478,479,480,481,148,482,483,484,485,486,487,488,149,489,490,491,492,493,494,495,241,150,242,151,152,243,244,153,496,154,155,156,157,497,158,159,160,498,161,162,499,163,164,500,501,165,166,167,168,502,169,170],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[532],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[109],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[245,246,247,248,511,290,212,215,20,375,57,394,396,397,151],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[174,175,176,177,178,0,1,245,246,2,3,247,248,4,249,5,250,251,254,255,256,257,258,259,260,261,262,263,264,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,265,202,203,266,204,205,206,207,208,267,268,269,270,271,272,273,274,275,276,277,6,278,279,280,281,7,8,282,9,283,284,285,10,286,11,12,209,287,210,211,288,289,290,13,14,15,291,292,293,212,16,17,213,214,18,19,215,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,216,42,43,44,45,46,47,316,317,318,319,320,321,48,217,49,322,218,219,220,221,222,223,323,324,50,325,326,327,328,329,330,331,332,333,334,335,336,337,523,338,339,340,341,342,343,524,344,345,346,347,348,349,350,351,352,353,51,354,52,355,356,357,358,359,360,361,362,53,54,363,55,364,365,366,367,368,369,370,371,372,373,374,224,375,56,225,57,58,226,376,59,60,61,62,63,377,378,379,380,381,382,383,384,385,386,387,388,389,390,64,65,66,67,68,227,69,228,70,229,71,72,230,73,391,231,392,392,393,393,232,233,234,74,75,76,77,394,78,235,79,80,395,396,397,81,82,398,526,399,400,527,401,83,402,84,528,85,404,405,406,529,407,408,409,86,87,88,89,90,91,92,93,410,411,94,412,413,414,415,95,416,417,418,96,97,98,99,419,100,101,102,103,104,105,420,106,107,108,109,110,111,112,113,114,115,116,117,171,118,119,120,121,122,422,423,236,123,424,425,426,427,428,429,430,431,432,172,433,173,124,125,126,127,128,237,435,436,437,438,439,129,440,441,442,443,444,445,446,238,130,239,447,240,131,132,448,133,449,530,134,135,136,137,138,139,140,450,141,142,143,144,451,452,453,454,455,456,457,460,461,462,463,464,465,145,466,467,146,468,469,470,471,472,473,474,475,476,147,477,478,479,480,481,148,482,483,484,485,486,487,488,149,489,490,491,492,493,494,495,241,150,242,151,152,243,244,153,496,154,155,156,157,158,159,160,161,162,499,163,164,500,501,165,166,167,168,502,169,170],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[347,447],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[174,175,176,177,178,0,1,245,246,2,3,247,248,4,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,267,268,269,270,271,272,273,6,278,7,8,9,10,286,11,12,289,14,15,292,212,16,17,213,214,18,19,215,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,216,42,43,44,45,46,47,316,317,318,319,320,48,217,218,219,220,221,222,223,50,330,364,365,366,367,374,224,375,56,225,57,58,226,376,59,60,384,64,65,66,67,68,70,229,71,72,230,73,231,75,76,77,394,78,235,79,80,395,396,397,81,82,398,83,402,406,407,86,88,89,90,91,92,93,94,414,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,236,123,424,425,426,427,428,429,430,431,432,172,173,124,125,126,127,128,237,238,130,239,240,131,132,448,133,453,454,455,456,495,241,150,242,151,152,243,244,153,496,154,155,156,159,160,161,162,499,163,164,500,501,165,166,167,168,502,169,170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[174,175,176,177,178,0,1,245,246,2,3,247,248,4,533,533,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,266,204,205,206,207,208,267,270,271,272,273,274,275,276,6,278,7,8,9,10,11,12,209,210,211,290,13,14,15,212,16,17,213,214,18,19,215,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,216,42,43,44,45,46,47,316,317,318,319,320,48,217,218,219,220,221,222,223,50,364,365,366,367,374,224,375,56,225,57,58,226,59,60,64,65,66,67,68,227,69,228,70,229,71,72,230,73,231,392,393,232,233,234,74,75,76,77,394,78,235,79,80,395,396,397,81,82,398,399,83,402,84,85,405,406,407,86,87,88,89,90,91,92,93,410,94,414,415,95,416,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,171,118,119,120,121,122,236,123,424,425,426,427,428,429,430,431,432,172,173,124,125,126,127,128,237,129,238,130,239,240,131,132,448,133,134,135,136,137,138,139,140,450,141,142,143,144,451,145,146,147,148,149,495,241,150,242,151,152,243,244,153,154,155,156,157,158,159,160,161,162,499,163,164,500,501,165,166,167,168,502,169,170],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"o"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[534],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[342,503,504],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,215,222,348,75,153],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1952","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[358,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[174,175,176,177,178,0,1,245,246,2,3,247,248,4,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,266,204,205,206,207,208,267,268,269,270,271,272,273,274,275,276,6,278,7,8,9,10,286,11,12,209,210,211,289,290,13,14,15,212,16,17,213,214,18,19,215,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,216,42,43,44,45,46,47,316,317,318,319,320,48,217,218,219,220,221,222,223,50,326,327,328,329,330,331,332,333,334,335,336,337,338,364,365,366,367,369,370,371,374,224,375,56,225,57,58,226,376,59,60,383,384,385,386,387,388,389,390,64,65,66,67,68,227,69,228,70,229,71,72,230,73,391,231,392,392,393,393,232,233,234,74,75,76,77,394,78,235,79,80,395,396,397,81,82,398,399,83,402,84,85,405,406,407,86,87,88,89,90,91,92,93,410,94,414,415,95,416,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,171,118,119,120,121,122,236,123,424,425,426,427,428,429,430,431,432,172,173,124,125,126,127,128,237,129,238,130,239,240,131,132,448,133,134,135,136,137,138,139,140,450,141,142,143,144,451,453,454,455,456,145,146,147,148,149,495,241,150,242,151,152,243,244,153,496,154,155,156,157,158,159,160,161,162,499,163,164,500,501,165,166,167,168,502,169,170],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[535],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[170],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[109],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":99,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":534,"org.easymock.tests2.UsageTest.argumentsOrdered":397,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":354,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":235,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":228,"org.easymock.tests2.DelegateToTest.testReturnException":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":219,"org.easymock.tests.MockingTest.testPartialClassMocking":7,"org.easymock.tests.MockClassControlTest.testToString":385,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":452,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":5,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":471,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":179,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":146,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":87,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":315,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":105,"org.easymock.tests2.UsageTest.wrongArguments":394,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":16,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":494,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":366,"org.easymock.samples.ExampleTest.answerVsDelegate":229,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":256,"org.easymock.tests2.UsageConstraintsTest.testNull":101,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":284,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":91,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":142,"org.easymock.tests2.CaptureTest.testPrimitive":163,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":18,"org.easymock.tests.UsageTest.moreThanOneArgument":1,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":198,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":176,"org.easymock.tests.UsageTest.argumentsOrdered":248,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":378,"org.easymock.tests.UsageVarargTest.varargIntAccepted":201,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":521,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":64,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":398,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":444,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":68,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":299,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":516,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests.ReplayStateInvalidUsageTest.times":334,"org.easymock.tests2.DependencyTest.testClassMocking":408,"org.easymock.tests2.AnswerTest.answer":122,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":428,"org.easymock.tests2.CaptureTest.testAnd":161,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":253,"org.easymock.tests2.UsageTest.strictResetToDefault":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":527,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":414,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":11,"org.easymock.tests2.DelegateToTest.testDelegate":240,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":382,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":298,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":194,"org.easymock.tests.LimitationsTest.mockFinalMethod":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":320,"org.easymock.tests2.DependencyTest.testClassMockingSupport":409,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":291,"org.easymock.tests2.CaptureTest.testCapture1_2446744":164,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":192,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":426,"org.easymock.tests.UsageThrowableTest.throwError":41,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":328,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":255,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":525,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":445,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":483,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":302,"org.easymock.samples.PartialClassMockTest.testGetArea":69,"org.easymock.tests.MockingTest.testInterfaceMocking":282,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":472,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":180,"org.easymock.tests2.UsageTest.niceToStrict":78,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":373,"org.easymock.tests2.ThreadingTest.testChangeDefault":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":83,"org.easymock.tests2.MockBuilderTest.testCreateMock":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":479,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":491,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":513,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":188,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":139,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":252,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":264,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":268,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":364,"org.easymock.tests.UsageOverloadedMethodTest.overloading":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":476,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":110,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":211,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":32,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":13,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":503,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":109,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":167,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":265,"org.easymock.tests.MockClassControlTest.testEquals":389,"org.easymock.tests2.EasyMockSupportClassTest.testAll":145,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":217,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":518,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":427,"org.easymock.tests2.CaptureTest.testCaptureAll":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":318,"org.easymock.tests.MockNameTest.defaultName":277,"org.easymock.tests2.UsageConstraintsTest.testMatches":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":177,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":326,"org.easymock.samples.ExampleTest.voteForRemovals":73,"org.easymock.tests.UsageVarargTest.allKinds":208,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":19,"org.easymock.samples.BasicClassMockTest.testPrintContent":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":319,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":46,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":495,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":223,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":524,"org.easymock.tests2.UsageConstraintsTest.greaterThan":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":466,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":286,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":416,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":303,"org.easymock.samples.ExampleTest.voteForRemoval":71,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":344,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":417,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":125,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":257,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":531,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":410,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":295,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":75,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":267,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":352,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":136,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":218,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":446,"org.easymock.tests2.CaptureTest.testCaptureFirst":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":351,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":137,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":82,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":28,"org.easymock.tests2.CaptureTest.testCapture2_2446744":169,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":127,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":361,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":207,"org.easymock.tests.GenericTest.testBridgedEquals":322,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":275,"org.easymock.tests.UsageExpectAndReturnTest.longType":24,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":316,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":197,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":171,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":260,"org.easymock.tests.UsageCallCountTest.tooManyCalls":276,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":506,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":480,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":493,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":45,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":155,"org.easymock.tests.MockingTest.testNiceClassMocking":285,"org.easymock.tests.MockingTest.testClassMocking":280,"org.easymock.tests2.UsageConstraintsTest.testContains":108,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":269,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":431,"org.easymock.tests2.UsageConstraintsTest.testFind":100,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":15,"org.easymock.tests.MockTypeTest.fromEasyMockClass":254,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":173,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":374,"org.easymock.tests.UsageExpectAndReturnTest.object":31,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":492,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":141,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":203,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":371,"org.easymock.tests.UsageTest.exactCallCountByLastCall":4,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":249,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":379,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":510,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":449,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":37,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":199,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":210,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":436,"org.easymock.tests.MockClassControlTest.testHashCode":388,"org.easymock.tests2.EasyMockSupportTest.testVerify":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":474,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":515,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":380,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":209,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":263,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":425,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":496,"org.easymock.tests.UsageVarargTest.varargCharAccepted":202,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":523,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":55,"org.easymock.tests2.UsageTest.openCallCountByLastCall":79,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":144,"org.easymock.tests.DefaultClassInstantiatorTest.object":338,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":262,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":369,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":475,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":186,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":487,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":435,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":415,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":387,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":185,"org.easymock.tests.CapturesMatcherTest.test":533,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":38,"org.easymock.tests.ReplayStateInvalidCallsTest.times":307,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":259,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":308,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":517,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":148,"org.easymock.tests2.UsageTest.resumeIfFailure":81,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":251,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":221,"org.easymock.tests2.StubTest.stubWithReturnValue":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":528,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":118,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":30,"org.easymock.tests2.SerializationTest.testAllMockedMethod":448,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":359,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":520,"org.easymock.samples.SupportTest.voteForRemovals":74,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":321,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":438,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":191,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":363,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":422,"org.easymock.tests.UsageExpectAndThrowTest.object":189,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":250,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":116,"org.easymock.tests2.DelegateToTest.testWrongClass":239,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":59,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":305,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":60,"org.easymock.samples.ConstructorCalledMockTest.testTax":392,"org.easymock.tests.UsageStrictMockTest.range":57,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":461,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":450,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":154,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":535,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":190,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":463,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":247,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":365,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":505,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":297,"org.easymock.tests2.CaptureTest.testCaptureNone":166,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":63,"org.easymock.tests.UsageUnorderedTest.message":212,"org.easymock.tests.UsageVerifyTest.twoReturns":20,"org.easymock.tests.UsageVarargTest.varargByteAccepted":206,"org.easymock.tests2.ThreadingTest.testThreadSafe":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":477,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":273,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":232,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":372,"org.easymock.tests2.CaptureTest.testCapture_2617107":499,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":522,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":214,"org.easymock.tests2.UsageConstraintsTest.any":106,"org.easymock.tests2.StubTest.stub":244,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":333,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":261,"org.easymock.tests.UsageExpectAndThrowTest.longType":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":220,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":342,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":332,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":242,"org.easymock.tests2.SerializationTest.testClass":131,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests.LimitationsTest.mockNativeMethod":50,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":40,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":49,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":486,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":313,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":243,"org.easymock.tests2.NameTest.nameForMocksControl":456,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":488,"org.easymock.tests2.MockedExceptionTest.testMockedException":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":467,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":3,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":433,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":183,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":9,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":88,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":85,"org.easymock.tests.MockingTest.testNicePartialClassMocking":8,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":93,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":484,"org.easymock.tests2.CaptureTest.testCaptureLast":165,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":292,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":160,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":104,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":312,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":117,"org.easymock.tests.MockingTest.testTwoMocks":281,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":309,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":498,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":187,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":396,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":120,"org.easymock.samples.ExampleTest.removeNonExistingDocument":391,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":490,"org.easymock.tests.UsageStrictMockTest.differentMethods":58,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":437,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":421,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":340,"org.easymock.tests2.ConstraintsToStringTest.andToString":519,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":126,"org.easymock.tests2.MockBuilderTest.testCreateMockString":407,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":468,"org.easymock.tests.UsageExpectAndThrowTest.floatType":181,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":465,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":530,"org.easymock.tests.UsageVerifyTest.twoThrows":215,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":147,"org.easymock.samples.ExampleTest.voteAgainstRemoval":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":52,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":61,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":95,"org.easymock.tests.LimitationsTest.privateConstructor":324,"org.easymock.tests2.UsageConstraintsTest.testNotNull":119,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":429,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":47,"org.easymock.tests2.UsageTest.defaultResetToNice":395,"org.easymock.samples.ExampleTest.voteAgainstRemovals":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":355,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":485,"org.easymock.tests.UsageVarargTest.differentLength":266,"org.easymock.tests2.CallbackTest.callback":237,"org.easymock.tests2.UsageConstraintsTest.equals":419,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":508,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":412,"org.easymock.tests.UsageTest.openCallCountByLastCall":2,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":96,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":213,"org.easymock.tests.UsageCallCountTest.tooFewCalls":271,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":157,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":367,"org.easymock.tests.UsageThrowableTest.throwCheckedException":44,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":507,"org.easymock.tests.MockingTest.testStrictClassMocking":279,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":159,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":489,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":156,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":335,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":158,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":424,"org.easymock.tests.ObjectMethodsTest.testHashCode":370,"org.easymock.tests2.NameTest.nameForNiceMock":455,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":128,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":311,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":306,"org.easymock.tests2.DependencyTest.testInterfaceMocking":86,"org.easymock.samples.ExampleTest.addDocument":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":482,"org.easymock.tests2.DelegateToTest.testStubDelegate":130,"org.easymock.tests2.AnswerTest.stubAnswer":123,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":56,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":403,"org.easymock.tests.UsageVarargTest.varargLongAccepted":205,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":39,"org.easymock.tests.UsageExpectAndReturnTest.floatType":23,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":133,"org.easymock.tests2.ConstraintsToStringTest.orToString":512,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":393,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":443,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":114,"org.easymock.tests.UsageThrowableTest.noUpperLimit":216,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":97,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":457,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":500,"org.easymock.tests2.SerializationTest.test":132,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":504,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":339,"org.easymock.tests2.UsageConstraintsTest.testSame":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":22,"org.easymock.samples.SupportTest.addDocument":234,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":497,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":296,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":469,"org.easymock.tests.GenericTest.testPackageScope":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":442,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":283,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":294,"org.easymock.tests2.NameTest.nameForMock":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":33,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":529,"org.easymock.tests2.UsageStrictMockTest.differentMethods":152,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":413,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":25,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":193,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":12,"org.easymock.tests2.MockedExceptionTest.testRealException":432,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":258,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":509,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":356,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":17,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":337,"org.easymock.tests2.NameTest.nameForStrictMock":454,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":401,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":92,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":460,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":115,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":341,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":399,"org.easymock.tests2.UsageStrictMockTest.range":151,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":300,"org.easymock.tests2.UsageConstraintsTest.lessThan":121,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":532,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":439,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":473,"org.easymock.tests2.CaptureTest.testCaptureRightOne":168,"org.easymock.tests2.UsageConstraintsTest.testOr":103,"org.easymock.tests.UsageRangeTest.combination":10,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":89,"org.easymock.tests.UsageTest.wrongArguments":246,"org.easymock.tests2.MockBuilderTest.testWithConstructor":526,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":470,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":26,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":346,"org.easymock.tests.UsageVarargTest.varargShortAccepted":204,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":343,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":274,"org.easymock.tests2.UsageConstraintsTest.cmpTo":107,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":314,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":423,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":348,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests2.CaptureTest.testCaptureFromStub":502,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":327,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":400,"org.easymock.tests.UsageTest.unexpectedCallWithArray":245,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":310,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":375,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":272,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":35,"org.easymock.tests2.UsageConstraintsTest.constraints":98,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":225,"org.easymock.samples.ExampleTest.addAndChangeDocument":231,"org.easymock.tests2.ConstraintsToStringTest.notToString":514,"org.easymock.tests.UsageStrictMockTest.testVerify":376,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":227,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":317,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":66,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":27,"org.easymock.tests.LimitationsTest.abstractClass":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":67,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":140,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":200}}]
