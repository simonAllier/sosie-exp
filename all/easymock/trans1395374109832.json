[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[37,38,39,40,41,42,43,44,1,2,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,3,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,4,5,85,86,87,6,7,8,9,0,88,89,90,91,10,92,11,12,93,13,14,15,94,95,96,97,16,17,18,98,99,100,101,102,103,104,105,106,107,108,19,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,20,21,22,23,24,262,263,264,265,266,267,268,269,270,271,272,273,25,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,26,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,27,28,29,30,31,430,431,432,32,33,433,434,34,35,36,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[484,485,273,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[488,489,490],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[86],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[327,469,472,473],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[119,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[101],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[118,121,122,123,126,202,205,261,405],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[491],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[37,38,39,40,41,42,44,45,47,48,49,50,51,54,55,60,62,63,64,3,65,66,67,68,78,4,5,85,86,6,7,8,9,0,88,90,91,10,92,11,12,93,13,14,15,94,95,96,97,16,17,18,98,99,100,101,102,103,104,105,106,107,108,19,109,110,111,114,115,116,118,119,120,121,122,123,126,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,173,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,195,202,205,207,212,213,217,245,246,247,249,250,251,252,258,259,261,20,21,22,23,24,271,272,273,25,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,312,313,314,26,315,356,357,358,359,362,375,379,380,381,382,384,385,404,405,409,410,412,413,414,415,416,417,418,419,420,422,423,424,425,426,427,428,429,27,28,29,30,31,432,32,33,433,434,34,35,36,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,470,471,477,479,480],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"equalsMethod","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","sourceCode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[37,38,39,40,42,44,1,1,2,2,46,49,54,55,60,62,63,3,65,66,67,68,69,70,71,78,4,5,85,86,6,7,8,9,0,88,89,90,91,10,92,11,12,93,13,14,15,94,95,96,97,16,17,18,98,99,100,101,102,103,104,105,106,107,108,19,109,110,111,112,113,114,115,116,118,119,120,121,122,123,126,130,131,132,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,158,162,164,166,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,195,202,203,204,205,207,208,209,211,212,217,220,230,236,244,245,246,247,248,249,250,251,252,253,254,255,258,260,20,21,22,23,24,271,273,25,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,312,313,314,26,315,316,317,335,341,346,347,349,353,354,355,356,357,358,375,379,406,407,408,409,410,411,412,413,414,415,416,417,429,27,28,29,30,31,430,432,32,33,433,434,34,35,36,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,479,480,482],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[37,38,39,40,41,42,43,44,1,2,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,3,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,4,5,85,86,87,6,7,8,9,0,88,89,90,91,10,92,11,12,93,13,14,15,94,95,96,97,16,17,18,98,99,100,101,102,103,104,105,106,107,108,19,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,161,162,163,164,166,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,20,21,22,23,24,263,264,265,266,267,268,270,271,272,273,25,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,26,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,27,28,29,30,31,430,431,432,32,33,433,434,34,35,36,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[184,251,306,307,308,336,393],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected"}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":86,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":409,"org.easymock.tests2.UsageTest.argumentsOrdered":183,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":153,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":329,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":178,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":47,"org.easymock.tests2.DelegateToTest.testReturnException":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":300,"org.easymock.tests.MockingTest.testPartialClassMocking":346,"org.easymock.tests.MockClassControlTest.testToString":400,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":239,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":310,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":224,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":440,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":220,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":55,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":88,"org.easymock.tests2.UsageTest.wrongArguments":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":32,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":255,"org.easymock.samples.ExampleTest.answerVsDelegate":38,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":370,"org.easymock.tests2.UsageConstraintsTest.testNull":7,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":351,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":121,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":405,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":152,"org.easymock.tests2.CaptureTest.testPrimitive":101,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":34,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":459,"org.easymock.tests.UsageTest.moreThanOneArgument":410,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":22,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":469,"org.easymock.tests.UsageTest.argumentsOrdered":416,"org.easymock.tests.UsageVarargTest.varargIntAccepted":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":27,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":156,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":200,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":31,"org.easymock.tests.ReplayStateInvalidUsageTest.times":394,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":78,"org.easymock.tests2.DependencyTest.testClassMocking":52,"org.easymock.tests2.AnswerTest.answer":111,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":72,"org.easymock.tests2.CaptureTest.testAnd":98,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":367,"org.easymock.tests2.UsageTest.strictResetToDefault":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":160,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":307,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":473,"org.easymock.tests2.DelegateToTest.testDelegate":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":455,"org.easymock.tests.LimitationsTest.mockFinalMethod":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":439,"org.easymock.tests2.DependencyTest.testClassMockingSupport":53,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":316,"org.easymock.tests2.CaptureTest.testCapture1_2446744":102,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":125,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":453,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":70,"org.easymock.tests.UsageThrowableTest.throwError":461,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":388,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":369,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":238,"org.easymock.samples.PartialClassMockTest.testGetArea":46,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":389,"org.easymock.tests.MockingTest.testInterfaceMocking":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":28,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":354,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":441,"org.easymock.tests2.UsageTest.niceToStrict":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":225,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":162,"org.easymock.tests2.MockBuilderTest.testCreateMock":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":233,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":81,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":484,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":449,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":148,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":366,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":476,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":253,"org.easymock.tests.UsageOverloadedMethodTest.overloading":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":235,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":480,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":290,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":356,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":92,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":107,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":421,"org.easymock.tests.MockClassControlTest.testEquals":404,"org.easymock.tests2.EasyMockSupportClassTest.testAll":217,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":457,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":437,"org.easymock.tests2.CaptureTest.testCaptureAll":99,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":71,"org.easymock.tests.MockNameTest.defaultName":431,"org.easymock.tests2.UsageConstraintsTest.testMatches":12,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":386,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":23,"org.easymock.samples.ExampleTest.voteForRemovals":42,"org.easymock.tests.UsageVarargTest.allKinds":429,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":312,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":438,"org.easymock.samples.BasicClassMockTest.testPrintContent":51,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":467,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":197,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":304,"org.easymock.tests2.UsageConstraintsTest.greaterThan":13,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":218,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":306,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":132,"org.easymock.samples.ExampleTest.voteForRemoval":39,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":270,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":139,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":133,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":371,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":124,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":432,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":145,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":299,"org.easymock.tests2.CaptureTest.testCaptureFirst":110,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":146,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":286,"org.easymock.tests2.UsageTest.moreThanOneArgument":175,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":141,"org.easymock.tests2.CaptureTest.testCapture2_2446744":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":337,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":428,"org.easymock.tests.GenericTest.testBridgedEquals":261,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":384,"org.easymock.tests.UsageExpectAndReturnTest.longType":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":435,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":458,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":430,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":456,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":20,"org.easymock.tests.UsageCallCountTest.tooManyCalls":385,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":445,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":466,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":203,"org.easymock.tests.MockingTest.testNiceClassMocking":352,"org.easymock.tests.MockingTest.testClassMocking":344,"org.easymock.tests2.UsageConstraintsTest.testContains":10,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":378,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":188,"org.easymock.tests2.UsageConstraintsTest.testFind":6,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":358,"org.easymock.tests.MockTypeTest.fromEasyMockClass":368,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":62,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":271,"org.easymock.tests.UsageExpectAndReturnTest.object":289,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":151,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":423,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":362,"org.easymock.tests.UsageTest.exactCallCountByLastCall":417,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":470,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":136,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":418,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":295,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":479,"org.easymock.tests.MockClassControlTest.testHashCode":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":191,"org.easymock.tests2.EasyMockSupportTest.testVerify":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":227,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":471,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":477,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":475,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":69,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":117,"org.easymock.tests.UsageVarargTest.varargCharAccepted":422,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":262,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":342,"org.easymock.tests2.UsageTest.openCallCountByLastCall":179,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":154,"org.easymock.tests.DefaultClassInstantiatorTest.object":263,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":474,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":360,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":228,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":464,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":76,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":190,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":402,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":130,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":446,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":296,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":406,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":236,"org.easymock.tests2.UsageTest.resumeIfFailure":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":365,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":488,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":302,"org.easymock.tests2.StubTest.stubWithReturnValue":252,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":165,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":97,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":288,"org.easymock.tests2.SerializationTest.testAllMockedMethod":213,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":335,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":485,"org.easymock.samples.SupportTest.voteForRemovals":49,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":452,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":341,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":112,"org.easymock.tests.UsageExpectAndThrowTest.object":450,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":311,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":94,"org.easymock.tests2.DelegateToTest.testWrongClass":247,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":35,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":36,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests.UsageStrictMockTest.range":275,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":58,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":150,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":202,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":451,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":164,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":415,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":214,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":486,"org.easymock.tests2.CaptureTest.testCaptureNone":106,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":355,"org.easymock.tests.UsageUnorderedTest.message":460,"org.easymock.tests.UsageVerifyTest.twoReturns":314,"org.easymock.tests.UsageVarargTest.varargByteAccepted":427,"org.easymock.tests2.ThreadingTest.testThreadSafe":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":231,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":382,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":50,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":363,"org.easymock.tests2.CaptureTest.testCapture_2617107":100,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":339,"org.easymock.tests2.UsageConstraintsTest.any":90,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":393,"org.easymock.tests2.StubTest.stub":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":408,"org.easymock.tests.UsageExpectAndThrowTest.longType":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":340,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":267,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":392,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":65,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests2.SerializationTest.testClass":211,"org.easymock.tests.LimitationsTest.mockNativeMethod":375,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":260,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":298,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":75,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":68,"org.easymock.tests2.NameTest.nameForMocksControl":243,"org.easymock.tests2.MockedExceptionTest.testMockedException":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":219,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":414,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":444,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":61,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":349,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":118,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":166,"org.easymock.tests.MockingTest.testNicePartialClassMocking":347,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":123,"org.easymock.tests2.CaptureTest.testCaptureLast":105,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":73,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":317,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":209,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":95,"org.easymock.tests.MockingTest.testTwoMocks":345,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":210,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":279,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":448,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":182,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":17,"org.easymock.samples.ExampleTest.removeNonExistingDocument":43,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":390,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":80,"org.easymock.tests.UsageStrictMockTest.differentMethods":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":192,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":265,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":140,"org.easymock.tests2.MockBuilderTest.testCreateMockString":172,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":398,"org.easymock.tests.UsageExpectAndThrowTest.floatType":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":221,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":216,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":114,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":137,"org.easymock.tests.UsageVerifyTest.twoThrows":313,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":230,"org.easymock.samples.ExampleTest.voteAgainstRemoval":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":330,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":353,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":131,"org.easymock.tests.LimitationsTest.privateConstructor":374,"org.easymock.tests2.UsageConstraintsTest.testNotNull":16,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":468,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":186,"org.easymock.tests2.UsageTest.defaultResetToNice":181,"org.easymock.samples.ExampleTest.voteAgainstRemovals":37,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":331,"org.easymock.tests.UsageVarargTest.differentLength":424,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":74,"org.easymock.tests2.CallbackTest.callback":250,"org.easymock.tests2.UsageConstraintsTest.equals":87,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":127,"org.easymock.tests.UsageTest.openCallCountByLastCall":413,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":433,"org.easymock.tests.UsageCallCountTest.tooFewCalls":380,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":205,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":256,"org.easymock.tests.UsageThrowableTest.throwCheckedException":465,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":487,"org.easymock.tests.MockingTest.testStrictClassMocking":343,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":208,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":79,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":204,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":395,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":207,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":116,"org.easymock.tests.ObjectMethodsTest.testHashCode":361,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":142,"org.easymock.tests2.NameTest.nameForNiceMock":242,"org.easymock.tests2.DependencyTest.testInterfaceMocking":54,"org.easymock.samples.ExampleTest.addDocument":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":237,"org.easymock.tests2.DelegateToTest.testStubDelegate":246,"org.easymock.tests2.AnswerTest.stubAnswer":115,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":25,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":167,"org.easymock.tests.UsageVarargTest.varargLongAccepted":426,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":328,"org.easymock.tests.UsageExpectAndReturnTest.floatType":281,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":297,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":135,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":481,"org.easymock.tests.UsageThrowableTest.noUpperLimit":462,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":199,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":5,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":56,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":103,"org.easymock.tests2.SerializationTest.test":212,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":264,"org.easymock.tests2.UsageConstraintsTest.testSame":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":280,"org.easymock.samples.SupportTest.addDocument":48,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":206,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":222,"org.easymock.tests.GenericTest.testPackageScope":258,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":198,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":350,"org.easymock.tests2.NameTest.nameForMock":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":291,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":171,"org.easymock.tests2.UsageStrictMockTest.differentMethods":67,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":128,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":283,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":454,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":359,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":308,"org.easymock.tests2.MockedExceptionTest.testRealException":189,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":372,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":332,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":397,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":33,"org.easymock.tests2.NameTest.nameForStrictMock":241,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":161,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":60,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":122,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":57,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":15,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":266,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":158,"org.easymock.tests2.UsageStrictMockTest.range":66,"org.easymock.tests2.UsageConstraintsTest.lessThan":18,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":491,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":194,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":327,"org.easymock.tests2.CaptureTest.testCaptureRightOne":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":226,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests.UsageRangeTest.combination":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":119,"org.easymock.tests.UsageTest.wrongArguments":412,"org.easymock.tests2.MockBuilderTest.testWithConstructor":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":223,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":399,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":320,"org.easymock.tests.UsageVarargTest.varargShortAccepted":425,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":268,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":383,"org.easymock.tests2.UsageConstraintsTest.cmpTo":91,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":322,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":180,"org.easymock.tests2.CaptureTest.testCaptureFromStub":19,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":387,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":159,"org.easymock.tests.UsageTest.unexpectedCallWithArray":411,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":381,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":293,"org.easymock.tests2.UsageConstraintsTest.constraints":85,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":274,"org.easymock.samples.ExampleTest.addAndChangeDocument":44,"org.easymock.tests.UsageStrictMockTest.testVerify":278,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":45,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":436,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":104,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":285,"org.easymock.tests.LimitationsTest.abstractClass":373,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":482,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":30,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":149}}]
