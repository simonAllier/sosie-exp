[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:170","sourceCode":"org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"position":"org.easymock.internal.LastControl:70","failures":[20,36,37,38,39,40,41,42,43,44,45,27,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[100,101,102,103,104,105,106,107,108,109,110],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[21,111,112,113,114,115,116,117,118,119,120,121,30,122,77,89,123,124],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:205","failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,100,138,139,140,141,1,142,104,143,144,105,145,146,147,148,106,149,150,151,152,153,108,154,155],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[156],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1333","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1000","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[157,158,159],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(this.java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","key":"defaultValue"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[161,162,163,164,49,129,165,166,167,168,137,169,139,140,141,170,171,172,173,101,174,175,176,102,143,146,148,149,153],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[161,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,36,111,198,199,200,201,114,202,203,204,205,206,207,208,209,210,37,38,41,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,115,233,234,235,236,237,116,117,238,42,239,240,241,242,44,243,244,162,163,164,245,246,247,248,249,250,251,252,253,254,255,256,257,45,258,259,260,261,262,263,121,28,29,264,46,47,48,49,50,51,52,265,266,267,268,269,270,271,272,53,54,55,56,58,59,60,61,62,63,66,165,166,167,273,168,67,274,135,275,276,277,278,279,280,281,68,122,282,137,283,284,285,286,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,287,170,288,289,290,291,292,1,2,3,293,294,35,295,296,297,98,99,173,101,176,102,142,146,147,155,298,299,300,301,302,303,304],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[305,306,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[88,19],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[307,308,21,27,28,29,30],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[309,310,161,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,125,337,338,339,340,126,341,342,343,197,20,36,344,21,111,198,199,345,112,113,346,347,200,201,114,202,203,204,348,349,350,205,206,207,208,209,351,352,210,37,38,39,40,41,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,353,354,355,127,231,232,128,356,115,233,234,235,357,358,359,360,361,362,363,236,364,365,366,367,368,369,370,237,116,371,117,238,372,305,306,373,374,42,43,375,239,240,241,242,44,243,376,377,378,379,244,23,24,118,119,25,26,380,381,382,383,162,163,384,164,385,386,387,245,246,247,248,388,389,390,391,4,392,393,249,250,251,394,252,253,395,254,255,256,257,45,396,120,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,258,437,27,259,260,261,262,263,121,28,29,264,46,47,48,49,50,51,52,438,439,440,129,441,442,130,131,443,444,445,446,265,266,267,268,269,270,447,271,272,53,54,55,56,57,58,59,60,61,62,63,64,65,66,165,448,166,167,273,168,132,449,67,133,34,274,134,135,450,451,136,275,276,452,277,278,279,280,453,281,68,454,30,122,282,137,100,283,284,285,286,69,455,7,8,456,9,457,458,10,11,459,460,12,461,462,463,169,464,465,139,466,467,468,469,470,471,472,473,474,140,475,476,477,478,479,141,480,481,70,71,72,73,156,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,482,287,170,483,484,288,485,486,289,487,290,488,291,489,171,292,490,13,14,491,15,492,493,16,17,494,495,18,496,497,498,499,500,501,502,503,504,505,506,507,508,1,2,3,509,293,294,31,35,295,123,124,296,32,33,297,510,98,511,99,512,513,514,515,516,517,518,172,173,101,174,519,175,176,102,103,142,143,144,145,146,147,148,149,150,151,152,153,154,155,298,299,300,301,520,521,302,303,304],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1688","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[130,130,131,131,133,137,100,138,1,104,105,106,151,108],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[96],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[66],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[53,55,63,72,73,75,77,78,80,90,95],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:106","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : java.lang.reflect.Field[]) {\n    final org.easymock.TestSubject org.easymock.TestSubject = java.lang.reflect.Field.getAnnotation(org.easymock.TestSubject.org.easymock.TestSubject);\n    if (org.easymock.TestSubject != null) {\n        org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field);\n        continue;\n    } \n    final org.easymock.Mock org.easymock.Mock = java.lang.reflect.Field.getAnnotation(org.easymock.Mock.org.easymock.Mock);\n    if (org.easymock.Mock == null) {\n        continue;\n    } \n    final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType();\n    java.lang.String java.lang.String = org.easymock.Mock.java.lang.String();\n    java.lang.String = (java.lang.String.length()) == 0 ? null : java.lang.String;\n    final org.easymock.MockType org.easymock.MockType = org.easymock.Mock.org.easymock.MockType();\n    java.lang.Object java.lang.Object;\n    if (java.lang.Object instanceof org.easymock.EasyMockSupport) {\n        java.lang.Object = ((org.easymock.EasyMockSupport)(java.lang.Object)).createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    } else {\n        java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>);\n    }\n    java.lang.reflect.Field.setAccessible(true);\n    try {\n        java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n    } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n    }\n    org.easymock.internal.InjectionPlan.addInjection(new org.easymock.internal.Injection(java.lang.Object , org.easymock.Mock));\n}","type":"CtForEachImpl"},"failures":[443,444,455,7,8,456,9,457,458,10,11,459,460,12,490,13,14,491,15,492,493,16,17,494,495,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[388,389,390,391,392,393],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[309,310,161,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,125,337,338,339,340,126,341,342,343,197,20,36,344,21,111,198,199,345,112,113,346,347,200,201,114,202,203,204,348,349,350,205,206,207,208,209,351,352,210,37,38,39,40,41,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,353,354,355,127,231,232,128,356,115,233,234,235,357,358,359,360,361,362,363,236,364,365,366,367,368,369,370,237,116,371,117,238,372,305,306,373,374,42,43,375,239,240,241,242,44,243,376,377,378,379,244,23,24,118,119,25,26,380,381,382,383,162,163,384,164,385,386,387,245,246,247,248,388,389,390,391,4,392,393,249,250,251,394,252,253,395,254,255,256,257,45,396,120,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,258,437,27,259,260,261,262,263,121,28,29,264,46,47,48,49,50,51,52,438,439,440,129,441,442,130,131,443,444,445,446,265,266,267,268,269,270,447,271,272,53,54,55,56,57,58,59,60,61,62,63,64,65,66,165,448,166,167,273,168,132,449,67,133,34,274,134,135,450,451,136,275,276,452,277,278,279,280,453,281,68,454,30,122,282,137,100,283,284,285,286,69,455,7,8,456,9,457,458,10,11,459,460,12,461,462,463,169,464,465,139,466,467,468,469,470,471,472,473,474,140,475,476,477,478,479,141,480,481,70,71,72,73,156,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,482,287,170,483,484,288,485,486,289,487,290,488,291,489,171,292,490,13,14,491,15,492,493,16,17,494,495,18,496,497,498,499,500,501,502,503,504,505,506,507,508,1,2,3,509,293,294,31,35,295,123,124,296,32,33,297,510,98,511,99,512,513,514,515,516,517,522,523,524,160,518,525,172,173,101,174,519,175,176,102,103,142,143,144,145,146,147,148,149,150,151,152,153,154,155,298,299,300,301,520,521,302,303,304],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[428,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[526,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":73,"org.easymock.tests2.UsageTest.argumentsOrdered":33,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":379,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":506,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":405,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":295,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":444,"org.easymock.tests2.DelegateToTest.testReturnException":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":240,"org.easymock.tests.MockingTest.testPartialClassMocking":162,"org.easymock.tests.MockClassControlTest.testToString":364,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":452,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":139,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":211,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":487,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":333,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":37,"org.easymock.tests2.UsageTest.wrongArguments":31,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":247,"org.easymock.samples.ExampleTest.answerVsDelegate":266,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":126,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":386,"org.easymock.tests2.UsageConstraintsTest.testNull":75,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":167,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":505,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":369,"org.easymock.tests2.CaptureTest.testPrimitive":56,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":41,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":230,"org.easymock.tests.UsageTest.moreThanOneArgument":244,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":261,"org.easymock.tests.UsageTest.argumentsOrdered":26,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":345,"org.easymock.tests.UsageVarargTest.varargIntAccepted":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":48,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":142,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":514,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":495,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":52,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":317,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":159,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":457,"org.easymock.tests.ReplayStateInvalidUsageTest.times":427,"org.easymock.tests2.DependencyTest.testClassMocking":485,"org.easymock.tests2.AnswerTest.answer":301,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":412,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":286,"org.easymock.tests2.CaptureTest.testAnd":53,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":338,"org.easymock.tests2.UsageTest.strictResetToDefault":293,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":105,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":500,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":234,"org.easymock.tests2.DelegateToTest.testDelegate":288,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":347,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":226,"org.easymock.tests.LimitationsTest.mockFinalMethod":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":209,"org.easymock.tests2.DependencyTest.testClassMockingSupport":486,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":351,"org.easymock.tests2.CaptureTest.testCapture1_2446744":57,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":449,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":284,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":421,"org.easymock.tests.UsageThrowableTest.throwError":371,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":340,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":263,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":481,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":320,"org.easymock.samples.PartialClassMockTest.testGetArea":129,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":422,"org.easymock.tests.MockingTest.testInterfaceMocking":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":49,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":470,"org.easymock.tests2.UsageTest.niceToStrict":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":212,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":362,"org.easymock.tests2.ThreadingTest.testChangeDefault":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":146,"org.easymock.tests2.MockBuilderTest.testCreateMock":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":477,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":11,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":220,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":501,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":337,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":378,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":200,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":245,"org.easymock.tests.UsageOverloadedMethodTest.overloading":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":474,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":435,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":188,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":370,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":5,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":84,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":62,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":394,"org.easymock.tests2.EasyMockSupportClassTest.testAll":169,"org.easymock.tests.MockClassControlTest.testEquals":368,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":232,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":228,"org.easymock.tests2.CaptureTest.testCaptureAll":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":207,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":285,"org.easymock.tests.MockNameTest.defaultName":431,"org.easymock.tests2.UsageConstraintsTest.testMatches":86,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":419,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":262,"org.easymock.samples.ExampleTest.voteForRemovals":270,"org.easymock.tests.UsageVarargTest.allKinds":45,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":121,"org.easymock.samples.BasicClassMockTest.testPrintContent":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":208,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":373,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":453,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":243,"org.easymock.tests2.UsageConstraintsTest.greaterThan":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":464,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":233,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":450,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":321,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":393,"org.easymock.samples.ExampleTest.voteForRemoval":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":451,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":291,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":341,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":132,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":313,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":509,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":264,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":498,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":239,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":482,"org.easymock.tests2.CaptureTest.testCaptureFirst":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":499,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":510,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":437,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":184,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":171,"org.easymock.tests2.CaptureTest.testCapture2_2446744":65,"org.easymock.tests2.UsageTest.moreThanOneArgument":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":413,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":153,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":257,"org.easymock.tests.GenericTest.testBridgedEquals":356,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":349,"org.easymock.tests.UsageExpectAndReturnTest.longType":180,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":205,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":229,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":93,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":439,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":259,"org.easymock.tests.UsageCallCountTest.tooManyCalls":350,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":157,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":460,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":216,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":306,"org.easymock.tests.MockingTest.testNiceClassMocking":387,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":173,"org.easymock.tests.MockingTest.testClassMocking":382,"org.easymock.tests2.UsageConstraintsTest.testContains":83,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":201,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":299,"org.easymock.tests2.UsageConstraintsTest.testFind":74,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":116,"org.easymock.tests.MockTypeTest.fromEasyMockClass":339,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":99,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":343,"org.easymock.tests.UsageExpectAndReturnTest.object":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":504,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":253,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":360,"org.easymock.tests.UsageTest.exactCallCountByLastCall":380,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":112,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":334,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":193,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":249,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":434,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":13,"org.easymock.tests.MockClassControlTest.testHashCode":367,"org.easymock.tests2.EasyMockSupportTest.testVerify":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":472,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":158,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":113,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":432,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":377,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":283,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":69,"org.easymock.tests.UsageVarargTest.varargCharAccepted":252,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastCall":123,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":507,"org.easymock.tests.DefaultClassInstantiatorTest.object":388,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":376,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":358,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":473,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":218,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":372,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":490,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":134,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":319,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":366,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":217,"org.easymock.tests.CapturesMatcherTest.test":526,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":194,"org.easymock.tests.ReplayStateInvalidCallsTest.times":325,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":438,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":141,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":365,"org.easymock.tests2.UsageTest.resumeIfFailure":297,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":125,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":513,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":242,"org.easymock.tests2.StubTest.stubWithReturnValue":276,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":186,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":411,"org.easymock.samples.SupportTest.voteForRemovals":446,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":491,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":223,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":417,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":520,"org.easymock.tests.UsageExpectAndThrowTest.object":221,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":336,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":91,"org.easymock.tests2.DelegateToTest.testWrongClass":483,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":46,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":323,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":47,"org.easymock.samples.ConstructorCalledMockTest.testTax":130,"org.easymock.tests.UsageStrictMockTest.range":21,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":516,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":503,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":222,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":461,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":429,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":246,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":315,"org.easymock.tests2.CaptureTest.testCaptureNone":61,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":355,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":523,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.UsageVerifyTest.twoReturns":29,"org.easymock.tests.UsageVarargTest.varargByteAccepted":256,"org.easymock.tests2.ThreadingTest.testThreadSafe":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":475,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":204,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":441,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":361,"org.easymock.tests2.CaptureTest.testCapture_2617107":55,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":40,"org.easymock.tests2.UsageConstraintsTest.any":81,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":426,"org.easymock.tests2.StubTest.stub":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndThrowTest.longType":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":241,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":4,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":425,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":454,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":492,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":161,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":128,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":196,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":8,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":331,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":282,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":524,"org.easymock.tests2.NameTest.nameForMocksControl":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":9,"org.easymock.tests2.MockedExceptionTest.testMockedException":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":465,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":511,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":215,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":165,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":149,"org.easymock.tests.MockingTest.testNicePartialClassMocking":163,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":168,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":455,"org.easymock.tests2.CaptureTest.testCaptureLast":60,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":352,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":102,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":78,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":330,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":92,"org.easymock.tests.MockingTest.testTwoMocks":383,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":327,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":103,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":219,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":525,"org.easymock.samples.ExampleTest.removeNonExistingDocument":447,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":423,"org.easymock.tests.UsageStrictMockTest.differentMethods":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":10,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":14,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":518,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":390,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":489,"org.easymock.tests2.MockBuilderTest.testCreateMockString":154,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":466,"org.easymock.tests.UsageExpectAndThrowTest.floatType":213,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":463,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":138,"org.easymock.tests.UsageVerifyTest.twoThrows":28,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":140,"org.easymock.samples.ExampleTest.voteAgainstRemoval":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":353,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":135,"org.easymock.tests.LimitationsTest.privateConstructor":310,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":110,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":374,"org.easymock.tests2.UsageTest.defaultResetToNice":296,"org.easymock.samples.ExampleTest.voteAgainstRemovals":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":192,"org.easymock.tests.UsageVarargTest.differentLength":395,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":7,"org.easymock.tests2.CallbackTest.callback":272,"org.easymock.tests2.UsageConstraintsTest.equals":156,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":133,"org.easymock.tests.UsageTest.openCallCountByLastCall":118,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":39,"org.easymock.tests.UsageCallCountTest.tooFewCalls":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":174,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":248,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":160,"org.easymock.tests.UsageThrowableTest.throwCheckedException":305,"org.easymock.tests.MockingTest.testStrictClassMocking":381,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":176,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":458,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":101,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":428,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":175,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":304,"org.easymock.tests.ObjectMethodsTest.testHashCode":359,"org.easymock.tests2.NameTest.nameForNiceMock":279,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":292,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":329,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":324,"org.easymock.tests2.DependencyTest.testInterfaceMocking":289,"org.easymock.samples.ExampleTest.addDocument":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":480,"org.easymock.tests2.DelegateToTest.testStubDelegate":170,"org.easymock.tests2.AnswerTest.stubAnswer":303,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":36,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":150,"org.easymock.tests.UsageVarargTest.varargLongAccepted":255,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.floatType":179,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":137,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":494,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":436,"org.easymock.tests.UsageThrowableTest.noUpperLimit":117,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":89,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":71,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":512,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":58,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":178,"org.easymock.tests2.UsageConstraintsTest.testSame":76,"org.easymock.samples.SupportTest.addDocument":445,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":519,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":314,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":467,"org.easymock.tests.GenericTest.testPackageScope":231,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":17,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":385,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":312,"org.easymock.tests2.NameTest.nameForMock":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":189,"org.easymock.tests2.UsageStrictMockTest.differentMethods":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":108,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":34,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":225,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":235,"org.easymock.tests2.MockedExceptionTest.testRealException":300,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":342,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":408,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":68,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":430,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":38,"org.easymock.tests2.NameTest.nameForStrictMock":278,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":145,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":98,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":273,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":515,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":391,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":90,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":307,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":143,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":318,"org.easymock.tests2.UsageConstraintsTest.lessThan":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":15,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":471,"org.easymock.tests2.CaptureTest.testCaptureRightOne":63,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":522,"org.easymock.tests2.UsageConstraintsTest.testOr":77,"org.easymock.tests.UsageRangeTest.combination":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":448,"org.easymock.tests.UsageTest.wrongArguments":24,"org.easymock.tests2.MockBuilderTest.testWithConstructor":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":468,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":120,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":392,"org.easymock.tests.UsageVarargTest.varargShortAccepted":254,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":348,"org.easymock.tests2.UsageConstraintsTest.cmpTo":82,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":332,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":521,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":398,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests2.CaptureTest.testCaptureFromStub":64,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":420,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":144,"org.easymock.tests.UsageTest.unexpectedCallWithArray":23,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":328,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":203,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":107,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":191,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":344,"org.easymock.samples.ExampleTest.addAndChangeDocument":271,"org.easymock.tests.UsageStrictMockTest.testVerify":199,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":443,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":197,"org.easymock.tests2.CompareToTest.testGreateThan":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":206,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":183,"org.easymock.tests.LimitationsTest.abstractClass":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":51,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":502,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":250,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":308}}]
