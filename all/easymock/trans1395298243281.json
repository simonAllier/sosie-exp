[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[13,14,15,16],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,6,47,7,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,67,68,68,69,70,71],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,30,31,32,34,35,36,37,38,39,40,41,43,44,45,46,6,47,7,48,49,50,51,52,53,72,54,55,73,56,57,58,59,74,60,75,76,77,78,79,61,62,63,80,64,65,66,67,67,68,68,69,70,71],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.Invocation:99","failures":[81,36,82,83,84,85,86,87,88,89,69,90],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"toStringMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[91,92,93,94,95],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"failMessage":"org.easymock.internal.EasyMockProperties.PREFIX"}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:43","sourceCode":"org.junit.runners.model.Statement.evaluate()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[97,98,99],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[100,101,102,4,103,104,105,106,107,8,10,108,109,110,111],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[112,113,114,115,104,8],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[100,101,102,4,103,104,105,106,107,8,10,108,109,110,111],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[116],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[117,118,119,120,121,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[123,124,125],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[126],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected"}},{"position":"org.easymock.internal.matchers.Find:41","failures":[127],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[128,129,130,131,132,13,133,15,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,109,152,153,154,155,121,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[156,157,158,159,160,161],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[162],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[137],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[19,22,163,164,165,166,167,160,168,169,161],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[170,171,162,61,63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[156,157,158,172,173,30,160,174,161],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:317","failures":[175,176,177,178],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[179,180,181,182,116,183,184,185,186],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[187,91,188,189,190,191,192],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[193],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[194,195,196],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[197,198,199,200],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[4,5,104,8,10,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[201,156,157,158,172,173,159,30,160,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[202,203,204,128,129,130,131,132,205,179,180,206,207,208,181,182,209,81,210,211,212,13,213,214,133,215,183,216,14,217,218,219,220,15,221,222,223,134,100,224,225,226,227,228,101,102,187,229,17,18,19,20,230,21,22,231,232,233,234,3,235,4,5,236,23,24,25,26,237,238,239,198,199,30,240,31,32,34,36,37,38,39,40,41,43,241,242,243,244,44,135,136,137,245,246,45,46,247,6,47,7,48,49,50,51,52,53,248,249,54,250,251,252,253,254,255,256,257,258,259,82,260,83,261,91,262,184,138,185,263,264,265,266,139,140,267,186,268,269,141,55,170,270,142,57,58,59,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,143,104,105,287,288,106,107,289,144,290,291,292,293,294,145,295,296,297,298,299,146,300,301,302,147,303,148,304,305,306,307,308,309,310,311,8,9,312,10,11,313,117,314,315,316,317,118,318,319,320,61,62,85,190,191,321,322,323,108,64,324,325,326,95,327,109,328,329,330,331,332,333,334,335,336,336,337,338,339,340,341,342,343,344,345,346,347,348,110,111,152,349,119,350,120,351,153,352,353,354,355,356,154,357,358,359,155,360,121,122,361,362,363,364,365,366,367,368,369,86,87,370,88,89,67,68,371,69,372,373,90,70,71],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":180,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":286,"org.easymock.tests2.UsageTest.argumentsOrdered":102,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":283,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":225,"org.easymock.tests2.StubTest.stubWithReturnValue":262,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":160,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":371,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":354,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":218,"org.easymock.tests2.SerializationTest.testAllMockedMethod":31,"org.easymock.tests2.DelegateToTest.testReturnException":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":281,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":150,"org.easymock.tests.MockingTest.testPartialClassMocking":57,"org.easymock.samples.SupportTest.voteForRemovals":90,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":113,"org.easymock.tests.MockClassControlTest.testToString":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":72,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":146,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":93,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":144,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":197,"org.easymock.tests.UsageExpectAndThrowTest.object":298,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":232,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":216,"org.easymock.tests2.DelegateToTest.testWrongClass":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":156,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":318,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":324,"org.easymock.tests2.UsageTest.wrongArguments":100,"org.easymock.samples.ConstructorCalledMockTest.testTax":67,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":278,"org.easymock.samples.ExampleTest.answerVsDelegate":369,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":258,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":17,"org.easymock.tests2.UsageConstraintsTest.testNull":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":299,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":6,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":82,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":79,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":38,"org.easymock.tests2.CaptureTest.testPrimitive":263,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":327,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":304,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":106,"org.easymock.tests.UsageTest.moreThanOneArgument":143,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":277,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":315,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":114,"org.easymock.tests2.CaptureTest.testCaptureNone":140,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":162,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":195,"org.easymock.tests.UsageUnorderedTest.message":109,"org.easymock.tests.UsageVerifyTest.twoReturns":111,"org.easymock.tests.UsageVarargTest.varargByteAccepted":345,"org.easymock.tests2.ThreadingTest.testThreadSafe":135,"org.easymock.tests.UsageTest.argumentsOrdered":107,"org.easymock.tests.UsageVarargTest.varargIntAccepted":339,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":364,"org.easymock.tests.InvocationTest.testEquals":84,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":271,"org.easymock.tests2.CaptureTest.testCapture_2617107":185,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":32,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":173,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":95,"org.easymock.tests2.UsageConstraintsTest.any":81,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":37,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":192,"org.easymock.tests2.StubTest.stub":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":176,"org.easymock.tests.UsageExpectAndThrowTest.longType":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":282,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":235,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":221,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":237,"org.easymock.tests.LimitationsTest.mockNativeMethod":55,"org.easymock.tests.ReplayStateInvalidUsageTest.times":151,"org.easymock.tests2.AnswerTest.answer":238,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":122,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":188,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":244,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":29,"org.easymock.tests2.CaptureTest.testAnd":184,"org.easymock.tests2.UsageTest.strictResetToDefault":223,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":50,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":167,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":96,"org.easymock.tests2.MockedExceptionTest.testMockedException":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":255,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":190,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":288,"org.easymock.tests2.DelegateToTest.testDelegate":128,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":293,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":59,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":45,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":39,"org.easymock.tests.MockingTest.testNicePartialClassMocking":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":302,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":201,"org.easymock.tests2.CaptureTest.testCaptureLast":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":284,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":22,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":309,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":14,"org.easymock.tests.MockingTest.testTwoMocks":56,"org.easymock.tests2.CaptureTest.testCapture1_2446744":264,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":242,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":101,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":220,"org.easymock.tests.UsageThrowableTest.throwError":328,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":94,"org.easymock.tests.UsageStrictMockTest.differentMethods":11,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":196,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":137,"org.easymock.tests2.MockBuilderTest.testCreateMockString":43,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":317,"org.easymock.tests.UsageExpectAndThrowTest.floatType":291,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":214,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":239,"org.easymock.tests.UsageVerifyTest.twoThrows":110,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":25,"org.easymock.samples.PartialClassMockTest.testGetArea":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":272,"org.easymock.samples.ExampleTest.voteAgainstRemoval":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":171,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":290,"org.easymock.tests2.UsageTest.niceToStrict":224,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":73,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":165,"org.easymock.tests2.UsageConstraintsTest.testNotNull":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":335,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":248,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":123,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":36,"org.easymock.tests2.UsageTest.defaultResetToNice":228,"org.easymock.tests2.MockBuilderTest.testCreateMock":40,"org.easymock.samples.ExampleTest.voteAgainstRemovals":368,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":149,"org.easymock.tests.UsageVarargTest.differentLength":342,"org.easymock.tests2.CallbackTest.callback":129,"org.easymock.tests2.UsageConstraintsTest.equals":193,"org.easymock.tests.UsageTest.openCallCountByLastCall":287,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":297,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":112,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":256,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":132,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":276,"org.easymock.tests.UsageCallCountTest.tooFewCalls":362,"org.easymock.tests.UsageOverloadedMethodTest.overloading":270,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":323,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":13,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":356,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":20,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":170,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":212,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":279,"org.easymock.tests.UsageThrowableTest.throwCheckedException":332,"org.easymock.tests2.EasyMockSupportClassTest.testAll":23,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":62,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":303,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":2,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":115,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":243,"org.easymock.tests2.CaptureTest.testCaptureAll":138,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":320,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":21,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":19,"org.easymock.tests2.UsageConstraintsTest.testMatches":213,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":230,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":316,"org.easymock.samples.ExampleTest.voteForRemovals":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":172,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":246,"org.easymock.tests.UsageVarargTest.allKinds":347,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":348,"org.easymock.tests2.DependencyTest.testInterfaceMocking":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":308,"org.easymock.samples.BasicClassMockTest.testPrintContent":71,"org.easymock.samples.ExampleTest.addDocument":370,"org.easymock.tests2.DelegateToTest.testStubDelegate":203,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":334,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":233,"org.easymock.tests2.AnswerTest.stubAnswer":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":285,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":9,"org.easymock.tests2.UsageConstraintsTest.greaterThan":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":159,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":189,"org.easymock.tests.UsageVarargTest.varargLongAccepted":344,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":53,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":313,"org.easymock.samples.ExampleTest.voteForRemoval":86,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":136,"org.easymock.tests.UsageExpectAndReturnTest.floatType":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":44,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":68,"org.easymock.tests.UsageThrowableTest.noUpperLimit":329,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":215,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":222,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":205,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":64,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":265,"org.easymock.tests2.SerializationTest.test":240,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":253,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":98,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":330,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":349,"org.easymock.tests2.UsageConstraintsTest.testSame":208,"org.easymock.samples.SupportTest.addDocument":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":280,"org.easymock.tests2.CaptureTest.testCaptureFirst":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":254,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":229,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":108,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":352,"org.easymock.tests.GenericTest.testPackageScope":61,"org.easymock.tests2.CaptureTest.testCapture2_2446744":269,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":245,"org.easymock.tests2.UsageTest.moreThanOneArgument":134,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":41,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":346,"org.easymock.tests.GenericTest.testBridgedEquals":80,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":366,"org.easymock.tests.UsageExpectAndReturnTest.longType":350,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":305,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":251,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":154,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":217,"org.easymock.tests2.UsageStrictMockTest.differentMethods":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":117,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":120,"org.easymock.tests.UsageCallCountTest.tooManyCalls":367,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":301,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":191,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":361,"org.easymock.tests2.MockedExceptionTest.testRealException":250,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":294,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":3,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":333,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":325,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":18,"org.easymock.tests2.UsageConstraintsTest.testContains":211,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":33,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":54,"org.easymock.tests2.UsageConstraintsTest.testFind":206,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":142,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":125,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":47,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":310,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":131,"org.easymock.tests.UsageExpectAndReturnTest.object":355,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":183,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":49,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":34,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests2.UsageConstraintsTest.lessThan":15,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":259,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":341,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":157,"org.easymock.tests.UsageTest.exactCallCountByLastCall":289,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":319,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":126,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":252,"org.easymock.tests2.CaptureTest.testCaptureRightOne":186,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":194,"org.easymock.tests2.ConstraintsToStringTest.findToString":127,"org.easymock.tests2.UsageConstraintsTest.testOr":181,"org.easymock.tests.UsageRangeTest.combination":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":161,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":337,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":46,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":155,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":322,"org.easymock.tests.UsageTest.wrongArguments":105,"org.easymock.tests2.MockBuilderTest.testWithConstructor":166,"org.easymock.tests.MockClassControlTest.testHashCode":78,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":60,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":351,"org.easymock.tests2.EasyMockSupportTest.testVerify":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":357,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":0,"org.easymock.tests.UsageVarargTest.varargShortAccepted":343,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":321,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":99,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":177,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":365,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":241,"org.easymock.tests2.UsageConstraintsTest.cmpTo":210,"org.easymock.tests.UsageVarargTest.varargCharAccepted":340,"org.easymock.tests2.CompareToTest.testLessThan":16,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":234,"org.easymock.tests2.UsageTest.openCallCountByLastCall":226,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":227,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":83,"org.easymock.tests.DefaultClassInstantiatorTest.object":97,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":124,"org.easymock.tests2.CaptureTest.testCaptureFromStub":268,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":35,"org.easymock.tests.UsageTest.unexpectedCallWithArray":104,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":295,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":331,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":363,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":168,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":358,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":312,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":77,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":51,"org.easymock.tests2.UsageConstraintsTest.constraints":179,"org.easymock.samples.ExampleTest.addAndChangeDocument":89,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":145,"org.easymock.tests.CapturesMatcherTest.test":336,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":360,"org.easymock.tests.UsageStrictMockTest.testVerify":12,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":372,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":311,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":76,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":306,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":266,"org.easymock.tests2.UsageTest.resumeIfFailure":187,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":273,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":28,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":65,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":274,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":257}}]
