[{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[8,9,10],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[11,12],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[13,14,15,16,17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[20,21,22,23],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[26,27,28,29,30,5,31,32,33,34,35,36,6,37],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[38,39,40,41],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[43,44,45,46,47,26,27,28,48,29,49,50,31,32,33,34,51,35,36,6,52,37,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[54,55,56],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[57,58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[59,60],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[61,62,62,63,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,43,44,45,46,78,79,80,81,82,83,84,20,85,86,87,88,89,90,91,92,93,94,95,60,96,11,12,97,98,99,100,101,102,103,104,105,106,107,108,109,110,24,111,112,113,114,42,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,22,137,138,139,140,57,141,142,143,47,26,144,145,146,147,148,27,28,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,48,191,29,49,192,38,39,40,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,13,216,217,218,219,220,14,221,222,223,224,225,226,15,16,227,228,229,230,231,232,233,234,0,235,236,237,17,238,239,240,241,242,243,244,245,246,247,50,5,31,248,249,32,33,250,251,252,253,254,255,256,34,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,23,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,18,295,296,297,298,299,300,51,35,36,301,302,303,304,305,306,307,308,309,310,6,52,311,37,53,312,313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[77,314,315,316,317,318,319,320,321,322,323,324,38],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.LastControl:92","failures":[82,83,86,87,326,11,112,114,121],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[82,83,84,20,85,86,87,88,326,89,11,12,99,100,112,113,114,42,121,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:351","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[61,64,66,67,69,76,77,80,81,82,83,84,20,85,86,87,88,89,90,91,92,93,94,95,60,96,11,12,97,98,99,100,101,327,107,109,110,24,112,113,42,115,118,119,120,121,123,124,125,126,127,128,129,130,131,328,133,329,134,135,136,22,137,140,141,142,143,47,144,146,147,148,149,150,151,152,154,156,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,187,48,29,49,38,39,213,214,215,13,216,217,218,219,220,14,221,222,223,224,225,226,15,16,227,228,229,230,231,241,243,244,245,246,247,50,248,249,250,257,259,261,262,263,264,265,266,267,330,331,269,270,332,333,334,335,336,281,282,283,286,291,292,293,294,18,337,51,36,307,308,52,37,53,325,338,339],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[43,44,45,46,47,48,49,192,50,51,35,36,301,303,304,52,53,312],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[340],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[341,342],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[344],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[82,83,20,86,87,326,11,99,112,114,121],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[345,346],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[347,348,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[83,84],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[1,2,3,4,5,6],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[350,351,352,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[354],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[327,355,24,111,26,27,28,149,177,29,49,356,357,358,359,30,243,5,31,32,33,34,35,36,360,361,362,6,37,53],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[77,314],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[38,39,40,41],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":83,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":247,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":298,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":145,"org.easymock.tests2.StubTest.stubWithReturnValue":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":315,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":71,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":14,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":98,"org.easymock.tests2.SerializationTest.testAllMockedMethod":40,"org.easymock.tests2.DelegateToTest.testReturnException":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":296,"org.easymock.tests.MockingTest.testPartialClassMocking":229,"org.easymock.samples.SupportTest.voteForRemovals":76,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":2,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":343,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":345,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":25,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":41,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":193,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":182,"org.easymock.tests.UsageExpectAndThrowTest.object":203,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":12,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":319,"org.easymock.tests2.DelegateToTest.testWrongClass":157,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":307,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":308,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":282,"org.easymock.tests2.UsageTest.wrongArguments":26,"org.easymock.samples.ConstructorCalledMockTest.testTax":62,"org.easymock.tests.UsageStrictMockTest.range":37,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":289,"org.easymock.samples.ExampleTest.answerVsDelegate":65,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":175,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":161,"org.easymock.tests2.UsageConstraintsTest.testNull":20,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":204,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":128,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":109,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":177,"org.easymock.tests2.CaptureTest.testPrimitive":42,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":286,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":212,"org.easymock.tests.UsageTest.moreThanOneArgument":50,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":288,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":339,"org.easymock.tests2.CaptureTest.testCaptureNone":119,"org.easymock.tests.UsageUnorderedTest.message":34,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":356,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests.UsageVarargTest.varargByteAccepted":278,"org.easymock.tests2.ThreadingTest.testThreadSafe":134,"org.easymock.tests.UsageTest.argumentsOrdered":33,"org.easymock.tests.UsageVarargTest.varargIntAccepted":273,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":306,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":291,"org.easymock.tests2.CaptureTest.testCapture_2617107":114,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":285,"org.easymock.tests2.UsageConstraintsTest.any":89,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":108,"org.easymock.tests2.StubTest.stub":159,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":297,"org.easymock.tests.UsageExpectAndThrowTest.longType":196,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":55,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":0,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":191,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests.LimitationsTest.mockNativeMethod":281,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":154,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":330,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":228,"org.easymock.tests2.AnswerTest.answer":185,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":105,"org.easymock.tests2.CaptureTest.testAnd":112,"org.easymock.tests2.UsageTest.strictResetToDefault":143,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":132,"org.easymock.tests2.NameTest.nameForMocksControl":46,"org.easymock.tests2.MockedExceptionTest.testMockedException":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":17,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":172,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":249,"org.easymock.tests2.DelegateToTest.testDelegate":158,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":231,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":197,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":125,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":110,"org.easymock.tests.MockingTest.testNicePartialClassMocking":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":208,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":130,"org.easymock.tests2.CompareToTest.testNotComparable":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":318,"org.easymock.tests2.CaptureTest.testCaptureLast":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":299,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":242,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":87,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":256,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":97,"org.easymock.tests2.CaptureTest.testCapture1_2446744":115,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":213,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":9,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":103,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":100,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":8,"org.easymock.tests.UsageThrowableTest.throwError":259,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":234,"org.easymock.tests.UsageStrictMockTest.differentMethods":53,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":136,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":357,"org.easymock.tests2.MockBuilderTest.testCreateMockString":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":240,"org.easymock.tests.UsageExpectAndThrowTest.floatType":195,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":95,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":186,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":183,"org.easymock.samples.PartialClassMockTest.testGetArea":61,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":292,"org.easymock.samples.ExampleTest.voteAgainstRemoval":67,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":333,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":325,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":194,"org.easymock.tests2.UsageTest.niceToStrict":144,"org.easymock.tests2.ThreadingTest.testChangeDefault":10,"org.easymock.tests2.UsageConstraintsTest.testNotNull":99,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":266,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":138,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":107,"org.easymock.tests2.MockBuilderTest.testCreateMock":355,"org.easymock.tests2.UsageTest.defaultResetToNice":148,"org.easymock.samples.ExampleTest.voteAgainstRemovals":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":226,"org.easymock.tests2.CallbackTest.callback":153,"org.easymock.tests.UsageTest.openCallCountByLastCall":248,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":202,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":80,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":301,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":284,"org.easymock.tests.UsageCallCountTest.tooFewCalls":304,"org.easymock.tests.UsageOverloadedMethodTest.overloading":269,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":93,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":58,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":331,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":222,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":164,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":92,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":120,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":290,"org.easymock.tests.UsageThrowableTest.throwCheckedException":263,"org.easymock.tests2.EasyMockSupportClassTest.testAll":181,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":268,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":210,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":104,"org.easymock.tests2.CaptureTest.testCaptureAll":113,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":258,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":166,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":163,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":235,"org.easymock.tests2.UsageConstraintsTest.testMatches":94,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":165,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":239,"org.easymock.samples.ExampleTest.voteForRemovals":69,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":323,"org.easymock.tests2.NameTest.nameForNiceMock":45,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":137,"org.easymock.tests.UsageVarargTest.allKinds":23,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":51,"org.easymock.tests2.DependencyTest.testInterfaceMocking":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":255,"org.easymock.samples.BasicClassMockTest.testPrintContent":73,"org.easymock.samples.ExampleTest.addDocument":68,"org.easymock.tests2.DelegateToTest.testStubDelegate":156,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":265,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":189,"org.easymock.tests2.AnswerTest.stubAnswer":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":300,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":52,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":324,"org.easymock.tests2.UsageConstraintsTest.greaterThan":60,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":244,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":329,"org.easymock.tests.UsageVarargTest.varargLongAccepted":277,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":332,"org.easymock.samples.ExampleTest.voteForRemoval":66,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":227,"org.easymock.tests.UsageExpectAndReturnTest.floatType":215,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":349,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":77,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":63,"org.easymock.tests.UsageThrowableTest.noUpperLimit":260,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":96,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":251,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":81,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":142,"org.easymock.tests2.SerializationTest.test":39,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":116,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":170,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":261,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":214,"org.easymock.tests2.UsageConstraintsTest.testSame":85,"org.easymock.samples.SupportTest.addDocument":75,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":295,"org.easymock.tests2.CaptureTest.testCaptureFirst":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":171,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":150,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":219,"org.easymock.tests.GenericTest.testPackageScope":267,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":22,"org.easymock.tests2.UsageTest.moreThanOneArgument":47,"org.easymock.tests2.CaptureTest.testCapture2_2446744":123,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":24,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":279,"org.easymock.tests.GenericTest.testBridgedEquals":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":361,"org.easymock.tests2.NameTest.nameForMock":43,"org.easymock.tests.UsageExpectAndReturnTest.longType":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":252,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":168,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":223,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":211,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":21,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":209,"org.easymock.tests2.UsageStrictMockTest.differentMethods":49,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":237,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":216,"org.easymock.tests.UsageCallCountTest.tooManyCalls":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":207,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":56,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":246,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":303,"org.easymock.tests2.MockedExceptionTest.testRealException":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":220,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":198,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":283,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":264,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":236,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":162,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":302,"org.easymock.tests2.UsageConstraintsTest.testContains":91,"org.easymock.tests2.NameTest.nameForStrictMock":44,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":140,"org.easymock.tests2.UsageConstraintsTest.testFind":84,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":270,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":129,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":309,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":79,"org.easymock.tests.UsageExpectAndReturnTest.object":221,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":11,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":131,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":327,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":354,"org.easymock.tests2.UsageConstraintsTest.lessThan":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":320,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":275,"org.easymock.tests.UsageTest.exactCallCountByLastCall":250,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":322,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":169,"org.easymock.tests2.CaptureTest.testCaptureRightOne":121,"org.easymock.tests2.UsageConstraintsTest.testOr":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":314,"org.easymock.tests.UsageRangeTest.combination":243,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":271,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":15,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":126,"org.easymock.tests.UsageTest.wrongArguments":31,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":280,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":217,"org.easymock.tests2.EasyMockSupportTest.testVerify":180,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":224,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":54,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":352,"org.easymock.tests.UsageVarargTest.varargShortAccepted":276,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":360,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":102,"org.easymock.tests2.UsageConstraintsTest.cmpTo":90,"org.easymock.tests.UsageVarargTest.varargCharAccepted":274,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":336,"org.easymock.tests2.UsageTest.openCallCountByLastCall":146,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":147,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":179,"org.easymock.tests2.CaptureTest.testCaptureFromStub":122,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":232,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":30,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":262,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":305,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":346,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":344,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":225,"org.easymock.tests2.CaptureTest.testCapture":341,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":328,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":311,"org.easymock.tests2.UsageConstraintsTest.constraints":82,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":199,"org.easymock.samples.ExampleTest.addAndChangeDocument":70,"org.easymock.tests.CapturesMatcherTest.test":342,"org.easymock.tests.UsageStrictMockTest.testVerify":313,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":16,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":74,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":184,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":253,"org.easymock.tests2.CompareToTest.testGreateThan":59,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":117,"org.easymock.tests2.UsageTest.resumeIfFailure":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":293,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":218,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":294,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":174,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":347}}]
