[{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[29,30,31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[49,50,51,52],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[3,53,54,13,23,24,25],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[68],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[2,69,70,71,72,73,74,75,76,77,78,79,80,50,81,82,83,84,85,51,86,87,88,89,90,91,92,93,94,95,96,52,55,97,56,57,58,59,60,61,98,62,64,65,99,66,100,101,102,103,104,105,41,106,12,107,108,47,109,110,111,25,112,113,114,48],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[3,115,13,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    this.java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[117,118,119],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[120,121,122,123,124,125,126,127,128,129,130,131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[2,69,70,71,72,73,74,75,76,77,78,79,80,50,81,82,83,84,85,51,86,87,88,89,90,91,92,93,94,95,96,52,132,55,97,56,57,58,59,60,61,98,62,64,65,99,66,100,101,102,103,104,105,41,106,12,107,108,47,109,110,111,25,112,113,114,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[87,133,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[85,106,111],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[135,136,67,137,138,139,2,140,3,4,141,117,118,119,142,143,144,145,69,146,147,148,149,150,70,71,151,152,153,154,155,72,73,74,75,76,77,78,79,80,50,82,83,84,85,51,86,87,88,89,90,91,92,93,94,95,96,52,156,157,158,159,160,161,162,163,164,55,97,56,57,58,59,60,61,98,62,64,65,99,66,165,166,167,168,169,170,171,172,173,174,175,176,177,178,32,33,34,35,179,180,181,182,183,184,185,186,187,0,5,188,68,133,189,190,191,192,115,193,194,195,196,197,198,199,200,201,202,203,36,204,205,206,207,134,208,209,100,210,211,212,213,214,215,216,217,218,218,219,219,220,221,222,223,224,225,226,227,228,229,230,231,232,101,102,103,104,105,37,38,39,40,41,42,233,234,235,236,237,106,12,238,13,14,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,15,265,266,17,18,107,108,47,109,110,22,23,24,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,111,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,25,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,26,333,334,335,336,337,116,338,28,112,113,339,340,341,342,343,344,345,346,114,48,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[367,368,259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[369,370,371,372,373,374,375,376],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[7,106],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[87,133,134],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[377,378,379,49,380],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[260],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[159,209],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[145,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[277,383,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:120","sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[384,385],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result","candidateMethods":"candidateMethods"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[179,181,386,182,224,387,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[43,261,44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":75,"org.easymock.tests2.UsageTest.argumentsOrdered":115,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":332,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":176,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":133,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":217,"org.easymock.tests2.DelegateToTest.testReturnException":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":38,"org.easymock.tests.MockingTest.testPartialClassMocking":347,"org.easymock.tests.MockClassControlTest.testToString":361,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":312,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":215,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":50,"org.easymock.tests2.UsageTest.wrongArguments":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":107,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":125,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":243,"org.easymock.samples.ExampleTest.answerVsDelegate":224,"org.easymock.tests2.UsageConstraintsTest.testNull":77,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":207,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":175,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":366,"org.easymock.tests2.CaptureTest.testPrimitive":57,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":110,"org.easymock.tests.UsageTest.moreThanOneArgument":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":331,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":269,"org.easymock.tests.UsageTest.argumentsOrdered":116,"org.easymock.tests.UsageVarargTest.varargIntAccepted":281,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":11,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":101,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":156,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":30,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":105,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":142,"org.easymock.tests.ReplayStateInvalidUsageTest.times":259,"org.easymock.tests2.AnswerTest.answer":135,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":81,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":186,"org.easymock.tests2.CaptureTest.testAnd":55,"org.easymock.tests2.UsageTest.strictResetToDefault":0,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":170,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":248,"org.easymock.tests2.DelegateToTest.testDelegate":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":276,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":27,"org.easymock.tests2.CaptureTest.testCapture1_2446744":58,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":184,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":253,"org.easymock.tests.UsageThrowableTest.throwError":339,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":271,"org.easymock.samples.PartialClassMockTest.testGetArea":216,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":254,"org.easymock.tests2.CompareToTest.testLessOrEqual":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":102,"org.easymock.tests2.UsageTest.niceToStrict":68,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":313,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":374,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":158,"org.easymock.tests2.MockBuilderTest.testCreateMock":162,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":124,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":7,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":321,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":171,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":241,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":371,"org.easymock.tests.UsageOverloadedMethodTest.overloading":234,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":51,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":266,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":303,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":85,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":62,"org.easymock.tests2.EasyMockSupportClassTest.testAll":147,"org.easymock.tests.MockClassControlTest.testEquals":365,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":185,"org.easymock.tests2.CaptureTest.testCaptureAll":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":274,"org.easymock.tests2.UsageConstraintsTest.testMatches":86,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":270,"org.easymock.samples.ExampleTest.voteForRemovals":228,"org.easymock.tests.UsageVarargTest.allKinds":111,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":22,"org.easymock.samples.BasicClassMockTest.testPrintContent":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":275,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":345,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":386,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":42,"org.easymock.tests2.UsageConstraintsTest.greaterThan":88,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":213,"org.easymock.samples.ExampleTest.voteForRemoval":225,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":144,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":382,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":31,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":209,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":168,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":37,"org.easymock.tests2.CaptureTest.testCaptureFirst":66,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":169,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":299,"org.easymock.tests2.CaptureTest.testCapture2_2446744":99,"org.easymock.tests2.UsageTest.moreThanOneArgument":5,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":69,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":163,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":288,"org.easymock.tests.GenericTest.testBridgedEquals":381,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":372,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":357,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":369,"org.easymock.tests.UsageExpectAndReturnTest.longType":295,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":330,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":93,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":328,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":267,"org.easymock.tests.UsageCallCountTest.tooManyCalls":358,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":300,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":344,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":197,"org.easymock.tests2.UsageConstraintsTest.testContains":84,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":351,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":34,"org.easymock.tests2.UsageConstraintsTest.testFind":76,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":235,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":71,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":236,"org.easymock.tests.UsageExpectAndReturnTest.object":302,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":174,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":283,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":291,"org.easymock.tests.UsageTest.exactCallCountByLastCall":338,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":373,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":114,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":279,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":265,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":126,"org.easymock.tests.MockClassControlTest.testHashCode":364,"org.easymock.tests2.EasyMockSupportTest.testVerify":178,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":183,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":132,"org.easymock.tests.UsageVarargTest.varargCharAccepted":282,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests2.UsageTest.openCallCountByLastCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":177,"org.easymock.tests.DefaultClassInstantiatorTest.object":250,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":375,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":289,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":21,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":319,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":342,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":384,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":211,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":363,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":318,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":150,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":9,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":362,"org.easymock.tests2.UsageTest.resumeIfFailure":193,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":40,"org.easymock.tests2.StubTest.stubWithReturnValue":36,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":301,"org.easymock.tests2.SerializationTest.testAllMockedMethod":119,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":368,"org.easymock.samples.SupportTest.voteForRemovals":221,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":324,"org.easymock.tests.UsageExpectAndThrowTest.object":322,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":91,"org.easymock.tests2.DelegateToTest.testWrongClass":181,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":112,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":113,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.samples.ConstructorCalledMockTest.testTax":218,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":173,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":196,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":323,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":160,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":261,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":242,"org.easymock.tests2.CaptureTest.testCaptureNone":98,"org.easymock.tests.UsageUnorderedTest.message":25,"org.easymock.tests.UsageVerifyTest.twoReturns":24,"org.easymock.tests.UsageVarargTest.varargByteAccepted":287,"org.easymock.tests2.ThreadingTest.testThreadSafe":143,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":355,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":231,"org.easymock.tests2.CaptureTest.testCapture_2617107":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":109,"org.easymock.tests2.UsageConstraintsTest.any":82,"org.easymock.tests2.StubTest.stub":203,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":258,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":39,"org.easymock.tests.UsageExpectAndThrowTest.longType":315,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":257,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":140,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":165,"org.easymock.tests2.SerializationTest.testClass":117,"org.easymock.tests.LimitationsTest.mockNativeMethod":263,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":311,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":383,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":121,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":141,"org.easymock.tests2.NameTest.nameForMocksControl":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":122,"org.easymock.tests2.MockedExceptionTest.testMockedException":33,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":336,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":316,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":349,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":204,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":161,"org.easymock.tests.MockingTest.testNicePartialClassMocking":348,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":208,"org.easymock.tests2.CaptureTest.testCaptureLast":61,"org.easymock.tests2.CompareToTest.testCompareEqual":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":28,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":80,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":202,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":320,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":192,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.samples.ExampleTest.removeNonExistingDocument":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":123,"org.easymock.tests.UsageStrictMockTest.differentMethods":14,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":255,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":127,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":145,"org.easymock.tests2.ConstraintsToStringTest.andToString":10,"org.easymock.tests2.MockBuilderTest.testCreateMockString":164,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":359,"org.easymock.tests.UsageExpectAndThrowTest.floatType":314,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":87,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":136,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":149,"org.easymock.samples.ExampleTest.voteAgainstRemoval":226,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":212,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":346,"org.easymock.tests2.UsageTest.defaultResetToNice":191,"org.easymock.samples.ExampleTest.voteAgainstRemovals":223,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":367,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":120,"org.easymock.tests.UsageVarargTest.differentLength":284,"org.easymock.tests2.CallbackTest.callback":151,"org.easymock.tests.UsageTest.openCallCountByLastCall":335,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":47,"org.easymock.tests.UsageCallCountTest.tooFewCalls":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":199,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":244,"org.easymock.tests.UsageThrowableTest.throwCheckedException":343,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":19,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":48,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":201,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":198,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":260,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":200,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":137,"org.easymock.tests2.CompareToTest.testGreateOrEqual":49,"org.easymock.tests.ObjectMethodsTest.testHashCode":290,"org.easymock.tests2.NameTest.nameForNiceMock":154,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":146,"org.easymock.tests2.DependencyTest.testInterfaceMocking":214,"org.easymock.samples.ExampleTest.addDocument":227,"org.easymock.tests2.DelegateToTest.testStubDelegate":180,"org.easymock.tests2.AnswerTest.stubAnswer":67,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests.UsageVarargTest.varargLongAccepted":286,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":239,"org.easymock.tests.UsageExpectAndReturnTest.floatType":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":195,"org.easymock.tests2.ConstraintsToStringTest.orToString":6,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":219,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":16,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":89,"org.easymock.tests.UsageThrowableTest.noUpperLimit":340,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":73,"org.easymock.tests2.SerializationTest.test":118,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":59,"org.easymock.tests2.UsageConstraintsTest.testSame":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":293,"org.easymock.samples.SupportTest.addDocument":220,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":256,"org.easymock.tests.GenericTest.testPackageScope":277,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":130,"org.easymock.tests2.NameTest.nameForMock":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":304,"org.easymock.tests2.UsageStrictMockTest.differentMethods":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":326,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":249,"org.easymock.tests2.MockedExceptionTest.testRealException":35,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":20,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":108,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":262,"org.easymock.tests2.NameTest.nameForStrictMock":153,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":376,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":134,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":53,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":157,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":52,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":128,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":167,"org.easymock.tests2.CaptureTest.testCaptureRightOne":64,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":205,"org.easymock.tests.UsageTest.wrongArguments":334,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":305,"org.easymock.tests.UsageVarargTest.varargShortAccepted":285,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":356,"org.easymock.tests2.UsageConstraintsTest.cmpTo":83,"org.easymock.tests2.CompareToTest.testLessThan":377,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":190,"org.easymock.tests2.CaptureTest.testCaptureFromStub":65,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":252,"org.easymock.tests.UsageTest.unexpectedCallWithArray":333,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":106,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":354,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":306,"org.easymock.tests2.CaptureTest.testCapture":63,"org.easymock.tests2.UsageConstraintsTest.constraints":74,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":238,"org.easymock.samples.ExampleTest.addAndChangeDocument":230,"org.easymock.tests2.ConstraintsToStringTest.notToString":8,"org.easymock.tests.UsageStrictMockTest.testVerify":240,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":222,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":273,"org.easymock.tests2.CompareToTest.testGreateThan":378,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":103,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":104,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":17,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":172,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":54,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":280}}]
