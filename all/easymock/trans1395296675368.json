[{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[8,9,10,11,12,13],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[14,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[25,26,27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[29,30,31],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[32,33,0,34,35,36,37,38,39,40,41,42,43,44,45,46,46,47,47,48,49,50,51,25,26,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,1,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,14,15,148,149,16,150,17,18,151,19,152,153,154,155,156,157,158,159,160,20,161,162,163,164,21,165,166,167,168,169,170,2,171,3,172,173,174,175,176,177,22,178,23,179,180,181,182,183,184,185,24,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,4,205,206,5,207,6,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,10,298,299,300,301,302,303,304,305,11,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,7,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[32,33,0,34,35,36,37,39,40,43,44,48,49,50,51,57,58,64,65,70,78,79,85,86,87,88,89,90,91,93,94,95,96,1,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,141,142,143,144,145,146,147,14,15,149,16,150,17,18,151,19,152,153,154,155,156,157,158,159,160,20,161,162,163,164,21,165,166,167,168,169,170,2,3,172,173,174,175,176,177,22,178,23,179,180,181,182,183,184,185,24,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,4,205,206,5,207,6,222,236,237,238,239,240,241,242,243,244,245,246,247,248,249,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,288,294,296,297,10,298,299,300,301,302,303,304,305,11,306,307,308,309,310,311,316,317,318,319,320,321,323,324,325,326,327,7,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,431,439,441,442,443,444,445,446,447,457,459,460,461,462,463,464,465,466,474,475],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[477],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[14,15,17,18,19,20,22,23,24],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[202,203,204,478],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[89,100,106,107,268,270,271,10,300,11,306,309,310,479,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[32,33,0,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,25,57,64,65,66,67,68,69,70,71,72,78,85,86,87,88,89,90,91,93,94,95,96,1,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,119,122,132,138,141,142,143,144,145,146,147,14,15,149,16,150,17,18,151,152,153,154,155,156,157,158,159,160,20,161,162,163,164,21,165,166,2,3,173,174,175,177,22,178,23,179,180,181,182,183,184,185,24,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,4,5,207,6,208,209,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,230,231,232,233,236,237,238,239,240,241,242,243,245,246,251,252,261,262,263,264,265,266,267,268,269,270,271,296,297,10,298,299,300,301,302,304,305,11,306,307,308,309,310,311,314,316,317,318,319,320,321,322,7,342,343,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,382,383,384,385,386,388,389,390,391,392,393,394,395,397,398,399,400,401,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,432,433,435,441,442,443,444,445,446,447,459,460,461,462,463],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[480],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[250],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[155],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[289,336],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[26,481,482,483,484,485,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[486,156,162,166],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[0,2,3,173,174,175,177,22,178,23,179,180,181,182,183,184,185,24,186,187,188,4,5,207,487,342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[46,46,47,47,87,111,146,147,149,16,150,17,154,156,157,159,160,21,165,166,186,266,267,298,347,348,351,352,353,354,355,356,382,459,460,461,462,463],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[41,42,45,46,46,47,47,50,25,66,67,68,69,71,72,119,122,132,138,202,204,488,208,489,209,210,212,213,214,215,217,218,490,219,220,221,223,224,225,226,227,230,231,232,233,251,252,253,255,258,314,322,431,432,433,435,449],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[282],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[491,146,14,159,164],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[480,151,156,166],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[275,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:99","failures":[33,34,35,37,44,45,50,25,57,64,65,66,67,68,69,70,71,72,78,87,89,90,97,98,99,101,103,104,105,108,109,111,119,122,132,138,141,142,143,144,145,146,147,14,15,149,16,150,17,18,151,152,153,154,155,156,157,158,159,160,20,161,162,164,21,165,166,174,22,178,179,180,183,184,185,24,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,203,207,209,212,214,215,218,220,221,222,223,224,225,227,231,232,233,236,237,238,243,244,245,246,251,253,266,267,269,271,298,300,301,304,305,307,308,311,314,345,347,348,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,382,397,399,400,401,402,403,404,432,433,435],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[89,100,106,107,268,270,271,10,300,11,306,309,310,479,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[282],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[18,151,22,178,23,179,24,186],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"failures":[15,18,20],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[8,9,10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[202,203,204,478],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[89,100,106,107,268,270,271,10,300,11,306,309,310,479,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,173,175,177,342],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[250,251,252,253,254],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[494,146,159,161],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":15,"org.easymock.tests2.UsageTest.argumentsOrdered":107,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":304,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":282,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":102,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":32,"org.easymock.tests2.DelegateToTest.testReturnException":173,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":317,"org.easymock.tests.MockingTest.testPartialClassMocking":432,"org.easymock.tests.MockClassControlTest.testToString":450,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":457,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":126,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":406,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":122,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":481,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":151,"org.easymock.tests2.UsageTest.wrongArguments":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":347,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":241,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":258,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":437,"org.easymock.tests2.UsageConstraintsTest.testNull":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":223,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":455,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":198,"org.easymock.tests2.CaptureTest.testPrimitive":179,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":351,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":425,"org.easymock.tests.UsageTest.moreThanOneArgument":305,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":461,"org.easymock.tests.UsageTest.argumentsOrdered":310,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":377,"org.easymock.tests.UsageVarargTest.varargIntAccepted":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":352,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":485,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":208,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":83,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":356,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":57,"org.easymock.tests.ReplayStateInvalidUsageTest.times":337,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":493,"org.easymock.tests2.AnswerTest.answer":4,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":96,"org.easymock.tests2.CaptureTest.testAnd":22,"org.easymock.tests2.UsageTest.strictResetToDefault":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":193,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":245,"org.easymock.tests2.DelegateToTest.testDelegate":177,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":381,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":421,"org.easymock.tests.LimitationsTest.mockFinalMethod":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":265,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":474,"org.easymock.tests2.CaptureTest.testCapture1_2446744":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":419,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":94,"org.easymock.tests.UsageThrowableTest.throwError":397,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":331,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":257,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":140,"org.easymock.samples.PartialClassMockTest.testGetArea":45,"org.easymock.tests.MockingTest.testInterfaceMocking":434,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":332,"org.easymock.tests2.CompareToTest.testLessOrEqual":491,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":353,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":427,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":127,"org.easymock.tests2.UsageTest.niceToStrict":101,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":272,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":212,"org.easymock.tests2.MockBuilderTest.testCreateMock":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":135,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":60,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":415,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":8,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":194,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":249,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":439,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":239,"org.easymock.tests.UsageOverloadedMethodTest.overloading":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":131,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":156,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":343,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":368,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":155,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":185,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":387,"org.easymock.tests.MockClassControlTest.testEquals":454,"org.easymock.tests2.EasyMockSupportClassTest.testAll":119,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":252,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":423,"org.easymock.tests2.CaptureTest.testCaptureAll":178,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":263,"org.easymock.tests.MockNameTest.defaultName":396,"org.easymock.tests2.UsageConstraintsTest.testMatches":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":462,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":329,"org.easymock.samples.ExampleTest.voteForRemovals":37,"org.easymock.tests.UsageVarargTest.allKinds":395,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":269,"org.easymock.samples.BasicClassMockTest.testPrintContent":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":264,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":403,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":85,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":321,"org.easymock.tests2.UsageConstraintsTest.greaterThan":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":244,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":233,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":473,"org.easymock.samples.ExampleTest.voteForRemoval":34,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":142,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":234,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":259,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":226,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":322,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":191,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":316,"org.easymock.tests2.CaptureTest.testCaptureFirst":188,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":192,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":109,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":364,"org.easymock.tests2.CaptureTest.testCapture2_2446744":187,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":144,"org.easymock.tests2.UsageTest.moreThanOneArgument":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":290,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":394,"org.easymock.tests.GenericTest.testBridgedEquals":254,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":446,"org.easymock.tests.UsageExpectAndReturnTest.longType":360,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":261,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":490,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":424,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":405,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":163,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":422,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":465,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":459,"org.easymock.tests.UsageCallCountTest.tooManyCalls":447,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":365,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":411,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":402,"org.easymock.tests.MockingTest.testNiceClassMocking":438,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":67,"org.easymock.tests.MockingTest.testClassMocking":430,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":489,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":440,"org.easymock.tests2.UsageConstraintsTest.testContains":154,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":149,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":238,"org.easymock.tests.MockTypeTest.fromEasyMockClass":256,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":3,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":296,"org.easymock.tests.UsageExpectAndReturnTest.object":367,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":61,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":482,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":389,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":326,"org.easymock.tests.UsageTest.exactCallCountByLastCall":311,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":277,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":456,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":378,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":26,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":384,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":373,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":342,"org.easymock.tests.MockClassControlTest.testHashCode":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":74,"org.easymock.tests2.EasyMockSupportTest.testVerify":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":129,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":379,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":7,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":93,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":92,"org.easymock.tests.UsageVarargTest.varargCharAccepted":388,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":295,"org.easymock.tests2.UsageTest.openCallCountByLastCall":103,"org.easymock.tests.DefaultClassInstantiatorTest.object":467,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":29,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":200,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":247,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":324,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":479,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":130,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":400,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":55,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":73,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":452,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":231,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":412,"org.easymock.tests.CapturesMatcherTest.test":487,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":374,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":464,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":138,"org.easymock.tests2.UsageTest.resumeIfFailure":108,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":319,"org.easymock.tests2.StubTest.stubWithReturnValue":111,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":27,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":366,"org.easymock.tests2.SerializationTest.testAllMockedMethod":204,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":288,"org.easymock.samples.SupportTest.voteForRemovals":44,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":9,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":250,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":418,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":478,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":294,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":205,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":458,"org.easymock.tests.UsageExpectAndThrowTest.object":416,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":161,"org.easymock.tests2.DelegateToTest.testWrongClass":175,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":266,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":267,"org.easymock.samples.ConstructorCalledMockTest.testTax":46,"org.easymock.tests.UsageStrictMockTest.range":300,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":114,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":417,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":116,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":309,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":428,"org.easymock.tests2.CaptureTest.testCaptureNone":184,"org.easymock.tests.UsageUnorderedTest.message":268,"org.easymock.tests.UsageVerifyTest.twoReturns":271,"org.easymock.tests.UsageVarargTest.varargByteAccepted":393,"org.easymock.tests2.ThreadingTest.testThreadSafe":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":133,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":444,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":41,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":327,"org.easymock.tests2.CaptureTest.testCapture_2617107":23,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":292,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":350,"org.easymock.tests2.UsageConstraintsTest.any":152,"org.easymock.tests2.StubTest.stub":110,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":336,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":466,"org.easymock.tests.UsageExpectAndThrowTest.longType":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":318,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":471,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":335,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":88,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":78,"org.easymock.tests2.SerializationTest.testClass":202,"org.easymock.tests.LimitationsTest.mockNativeMethod":314,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":376,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":54,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":91,"org.easymock.tests2.NameTest.nameForMocksControl":170,"org.easymock.tests2.MockedExceptionTest.testMockedException":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":121,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":308,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":435,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":410,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":171,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":220,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":215,"org.easymock.tests.MockingTest.testNicePartialClassMocking":433,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":225,"org.easymock.tests2.CaptureTest.testCaptureLast":183,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":52,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":475,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":72,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":162,"org.easymock.tests.MockingTest.testTwoMocks":431,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":492,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":357,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":414,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":106,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":165,"org.easymock.samples.ExampleTest.removeNonExistingDocument":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":59,"org.easymock.tests.UsageStrictMockTest.differentMethods":301,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":75,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":469,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":143,"org.easymock.tests2.MockBuilderTest.testCreateMockString":219,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":448,"org.easymock.tests.UsageExpectAndThrowTest.floatType":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":123,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":118,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":5,"org.easymock.tests.UsageVerifyTest.twoThrows":270,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":132,"org.easymock.samples.ExampleTest.voteAgainstRemoval":35,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":283,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":232,"org.easymock.tests.LimitationsTest.privateConstructor":313,"org.easymock.tests2.UsageConstraintsTest.testNotNull":21,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":404,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":48,"org.easymock.tests2.UsageTest.defaultResetToNice":105,"org.easymock.samples.ExampleTest.voteAgainstRemovals":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":284,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":372,"org.easymock.tests.UsageVarargTest.differentLength":390,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":53,"org.easymock.tests2.CallbackTest.callback":1,"org.easymock.tests2.UsageConstraintsTest.equals":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":228,"org.easymock.tests.UsageTest.openCallCountByLastCall":307,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":349,"org.easymock.tests.UsageCallCountTest.tooFewCalls":442,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":242,"org.easymock.tests.UsageThrowableTest.throwCheckedException":401,"org.easymock.tests.MockingTest.testStrictClassMocking":429,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":13,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":383,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":58,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":68,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":338,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":70,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":6,"org.easymock.tests2.CompareToTest.testGreateOrEqual":480,"org.easymock.tests.ObjectMethodsTest.testHashCode":325,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":484,"org.easymock.tests2.NameTest.nameForNiceMock":169,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":145,"org.easymock.tests2.DependencyTest.testInterfaceMocking":64,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":483,"org.easymock.samples.ExampleTest.addDocument":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":134,"org.easymock.tests2.DelegateToTest.testStubDelegate":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":139,"org.easymock.tests2.AnswerTest.stubAnswer":207,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":298,"org.easymock.tests.UsageVarargTest.varargLongAccepted":392,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":281,"org.easymock.tests.UsageExpectAndReturnTest.floatType":359,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":375,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":25,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":47,"org.easymock.tests.UsageThrowableTest.noUpperLimit":398,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":160,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":82,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":344,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":147,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":112,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":181,"org.easymock.tests2.SerializationTest.test":203,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":477,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":468,"org.easymock.tests2.UsageConstraintsTest.testSame":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":358,"org.easymock.samples.SupportTest.addDocument":43,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":124,"org.easymock.tests.GenericTest.testPackageScope":251,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":81,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":436,"org.easymock.tests2.NameTest.nameForMock":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":369,"org.easymock.tests2.UsageStrictMockTest.differentMethods":90,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":361,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":420,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":323,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":246,"org.easymock.tests2.MockedExceptionTest.testRealException":51,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":260,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":286,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":28,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":285,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":340,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":348,"org.easymock.tests2.NameTest.nameForStrictMock":168,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":30,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":224,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":113,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":470,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":20,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":209,"org.easymock.tests2.UsageStrictMockTest.range":89,"org.easymock.tests2.UsageConstraintsTest.lessThan":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":77,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":128,"org.easymock.tests2.CaptureTest.testCaptureRightOne":24,"org.easymock.tests2.UsageConstraintsTest.testOr":17,"org.easymock.tests.UsageRangeTest.combination":243,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":221,"org.easymock.tests.UsageTest.wrongArguments":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":125,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":370,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":472,"org.easymock.tests.UsageVarargTest.varargShortAccepted":391,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":445,"org.easymock.tests2.UsageConstraintsTest.cmpTo":153,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":206,"org.easymock.tests2.CompareToTest.testLessThan":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":275,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":104,"org.easymock.tests2.CaptureTest.testCaptureFromStub":186,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":330,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":210,"org.easymock.tests.UsageTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":443,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":371,"org.easymock.tests2.UsageConstraintsTest.constraints":14,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":299,"org.easymock.samples.ExampleTest.addAndChangeDocument":39,"org.easymock.tests.UsageStrictMockTest.testVerify":303,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":40,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":297,"org.easymock.tests2.CompareToTest.testGreateThan":494,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":262,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":182,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":488,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":354,"org.easymock.tests.LimitationsTest.abstractClass":312,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":363,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":355,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":195}}]
