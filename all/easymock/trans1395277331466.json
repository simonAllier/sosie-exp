[{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[6,6,7,7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[8,9,10,11,0,12,13,14,15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[18,19,20,21],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[22,23,24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,1,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,22,23,64,65,66,8,67,68,69,10,70,71,72,73,74,75,76,77,78,2,79,80,81,82,83,84,85,0,12,13,14,17,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[194],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[72,73],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[196],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[197],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[1,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[198],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.LastControl:92","failures":[8,9,10,11,0,12,13,14,15,16,17],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"message"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[199,200],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[201,4,202,203],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[204,205,206],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:557","failures":[207,27,28,29,30,32,33,6,6,7,7,37,208,38,209,210,1,211,212,213,39,214,40,215,41,42,43,216,217,218,219,220,221,45,47,48,50,222,223,51,52,224,53,54,55,56,57,58,59,225,60,61,62,63,22,23,64,65,66,8,67,226,227,68,69,228,10,229,230,70,71,72,73,231,74,232,233,234,235,236,237,238,75,76,77,78,79,80,239,81,82,83,84,85,201,240,11,0,241,12,242,13,14,243,244,245,246,196,18,247,3,4,248,16,249,19,202,17,250,20,251,86,87,88,252,89,253,254,255,256,257,258,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,259,260,195,261,120,262,122,124,125,263,264,265,266,200,267,127,128,129,130,131,132,133,134,268,135,136,137,138,139,269,270,271,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,272,273,274,275,276,277,160,161,162,278,279,280,281,282,283,284,285,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,286,183,184,185,186,187,188,189,190,191,192,193,287,288,289,290,291,292],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[8,67,9,226,10,229,11,0,241,12,242,13,14,243,15,244,16,249,17,250],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[69,293,10,70],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[45,47,48,294,295,296,297,77,298,299,300,301,122,124,125,160,161,162,302,303,304,187,305,306,307,191],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[308,309,310,311],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[204,205,206],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[65,114,118,127,130,131,132,133,134,269,270,271,312,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,185],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[25,26,207,27,28,29,30,31,32,33,34,35,36,37,208,38,209,210,1,211,212,39,40,41,42,43,219,221,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,313,22,23,24,66,8,67,9,226,314,315,68,69,228,10,70,231,74,232,233,234,235,236,237,238,75,76,298,78,2,299,300,82,83,84,85,0,12,14,243,244,245,196,3,16,249,19,316,202,17,86,88,89,255,256,257,258,90,91,92,93,94,95,96,97,98,99,105,106,107,108,116,117,118,259,260,119,317,318,319,320,321,121,301,122,123,124,125,126,266,200,267,127,128,129,130,131,132,133,134,142,143,145,150,155,272,161,162,165,166,168,173,178,286,183,184,305,306,307,190,191,289],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[8,9,10,11,0,12,13,14,15,16,17],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[6,7,322,323,324,325,326,327,328,329,330,331,221,332,22],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[333],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":0,"org.easymock.tests2.UsageTest.argumentsOrdered":300,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":113,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":2,"org.easymock.tests2.StubTest.stubWithReturnValue":65,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":325,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":202,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":149,"org.easymock.tests2.SerializationTest.testAllMockedMethod":24,"org.easymock.tests2.DelegateToTest.testReturnException":86,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":111,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":331,"org.easymock.tests.MockingTest.testPartialClassMocking":266,"org.easymock.samples.SupportTest.voteForRemovals":37,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":291,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":175,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":277,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":163,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":222,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":292,"org.easymock.tests.UsageExpectAndThrowTest.object":173,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":302,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":249,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":84,"org.easymock.tests2.DelegateToTest.testWrongClass":88,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":192,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":193,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":243,"org.easymock.tests2.UsageTest.wrongArguments":298,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":105,"org.easymock.samples.ConstructorCalledMockTest.testTax":6,"org.easymock.tests.UsageStrictMockTest.range":124,"org.easymock.samples.ExampleTest.answerVsDelegate":28,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":232,"org.easymock.tests2.UsageConstraintsTest.testNull":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":174,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":42,"org.easymock.tests2.CaptureTest.testPrimitive":226,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":109,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":306,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":182,"org.easymock.tests.UsageTest.moreThanOneArgument":187,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":137,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":265,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.UsageUnorderedTest.message":191,"org.easymock.tests.UsageVerifyTest.twoReturns":162,"org.easymock.tests.UsageVarargTest.varargByteAccepted":97,"org.easymock.tests2.ThreadingTest.testThreadSafe":71,"org.easymock.tests.UsageTest.argumentsOrdered":307,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":281,"org.easymock.tests.UsageVarargTest.varargIntAccepted":92,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":319,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":25,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":100,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":108,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":311,"org.easymock.tests2.UsageConstraintsTest.any":244,"org.easymock.tests2.StubTest.stub":64,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":112,"org.easymock.tests.UsageExpectAndThrowTest.longType":166,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":46,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":40,"org.easymock.tests.LimitationsTest.mockNativeMethod":289,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":85,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":195,"org.easymock.tests2.AnswerTest.answer":50,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":159,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":15,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":199,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":49,"org.easymock.tests2.NameTest.nameForMocksControl":297,"org.easymock.tests2.MockedExceptionTest.testMockedException":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":136,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":57,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":285,"org.easymock.tests2.DelegateToTest.testDelegate":89,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":267,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":167,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":208,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":43,"org.easymock.tests.MockingTest.testNicePartialClassMocking":200,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":178,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":211,"org.easymock.tests2.CaptureTest.testCaptureLast":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":114,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":268,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":238,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":14,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":19,"org.easymock.tests2.CaptureTest.testCapture1_2446744":227,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":171,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":299,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":250,"org.easymock.tests.UsageThrowableTest.throwError":127,"org.easymock.tests.UsageStrictMockTest.differentMethods":125,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":139,"org.easymock.tests.UsageExpectAndThrowTest.floatType":165,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":3,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":51,"org.easymock.tests.UsageVerifyTest.twoThrows":161,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":257,"org.easymock.samples.PartialClassMockTest.testGetArea":207,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":194,"org.easymock.tests2.CompareToTest.testLessOrEqual":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":101,"org.easymock.samples.ExampleTest.voteAgainstRemoval":30,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":264,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":263,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":39,"org.easymock.tests2.UsageTest.niceToStrict":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":164,"org.easymock.tests2.UsageConstraintsTest.testNotNull":17,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":217,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":134,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":206,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":41,"org.easymock.tests2.UsageTest.defaultResetToNice":239,"org.easymock.samples.ExampleTest.voteAgainstRemovals":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":155,"org.easymock.tests2.CallbackTest.callback":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":322,"org.easymock.tests.UsageTest.openCallCountByLastCall":188,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":172,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":58,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":201,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":107,"org.easymock.tests.UsageCallCountTest.tooFewCalls":317,"org.easymock.tests.UsageOverloadedMethodTest.overloading":184,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":18,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":151,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":183,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":196,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":228,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":197,"org.easymock.tests.UsageThrowableTest.throwCheckedException":131,"org.easymock.tests2.EasyMockSupportClassTest.testAll":255,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":119,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":180,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":333,"org.easymock.tests2.CaptureTest.testCaptureAll":67,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":262,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":237,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":234,"org.easymock.tests2.UsageConstraintsTest.testMatches":247,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":236,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":138,"org.easymock.samples.ExampleTest.voteForRemovals":32,"org.easymock.tests2.NameTest.nameForNiceMock":296,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":74,"org.easymock.tests.UsageVarargTest.allKinds":99,"org.easymock.tests2.DependencyTest.testInterfaceMocking":83,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":160,"org.easymock.samples.BasicClassMockTest.testPrintContent":26,"org.easymock.samples.ExampleTest.addDocument":31,"org.easymock.tests2.DelegateToTest.testStubDelegate":87,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":133,"org.easymock.tests2.AnswerTest.stubAnswer":52,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":252,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":115,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":122,"org.easymock.tests2.UsageConstraintsTest.greaterThan":4,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":273,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":214,"org.easymock.tests.UsageVarargTest.varargLongAccepted":96,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":126,"org.easymock.samples.ExampleTest.voteForRemoval":29,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":72,"org.easymock.tests.UsageExpectAndReturnTest.floatType":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":308,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":221,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":7,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":248,"org.easymock.tests.UsageThrowableTest.noUpperLimit":128,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":286,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":240,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":75,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":314,"org.easymock.tests2.SerializationTest.test":23,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":55,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":129,"org.easymock.tests2.UsageConstraintsTest.testSame":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":141,"org.easymock.samples.SupportTest.addDocument":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":110,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":251,"org.easymock.tests2.CaptureTest.testCaptureFirst":70,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":56,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":82,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":147,"org.easymock.tests.GenericTest.testPackageScope":260,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":231,"org.easymock.tests2.CaptureTest.testCapture2_2446744":230,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":284,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":216,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":98,"org.easymock.tests.GenericTest.testBridgedEquals":198,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":320,"org.easymock.tests2.NameTest.nameForMock":294,"org.easymock.tests.UsageExpectAndReturnTest.longType":143,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":181,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":316,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":287,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":328,"org.easymock.tests2.UsageStrictMockTest.differentMethods":48,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":144,"org.easymock.tests.UsageCallCountTest.tooManyCalls":321,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":275,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":261,"org.easymock.tests2.MockedExceptionTest.testRealException":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":148,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":330,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":132,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":233,"org.easymock.tests2.NameTest.nameForStrictMock":295,"org.easymock.tests2.UsageConstraintsTest.testContains":246,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":219,"org.easymock.tests2.UsageConstraintsTest.testFind":241,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":185,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":1,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":254,"org.easymock.tests.UsageExpectAndReturnTest.object":150,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":303,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":16,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":212,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":215,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests2.UsageConstraintsTest.lessThan":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":60,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":94,"org.easymock.tests.UsageTest.exactCallCountByLastCall":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":120,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":54,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":290,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":282,"org.easymock.tests2.UsageConstraintsTest.testOr":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":332,"org.easymock.tests.UsageRangeTest.combination":272,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":38,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":156,"org.easymock.tests.UsageTest.wrongArguments":305,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":117,"org.easymock.tests2.MockBuilderTest.testWithConstructor":323,"org.easymock.tests2.EasyMockSupportTest.testVerify":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":153,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":283,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":270,"org.easymock.tests.UsageVarargTest.varargShortAccepted":95,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":116,"org.easymock.tests2.UsageConstraintsTest.cmpTo":245,"org.easymock.tests.UsageVarargTest.varargCharAccepted":93,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":223,"org.easymock.tests2.CompareToTest.testLessThan":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":312,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":44,"org.easymock.tests2.UsageTest.openCallCountByLastCall":79,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":204,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":63,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":269,"org.easymock.tests2.CaptureTest.testCaptureFromStub":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":170,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":130,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":318,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":327,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":154,"org.easymock.tests2.CaptureTest.testCapture":293,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":213,"org.easymock.tests2.UsageConstraintsTest.constraints":11,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":123,"org.easymock.samples.ExampleTest.addAndChangeDocument":33,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":169,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":157,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":278,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":258,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":121,"org.easymock.tests2.CompareToTest.testGreateThan":5,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":315,"org.easymock.tests2.UsageTest.resumeIfFailure":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":102,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":146,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":103,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":304,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":59}}]
