[{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1726","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[51,52,53,54,55,56,57],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[58,41,41,42,42,59,60,61,62,63,64,65,66,67,68,69,70,71,72,43,51,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,19,20,21,22,111,112,113,114,115,116,117,118,119,52,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,23,151,152,153,154,155,156,157,158,24,159,25,26,27,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,8,175,28,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,9,267,268,10,11,2,3,4,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,29,30,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,12,359,360,361,362,363,364,365,366,367,368,369,370,371,31,32,33,34,35,372,36,0,373,374,6,1,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,37,38,39,40,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,13,14,15,473,474,475,476,477,478,479,480,481,482,483,484,485,486,16,487,488,17,18,489,490,491,492],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[493,494,495,496,497,498,499,8,175,180,181,9,268,10,344,347,348,350,351,12,360,363,364,377,13,14,15,16,488,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[58,59,60,61,62,63,64,66,67,68,69,70,71,72,43,79,81,82,83,84,85,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,117,119,120,126,127,128,129,131,132,133,134,135,136,139,140,142,143,145,156,158,24,159,27,166,173,174,8,28,176,177,178,183,186,187,188,195,203,204,205,207,212,213,214,215,216,217,218,219,220,221,223,224,225,226,229,230,231,232,233,240,250,256,259,262,263,264,266,9,267,268,10,11,2,3,4,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,315,316,318,354,356,357,358,12,361,362,365,366,377,381,384,385,386,387,388,389,390,391,394,398,399,424,425,426,428,429,431,432,433,434,435,446,448,449,450,451,452,453,454,455,456,457,13,14,15,475,476,477,478,480,481,482,483,485,16,487,488,17,18],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[58,59,61,62,64,72,43,113,117,119,120,123,140,141,142,143,144,145,148,151,152,153,24,186,187,204,214,215,216,217,218,219,220,237,240,250,256,9,268,10,292,293,294,295,296,297,300,301,303,304,305,307,308,309,310,311,315,316,318,332,333,334,335,353,354,355,356,357,393,395,397,446,448,453,454,455,456,457,459,482,483,16,488,17,491,492],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[58,41,42,59,60,61,62,63,64,65,66,67,68,69,70,71,72,43,51,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,19,20,21,22,111,112,113,114,115,116,117,118,119,52,120,500,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,23,151,152,153,154,155,156,157,158,24,159,25,26,27,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,8,175,28,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,501,502,503,209,210,211,212,213,214,215,216,217,504,218,219,220,505,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,9,267,268,10,11,2,3,4,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,506,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,29,30,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,507,508,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,12,359,360,361,362,363,364,365,366,367,368,369,370,371,31,32,33,34,35,372,36,0,373,374,6,1,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,37,38,39,40,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,13,14,15,473,474,475,476,477,478,479,480,481,482,483,484,485,486,16,487,488,17,18,489,490,491,492],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[84,85,87,88,89,90,91,92,93,94,103,104,108,109,126,127,128,129,136,137],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[103,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[94],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[75,76,77,78,8,175,180,181,9,268,10,348,12,360,363,364,377,13,14,15,486,16,488,17],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[41,41,42,42,43,51,121,149,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[324,351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[126,127,128,129,130,131,132,133,134,135,136,137,138,139,509],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[202,204,410],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[173,183,259,9,365,386,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[58,59,60,61,62,63,64,65,67,68,69,70,71,72,43,85,91,92,94,95,97,100,103,104,105,106,107,19,20,21,22,111,117,118,119,120,122,125,126,127,128,129,131,132,133,134,135,136,139,140,141,142,143,144,145,146,148,23,152,24,159,25,26,27,166,173,174,175,28,176,179,180,181,183,186,187,195,203,205,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,237,240,250,256,259,262,266,267,11,2,3,4,271,272,274,279,284,294,295,297,302,307,315,316,318,320,321,322,323,324,325,326,327,328,329,330,331,343,345,346,348,349,351,359,360,363,364,365,366,31,32,33,34,35,36,384,385,386,387,388,389,390,391,393,394,397,398,424,425,426,428,429,431,432,433,434,435,436,437,438,439,440,441,442,443,446,451,37,38,39,40,462,463,464,14,15,474,477,478,479,480,481,485,486,487,18,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[126,128,129,130,131,132,133,135,510,136],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[58,41,42,59,60,61,62,63,64,66,67,68,69,70,71,72,43,75,76,77,78,79,81,82,83,84,85,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,19,20,21,22,111,117,118,119,120,126,127,128,129,131,132,133,134,135,136,139,140,142,143,144,145,148,23,152,156,157,159,25,26,27,160,166,174,8,28,176,179,182,186,187,188,195,203,204,207,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,237,240,250,256,259,262,263,264,266,9,10,11,2,3,4,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,315,316,318,332,333,334,335,336,348,352,354,355,356,357,12,366,31,32,33,34,35,381,385,386,393,394,398,399,424,425,426,428,429,431,432,433,434,435,437,446,448,449,452,37,38,39,40,453,454,455,456,457,467,468,469,470,471,472,13,14,15,473,474,475,476,477,478,482,483,485,16,17,18,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[100,144,176],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[85,90],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[501,502,503],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[175,180,181,268,349,511,359,360,363,364,377,14,15,486,488],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":85,"org.easymock.tests2.UsageTest.argumentsOrdered":181,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":358,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":410,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":176,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":67,"org.easymock.tests2.DelegateToTest.testReturnException":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":468,"org.easymock.tests.MockingTest.testPartialClassMocking":315,"org.easymock.tests.MockClassControlTest.testToString":438,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":74,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":244,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":269,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":53,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":448,"org.easymock.tests2.UsageTest.wrongArguments":175,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":39,"org.easymock.samples.ExampleTest.answerVsDelegate":60,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":340,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":29,"org.easymock.tests2.UsageConstraintsTest.testNull":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":143,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":230,"org.easymock.tests2.CaptureTest.testPrimitive":129,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":452,"org.easymock.tests.UsageTest.moreThanOneArgument":12,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":288,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":334,"org.easymock.tests.UsageTest.argumentsOrdered":364,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":367,"org.easymock.tests.UsageVarargTest.varargIntAccepted":426,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":453,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":502,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":171,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":402,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":457,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":495,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests.ReplayStateInvalidUsageTest.times":328,"org.easymock.tests2.DependencyTest.testClassMocking":184,"org.easymock.tests2.AnswerTest.answer":259,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":417,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":22,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":508,"org.easymock.tests2.CaptureTest.testAnd":126,"org.easymock.tests2.UsageTest.strictResetToDefault":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":225,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":356,"org.easymock.tests2.DelegateToTest.testDelegate":207,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":371,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":284,"org.easymock.tests.LimitationsTest.mockFinalMethod":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":471,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":35,"org.easymock.tests2.DependencyTest.testClassMockingSupport":185,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":350,"org.easymock.tests2.CaptureTest.testCapture1_2446744":130,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":20,"org.easymock.tests.UsageThrowableTest.throwError":384,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":322,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":339,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":506,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":336,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":258,"org.easymock.samples.PartialClassMockTest.testGetArea":58,"org.easymock.tests.MockingTest.testInterfaceMocking":317,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":454,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":491,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":466,"org.easymock.tests2.UsageTest.niceToStrict":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":50,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":117,"org.easymock.tests2.MockBuilderTest.testCreateMock":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":198,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":278,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":226,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":507,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":380,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":473,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":37,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":47,"org.easymock.tests.UsageOverloadedMethodTest.overloading":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":255,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":98,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":346,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":397,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":303,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":97,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":135,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":427,"org.easymock.tests.MockClassControlTest.testEquals":442,"org.easymock.tests2.EasyMockSupportClassTest.testAll":237,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":394,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":286,"org.easymock.tests2.CaptureTest.testCaptureAll":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":33,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":21,"org.easymock.tests.MockNameTest.defaultName":383,"org.easymock.tests2.UsageConstraintsTest.testMatches":99,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":335,"org.easymock.samples.ExampleTest.voteForRemovals":64,"org.easymock.tests.UsageVarargTest.allKinds":435,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":34,"org.easymock.samples.BasicClassMockTest.testPrintContent":69,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":390,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":168,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":206,"org.easymock.tests2.UsageConstraintsTest.greaterThan":101,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":238,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":355,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":153,"org.easymock.samples.ExampleTest.voteForRemoval":61,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":376,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":157,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":154,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":341,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":503,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":146,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":366,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":223,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":467,"org.easymock.tests2.CaptureTest.testCaptureFirst":139,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":224,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":183,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":299,"org.easymock.tests2.CaptureTest.testCapture2_2446744":138,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":24,"org.easymock.tests2.UsageTest.moreThanOneArgument":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":418,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":123,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":434,"org.easymock.tests.GenericTest.testBridgedEquals":396,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":48,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":480,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":45,"org.easymock.tests.UsageExpectAndReturnTest.longType":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":31,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":221,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":287,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":106,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":353,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":332,"org.easymock.tests.UsageCallCountTest.tooManyCalls":481,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":254,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":200,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":389,"org.easymock.tests.MockingTest.testNiceClassMocking":30,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":215,"org.easymock.tests.MockingTest.testClassMocking":313,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":474,"org.easymock.tests2.UsageConstraintsTest.testContains":96,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":27,"org.easymock.tests2.UsageConstraintsTest.testFind":87,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":399,"org.easymock.tests.MockTypeTest.fromEasyMockClass":338,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":484,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":81,"org.easymock.tests.UsageExpectAndReturnTest.object":302,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":229,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":429,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":54,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":464,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":49,"org.easymock.tests.UsageTest.exactCallCountByLastCall":365,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":458,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":368,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":51,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":424,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":345,"org.easymock.tests.MockClassControlTest.testHashCode":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":162,"org.easymock.tests2.EasyMockSupportTest.testVerify":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":247,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":369,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":343,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":19,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":189,"org.easymock.tests.UsageVarargTest.varargCharAccepted":428,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":372,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":423,"org.easymock.tests2.UsageTest.openCallCountByLastCall":177,"org.easymock.tests.DefaultClassInstantiatorTest.object":36,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":232,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":378,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":462,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":387,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":193,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":161,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":440,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":151,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":275,"org.easymock.tests.CapturesMatcherTest.test":509,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":309,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":289,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":256,"org.easymock.tests2.UsageTest.resumeIfFailure":182,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":337,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":501,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":470,"org.easymock.tests2.StubTest.stubWithReturnValue":213,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":52,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":107,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":301,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":416,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":497,"org.easymock.samples.SupportTest.voteForRemovals":72,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":392,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":164,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":281,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":422,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":260,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":460,"org.easymock.tests.UsageExpectAndThrowTest.object":279,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":104,"org.easymock.tests2.DelegateToTest.testWrongClass":205,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":482,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":483,"org.easymock.tests.UsageStrictMockTest.range":488,"org.easymock.samples.ConstructorCalledMockTest.testTax":41,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":210,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":228,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":214,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":280,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":234,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":330,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":38,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":492,"org.easymock.tests2.CaptureTest.testCaptureNone":134,"org.easymock.tests.UsageUnorderedTest.message":377,"org.easymock.tests.UsageVerifyTest.twoReturns":15,"org.easymock.tests.UsageVarargTest.varargByteAccepted":433,"org.easymock.tests2.ThreadingTest.testThreadSafe":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":251,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":478,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":465,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":68,"org.easymock.tests2.CaptureTest.testCapture_2617107":128,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":499,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":352,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":420,"org.easymock.tests2.UsageConstraintsTest.any":94,"org.easymock.tests2.StubTest.stub":212,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":327,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndThrowTest.longType":272,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":6,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":326,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":267,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":446,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":395,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":192,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":11,"org.easymock.tests2.NameTest.nameForMocksControl":78,"org.easymock.tests2.MockedExceptionTest.testMockedException":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":239,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":362,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":273,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":318,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":120,"org.easymock.tests.MockingTest.testNicePartialClassMocking":316,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":145,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":190,"org.easymock.tests2.CaptureTest.testCaptureLast":133,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":351,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":91,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":220,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":105,"org.easymock.tests.MockingTest.testTwoMocks":314,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":505,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":277,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":180,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":109,"org.easymock.samples.ExampleTest.removeNonExistingDocument":65,"org.easymock.tests.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":197,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":163,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":373,"org.easymock.tests2.ConstraintsToStringTest.andToString":496,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":158,"org.easymock.tests2.MockBuilderTest.testCreateMockString":125,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":241,"org.easymock.tests.UsageExpectAndThrowTest.floatType":271,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":236,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":262,"org.easymock.tests.UsageVerifyTest.twoThrows":14,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":73,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":250,"org.easymock.samples.ExampleTest.voteAgainstRemoval":62,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":411,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":152,"org.easymock.tests.LimitationsTest.privateConstructor":445,"org.easymock.tests2.UsageConstraintsTest.testNotNull":108,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":391,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":25,"org.easymock.tests2.UsageTest.defaultResetToNice":179,"org.easymock.samples.ExampleTest.voteAgainstRemovals":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":307,"org.easymock.tests.UsageVarargTest.differentLength":430,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":191,"org.easymock.tests2.CallbackTest.callback":188,"org.easymock.tests2.UsageConstraintsTest.equals":86,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":149,"org.easymock.tests.UsageTest.openCallCountByLastCall":361,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":82,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":450,"org.easymock.tests.UsageCallCountTest.tooFewCalls":476,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":40,"org.easymock.tests.UsageThrowableTest.throwCheckedException":388,"org.easymock.tests.MockingTest.testStrictClassMocking":312,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":219,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":382,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":196,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":216,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":329,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":218,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":264,"org.easymock.tests.ObjectMethodsTest.testHashCode":463,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":56,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":159,"org.easymock.tests2.NameTest.nameForNiceMock":77,"org.easymock.tests2.DependencyTest.testInterfaceMocking":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":55,"org.easymock.samples.ExampleTest.addDocument":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":252,"org.easymock.tests2.DelegateToTest.testStubDelegate":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":257,"org.easymock.tests2.AnswerTest.stubAnswer":263,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":16,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":500,"org.easymock.tests.UsageVarargTest.varargLongAccepted":432,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndReturnTest.floatType":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":310,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":43,"org.easymock.tests2.ConstraintsToStringTest.orToString":493,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":42,"org.easymock.tests.UsageThrowableTest.noUpperLimit":385,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":170,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":102,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":83,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":208,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":131,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":7,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests2.UsageConstraintsTest.testSame":89,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":293,"org.easymock.samples.SupportTest.addDocument":71,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":504,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":242,"org.easymock.tests.GenericTest.testPackageScope":393,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":169,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":319,"org.easymock.tests2.NameTest.nameForMock":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":304,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":124,"org.easymock.tests2.UsageStrictMockTest.differentMethods":10,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":150,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":283,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":461,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":357,"org.easymock.tests2.MockedExceptionTest.testRealException":160,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":413,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":449,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":331,"org.easymock.tests2.NameTest.nameForStrictMock":76,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":116,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":79,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":144,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":209,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":103,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":374,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":113,"org.easymock.tests2.UsageStrictMockTest.range":268,"org.easymock.tests2.UsageConstraintsTest.lessThan":110,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":222,"org.easymock.tests2.CaptureTest.testCaptureRightOne":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":246,"org.easymock.tests2.UsageConstraintsTest.testOr":90,"org.easymock.tests.UsageRangeTest.combination":354,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":141,"org.easymock.tests.UsageTest.wrongArguments":360,"org.easymock.tests2.MockBuilderTest.testWithConstructor":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":243,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":437,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":305,"org.easymock.tests.UsageVarargTest.varargShortAccepted":431,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":479,"org.easymock.tests2.UsageConstraintsTest.cmpTo":95,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":403,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests2.CaptureTest.testCaptureFromStub":137,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":321,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":114,"org.easymock.tests.UsageTest.unexpectedCallWithArray":359,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":486,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":477,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":306,"org.easymock.tests2.CaptureTest.testCapture":510,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":487,"org.easymock.tests2.UsageConstraintsTest.constraints":84,"org.easymock.samples.ExampleTest.addAndChangeDocument":66,"org.easymock.tests2.ConstraintsToStringTest.notToString":494,"org.easymock.tests.UsageStrictMockTest.testVerify":489,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":70,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":485,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":32,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":455,"org.easymock.tests.LimitationsTest.abstractClass":444,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":456,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":425,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":227}}]
