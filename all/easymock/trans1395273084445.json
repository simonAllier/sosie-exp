[{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[0,5,6,1,7,8,2,3,4],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[9,10,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[13,14,15,16,0,5,17,18,19,6,1,20,7,21,22,23,24,25,26,27,28,29,8,30,31,32,33,34,35,36,37,2,38,3,39,40,41,42,43,44,45,4,46,47,48,49,10,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:110","sourceCode":"return ((org.easymock.internal.Invocation.(getMockAndMethodName()) + \"(\") + org.easymock.internal.ArgumentToString.(org.easymock.internal.ArgumentToString.argumentsToString(java.lang.Object[]))) + \")\"","type":"CtReturnImpl"},"failures":[5,28,78,79,80,2,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,55,105,106,107,108,76,109,110],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[111,112,113,114,115,116,117,118],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[119],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,9,135,13,136,14,15,16,0,5,137,17,18,19,6,1,20,7,21,22,23,24,25,26,27,28,29,8,30,31,32,33,34,35,36,37,138,139,140,2,38,3,39,40,41,42,43,44,45,4,46,47,48,82,141,142,143,50,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,84,85,164,165,166,167,86,87,168,169,170,171,172,51,173,174,175,176,177,52,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,88,198,199,200,89,201,202,90,203,204,205,206,207,208,209,210,211,212,213,53,54,91,92,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,12,236,237,95,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,96,97,287,288,289,290,98,291,292,293,99,100,101,294,295,102,103,296,297,298,299,300,301,302,303,304,305,306,55,56,307,308,57,58,309,59,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,105,351,352,353,60,62,63,64,65,66,354,355,356,357,67,68,69,70,71,358,359,360,361,362,363,364,365,366,367,368,369,370,72,73,371,106,107,372,373,374,375,376,377,378,108,379,74,75,380,381,76,77,382,109,110,383,384,385,386,387],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[121,13,14,172,206,209,211,281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[388,389,113,114,115,116,117],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[390,391,391,392,392,120,121,122,123,124,125,126,127,128,393,394,129,130,131,111,133,134,9,135,13,14,15,16,0,5,17,18,19,6,1,20,7,21,22,23,24,25,26,27,28,29,8,30,31,32,33,34,35,36,37,138,139,140,395,396,78,397,398,399,400,79,80,2,38,3,39,40,41,42,43,44,45,4,46,47,48,401,81,82,402,403,404,405,49,10,406,83,407,141,142,143,50,144,145,146,147,148,154,161,162,163,84,85,164,165,166,167,86,87,168,169,170,171,172,51,52,184,185,186,187,188,189,192,193,408,409,410,411,194,412,413,196,197,88,198,199,200,89,201,202,90,203,204,205,414,415,416,417,206,207,208,209,210,211,212,213,53,54,91,92,214,418,215,419,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,12,236,237,95,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,420,421,422,423,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,281,282,283,284,285,286,96,97,287,289,290,98,291,292,293,99,100,101,294,295,102,103,296,104,297,298,299,300,301,302,303,304,305,306,424,55,56,307,308,57,58,59,310,311,312,313,314,315,316,425,426,427,317,318,319,336,342,344,345,346,348,349,350,105,351,352,353,60,61,428,429,430,431,432,433,434,435,62,63,64,65,66,354,355,356,357,67,68,69,70,71,359,362,363,364,367,368,369,370,72,73,371,106,107,372,373,374,375,376,377,378,108,379,74,75,380,381,76,77,382,109,110,383,384,385,386,387],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:83","failures":[133,134,9,135,18,21,27,34,38,3,40,41,42,43,44,48,161,163,84,165,166,86,87,169,172,186,193,206,210,53,54,91,92,293,99,101,294,295,102,103,296,55,311,319,60,63,66,72,371,106,107,76,77,382,109,110],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[390,395,396,436,78,397,398,399,400,79,80,405,406,83,11,415,416,417,418,437,438,427],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[439],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[391,391,392,392,126,15,16,0,17,18,19,6,23,25,26,28,29,34,35,36,37,138,139,140,395,397,400,80,40,46,47,405,10,141,142,143,145,146,147,148,154,163,165,166,167,168,51,52,186,189,193,196,201,205,210,211,53,216,217,220,222,223,224,225,227,228,229,230,232,233,234,235,95,238,241,243,244,245,246,248,249,250,251,253,254,255,256,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,282,96,287,290,98,291,292,293,99,100,294,295,302,303,304,305,306,424,57,58,319,61,428,429,430,431,432,433,434,62,63,66,354,355,356,357,67,68,69,70,71,362,363,364,367,368,369,370,72,73,371,373,378,74,75,77,384],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[418,215,419],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[390,391,392,120,121,122,123,124,125,126,127,128,393,394,129,130,131,111,388,132,133,134,9,135,13,136,14,15,16,0,5,137,17,18,19,6,1,20,7,21,22,23,24,25,26,27,28,29,8,30,31,32,33,34,35,36,37,138,139,140,395,396,436,440,78,397,398,399,441,442,400,79,80,2,38,3,39,40,41,42,43,44,45,4,46,47,48,401,81,82,402,403,404,405,443,49,444,445,10,406,83,407,446,11,141,142,143,50,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,84,85,164,165,166,167,86,87,168,169,447,448,170,171,172,51,173,174,175,176,177,52,178,179,180,181,182,183,184,185,186,187,188,189,449,450,190,191,192,193,408,409,410,411,451,194,412,413,195,196,197,88,198,199,200,89,201,202,90,203,204,205,452,453,454,414,455,456,415,457,458,459,460,461,462,463,464,465,416,466,467,468,469,470,417,471,472,206,207,208,209,210,211,212,213,53,54,91,92,214,418,215,419,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,12,236,237,95,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,473,474,420,421,422,257,423,258,259,475,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,437,476,477,277,278,438,279,280,281,282,283,284,285,286,96,97,287,288,289,290,98,291,292,293,99,100,101,294,295,102,103,296,104,297,298,299,300,301,302,303,304,305,306,424,478,479,480,481,482,483,55,56,307,308,57,58,309,59,310,311,312,313,314,315,316,484,425,426,427,485,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,105,351,352,353,60,61,428,429,430,431,432,433,434,486,487,435,488,62,63,64,65,66,354,355,356,357,67,68,69,70,71,358,359,360,361,362,363,364,365,366,367,368,369,370,72,73,371,106,107,372,373,374,375,376,377,378,108,379,74,75,380,381,76,77,382,109,110,383,384,385,386,387],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[388,389,489,112,116,418],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:235","failures":[391,392,111,388,490,491,389,442,492,493,494,489,495,444,418],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[81,10,407,410,195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[390,391,391,392,392,120,121,122,123,124,125,127,128,393,394,129,130,131,111,133,134,9,135,13,14,15,16,0,5,17,18,19,6,1,20,7,21,22,23,24,25,26,27,28,29,8,30,31,32,33,34,35,36,37,396,78,398,399,79,2,38,3,39,40,41,42,43,44,45,4,46,47,48,401,81,82,402,403,404,405,49,10,406,83,407,141,142,143,50,144,145,146,147,148,154,161,162,163,84,85,164,165,166,167,86,87,168,169,170,171,172,52,184,185,186,187,188,189,192,193,408,409,410,411,194,412,413,196,197,88,198,199,200,89,201,202,90,203,204,205,414,415,416,417,206,207,208,209,210,211,212,213,53,54,91,92,214,418,215,419,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,12,236,237,95,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,420,421,422,423,272,273,274,275,276,281,282,283,284,285,286,97,287,289,290,98,291,292,293,99,101,294,295,102,103,296,104,297,298,299,300,301,55,56,307,308,57,58,59,310,311,312,313,314,315,316,425,426,427,317,318,319,336,342,344,345,346,348,349,350,105,351,352,353,60,61,435,62,63,64,65,66,354,67,68,69,70,71,359,367,368,369,370,72,73,371,106,107,372,374,375,376,377,108,379,74,75,380,381,76,77,382,109,110,383,384,385,386,387],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,5,18,6,1,7,8,34,2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:318","failures":[59,312],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[496,2,3,39,40,41,42,43,45,497,4,46,48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[418,215,419,498],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[385],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests2.UsageTest.argumentsOrdered":87,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":293,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":330,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":164,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":128,"org.easymock.tests2.DelegateToTest.testReturnException":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":368,"org.easymock.tests.MockingTest.testPartialClassMocking":421,"org.easymock.tests.MockClassControlTest.testToString":429,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":132,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":359,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":415,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":216,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":113,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":62,"org.easymock.tests2.UsageTest.wrongArguments":84,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":183,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":356,"org.easymock.samples.ExampleTest.answerVsDelegate":121,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":438,"org.easymock.tests2.UsageConstraintsTest.testNull":18,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":259,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":402,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":434,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":90,"org.easymock.tests2.CaptureTest.testPrimitive":39,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":66,"org.easymock.tests.UsageTest.moreThanOneArgument":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":235,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":274,"org.easymock.tests.UsageTest.argumentsOrdered":103,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":297,"org.easymock.tests.UsageVarargTest.varargIntAccepted":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":67,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":395,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":159,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":71,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":52,"org.easymock.tests.ReplayStateInvalidUsageTest.times":268,"org.easymock.tests2.DependencyTest.testClassMocking":447,"org.easymock.tests2.AnswerTest.answer":206,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":140,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":477,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests2.UsageTest.strictResetToDefault":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":491,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":199,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":291,"org.easymock.tests2.DelegateToTest.testDelegate":189,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":231,"org.easymock.tests.LimitationsTest.mockFinalMethod":488,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":306,"org.easymock.tests2.DependencyTest.testClassMockingSupport":448,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":97,"org.easymock.tests2.CaptureTest.testCapture1_2446744":40,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":443,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":138,"org.easymock.tests.UsageThrowableTest.throwError":59,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":262,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":278,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":160,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":276,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":472,"org.easymock.samples.PartialClassMockTest.testGetArea":390,"org.easymock.tests.MockingTest.testInterfaceMocking":257,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":68,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":461,"org.easymock.tests2.UsageTest.niceToStrict":85,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":217,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":78,"org.easymock.tests2.MockBuilderTest.testCreateMock":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":468,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":180,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":225,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":476,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":308,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":354,"org.easymock.tests.UsageOverloadedMethodTest.overloading":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":465,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":25,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":248,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":317,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":24,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":45,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":347,"org.easymock.tests.MockClassControlTest.testEquals":433,"org.easymock.tests2.EasyMockSupportClassTest.testAll":414,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":426,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":233,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":139,"org.easymock.tests2.CaptureTest.testCaptureAll":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":304,"org.easymock.tests.MockNameTest.defaultName":309,"org.easymock.tests2.UsageConstraintsTest.testMatches":26,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":275,"org.easymock.samples.ExampleTest.voteForRemovals":125,"org.easymock.tests.UsageVarargTest.allKinds":60,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":371,"org.easymock.samples.BasicClassMockTest.testPrintContent":394,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":305,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":315,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":212,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":73,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":118,"org.easymock.tests2.UsageConstraintsTest.greaterThan":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":98,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":407,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":483,"org.easymock.samples.ExampleTest.voteForRemoval":122,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":446,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":142,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":279,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":405,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":161,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":104,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":327,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":88,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":367,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":184,"org.easymock.tests2.CaptureTest.testCaptureFirst":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":198,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":169,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":96,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":244,"org.easymock.tests2.UsageTest.moreThanOneArgument":163,"org.easymock.tests2.CaptureTest.testCapture2_2446744":47,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":50,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":338,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":353,"org.easymock.tests.GenericTest.testBridgedEquals":485,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":108,"org.easymock.tests.UsageExpectAndReturnTest.longType":240,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":302,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":234,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":32,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":232,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":272,"org.easymock.tests.UsageCallCountTest.tooManyCalls":379,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":469,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":245,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":221,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":314,"org.easymock.tests.MockingTest.testNiceClassMocking":475,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":409,"org.easymock.tests.MockingTest.testClassMocking":474,"org.easymock.tests2.UsageConstraintsTest.testContains":23,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":373,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":147,"org.easymock.tests2.UsageConstraintsTest.testFind":17,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":319,"org.easymock.tests.MockTypeTest.fromEasyMockClass":277,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":14,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":380,"org.easymock.tests.UsageExpectAndReturnTest.object":247,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":114,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":349,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":364,"org.easymock.tests.UsageTest.exactCallCountByLastCall":296,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":298,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":358,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":388,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":253,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":283,"org.easymock.tests.MockClassControlTest.testHashCode":432,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":150,"org.easymock.tests2.EasyMockSupportTest.testVerify":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":463,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":299,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":281,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":37,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":51,"org.easymock.tests.UsageVarargTest.varargCharAccepted":348,"org.easymock.tests2.CaptureTest.testCaptureMultiple":496,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":343,"org.easymock.tests2.UsageTest.openCallCountByLastCall":165,"org.easymock.tests.DefaultClassInstantiatorTest.object":424,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":204,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":56,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":464,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":223,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":176,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":149,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":431,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":406,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":222,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":254,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":12,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":417,"org.easymock.tests2.UsageTest.resumeIfFailure":168,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":437,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":370,"org.easymock.tests2.StubTest.stubWithReturnValue":193,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":389,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":246,"org.easymock.tests2.SerializationTest.testAllMockedMethod":419,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":336,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":495,"org.easymock.samples.SupportTest.voteForRemovals":131,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":228,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":498,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":342,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":207,"org.easymock.tests.UsageExpectAndThrowTest.object":226,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":360,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":30,"org.easymock.tests2.DelegateToTest.testWrongClass":187,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":74,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":75,"org.easymock.samples.ConstructorCalledMockTest.testTax":391,"org.easymock.tests.UsageStrictMockTest.range":109,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":190,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":201,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":408,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":227,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":452,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":102,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":270,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":355,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":387,"org.easymock.tests2.CaptureTest.testCaptureNone":44,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":119,"org.easymock.tests.UsageUnorderedTest.message":55,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":93,"org.easymock.tests.UsageVerifyTest.twoReturns":107,"org.easymock.tests.UsageVarargTest.varargByteAccepted":352,"org.easymock.tests2.ThreadingTest.testThreadSafe":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":466,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":377,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":393,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":365,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":340,"org.easymock.tests2.UsageConstraintsTest.any":21,"org.easymock.tests2.StubTest.stub":192,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":237,"org.easymock.tests.UsageExpectAndThrowTest.longType":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":369,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":481,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":266,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.tests2.SerializationTest.testClass":418,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":154,"org.easymock.tests.LimitationsTest.mockNativeMethod":435,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":427,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":256,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":175,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":214,"org.easymock.tests2.NameTest.nameForMocksControl":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":177,"org.easymock.tests2.MockedExceptionTest.testMockedException":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":456,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":295,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":423,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":136,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":220,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":399,"org.easymock.tests.MockingTest.testNicePartialClassMocking":422,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":404,"org.easymock.tests2.CompareToTest.testNotComparable":439,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":112,"org.easymock.tests2.CaptureTest.testCaptureLast":43,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":287,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":413,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":1,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":31,"org.easymock.tests.MockingTest.testTwoMocks":420,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":195,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":224,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":86,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":35,"org.easymock.samples.ExampleTest.removeNonExistingDocument":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":179,"org.easymock.tests.UsageStrictMockTest.differentMethods":110,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":264,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":151,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":479,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":143,"org.easymock.tests2.MockBuilderTest.testCreateMockString":80,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":457,"org.easymock.tests.UsageExpectAndThrowTest.floatType":218,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":209,"org.easymock.tests.UsageVerifyTest.twoThrows":106,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":416,"org.easymock.samples.ExampleTest.voteAgainstRemoval":123,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":331,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":83,"org.easymock.tests.LimitationsTest.privateConstructor":487,"org.easymock.tests2.UsageConstraintsTest.testNotNull":34,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":145,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":316,"org.easymock.tests2.UsageTest.defaultResetToNice":167,"org.easymock.samples.ExampleTest.voteAgainstRemovals":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":332,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":174,"org.easymock.tests.UsageVarargTest.differentLength":350,"org.easymock.tests2.CallbackTest.callback":172,"org.easymock.tests2.UsageConstraintsTest.equals":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":444,"org.easymock.tests.UsageTest.openCallCountByLastCall":294,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":15,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":64,"org.easymock.tests.UsageCallCountTest.tooFewCalls":375,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":411,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":357,"org.easymock.tests.UsageThrowableTest.throwCheckedException":313,"org.easymock.tests.MockingTest.testStrictClassMocking":473,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":412,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":58,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":410,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":178,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":194,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":211,"org.easymock.tests.ObjectMethodsTest.testHashCode":363,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":116,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":144,"org.easymock.tests2.NameTest.nameForNiceMock":9,"org.easymock.tests2.DependencyTest.testInterfaceMocking":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":115,"org.easymock.samples.ExampleTest.addDocument":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":471,"org.easymock.tests2.DelegateToTest.testStubDelegate":186,"org.easymock.tests2.AnswerTest.stubAnswer":210,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":77,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":441,"org.easymock.tests.UsageVarargTest.varargLongAccepted":351,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":329,"org.easymock.tests.UsageExpectAndReturnTest.floatType":239,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":255,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":111,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":392,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":158,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":29,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests.UsageThrowableTest.noUpperLimit":310,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":16,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":449,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":41,"org.easymock.tests2.SerializationTest.test":215,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":478,"org.easymock.tests2.UsageConstraintsTest.testSame":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":238,"org.easymock.samples.SupportTest.addDocument":130,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":451,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":458,"org.easymock.tests.GenericTest.testPackageScope":425,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":157,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":258,"org.easymock.tests2.NameTest.nameForMock":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":249,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":493,"org.easymock.tests2.UsageStrictMockTest.differentMethods":92,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":445,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":241,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":230,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":361,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":292,"org.easymock.tests2.MockedExceptionTest.testRealException":148,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":489,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":333,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":63,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":271,"org.easymock.tests2.NameTest.nameForStrictMock":134,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":440,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":13,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":403,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":450,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":480,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":8,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":396,"org.easymock.tests2.UsageStrictMockTest.range":91,"org.easymock.tests2.UsageConstraintsTest.lessThan":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":153,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":462,"org.easymock.tests2.CaptureTest.testCaptureRightOne":4,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":81,"org.easymock.tests.UsageTest.wrongArguments":101,"org.easymock.tests2.MockBuilderTest.testWithConstructor":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":459,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":321,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":482,"org.easymock.tests.UsageVarargTest.varargShortAccepted":105,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":378,"org.easymock.tests2.UsageConstraintsTest.cmpTo":22,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":323,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":166,"org.easymock.tests2.CaptureTest.testCaptureFromStub":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":261,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":436,"org.easymock.tests.UsageTest.unexpectedCallWithArray":100,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":76,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":376,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":251,"org.easymock.tests2.CaptureTest.testCapture":497,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":382,"org.easymock.samples.ExampleTest.addAndChangeDocument":127,"org.easymock.tests.UsageStrictMockTest.testVerify":384,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":129,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":381,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":303,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":69,"org.easymock.tests.LimitationsTest.abstractClass":486,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":70,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":89,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":345}}]
