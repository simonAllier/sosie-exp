[{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[5,6],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[11],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[12,13],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[15,16,17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[20,21,22,23,24,25,26,27],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[7,8,9,10],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"this.org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:298","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[59,60,61,62],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[11,63],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"failures":[64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[66,67,68,28,29,30,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,31,93,94,95,96,97,98,99,100,32,33,34,35,36,101,102,103,104,105,106,107,108,109,110,37,38,41,111,42,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[113,114],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[115,116,117,118,119,66,67,120,121,122,123,124,7,8,9,125,126,127,128,20,129,130,21,131,22,57,58,132,133,23,134,24,135,136,68,28,137,138,139,140,141,29,30,142,143,144,145,146,147,148,149,150,151,152,69,153,154,70,155,71,156,157,158,159,25,160,72,73,161,162,163,74,75,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,76,77,78,79,15,193,80,194,81,195,196,197,82,83,198,199,200,84,85,201,43,44,45,46,47,48,49,50,202,51,52,53,54,55,203,86,204,205,206,207,208,209,210,211,212,87,213,214,88,215,89,216,217,218,219,220,221,222,223,224,225,226,227,11,228,229,14,230,231,232,233,234,235,236,237,238,13,239,4,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,90,91,256,257,258,259,260,261,262,263,264,265,65,266,267,268,269,0,270,271,272,92,273,31,93,274,275,276,277,278,26,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,16,307,94,308,309,95,96,97,98,99,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,100,32,33,332,333,34,35,334,335,59,60,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,36,372,5,373,374,375,6,376,101,377,378,17,379,380,1,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,102,103,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,18,437,438,439,440,441,442,19,443,2,444,3,445,104,446,447,105,106,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,63,113,465,466,467,114,468,469,107,108,109,470,471,472,110,37,38,473,474,475,476,477,27,478,479,480,481,482,39,483,61,62,484,485,486,487,488,489,490,491,492,493,494,41,111,495,42,112,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[129,130],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[86,87],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[262,264,65,26,479],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[86],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":225,"org.easymock.tests2.UsageTest.argumentsOrdered":30,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":331,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":432,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":138,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":277,"org.easymock.tests2.DelegateToTest.testReturnException":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":449,"org.easymock.tests.MockingTest.testPartialClassMocking":501,"org.easymock.tests.MockClassControlTest.testToString":107,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":192,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":391,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":173,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":133,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":357,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":230,"org.easymock.tests2.UsageTest.wrongArguments":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":304,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":124,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":301,"org.easymock.samples.ExampleTest.answerVsDelegate":26,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":97,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":506,"org.easymock.tests2.UsageConstraintsTest.testNull":11,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":205,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":472,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":156,"org.easymock.tests2.CaptureTest.testPrimitive":46,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":410,"org.easymock.tests.UsageTest.moreThanOneArgument":100,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":475,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":508,"org.easymock.tests.UsageTest.argumentsOrdered":35,"org.easymock.tests.UsageVarargTest.varargIntAccepted":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":367,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":80,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":146,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":259,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":371,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":341,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":66,"org.easymock.tests.ReplayStateInvalidUsageTest.times":383,"org.easymock.tests2.DependencyTest.testClassMocking":57,"org.easymock.tests2.AnswerTest.answer":20,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":438,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":128,"org.easymock.tests2.CaptureTest.testAnd":43,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":309,"org.easymock.tests2.UsageTest.strictResetToDefault":136,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":64,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":87,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":491,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":153,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":512,"org.easymock.tests2.DelegateToTest.testDelegate":65,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":406,"org.easymock.tests.LimitationsTest.mockFinalMethod":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":452,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":488,"org.easymock.tests2.DependencyTest.testClassMockingSupport":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":102,"org.easymock.tests2.CaptureTest.testCapture1_2446744":47,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":404,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":126,"org.easymock.tests.UsageThrowableTest.throwError":412,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":17,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":96,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":191,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":344,"org.easymock.samples.PartialClassMockTest.testGetArea":288,"org.easymock.tests.MockingTest.testInterfaceMocking":503,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":368,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":178,"org.easymock.tests2.UsageTest.niceToStrict":137,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":106,"org.easymock.tests2.ThreadingTest.testChangeDefault":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":196,"org.easymock.tests2.MockBuilderTest.testCreateMock":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":186,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":121,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":400,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":154,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":308,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":62,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":299,"org.easymock.tests.UsageOverloadedMethodTest.overloading":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":182,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":480,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":236,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":296,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":321,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":235,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":51,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":457,"org.easymock.tests.MockClassControlTest.testEquals":471,"org.easymock.tests2.EasyMockSupportClassTest.testAll":170,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":466,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":408,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":486,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":127,"org.easymock.tests2.CaptureTest.testCaptureAll":44,"org.easymock.tests.MockNameTest.defaultName":101,"org.easymock.tests2.UsageConstraintsTest.testMatches":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":476,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":377,"org.easymock.samples.ExampleTest.voteForRemovals":282,"org.easymock.tests.UsageVarargTest.allKinds":63,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":487,"org.easymock.samples.BasicClassMockTest.testPrintContent":290,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":418,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":453,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":256,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":265,"org.easymock.tests2.UsageConstraintsTest.greaterThan":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":171,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":490,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":88,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":345,"org.easymock.samples.ExampleTest.voteForRemoval":279,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":376,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":215,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":268,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":208,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":337,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":330,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":152,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":448,"org.easymock.tests2.CaptureTest.testCaptureFirst":55,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":69,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":39,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":317,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":0,"org.easymock.tests2.CaptureTest.testCapture2_2446744":54,"org.easymock.tests2.UsageTest.moreThanOneArgument":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":439,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":84,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":464,"org.easymock.tests.GenericTest.testBridgedEquals":114,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":365,"org.easymock.tests.UsageExpectAndReturnTest.longType":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":484,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":409,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":242,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":303,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":473,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":59,"org.easymock.tests.UsageCallCountTest.tooManyCalls":366,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":187,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":318,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":123,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":396,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":417,"org.easymock.tests.MockingTest.testNiceClassMocking":507,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":72,"org.easymock.tests.MockingTest.testClassMocking":499,"org.easymock.tests2.UsageConstraintsTest.testContains":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":359,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":249,"org.easymock.tests2.UsageConstraintsTest.testFind":227,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":298,"org.easymock.tests.MockTypeTest.fromEasyMockClass":95,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":493,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":24,"org.easymock.tests.UsageExpectAndReturnTest.object":320,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":210,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":122,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":71,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":459,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":447,"org.easymock.tests.UsageTest.exactCallCountByLastCall":334,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":509,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":2,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":166,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":454,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":326,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":479,"org.easymock.tests.MockClassControlTest.testHashCode":470,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":252,"org.easymock.tests2.EasyMockSupportTest.testVerify":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":180,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":510,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":27,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":61,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":125,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":201,"org.easymock.tests.UsageVarargTest.varargCharAccepted":458,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":443,"org.easymock.tests2.UsageTest.openCallCountByLastCall":139,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":158,"org.easymock.tests.DefaultClassInstantiatorTest.object":372,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":483,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":104,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":40,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":415,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":118,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":251,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":109,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":213,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":397,"org.easymock.tests.CapturesMatcherTest.test":56,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":327,"org.easymock.tests.ReplayStateInvalidCallsTest.times":349,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":335,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":189,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":108,"org.easymock.tests2.UsageTest.resumeIfFailure":142,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":94,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":451,"org.easymock.tests2.StubTest.stubWithReturnValue":193,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":243,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":319,"org.easymock.tests2.SerializationTest.testAllMockedMethod":9,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":437,"org.easymock.samples.SupportTest.voteForRemovals":276,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":403,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":10,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":19,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":129,"org.easymock.tests.UsageExpectAndThrowTest.object":401,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":3,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":240,"org.easymock.tests2.DelegateToTest.testWrongClass":264,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":420,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":347,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":421,"org.easymock.tests.UsageStrictMockTest.range":42,"org.easymock.samples.ConstructorCalledMockTest.testTax":286,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":148,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":402,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":82,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":167,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":300,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":339,"org.easymock.tests2.CaptureTest.testCaptureNone":202,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":293,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":217,"org.easymock.tests.UsageUnorderedTest.message":36,"org.easymock.tests.UsageVerifyTest.twoReturns":38,"org.easymock.tests.UsageVarargTest.varargByteAccepted":463,"org.easymock.tests2.ThreadingTest.testThreadSafe":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":184,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":363,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":105,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":289,"org.easymock.tests2.CaptureTest.testCapture_2617107":45,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":441,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":16,"org.easymock.tests2.UsageConstraintsTest.any":232,"org.easymock.tests2.StubTest.stub":15,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":382,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndThrowTest.longType":394,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":375,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":381,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":273,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":90,"org.easymock.tests.LimitationsTest.mockNativeMethod":389,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":467,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":329,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":117,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":355,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":274,"org.easymock.tests2.NameTest.nameForMocksControl":79,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":119,"org.easymock.tests2.MockedExceptionTest.testMockedException":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":172,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":333,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":504,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":395,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":134,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":203,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":83,"org.easymock.tests.MockingTest.testNicePartialClassMocking":502,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":207,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":115,"org.easymock.tests2.CaptureTest.testCaptureLast":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":103,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":14,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":75,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":354,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":241,"org.easymock.tests.MockingTest.testTwoMocks":500,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":351,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":164,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":310,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":399,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":245,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":221,"org.easymock.samples.ExampleTest.removeNonExistingDocument":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":120,"org.easymock.tests.UsageStrictMockTest.differentMethods":112,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":253,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":220,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":373,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":269,"org.easymock.tests2.MockBuilderTest.testCreateMockString":85,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":468,"org.easymock.tests.UsageExpectAndThrowTest.floatType":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":174,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":169,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":21,"org.easymock.tests.UsageVerifyTest.twoThrows":37,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":183,"org.easymock.samples.ExampleTest.voteAgainstRemoval":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":433,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":291,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":214,"org.easymock.tests.LimitationsTest.privateConstructor":388,"org.easymock.tests2.UsageConstraintsTest.testNotNull":244,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":419,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":247,"org.easymock.tests2.UsageTest.defaultResetToNice":141,"org.easymock.samples.ExampleTest.voteAgainstRemovals":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":325,"org.easymock.tests.UsageVarargTest.differentLength":460,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":116,"org.easymock.tests2.CallbackTest.callback":25,"org.easymock.tests2.UsageConstraintsTest.equals":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":211,"org.easymock.tests.UsageTest.openCallCountByLastCall":332,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":306,"org.easymock.tests.UsageCallCountTest.tooFewCalls":361,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":161,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":302,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":219,"org.easymock.tests.UsageThrowableTest.throwCheckedException":416,"org.easymock.tests.MockingTest.testStrictClassMocking":498,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":74,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":67,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":73,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":384,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":163,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":22,"org.easymock.tests.ObjectMethodsTest.testHashCode":446,"org.easymock.tests2.NameTest.nameForNiceMock":78,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":270,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":353,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":348,"org.easymock.tests2.DependencyTest.testInterfaceMocking":132,"org.easymock.samples.ExampleTest.addDocument":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":190,"org.easymock.tests2.DelegateToTest.testStubDelegate":263,"org.easymock.tests2.AnswerTest.stubAnswer":131,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":111,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":198,"org.easymock.tests.UsageVarargTest.varargLongAccepted":462,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndReturnTest.floatType":312,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":328,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":165,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":287,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":481,"org.easymock.tests.UsageThrowableTest.noUpperLimit":413,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":258,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":223,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":144,"org.easymock.tests2.SerializationTest.test":8,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":48,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":5,"org.easymock.tests2.UsageConstraintsTest.testSame":228,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":311,"org.easymock.samples.SupportTest.addDocument":275,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":162,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":338,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":175,"org.easymock.tests.GenericTest.testPackageScope":465,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":257,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":505,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":336,"org.easymock.tests2.NameTest.nameForMock":76,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":322,"org.easymock.tests2.UsageStrictMockTest.differentMethods":93,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":212,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":314,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":405,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":445,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":492,"org.easymock.tests2.MockedExceptionTest.testRealException":250,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":435,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":92,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":305,"org.easymock.tests2.NameTest.nameForStrictMock":77,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":195,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":23,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":206,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":147,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":4,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":374,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":194,"org.easymock.tests2.UsageStrictMockTest.range":31,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":342,"org.easymock.tests2.UsageConstraintsTest.lessThan":246,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":430,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":179,"org.easymock.tests2.CaptureTest.testCaptureRightOne":52,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":216,"org.easymock.tests2.UsageConstraintsTest.testOr":229,"org.easymock.tests.UsageRangeTest.combination":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":86,"org.easymock.tests.UsageTest.wrongArguments":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":176,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":469,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":323,"org.easymock.tests.UsageVarargTest.varargShortAccepted":461,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":6,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":364,"org.easymock.tests2.UsageConstraintsTest.cmpTo":233,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":356,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":130,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":425,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":140,"org.easymock.tests2.CaptureTest.testCaptureFromStub":53,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":378,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":81,"org.easymock.tests.UsageTest.unexpectedCallWithArray":32,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":352,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":41,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":362,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":324,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":495,"org.easymock.tests2.UsageConstraintsTest.constraints":224,"org.easymock.samples.ExampleTest.addAndChangeDocument":284,"org.easymock.tests.UsageStrictMockTest.testVerify":497,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":285,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":494,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":485,"org.easymock.tests2.CompareToTest.testGreateThan":12,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":369,"org.easymock.tests.LimitationsTest.abstractClass":387,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":316,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":482,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":370,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":455,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":70}}]
