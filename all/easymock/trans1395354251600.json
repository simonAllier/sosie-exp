[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[111,140,118,141],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[68,68,142,142,143,144,122,145,127],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:369","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[146,147,52,148,53,80,149],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[127,150,128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[151,152,153,9,154,10,155,11,156,157,15,158,16,159,23,160,161,162,163,27,164,29,165,166,167,168,42,169,43,170,44,171,172,173,45,174,46,175,47,176,177,48,178,179,49,180,50,181,51,182,52,148,53,183,54,184,55,185,56,57,186,187,59,62,188,63,189,190,65,191,192,69,193,71,194,72,73,195,196,74,197,198,77,199,78,200,201,202,203,204,82,205,84,86,206,87,149,89,207,90,91,208,92,93,94,209,96,97,98,210,99,211,100,101,212,102,213,103,214,104,106,107,215,216,109,217,110,218,111,219,112,220,113,221,114,222,115,223,116,224,117,225,118,226,119,120,141,121,227,122,228,123,124,126,229,127,150,230,129,231,130,232,131,233,234,133,235,236,135,237,137,238,138,139,239],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[240,241,242,243,244,245,143,246,247,248,77,249,250,199,251,252,253,254,255,256,257,258,259,78,260,261,262,263,264,200,265,266,267,268,127],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[143,127],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[269,1,270,2,271,3,272,4,273,5,274,6,151,7,152,8,153,9,154,10,155,11,275,276,277,278,157,15,158,16,279,17,280,18,281,19,282,20,283,284,285,21,286,287,288,289,22,159,290,291,24,292,25,293,26,163,27,294,28,164,29,295,30,165,296,32,297,298,299,33,300,34,301,35,302,303,36,304,305,37,306,38,307,39,308,309,40,167,41,168,42,310,169,43,170,44,171,172,173,45,174,46,175,47,176,177,48,178,179,49,180,50,181,51,182,148,53,183,54,184,55,185,56,311,57,186,187,58,312,59,313,60,314,61,315,62,188,63,189,64,190,65,316,191,317,67,318,192,68,142,319,69,320,321,70,193,71,322,194,72,323,73,324,195,196,74,197,198,75,325,76,326,77,199,78,200,79,327,328,80,201,202,203,204,82,205,83,84,85,86,206,87,329,88,149,89,207,90,91,208,92,93,330,94,95,209,96,97,331,98,210,99,211,100,101,212,102,213,103,214,104,105,332,333,106,334,107,215,108,216,109,217,110,218,111,219,112,220,113,221,114,222,115,223,116,224,117,225,118,226,119,335,120,141,121,227,122,228,123,336,124,337,125,338,126,339,229,127,150,128,230,129,231,130,232,131,233,340,234,132,341,133,235,134,236,135,342,136,237,137,238,138,343,139,239],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[344,127,150,128],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[40,345,346,347,348],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[160],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[349,350],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[291,27,167,168,42,56,311,57,351,352,353,354,205,106,107,215],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[355,356,357,358,359,360,361],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[344,127,150,128],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[6,14,157,15,158,16,159,290,23,68,68,142,142,69,320,321,70,193,363,71,322,194,72,323,73,324,364,77,199,78,200,207,90,208,92,93,330,94,95,209,96,97,122,126,127,128,230,129,231,130,131,233],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[365,366],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[367,368,369],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":110,"org.easymock.tests2.UsageTest.argumentsOrdered":88,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":163,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":18,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":85,"org.easymock.tests2.StubTest.stubWithReturnValue":201,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":319,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":47,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":120,"org.easymock.tests2.SerializationTest.testAllMockedMethod":128,"org.easymock.tests2.DelegateToTest.testReturnException":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":17,"org.easymock.tests.MockingTest.testPartialClassMocking":157,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":348,"org.easymock.samples.SupportTest.voteForRemovals":192,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":362,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":254,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":344,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":296,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":199,"org.easymock.tests.UsageExpectAndThrowTest.object":302,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":351,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":226,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":203,"org.easymock.tests2.DelegateToTest.testWrongClass":132,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":43,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":113,"org.easymock.tests2.UsageTest.wrongArguments":83,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":186,"org.easymock.samples.ConstructorCalledMockTest.testTax":68,"org.easymock.tests.UsageStrictMockTest.range":168,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":5,"org.easymock.samples.ExampleTest.answerVsDelegate":64,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":230,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":241,"org.easymock.tests2.UsageConstraintsTest.testNull":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":208,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":194,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":103,"org.easymock.tests2.CaptureTest.testPrimitive":236,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":59,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":246,"org.easymock.tests.UsageTest.moreThanOneArgument":27,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":39,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":273,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":91,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":314,"org.easymock.tests2.CaptureTest.testCaptureNone":137,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":162,"org.easymock.tests.UsageUnorderedTest.message":291,"org.easymock.tests.UsageVerifyTest.twoReturns":57,"org.easymock.tests.UsageVarargTest.varargByteAccepted":288,"org.easymock.tests2.ThreadingTest.testThreadSafe":195,"org.easymock.tests.UsageTest.argumentsOrdered":30,"org.easymock.tests.UsageVarargTest.varargIntAccepted":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":260,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":2,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":367,"org.easymock.tests2.CaptureTest.testCapture_2617107":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":183,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":312,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":322,"org.easymock.tests2.UsageConstraintsTest.any":221,"org.easymock.tests2.StubTest.stub":80,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":147,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":185,"org.easymock.tests.UsageExpectAndThrowTest.longType":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":280,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":334,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":229,"org.easymock.tests2.SerializationTest.testClass":127,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":228,"org.easymock.tests.LimitationsTest.mockNativeMethod":16,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":51,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":23,"org.easymock.tests2.AnswerTest.answer":123,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":146,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":326,"org.easymock.tests2.CaptureTest.testAnd":133,"org.easymock.tests2.UsageTest.strictResetToDefault":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":95,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":108,"org.easymock.tests2.MockedExceptionTest.testMockedException":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":100,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":148,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":29,"org.easymock.tests2.DelegateToTest.testDelegate":341,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":327,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":299,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":158,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":72,"org.easymock.tests.MockingTest.testNicePartialClassMocking":15,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":37,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":93,"org.easymock.tests2.CaptureTest.testCaptureLast":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":281,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":233,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":26,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":119,"org.easymock.tests.MockingTest.testTwoMocks":14,"org.easymock.tests2.CaptureTest.testCapture1_2446744":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":301,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":329,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":121,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":369,"org.easymock.tests.UsageThrowableTest.throwError":152,"org.easymock.samples.ExampleTest.removeNonExistingDocument":66,"org.easymock.tests.UsageStrictMockTest.differentMethods":42,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":74,"org.easymock.tests2.MockBuilderTest.testCreateMockString":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":315,"org.easymock.tests.UsageExpectAndThrowTest.floatType":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":251,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":248,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":336,"org.easymock.tests.UsageVerifyTest.twoThrows":311,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":78,"org.easymock.samples.PartialClassMockTest.testGetArea":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":54,"org.easymock.samples.ExampleTest.voteAgainstRemoval":65,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":161,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":255,"org.easymock.tests2.UsageTest.niceToStrict":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":32,"org.easymock.tests2.UsageConstraintsTest.testNotNull":141,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":11,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":355,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":245,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":71,"org.easymock.tests2.MockBuilderTest.testCreateMock":323,"org.easymock.tests2.UsageTest.defaultResetToNice":87,"org.easymock.samples.ExampleTest.voteAgainstRemovals":189,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":262,"org.easymock.tests.UsageVarargTest.differentLength":21,"org.easymock.tests2.CallbackTest.callback":331,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":144,"org.easymock.tests.UsageTest.openCallCountByLastCall":164,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":347,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":35,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":101,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":216,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":58,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":4,"org.easymock.tests.UsageCallCountTest.tooFewCalls":1,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":242,"org.easymock.tests.UsageOverloadedMethodTest.overloading":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":259,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":277,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":223,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":62,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":130,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":177,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":115,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":238,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":274,"org.easymock.tests.UsageThrowableTest.throwCheckedException":154,"org.easymock.tests2.EasyMockSupportClassTest.testAll":77,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":290,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":38,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":364,"org.easymock.tests2.CaptureTest.testCaptureAll":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":25,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":7,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":131,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":231,"org.easymock.tests2.UsageConstraintsTest.testMatches":116,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":232,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":337,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":61,"org.easymock.samples.ExampleTest.voteForRemovals":191,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":198,"org.easymock.tests.UsageVarargTest.allKinds":22,"org.easymock.tests2.DependencyTest.testInterfaceMocking":202,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":56,"org.easymock.samples.BasicClassMockTest.testPrintContent":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":293,"org.easymock.samples.ExampleTest.addDocument":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":265,"org.easymock.tests2.DelegateToTest.testStubDelegate":234,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":155,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":332,"org.easymock.tests2.AnswerTest.stubAnswer":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":19,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":167,"org.easymock.tests2.UsageConstraintsTest.greaterThan":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":52,"org.easymock.tests.UsageVarargTest.varargLongAccepted":287,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":97,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":310,"org.easymock.samples.ExampleTest.voteForRemoval":190,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":196,"org.easymock.tests.UsageExpectAndReturnTest.floatType":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":122,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":142,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":225,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":13,"org.easymock.tests.UsageThrowableTest.noUpperLimit":8,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":204,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":6,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":109,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":342,"org.easymock.tests2.SerializationTest.test":150,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":143,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":99,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":153,"org.easymock.tests2.UsageConstraintsTest.testSame":219,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":44,"org.easymock.samples.SupportTest.addDocument":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":279,"org.easymock.tests2.CaptureTest.testCaptureFirst":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":211,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":89,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":252,"org.easymock.tests.GenericTest.testPackageScope":159,"org.easymock.tests2.UsageTest.moreThanOneArgument":205,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":197,"org.easymock.tests2.CaptureTest.testCapture2_2446744":139,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":289,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":243,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":240,"org.easymock.tests2.NameTest.nameForMock":81,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":3,"org.easymock.tests.UsageExpectAndReturnTest.longType":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":24,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":98,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":350,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":48,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":361,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":306,"org.easymock.tests2.UsageStrictMockTest.differentMethods":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":313,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":173,"org.easymock.tests.UsageCallCountTest.tooManyCalls":272,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":53,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":269,"org.easymock.tests2.MockedExceptionTest.testRealException":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":33,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":187,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":129,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":349,"org.easymock.tests2.UsageConstraintsTest.testContains":222,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":126,"org.easymock.tests2.UsageConstraintsTest.testFind":218,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":63,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":268,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":79,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":92,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":328,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":308,"org.easymock.tests.UsageExpectAndReturnTest.object":176,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":352,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":118,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":94,"org.easymock.tests.ErrorMessageTest.testGetters":353,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":193,"org.easymock.tests2.UsageStrictMockTest.range":107,"org.easymock.tests2.UsageConstraintsTest.lessThan":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":213,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":285,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":244,"org.easymock.tests.UsageTest.exactCallCountByLastCall":165,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":256,"org.easymock.tests2.CaptureTest.testCaptureRightOne":138,"org.easymock.tests2.UsageConstraintsTest.testOr":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":145,"org.easymock.tests.UsageRangeTest.combination":182,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":90,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":180,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":276,"org.easymock.tests.UsageTest.wrongArguments":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":253,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":45,"org.easymock.tests2.EasyMockSupportTest.testVerify":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":257,"org.easymock.tests.UsageVarargTest.varargShortAccepted":286,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":275,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":75,"org.easymock.tests2.UsageConstraintsTest.cmpTo":114,"org.easymock.tests.UsageVarargTest.varargCharAccepted":284,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":333,"org.easymock.tests2.UsageTest.openCallCountByLastCall":86,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":267,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":104,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":31,"org.easymock.tests2.CaptureTest.testCaptureFromStub":343,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":363,"org.easymock.tests.UsageTest.unexpectedCallWithArray":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":34,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":9,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":270,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":179,"org.easymock.tests2.CaptureTest.testCapture":366,"org.easymock.tests2.UsageConstraintsTest.constraints":217,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":209,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":41,"org.easymock.samples.ExampleTest.addAndChangeDocument":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":300,"org.easymock.tests.CapturesMatcherTest.test":365,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":50,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":67,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":292,"org.easymock.tests2.CompareToTest.testGreateThan":0,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":136,"org.easymock.tests2.UsageTest.resumeIfFailure":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":184,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":55,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":354,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":212,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":20}}]
