[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[302,303],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[47,63,70,140,141,142,304,176,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,207,208,209,210,211,212,262,267,268,273,292,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[305,306,307,308,309,310],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[49,51,59,84,85,87,89,90,92,102,107],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[102],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[311,312,313,314,315,316,317],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[7,10,11,318],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,14,16,17,19,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,319,45,46,47,320,321,322,323,48,324,325,49,50,52,53,56,57,58,59,60,61,62,63,64,65,67,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,114,326,115,327,328,329,330,331,332,333,334,335,302,336,337,116,118,119,120,121,338,339,340,341,123,124,125,126,128,129,342,342,343,343,131,344,138,140,141,142,143,144,145,146,147,148,149,150,345,346,154,156,157,160,161,162,164,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,347,348,349,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,241,242,243,244,245,257,258,259,260,261,262,263,264,265,266,267,268,269,272,273,276,282,287,288,289,291,292,294,350,296,297,298,299,300,301],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[319,45,351,352],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[12,15,16,17,22,26,27,30,40,63,66,67,68,72,73,74,75,84,99,326,331,333,334,353,337,354,138,151,153,155,156,157,168,169,170,355,356,251,257,357,358,262,263,268,270,271,274,275,276],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[76,77,78,79,80,81,124,291],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[359,360,361,362,363,364,365],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[49,51,59,84,85,89,90,92,102],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[366],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[85,89],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[367,368,369],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[47,63,70,118,119,120,121,175,176,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,205,207,208,209,210,211,212,234,262,267,268,273,292,296,297,298,299,300,301],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[336,370],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[371,372,153,373,374,270],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[319,45,351,352],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[85],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[7,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[0,1,2,3,376,377,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,378,379,380,381,382,19,20,383,384,385,386,387,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,359,388,40,41,389,42,319,45,351,46,47,320,321,322,323,390,48,324,325,391,392,393,394,395,396,397,398,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,399,82,83,84,85,400,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,401,110,111,112,113,114,326,115,327,328,329,402,403,330,404,405,406,331,332,333,407,408,409,410,334,411,412,413,335,414,302,365,336,415,416,353,337,417,354,418,419,420,421,422,116,117,423,424,425,426,427,118,119,120,121,428,429,430,338,431,432,339,433,434,435,436,437,438,439,440,441,340,442,443,444,445,446,341,447,448,122,449,450,123,124,125,126,127,128,451,129,342,343,130,131,132,344,133,134,135,136,137,452,453,305,306,307,308,454,309,455,310,138,139,456,457,458,459,460,461,462,463,464,465,466,140,141,142,143,144,145,146,147,148,149,150,467,345,468,346,469,470,471,472,473,474,475,476,477,151,152,153,154,155,156,157,158,159,160,161,162,163,478,164,165,166,167,168,169,170,479,480,481,304,482,483,318,484,485,486,487,488,489,490,491,492,171,493,494,495,496,497,172,498,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,499,500,203,501,356,204,502,503,504,347,348,505,349,506,507,508,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,509,235,510,236,237,238,239,240,241,242,243,244,245,246,247,248,511,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,512,370,513,514,283,284,303,285,286,287,288,289,290,291,292,293,294,295,350,296,297,298,299,300,301],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[160,161,162,486,488,496,497,498,235],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[4,5,6,9,10,11,13,14,15,16,17,18,19,21,23,24,25,26,29,30,31,32,33,34,36,37,38,39,40,41,42,319,45,351,46,47,320,321,322,323,48,324,325,49,50,51,52,54,55,56,57,58,59,62,63,64,65,67,68,69,70,75,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,114,115,327,329,335,302,336,116,120,339,340,341,122,449,450,123,124,125,126,127,128,129,130,131,132,344,138,468,152,154,155,156,157,158,164,165,166,167,169,170,173,174,175,176,177,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,347,348,349,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,259,260,261,262,263,266,267,268,269,272,273,276,287,288,350],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[319,45,351,352],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[515,82,100,103],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((this.int) <= int) && (int <= (this.int))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[16,17,156,157,179,180,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"maximum","minimum":"minimum","maximum":"maximum"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,6,9,10,11,13,14,17,18,34,35,38,39,40,41,42,319,45,351,46,47,321,322,324,325,49,50,51,52,54,55,56,57,58,59,62,64,65,67,68,71,74,77,78,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,327,328,329,330,406,332,409,335,414,118,119,120,121,123,124,125,126,127,128,129,143,144,145,146,147,345,468,471,152,154,157,158,159,163,478,164,165,166,167,173,174,177,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,347,348,349,206,207,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,266,267,269,277,278,279,280,512,287,288,294,350,296,297,298,299,300,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[467],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[319,45,351,352],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":85,"org.easymock.tests2.UsageTest.argumentsOrdered":73,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":268,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":487,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":68,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":132,"org.easymock.tests2.DelegateToTest.testReturnException":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":297,"org.easymock.tests.MockingTest.testPartialClassMocking":347,"org.easymock.tests.MockClassControlTest.testToString":472,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":401,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":495,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":436,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":183,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":339,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":5,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":360,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":173,"org.easymock.tests2.UsageTest.wrongArguments":66,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":387,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":279,"org.easymock.samples.ExampleTest.answerVsDelegate":124,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":303,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":507,"org.easymock.tests2.UsageConstraintsTest.testNull":87,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":327,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":477,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":30,"org.easymock.tests2.CaptureTest.testPrimitive":52,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":202,"org.easymock.tests.UsageTest.moreThanOneArgument":269,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":145,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":178,"org.easymock.tests.UsageTest.argumentsOrdered":275,"org.easymock.tests.UsageVarargTest.varargIntAccepted":248,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":492,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":241,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":409,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":364,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":426,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":394,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":245,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":368,"org.easymock.tests.ReplayStateInvalidUsageTest.times":463,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":19,"org.easymock.tests2.DependencyTest.testClassMocking":376,"org.easymock.tests2.AnswerTest.answer":6,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":493,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":3,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":514,"org.easymock.tests2.CaptureTest.testAnd":49,"org.easymock.tests2.UsageTest.strictResetToDefault":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":25,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":259,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":182,"org.easymock.tests2.DelegateToTest.testDelegate":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":198,"org.easymock.tests.LimitationsTest.mockFinalMethod":501,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":300,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":240,"org.easymock.tests2.DependencyTest.testClassMockingSupport":377,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":281,"org.easymock.tests2.CaptureTest.testCapture1_2446744":53,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":1,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":457,"org.easymock.tests.UsageThrowableTest.throwError":205,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":284,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":427,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":448,"org.easymock.samples.PartialClassMockTest.testGetArea":344,"org.easymock.tests.MockingTest.testInterfaceMocking":505,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":458,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":242,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":161,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":437,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":184,"org.easymock.tests2.UsageTest.niceToStrict":67,"org.easymock.tests2.ThreadingTest.testChangeDefault":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":335,"org.easymock.tests2.MockBuilderTest.testCreateMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":444,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":384,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":192,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":371,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":26,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":513,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":142,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":163,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":277,"org.easymock.tests.UsageOverloadedMethodTest.overloading":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":441,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":97,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":292,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":224,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":265,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":96,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":58,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":511,"org.easymock.tests.MockClassControlTest.testEquals":476,"org.easymock.tests2.EasyMockSupportClassTest.testAll":338,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":468,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":2,"org.easymock.tests2.CaptureTest.testCaptureAll":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":238,"org.easymock.tests.MockNameTest.defaultName":204,"org.easymock.tests2.UsageConstraintsTest.testMatches":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":139,"org.easymock.samples.ExampleTest.voteForRemovals":128,"org.easymock.tests.UsageVarargTest.allKinds":256,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":261,"org.easymock.samples.BasicClassMockTest.testPrintContent":450,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":239,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":211,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":12,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":423,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":301,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":455,"org.easymock.tests2.UsageConstraintsTest.greaterThan":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":431,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":258,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":333,"org.easymock.samples.ExampleTest.voteForRemoval":125,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":310,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":407,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":35,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":285,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":395,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":402,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":63,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":350,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":484,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":23,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":296,"org.easymock.tests2.CaptureTest.testCaptureFirst":62,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":24,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":75,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":220,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":37,"org.easymock.tests2.CaptureTest.testCapture2_2446744":61,"org.easymock.tests2.UsageTest.moreThanOneArgument":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":494,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":337,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":255,"org.easymock.tests.GenericTest.testBridgedEquals":469,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":169,"org.easymock.tests.UsageExpectAndReturnTest.longType":216,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":236,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":201,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":105,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":199,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":143,"org.easymock.tests.UsageCallCountTest.tooManyCalls":170,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":369,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":221,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":210,"org.easymock.tests.MockingTest.testNiceClassMocking":508,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":321,"org.easymock.tests.MockingTest.testClassMocking":503,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":478,"org.easymock.tests2.UsageConstraintsTest.testContains":95,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":120,"org.easymock.tests2.UsageConstraintsTest.testFind":86,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":267,"org.easymock.tests.MockTypeTest.fromEasyMockClass":283,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":151,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":42,"org.easymock.tests.UsageExpectAndReturnTest.object":223,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":330,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":29,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":250,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":361,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":136,"org.easymock.tests.UsageTest.exactCallCountByLastCall":276,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":483,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":509,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":179,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":359,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":229,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":246,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":291,"org.easymock.tests.MockClassControlTest.testHashCode":475,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":419,"org.easymock.tests2.EasyMockSupportTest.testVerify":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":439,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":367,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":180,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":141,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":0,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":357,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":399,"org.easymock.tests.UsageVarargTest.varargCharAccepted":249,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":453,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":43,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":498,"org.easymock.tests2.UsageTest.openCallCountByLastCall":69,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":32,"org.easymock.tests.DefaultClassInstantiatorTest.object":305,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":140,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":134,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":440,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":418,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":474,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":189,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":230,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":148,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":341,"org.easymock.tests2.UsageTest.resumeIfFailure":74,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":370,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":299,"org.easymock.tests2.StubTest.stubWithReturnValue":47,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":365,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":222,"org.easymock.tests2.SerializationTest.testAllMockedMethod":351,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":171,"org.easymock.samples.SupportTest.voteForRemovals":131,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":372,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":421,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":195,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":352,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":172,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":7,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":510,"org.easymock.tests.UsageExpectAndThrowTest.object":193,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":103,"org.easymock.tests2.DelegateToTest.testWrongClass":79,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":287,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":288,"org.easymock.tests.UsageStrictMockTest.range":156,"org.easymock.samples.ConstructorCalledMockTest.testTax":342,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":397,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":28,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":194,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":302,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":428,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":278,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":373,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":162,"org.easymock.tests2.CaptureTest.testCaptureNone":57,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":312,"org.easymock.tests.UsageUnorderedTest.message":138,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":355,"org.easymock.tests.UsageVerifyTest.twoReturns":263,"org.easymock.tests.UsageVarargTest.varargByteAccepted":254,"org.easymock.tests2.ThreadingTest.testThreadSafe":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":442,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":167,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":449,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":137,"org.easymock.tests2.CaptureTest.testCapture_2617107":51,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":496,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":176,"org.easymock.tests2.UsageConstraintsTest.any":93,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":462,"org.easymock.tests2.StubTest.stub":46,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":497,"org.easymock.tests.UsageExpectAndThrowTest.longType":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":298,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":454,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":461,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":116,"org.easymock.tests2.SerializationTest.testClass":319,"org.easymock.tests.LimitationsTest.mockNativeMethod":203,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":232,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":346,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":380,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":18,"org.easymock.tests2.NameTest.nameForMocksControl":113,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":313,"org.easymock.tests2.MockedExceptionTest.testMockedException":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":432,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":273,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":389,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":187,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":349,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":114,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":336,"org.easymock.tests.MockingTest.testNicePartialClassMocking":348,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":329,"org.easymock.tests2.CaptureTest.testCaptureLast":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":378,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":282,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":90,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":325,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":104,"org.easymock.tests.MockingTest.testTwoMocks":504,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":213,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":191,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":72,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":108,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":316,"org.easymock.samples.ExampleTest.removeNonExistingDocument":451,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":459,"org.easymock.tests.UsageStrictMockTest.differentMethods":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":383,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":420,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":307,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":315,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":36,"org.easymock.tests2.MockBuilderTest.testCreateMockString":354,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":433,"org.easymock.tests.UsageExpectAndThrowTest.floatType":185,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":430,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":9,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":388,"org.easymock.tests.UsageVerifyTest.twoThrows":262,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":340,"org.easymock.samples.ExampleTest.voteAgainstRemoval":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":488,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":160,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":332,"org.easymock.tests.LimitationsTest.privateConstructor":500,"org.easymock.tests2.UsageConstraintsTest.testNotNull":107,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":118,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":212,"org.easymock.tests2.UsageTest.defaultResetToNice":71,"org.easymock.samples.ExampleTest.voteAgainstRemovals":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":489,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":228,"org.easymock.tests.UsageVarargTest.differentLength":251,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":379,"org.easymock.tests2.CallbackTest.callback":40,"org.easymock.tests2.UsageConstraintsTest.equals":400,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":404,"org.easymock.tests.UsageTest.openCallCountByLastCall":272,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":82,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":175,"org.easymock.tests.UsageCallCountTest.tooFewCalls":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":280,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":314,"org.easymock.tests.UsageThrowableTest.throwCheckedException":209,"org.easymock.tests.MockingTest.testStrictClassMocking":502,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":374,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":234,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":324,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":20,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":322,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":464,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":48,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":11,"org.easymock.tests.ObjectMethodsTest.testHashCode":135,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":363,"org.easymock.tests2.NameTest.nameForNiceMock":112,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":38,"org.easymock.tests2.DependencyTest.testInterfaceMocking":4,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":362,"org.easymock.samples.ExampleTest.addDocument":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":447,"org.easymock.tests2.DelegateToTest.testStubDelegate":78,"org.easymock.tests2.AnswerTest.stubAnswer":10,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":154,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":415,"org.easymock.tests.UsageVarargTest.varargLongAccepted":253,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":486,"org.easymock.tests.UsageExpectAndReturnTest.floatType":215,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":231,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":39,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":343,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":425,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":101,"org.easymock.tests.UsageThrowableTest.noUpperLimit":206,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":293,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":83,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":392,"org.easymock.tests2.SerializationTest.test":45,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":54,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":306,"org.easymock.tests2.UsageConstraintsTest.testSame":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":214,"org.easymock.samples.SupportTest.addDocument":130,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":390,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":434,"org.easymock.tests.GenericTest.testPackageScope":345,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":424,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":506,"org.easymock.tests2.NameTest.nameForMock":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":225,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":417,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":405,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":217,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":197,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":133,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":260,"org.easymock.tests2.MockedExceptionTest.testRealException":121,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":491,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":490,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":14,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":466,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":174,"org.easymock.tests2.NameTest.nameForStrictMock":111,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":413,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":328,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":396,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":102,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":308,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":334,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.UsageConstraintsTest.lessThan":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":422,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":485,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":438,"org.easymock.tests2.CaptureTest.testCaptureRightOne":59,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":311,"org.easymock.tests2.UsageConstraintsTest.testOr":89,"org.easymock.tests.UsageRangeTest.combination":257,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":326,"org.easymock.tests.UsageTest.wrongArguments":271,"org.easymock.tests2.MockBuilderTest.testWithConstructor":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":435,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":471,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":226,"org.easymock.tests.UsageVarargTest.varargShortAccepted":252,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":309,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":168,"org.easymock.tests2.UsageConstraintsTest.cmpTo":94,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":304,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":70,"org.easymock.tests2.CaptureTest.testCaptureFromStub":60,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":456,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":411,"org.easymock.tests.UsageTest.unexpectedCallWithArray":270,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":153,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":166,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":366,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":227,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":155,"org.easymock.tests2.UsageConstraintsTest.constraints":84,"org.easymock.samples.ExampleTest.addAndChangeDocument":129,"org.easymock.tests.UsageStrictMockTest.testVerify":159,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":122,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":152,"org.easymock.tests2.CompareToTest.testGreateThan":515,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":237,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":243,"org.easymock.tests.LimitationsTest.abstractClass":499,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":219,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":244,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":27,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":247}}]
