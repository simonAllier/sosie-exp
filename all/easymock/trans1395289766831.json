[{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,66,67,67,68,69,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[107,108],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[109,110,0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[111],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"obj"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[112],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[109,129,110,130,131,132,133,134,135,136,71,137,72,138,139,140,141,142,143,144,145,146,147,148,149,150,73,151,152,74,153,154,155,156,157,158,159,160,75,81,82,83,84,85,86,87,88,89,90,91,92,161,162,163,113,164,165,166,167,168,114,115,169,170,1,2,3,4,171,172,5,6,173,174,175,176,177,178,179,180,181,116,182,183,184,185,186,7,187,188,8,189,190,191,192,193,194,195,196,197,9,198,199,200,201,202,10,203,204,205,93,94,95,96,97,98,99,100,101,102,103,104,206,207,208,209,210,211,212,213,214,215,216,11,217,12,13,218,14,15,219,16,17,18,19,220,20,221,222,21,22,223,23,224,225,226,227,24,228,229,230,231,232,233,234,25,26,235,27,28,29,30,236,31,237,32,33,34,35,36,37,38,39,40,41,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,42,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,43,276,277,278,279,280,281,282,283,284,285,44,45,46,47,48,286,49,287,288,50,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,119,120,307,308,121,122,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,123,340,341,124,342,343,344,51,52,53,54,55,56,57,58,345,346,347,348,349,350,351,352,353,354,355,59,107,356,357,358,108,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,0,374,375,376,377,378,379,380,381,382,383,384,385,386,387,60,61,62,111,388,389,390,391,392,393,394,395,396,397,398,399,400,125,63,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,126,64,418,419,420,421,65,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,127,128,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,66,67,105,68,106,494,495,69,70],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[81,82,83,89,92,93,94,95,101,104,105,106],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[291,486,488,489,491,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.RecordState:318","failures":[424,427],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[72,138,141,142,143,146,154,159,160,260,262,270],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[129,110,130,132,133,138,141,143,144,159,86,161,162,163,164,165,166,167,169,170,176,177,179,180,181,116,182,183,98,206,209,210,11,217,17,19,20,230,231,232,234,26,28,35,239,240,241,242,243,244,245,247,248,249,250,258,259,260,261,267,268,270,273,283,284,285,289,290,291,292,293,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,339,340,341,124,342,343,345,346,347,348,349,353,354,361,61,395,397,398,413,414,415,416,417,126,424,425,426,427,428,429,430,431,435,436,437,439,440,442,443,444,445,446,447,127,128,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,486,487,488,489,490,491,493,105,106,494,495,69,70],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[496,497,498,499,500,220,228],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[158],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[11,217,12,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[11,222,24,228,237,66,66,67,67],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[387],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[134,136,71,137,72,138,140,141,142,143,144,145,146,147,148,149,150,73,151,152,74,153,154,155,156,157,158,159,160,75,180,205,233,31,260,261,262,263,264,265,266,267,268,269,270,271,272,273,289,290,291,292,293,302,123,340,353,354,361,362,413,414,415,416,417,126,446],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[1,2,3,4,5,6,7,8,9,10,502,503,504,505,11,12,13,506,14,15,17,18,19,20,21,22,507,23,24,25,26,27,28,29,30,31,33,34,35,36,41,43,46,47,48,49,52,60,61,62,63,64,65,66,66,67,67,68,69,70],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[375,379,409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[389,405],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[129,110,130,132,71,137,72,138,140,141,142,143,144,145,147,148,149,150,73,151,152,74,153,154,155,156,158,159,160,75,86,161,162,163,113,164,166,167,168,114,115,169,170,1,2,3,4,172,5,6,176,177,178,180,181,116,182,183,7,8,9,10,205,98,206,210,211,11,217,13,17,18,19,20,21,22,23,224,225,226,227,24,230,231,232,233,234,25,26,235,27,28,29,30,31,33,34,35,36,39,40,41,238,239,240,241,242,243,244,245,246,247,248,249,250,251,259,260,263,264,269,270,271,272,43,278,279,280,283,284,285,47,48,49,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,119,120,307,308,121,122,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,338,123,340,341,124,342,343,344,51,52,53,54,55,56,57,58,345,346,347,348,349,353,354,59,361,362,60,389,391,392,393,394,395,396,397,398,400,125,401,402,403,404,405,406,407,408,409,410,411,412,413,414,417,126,424,426,427,428,429,430,431,447,127,128,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,473,478,486,487,489,492,66,66,67,67,68],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[387,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"position":"org.easymock.internal.RecordState:183","failures":[129,110,130,132,133,134,136,71,137,72,138,140,141,142,143,144,145,147,148,149,150,73,151,152,74,153,154,155,156,157,158,159,160,75,86,161,162,163,164,165,166,167,170,1,2,3,4,172,5,6,176,177,179,180,181,116,182,183,8,9,10,98,206,209,210,211,11,217,12,17,19,20,24,230,232,233,234,25,235,27,29,41,239,241,242,243,244,247,248,249,250,251,258,259,260,261,262,263,265,266,267,268,269,270,273,43,284,285,47,48,49,289,290,291,292,293,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,339,340,341,124,342,343,353,354,361,61,391,393,394,63,413,414,415,416,417,126,424,425,426,427,428,429,430,431,435,436,437,439,440,442,443,444,445,446,447,127,128,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,474,475,476,477,479,480,486,487,488,489,490,491,493,105,68,106,494,495,69,70],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[387],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:290","sourceCode":"return ","type":"CtReturnImpl"},"failures":[129,110,130,132,133,134,136,71,137,72,138,140,141,142,143,144,145,146,147,148,149,150,73,151,152,74,153,154,155,156,157,158,159,160,75,86,161,162,163,113,164,165,166,167,168,114,115,169,170,1,2,3,4,172,5,6,176,177,178,179,180,181,116,182,183,7,8,9,10,98,206,209,210,211,213,214,215,216,11,217,12,14,17,19,20,22,24,230,231,232,233,234,25,26,235,27,28,29,31,34,35,36,41,239,240,241,242,243,244,245,246,247,248,249,250,251,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,43,283,284,285,47,48,49,289,290,291,292,293,294,302,305,306,120,307,308,121,122,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,338,339,123,340,341,124,342,343,344,353,354,59,361,362,60,61,391,392,393,394,395,397,398,400,63,413,414,415,416,417,126,424,425,426,427,428,429,430,431,435,436,437,439,440,441,442,443,444,445,446,447,127,128,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,472,474,475,476,477,479,480,482,483,486,487,488,489,490,491,493,105,68,106,494,495,69,70],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[508],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[293,346,454,460,467,468],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":138,"org.easymock.tests2.UsageTest.argumentsOrdered":115,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":305,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":249,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":0,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":165,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":105,"org.easymock.tests2.DelegateToTest.testReturnException":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":299,"org.easymock.tests.MockingTest.testPartialClassMocking":47,"org.easymock.tests.MockClassControlTest.testToString":53,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":212,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":192,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":8,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":310,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":496,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":413,"org.easymock.tests2.UsageTest.wrongArguments":113,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":296,"org.easymock.samples.ExampleTest.answerVsDelegate":487,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":65,"org.easymock.tests2.UsageConstraintsTest.testNull":141,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":288,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":27,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":58,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":248,"org.easymock.tests2.CaptureTest.testPrimitive":263,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":417,"org.easymock.tests.UsageTest.moreThanOneArgument":306,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":329,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":235,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":347,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":481,"org.easymock.tests.UsageTest.argumentsOrdered":122,"org.easymock.tests.UsageVarargTest.varargIntAccepted":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":500,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":91,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":254,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":293,"org.easymock.tests.ReplayStateInvalidUsageTest.times":409,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":98,"org.easymock.tests2.DependencyTest.testClassMocking":174,"org.easymock.tests2.AnswerTest.answer":206,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":227,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":419,"org.easymock.tests2.CaptureTest.testAnd":260,"org.easymock.tests2.UsageTest.strictResetToDefault":162,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":33,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":393,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":243,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":485,"org.easymock.tests2.DelegateToTest.testDelegate":132,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":325,"org.easymock.tests.LimitationsTest.mockFinalMethod":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":334,"org.easymock.tests2.DependencyTest.testClassMockingSupport":175,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":388,"org.easymock.tests2.CaptureTest.testCapture1_2446744":264,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":236,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":225,"org.easymock.tests.UsageThrowableTest.throwError":424,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":403,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":421,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":92,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":204,"org.easymock.samples.PartialClassMockTest.testGetArea":68,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":404,"org.easymock.tests.MockingTest.testInterfaceMocking":286,"org.easymock.tests2.CompareToTest.testLessOrEqual":80,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":351,"org.easymock.tests2.UsageTest.niceToStrict":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":193,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":364,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":17,"org.easymock.tests2.MockBuilderTest.testCreateMock":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":101,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":319,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":244,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":418,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":450,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":472,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":294,"org.easymock.tests.UsageOverloadedMethodTest.overloading":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":202,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":398,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":73,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":462,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":283,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":150,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":269,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":438,"org.easymock.tests2.EasyMockSupportClassTest.testAll":7,"org.easymock.tests.MockClassControlTest.testEquals":57,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":61,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":327,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":502,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":226,"org.easymock.tests2.CaptureTest.testCaptureAll":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":332,"org.easymock.tests.MockNameTest.defaultName":304,"org.easymock.tests2.UsageConstraintsTest.testMatches":151,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":348,"org.easymock.samples.ExampleTest.voteForRemovals":491,"org.easymock.tests.UsageVarargTest.allKinds":446,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":447,"org.easymock.samples.BasicClassMockTest.testPrintContent":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":333,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":430,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":178,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":303,"org.easymock.tests2.UsageConstraintsTest.greaterThan":74,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":392,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":36,"org.easymock.samples.ExampleTest.voteForRemoval":488,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":360,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":37,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":231,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":422,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":255,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":30,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":161,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":63,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":241,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":298,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":109,"org.easymock.tests2.CaptureTest.testCaptureFirst":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":370,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":242,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":125,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":458,"org.easymock.tests2.UsageTest.moreThanOneArgument":163,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":233,"org.easymock.tests2.CaptureTest.testCapture2_2446744":272,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":381,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":445,"org.easymock.tests.GenericTest.testBridgedEquals":111,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":479,"org.easymock.tests.UsageExpectAndReturnTest.longType":454,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":330,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":507,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":328,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":471,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":157,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":326,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":345,"org.easymock.tests.UsageCallCountTest.tooManyCalls":480,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":201,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":103,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":315,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":429,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":2,"org.easymock.tests.MockingTest.testNiceClassMocking":50,"org.easymock.tests.MockingTest.testClassMocking":45,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":506,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":473,"org.easymock.tests2.UsageConstraintsTest.testContains":149,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":41,"org.easymock.tests2.UsageConstraintsTest.testFind":140,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":285,"org.easymock.tests.MockTypeTest.fromEasyMockClass":420,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":136,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":338,"org.easymock.tests.UsageExpectAndReturnTest.object":461,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":102,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":247,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":497,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":440,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":280,"org.easymock.tests.UsageTest.exactCallCountByLastCall":309,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":482,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":432,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":228,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":467,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":435,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":397,"org.easymock.tests.MockClassControlTest.testHashCode":56,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":82,"org.easymock.tests2.EasyMockSupportTest.testVerify":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":195,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":483,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":449,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":224,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":205,"org.easymock.tests.UsageVarargTest.varargCharAccepted":439,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":355,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":386,"org.easymock.tests2.UsageTest.openCallCountByLastCall":166,"org.easymock.tests.DefaultClassInstantiatorTest.object":59,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":250,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":448,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":278,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":317,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":505,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":427,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":96,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":81,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":34,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":55,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":316,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":468,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":10,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":54,"org.easymock.tests2.UsageTest.resumeIfFailure":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":301,"org.easymock.tests2.StubTest.stubWithReturnValue":259,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":220,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":460,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":158,"org.easymock.tests2.SerializationTest.testAllMockedMethod":12,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":379,"org.easymock.samples.SupportTest.voteForRemovals":495,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":84,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":322,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":385,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":207,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":434,"org.easymock.tests.UsageExpectAndThrowTest.object":320,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":155,"org.easymock.tests2.DelegateToTest.testWrongClass":130,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":353,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":354,"org.easymock.tests.UsageStrictMockTest.range":124,"org.easymock.samples.ConstructorCalledMockTest.testTax":66,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":256,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":246,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":321,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":19,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":184,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":295,"org.easymock.tests2.CaptureTest.testCaptureNone":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":352,"org.easymock.tests.UsageUnorderedTest.message":126,"org.easymock.tests.UsageVerifyTest.twoReturns":128,"org.easymock.tests.UsageVarargTest.varargByteAccepted":444,"org.easymock.tests2.ThreadingTest.testThreadSafe":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":198,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":477,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":69,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":281,"org.easymock.tests2.CaptureTest.testCapture_2617107":262,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":390,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":383,"org.easymock.tests2.UsageConstraintsTest.any":147,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":408,"org.easymock.tests2.StubTest.stub":258,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":300,"org.easymock.tests.UsageExpectAndThrowTest.longType":313,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":358,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":407,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":181,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":86,"org.easymock.tests.LimitationsTest.mockNativeMethod":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":470,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":62,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":504,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":95,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":183,"org.easymock.tests2.NameTest.nameForMocksControl":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":97,"org.easymock.tests2.MockedExceptionTest.testMockedException":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":188,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":308,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":135,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":49,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":314,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":25,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":20,"org.easymock.tests.MockingTest.testNicePartialClassMocking":48,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":29,"org.easymock.tests2.CompareToTest.testCompareEqual":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":93,"org.easymock.tests2.CaptureTest.testCaptureLast":267,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":389,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":144,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":6,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":156,"org.easymock.tests.MockingTest.testTwoMocks":46,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":451,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":318,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":114,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":160,"org.easymock.samples.ExampleTest.removeNonExistingDocument":492,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":405,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":100,"org.easymock.tests.UsageStrictMockTest.differentMethods":342,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":83,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":356,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":232,"org.easymock.tests2.MockBuilderTest.testCreateMockString":23,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":189,"org.easymock.tests.UsageExpectAndThrowTest.floatType":312,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":186,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":209,"org.easymock.tests.UsageVerifyTest.twoThrows":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":229,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":9,"org.easymock.samples.ExampleTest.voteAgainstRemoval":489,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":35,"org.easymock.tests.LimitationsTest.privateConstructor":275,"org.easymock.tests2.UsageConstraintsTest.testNotNull":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":431,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":39,"org.easymock.tests2.UsageTest.defaultResetToNice":168,"org.easymock.samples.ExampleTest.voteAgainstRemovals":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":375,"org.easymock.tests.UsageVarargTest.differentLength":441,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":94,"org.easymock.tests2.CallbackTest.callback":133,"org.easymock.tests2.UsageConstraintsTest.equals":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":237,"org.easymock.tests.UsageTest.openCallCountByLastCall":307,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":415,"org.easymock.tests.UsageCallCountTest.tooFewCalls":475,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":4,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":297,"org.easymock.tests.UsageThrowableTest.throwCheckedException":428,"org.easymock.tests.MockingTest.testStrictClassMocking":44,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":5,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":99,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":3,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":410,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":172,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":211,"org.easymock.tests2.CompareToTest.testGreateOrEqual":79,"org.easymock.tests.ObjectMethodsTest.testHashCode":279,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":499,"org.easymock.tests2.NameTest.nameForNiceMock":215,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":234,"org.easymock.tests2.DependencyTest.testInterfaceMocking":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":498,"org.easymock.samples.ExampleTest.addDocument":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":199,"org.easymock.tests2.DelegateToTest.testStubDelegate":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":203,"org.easymock.tests2.AnswerTest.stubAnswer":210,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":340,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":221,"org.easymock.tests.UsageVarargTest.varargLongAccepted":443,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":373,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":469,"org.easymock.tests.UsageExpectAndReturnTest.floatType":453,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":24,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":67,"org.easymock.tests.UsageThrowableTest.noUpperLimit":425,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":399,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":153,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":90,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":137,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":252,"org.easymock.tests2.SerializationTest.test":217,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":265,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":452,"org.easymock.tests2.UsageConstraintsTest.testSame":142,"org.easymock.samples.SupportTest.addDocument":494,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":171,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":190,"org.easymock.tests.GenericTest.testPackageScope":60,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":89,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":287,"org.easymock.tests2.NameTest.nameForMock":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":463,"org.easymock.tests2.UsageStrictMockTest.differentMethods":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":223,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":32,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":455,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":324,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":394,"org.easymock.tests2.MockedExceptionTest.testRealException":238,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":117,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":376,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":414,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":412,"org.easymock.tests2.NameTest.nameForStrictMock":214,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":16,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":134,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":28,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":42,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":154,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":357,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":14,"org.easymock.tests2.UsageStrictMockTest.range":116,"org.easymock.tests2.UsageConstraintsTest.lessThan":75,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":85,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":194,"org.easymock.tests2.CaptureTest.testCaptureRightOne":270,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":508,"org.easymock.tests2.UsageConstraintsTest.testOr":143,"org.easymock.tests.UsageRangeTest.combination":391,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":26,"org.easymock.tests.UsageTest.wrongArguments":120,"org.easymock.tests2.MockBuilderTest.testWithConstructor":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":191,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":52,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":365,"org.easymock.tests.UsageVarargTest.varargShortAccepted":442,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":108,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":478,"org.easymock.tests2.UsageConstraintsTest.cmpTo":148,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":208,"org.easymock.tests2.CompareToTest.testLessThan":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":367,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":167,"org.easymock.tests2.CaptureTest.testCaptureFromStub":271,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":402,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":15,"org.easymock.tests.UsageTest.unexpectedCallWithArray":119,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":123,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":476,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":465,"org.easymock.tests2.UsageConstraintsTest.constraints":72,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":341,"org.easymock.samples.ExampleTest.addAndChangeDocument":493,"org.easymock.tests.UsageStrictMockTest.testVerify":344,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":106,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":339,"org.easymock.tests2.CompareToTest.testGreateThan":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":331,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":266,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":503,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":291,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":457,"org.easymock.tests.LimitationsTest.abstractClass":274,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":400,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":292,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":245}}]
