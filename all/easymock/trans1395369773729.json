[{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","sourceCode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[35,36,37],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[70,71,72,73,74,75,76,77,56,78,79,80,81,82,57,83,84,85,86,87,58,88,89,90,59,91,60,92,93,94,95,96,97,98,99,100,101,102,103,69,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[105],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[106,107,108,109,1,110,38,15,111,16,17,112,113,18,114,19,115,20,116,117,21,118,22,119,120,121,122,123,124,125,126,127,128,129,130,131,23,132,133,134,135,136,2,137,3,24,138,139,140,141,142,25,26,143,144,27,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,39,165,166,4,167,5,6,168,169,170,171,172,70,173,40,174,175,176,177,71,178,179,180,181,182,183,41,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,42,199,200,43,201,202,203,204,205,206,207,208,44,45,209,46,210,211,212,213,214,215,28,216,217,218,219,220,221,222,223,224,29,225,226,227,228,229,30,230,231,232,233,234,235,47,48,236,237,238,239,49,240,105,241,242,243,50,51,244,245,246,247,52,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,72,276,277,278,279,280,281,281,282,282,283,31,284,285,286,287,288,289,290,291,292,293,53,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,73,323,324,325,326,327,328,329,330,331,332,333,334,32,335,336,337,338,74,339,340,341,342,343,344,345,346,54,347,348,349,55,0,350,351,352,353,354,355,75,76,77,56,78,79,80,81,82,57,83,84,85,86,87,58,88,89,90,59,91,60,92,93,356,94,95,96,97,98,99,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,61,375,376,377,378,379,380,381,382,7,8,383,9,10,384,11,385,386,387,388,389,390,391,392,393,62,394,395,396,397,398,63,399,400,401,402,403,64,404,405,406,65,407,66,408,409,410,411,412,100,67,413,414,415,101,416,417,418,68,419,420,421,422,423,424,425,102,426,427,428,429,430,431,432,433,434,435,436,437,438,439,103,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,69,464,104,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,33,481,482,34,483,484],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[485,68],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[198],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[486,487,488,489,490,491,492,115,116,493,494,23,145,146],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[351],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[5,6,177,71,191,201,298,337,356,9,10,415,101,419,432,433,69,464],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[495,496,497,18,25,26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.RecordState:163","failures":[1,110],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:108","sourceCode":"if (org.easymock.TestSubject != null) {\n    org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field);\n    continue;\n} ","type":"CtIfImpl"},"failures":[148,149,150,152,154,155,156,159,252,253,254,256,258,259,260,263,283,284],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[151,255],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":186,"org.easymock.tests2.UsageTest.argumentsOrdered":180,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":100,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":345,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":176,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":283,"org.easymock.tests2.DelegateToTest.testReturnException":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":437,"org.easymock.tests.MockingTest.testPartialClassMocking":360,"org.easymock.tests.MockClassControlTest.testToString":314,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":276,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":451,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":219,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":56,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":487,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":193,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":423,"org.easymock.tests2.UsageTest.wrongArguments":174,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":263,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":455,"org.easymock.samples.ExampleTest.answerVsDelegate":288,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":34,"org.easymock.tests2.UsageConstraintsTest.testNull":189,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":365,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":2,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":128,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":319,"org.easymock.tests2.CaptureTest.testPrimitive":105,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":426,"org.easymock.tests.UsageTest.moreThanOneArgument":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":92,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":309,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":431,"org.easymock.tests.UsageTest.argumentsOrdered":417,"org.easymock.tests.UsageVarargTest.varargIntAccepted":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":491,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":158,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":330,"org.easymock.tests.ReplayStateInvalidUsageTest.times":61,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":257,"org.easymock.tests2.DependencyTest.testClassMocking":232,"org.easymock.tests2.AnswerTest.answer":106,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":0,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":251,"org.easymock.tests2.CaptureTest.testAnd":239,"org.easymock.tests2.UsageTest.strictResetToDefault":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":308,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":123,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":435,"org.easymock.tests2.DelegateToTest.testDelegate":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":90,"org.easymock.tests.LimitationsTest.mockFinalMethod":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":461,"org.easymock.tests2.DependencyTest.testClassMockingSupport":233,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":378,"org.easymock.tests2.CaptureTest.testCapture1_2446744":241,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":138,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":88,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":249,"org.easymock.tests.UsageThrowableTest.throwError":93,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":369,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":482,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":231,"org.easymock.samples.PartialClassMockTest.testGetArea":31,"org.easymock.tests.MockingTest.testInterfaceMocking":362,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":327,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":411,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":449,"org.easymock.tests2.UsageTest.niceToStrict":175,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":220,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":18,"org.easymock.tests2.MockBuilderTest.testCreateMock":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":227,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":85,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":124,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":77,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":453,"org.easymock.tests.UsageOverloadedMethodTest.overloading":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":229,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":42,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":73,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":403,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":198,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":244,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":472,"org.easymock.tests2.EasyMockSupportClassTest.testAll":213,"org.easymock.tests.MockClassControlTest.testEquals":318,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":334,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":14,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":91,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":495,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":459,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":250,"org.easymock.tests.MockNameTest.defaultName":409,"org.easymock.tests2.UsageConstraintsTest.testMatches":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":310,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":367,"org.easymock.samples.ExampleTest.voteForRemovals":292,"org.easymock.tests.UsageVarargTest.allKinds":480,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":464,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":460,"org.easymock.samples.BasicClassMockTest.testPrintContent":295,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":98,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":440,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":492,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":392,"org.easymock.tests2.UsageConstraintsTest.greaterThan":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":214,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":420,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":143,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":393,"org.easymock.samples.ExampleTest.voteForRemoval":289,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":144,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":48,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":24,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":70,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":331,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":342,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":121,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":436,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":160,"org.easymock.tests2.CaptureTest.testCaptureFirst":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":122,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":399,"org.easymock.tests2.UsageTest.moreThanOneArgument":40,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":237,"org.easymock.tests2.CaptureTest.testCapture2_2446744":247,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":350,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":479,"org.easymock.tests.GenericTest.testBridgedEquals":335,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":303,"org.easymock.tests.UsageExpectAndReturnTest.longType":396,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":457,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":119,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":60,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":468,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":205,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":59,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":442,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":307,"org.easymock.tests.UsageCallCountTest.tooManyCalls":304,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":228,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":400,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":262,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":97,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":265,"org.easymock.tests.MockingTest.testNiceClassMocking":366,"org.easymock.tests.MockingTest.testClassMocking":358,"org.easymock.tests2.UsageConstraintsTest.testContains":197,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":297,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":273,"org.easymock.tests2.UsageConstraintsTest.testFind":188,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":69,"org.easymock.tests.MockTypeTest.fromEasyMockClass":481,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":46,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":381,"org.easymock.tests.UsageExpectAndReturnTest.object":402,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":127,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":488,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":474,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":447,"org.easymock.tests.UsageTest.exactCallCountByLastCall":418,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":450,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":432,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":146,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":469,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":65,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":322,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":149,"org.easymock.tests.MockClassControlTest.testHashCode":317,"org.easymock.tests2.EasyMockSupportTest.testVerify":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":222,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":12,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":433,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":76,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":248,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":183,"org.easymock.tests.UsageVarargTest.varargCharAccepted":473,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":385,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":355,"org.easymock.tests2.UsageTest.openCallCountByLastCall":177,"org.easymock.tests.DefaultClassInstantiatorTest.object":386,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":35,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":75,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":445,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":223,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":497,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":255,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":148,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":25,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":316,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":407,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":30,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":13,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":315,"org.easymock.tests2.UsageTest.resumeIfFailure":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":439,"org.easymock.tests2.StubTest.stubWithReturnValue":72,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":115,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":401,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":206,"org.easymock.tests2.SerializationTest.testAllMockedMethod":133,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":55,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":494,"org.easymock.samples.SupportTest.voteForRemovals":286,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":58,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":354,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":107,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":452,"org.easymock.tests.UsageExpectAndThrowTest.object":86,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":203,"org.easymock.tests2.DelegateToTest.testWrongClass":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":466,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":467,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.samples.ConstructorCalledMockTest.testTax":281,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":171,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":126,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":87,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":19,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":210,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":376,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":454,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":412,"org.easymock.tests2.CaptureTest.testCaptureNone":51,"org.easymock.tests.UsageUnorderedTest.message":68,"org.easymock.tests.UsageVerifyTest.twoReturns":465,"org.easymock.tests.UsageVarargTest.varargByteAccepted":478,"org.easymock.tests2.ThreadingTest.testThreadSafe":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":225,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":301,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":448,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":294,"org.easymock.tests2.CaptureTest.testCapture_2617107":240,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":380,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageConstraintsTest.any":195,"org.easymock.tests2.StubTest.stub":275,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":374,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":438,"org.easymock.tests.UsageExpectAndThrowTest.longType":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":353,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":390,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":373,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":167,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":153,"org.easymock.tests2.SerializationTest.testClass":23,"org.easymock.tests.LimitationsTest.mockNativeMethod":429,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":408,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":32,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":254,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":168,"org.easymock.tests2.NameTest.nameForMocksControl":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":256,"org.easymock.tests2.MockedExceptionTest.testMockedException":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":215,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":81,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":209,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":363,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":20,"org.easymock.tests.MockingTest.testNicePartialClassMocking":361,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":3,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":486,"org.easymock.tests2.CaptureTest.testCaptureLast":50,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":252,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":379,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":192,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":270,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":204,"org.easymock.tests.MockingTest.testTwoMocks":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":84,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":179,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":208,"org.easymock.samples.ExampleTest.removeNonExistingDocument":293,"org.easymock.tests.UsageStrictMockTest.differentMethods":10,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":259,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":150,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":388,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":236,"org.easymock.tests2.MockBuilderTest.testCreateMockString":22,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":312,"org.easymock.tests.UsageExpectAndThrowTest.floatType":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":216,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":212,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":109,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":147,"org.easymock.tests.UsageVerifyTest.twoThrows":104,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":29,"org.easymock.samples.ExampleTest.voteAgainstRemoval":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":346,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":26,"org.easymock.tests.LimitationsTest.privateConstructor":428,"org.easymock.tests2.UsageConstraintsTest.testNotNull":207,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":99,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":271,"org.easymock.tests2.UsageTest.defaultResetToNice":178,"org.easymock.samples.ExampleTest.voteAgainstRemovals":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":54,"org.easymock.tests.UsageVarargTest.differentLength":475,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":253,"org.easymock.tests2.CallbackTest.callback":38,"org.easymock.tests2.UsageConstraintsTest.equals":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":140,"org.easymock.tests.UsageTest.openCallCountByLastCall":415,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":41,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":425,"org.easymock.tests.UsageCallCountTest.tooFewCalls":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":267,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":456,"org.easymock.tests.UsageThrowableTest.throwCheckedException":96,"org.easymock.tests.MockingTest.testStrictClassMocking":357,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":269,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":258,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":266,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":375,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":268,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":110,"org.easymock.tests.ObjectMethodsTest.testHashCode":446,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":490,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":238,"org.easymock.tests2.NameTest.nameForNiceMock":279,"org.easymock.tests2.DependencyTest.testInterfaceMocking":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":489,"org.easymock.samples.ExampleTest.addDocument":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":226,"org.easymock.tests2.DelegateToTest.testStubDelegate":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":230,"org.easymock.tests2.AnswerTest.stubAnswer":1,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":8,"org.easymock.tests.UsageVarargTest.varargLongAccepted":477,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":344,"org.easymock.tests.UsageExpectAndReturnTest.floatType":395,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":145,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":157,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":201,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests.UsageThrowableTest.noUpperLimit":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":184,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":169,"org.easymock.tests2.SerializationTest.test":132,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":242,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":394,"org.easymock.tests2.UsageConstraintsTest.testSame":190,"org.easymock.samples.SupportTest.addDocument":285,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":217,"org.easymock.tests.GenericTest.testPackageScope":333,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":156,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":364,"org.easymock.tests2.NameTest.nameForMock":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":118,"org.easymock.tests2.UsageStrictMockTest.differentMethods":6,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":397,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":89,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":444,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":422,"org.easymock.tests2.MockedExceptionTest.testRealException":274,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":484,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":493,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":424,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":377,"org.easymock.tests2.NameTest.nameForStrictMock":278,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":113,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":45,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":36,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":137,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":170,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":485,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":389,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":202,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":16,"org.easymock.tests2.UsageStrictMockTest.range":5,"org.easymock.tests2.UsageConstraintsTest.lessThan":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":152,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":221,"org.easymock.tests2.CaptureTest.testCaptureRightOne":245,"org.easymock.tests2.UsageConstraintsTest.testOr":191,"org.easymock.tests.UsageRangeTest.combination":419,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageTest.wrongArguments":414,"org.easymock.tests2.MockBuilderTest.testWithConstructor":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":218,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":337,"org.easymock.tests.UsageVarargTest.varargShortAccepted":476,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":391,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":302,"org.easymock.tests2.UsageConstraintsTest.cmpTo":196,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":74,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":71,"org.easymock.tests2.CaptureTest.testCaptureFromStub":246,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":368,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":17,"org.easymock.tests.UsageTest.unexpectedCallWithArray":413,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":405,"org.easymock.tests2.UsageConstraintsTest.constraints":185,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":383,"org.easymock.samples.ExampleTest.addAndChangeDocument":53,"org.easymock.tests.UsageStrictMockTest.testVerify":11,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":284,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":382,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":458,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":328,"org.easymock.tests.LimitationsTest.abstractClass":427,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":63,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":329,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":125}}]
