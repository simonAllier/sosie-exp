[{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[4,21,11,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[35],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[36,37,38,39,34],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[4,21,40,11,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[41,42,43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[46,47],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[48],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:315","failures":[49,50,51,52,6,8,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,28,68,69,70,29,30,71,31,72,73,32,74,75,76,77,78,79,80,81,82,19,83],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[86,87,88,89,90],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[91,92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[93],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[94,41,42,43,95,96,44,97,98],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[84],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[4,99,100,101,102,10,103,104,11,105,106,107,108,109],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[111,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":79,"org.easymock.tests2.UsageTest.argumentsOrdered":101,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":19,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":60,"org.easymock.tests2.StubTest.stubWithReturnValue":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":58,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":40,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":36,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":35,"org.easymock.tests2.DelegateToTest.testStubDelegate":5,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":55,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":72,"org.easymock.tests2.AnswerTest.stubAnswer":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":64,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":92,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":111,"org.easymock.tests2.UsageConstraintsTest.greaterThan":47,"org.easymock.tests.UsageExpectAndThrowTest.object":71,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":14,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":90,"org.easymock.tests2.UsageTest.wrongArguments":99,"org.easymock.tests.UsageStrictMockTest.range":11,"org.easymock.samples.ExampleTest.answerVsDelegate":94,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":8,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":31,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":13,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":86,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":108,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":78,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":57,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":112,"org.easymock.tests.UsageUnorderedTest.message":105,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":9,"org.easymock.tests.GenericTest.testPackageScope":37,"org.easymock.tests.UsageVerifyTest.twoReturns":10,"org.easymock.tests.UsageTest.argumentsOrdered":109,"org.easymock.tests.GenericTest.testBridgedEquals":34,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":81,"org.easymock.tests2.UsageStrictMockTest.differentMethods":21,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":59,"org.easymock.tests.UsageExpectAndThrowTest.longType":67,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":23,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":32,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":39,"org.easymock.tests2.AnswerTest.answer":95,"org.easymock.tests2.MockedExceptionTest.testRealException":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":24,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":45,"org.easymock.tests2.MockedExceptionTest.testMockedException":50,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":12,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":28,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":51,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":74,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":82,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":61,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":43,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":84,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":88,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests.MockingTest.testTwoMocks":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":29,"org.easymock.tests.UsageTest.exactCallCountByLastCall":20,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":33,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests.UsageStrictMockTest.differentMethods":22,"org.easymock.tests.UsageTest.wrongArguments":107,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":87,"org.easymock.tests.UsageExpectAndThrowTest.floatType":66,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":44,"org.easymock.tests.UsageVerifyTest.twoThrows":102,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":98,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":89,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":15,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":18,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":49,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":56,"org.easymock.tests2.CallbackTest.callback":41,"org.easymock.tests.UsageTest.unexpectedCallWithArray":106,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":103,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":30,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":70,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":80,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":27,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":69,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":26,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":93,"org.easymock.tests2.CompareToTest.testGreateThan":46,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":76}}]
