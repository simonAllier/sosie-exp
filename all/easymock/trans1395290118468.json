[{"position":"org.easymock.Capture:82","failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[12,13],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[14,15,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[18],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[19,20,21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"failures":[23,24,25,26,27],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,0,63,2,3,6,64,7,9,65,11,66,67,68,69,70,71,72,73,74,18,75,76,77,78,79,80,81,82,83,84,85,15,86,87,88,89,90,91,92,93,94,95,96,97,98,13,99,100,101,102,103,104,16,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[190,191,192,193,194,195,28,29,196,197,198,199,30,200,201,202,31,203,32,33,204,205,206,207,208,209,34,210,211,212,213,214,215,35,36,37,38,39,40,41,42,43,44,45,46,216,47,48,49,50,51,52,217,218,219,220,221,222,53,54,223,224,55,56,57,58,59,225,60,61,62,226,227,228,229,230,231,232,233,0,63,1,2,3,4,5,6,64,7,9,10,65,11,66,67,68,234,69,235,70,71,72,236,237,73,74,238,239,18,240,241,242,243,75,76,77,78,244,79,80,81,82,83,84,245,85,15,86,87,88,89,90,91,92,93,94,95,246,96,97,98,13,247,248,249,250,251,99,100,101,102,103,104,252,253,16,254,255,22,105,106,107,256,257,258,259,108,260,261,262,109,263,110,264,111,265,266,267,112,268,269,270,271,272,273,274,113,275,276,277,278,279,280,281,282,114,283,284,285,286,115,287,288,116,289,290,291,292,293,294,295,296,297,117,298,299,300,301,302,118,303,304,305,306,307,119,308,120,121,309,122,310,311,312,313,314,123,315,124,316,317,318,319,320,321,322,323,324,325,326,19,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,125,355,126,356,357,358,359,360,361,362,363,364,365,366,25,127,367,128,129,368,369,370,130,131,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,132,133,404,405,134,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,135,433,434,435,436,437,438,136,137,439,138,440,441,442,139,443,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,444,445,167,446,447,448,449,450,451,168,169,170,171,172,452,453,454,455,456,457,458,459,460,461,462,463,173,174,175,176,177,464,178,465,179,180,181,182,183,466,467,184,185,468,469,186,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,187,188,485,486,487,488,489,189,490,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,466],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[474,475,486,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[53,266,498],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[52,217,53,223,56,57,58,59,61,62,227,231,99,100,102,103,104,252,16,254,255,22,105,106,107,256,257,258,108,260,262,109,263,110,111,266,267,112,269,281,282,114,284,285,286,115,287,288,116,289,290,291,292,293,294,295,296,297,117,298,299,300,301,302,118,303,304,306,307,312,312,313,313,124,321,323,324,325,326,19,327,329,354,125,355,126,356,357,358,359,360,361,362,363,364,431,432,135,433,436,437,438,136,137,138,442,477,482,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","bridgeMethod":"toStringMethod"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[324,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[354],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[190,191,192,193,28,29,196,199,30,200,202,31,33,204,34,35,36,37,38,39,40,41,42,43,44,45,46,216,47,48,51,52,219,220,222,53,54,223,224,55,56,57,58,59,60,61,62,0,63,1,2,4,5,6,64,7,9,11,67,68,69,235,72,73,239,18,242,75,76,77,78,79,80,81,82,83,84,85,15,86,87,88,89,90,91,92,93,94,95,96,97,98,13,248,249,250,251,99,101,102,103,104,16,22,106,258,109,263,110,111,113,281,282,114,283,115,116,117,118,305,306,307,119,308,120,121,309,122,311,312,313,314,123,315,124,346,347,348,349,350,125,355,358,366,127,129,368,369,371,372,373,374,375,376,132,133,134,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,135,136,137,138,443,140,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,447,448,449,450,451,168,169,170,171,172,452,453,454,456,457,459,460,461,462,463,173,174,175,176,177,464,178,180,181,183,470,471,472,473,187,188,189,491,492,493,494,495,496,497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[32,33,70,71,128,129,177,181,184,185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:58","sourceCode":"return java.util.List<org.easymock.IArgumentMatcher>","type":"CtReturnImpl"},"failures":[31,50,220,222,0,63,1,2,3,4,5,6,64,7,9,10,65,11,75,76,77,78,79,80,81,82,83,84,85,15,86,87,88,89,90,91,92,93,94,95,246,96,97,98,13,16,330,25,127,132,133,404,405,134,166,444,168,169,170,171,172,463,187,188,496],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[28,29,196,197,198,199,30,200,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,219,220,222,53,54,224,55,56,57,58,59,60,61,62,0,63,2,3,6,64,7,9,10,65,11,66,67,68,69,70,71,72,73,74,238,239,18,240,241,242,75,76,77,78,79,80,81,82,83,84,85,15,86,87,88,89,90,91,92,93,94,95,96,97,98,13,99,100,101,102,103,104,16,105,106,107,108,109,110,111,112,113,281,282,114,283,115,116,117,118,119,308,120,121,122,311,312,312,313,313,123,124,330,343,344,345,346,347,348,349,350,351,352,353,125,126,127,128,129,370,130,131,373,396,402,132,133,404,405,134,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,135,136,137,138,139,443,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,444,167,168,169,170,171,172,173,174,175,176,177,464,178,465,179,180,181,182,183,184,185,186,475,187,188,485,487,488,189,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[190,191,192,193,28,29,196,197,198,199,30,200,201,202,31,203,32,33,204,205,206,207,208,209,34,210,211,212,213,214,215,35,36,37,39,40,42,44,45,46,216,47,48,49,50,51,52,217,219,220,221,222,53,54,223,224,55,58,59,60,61,227,231,232,233,0,63,1,2,3,4,5,6,64,7,9,10,65,11,66,67,68,234,69,235,70,71,72,236,237,73,74,238,239,18,240,241,242,243,75,76,77,78,244,79,80,81,82,83,84,245,85,15,86,87,88,89,90,91,92,93,94,95,246,96,97,98,13,247,99,100,101,102,103,104,252,16,254,255,22,105,106,107,256,108,262,109,263,110,266,267,270,271,272,273,274,113,275,276,277,278,279,280,281,282,114,283,284,115,288,116,290,291,294,295,296,297,117,299,302,118,303,304,305,306,307,119,308,120,121,309,122,310,311,312,312,313,313,314,123,315,124,316,317,318,319,320,321,323,324,325,326,19,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,125,355,126,356,357,358,359,360,361,362,363,364,365,366,25,127,367,128,129,368,369,370,130,131,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,132,133,404,405,134,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,135,433,435,436,437,438,136,137,439,138,440,441,442,139,443,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,444,445,167,446,447,448,449,450,451,168,169,170,171,172,452,453,454,455,456,457,458,459,460,461,462,463,173,174,175,176,177,464,178,465,179,180,181,182,183,466,467,184,185,468,469,186,470,471,472,473,474,475,476,480,482,484,187,188,485,486,487,488,489,189,490,491,492,493,494,495,496,497],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[23,24,25,26,27,466],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[190,191,192,193,28,29,196,199,30,200,201,202,31,203,32,33,204,34,35,36,37,38,39,40,41,42,43,44,45,46,216,47,48,49,50,51,52,219,220,222,53,54,223,224,55,56,57,58,59,60,61,62,0,63,1,2,3,4,5,6,64,7,9,10,65,11,66,67,68,234,69,235,70,71,72,236,237,73,74,239,18,240,242,75,76,77,78,79,80,81,82,83,84,85,15,86,87,88,89,90,91,92,93,94,95,246,96,97,98,13,99,100,101,102,103,104,252,16,22,105,106,107,258,108,109,263,110,111,267,112,269,113,281,282,114,283,115,116,117,118,305,306,307,119,308,120,121,309,122,311,312,313,314,123,315,124,330,346,347,348,349,350,125,355,365,366,25,127,367,128,129,368,373,374,375,376,377,378,379,132,133,404,405,134,499,499,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,135,136,137,138,139,443,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,444,447,448,449,450,451,168,169,170,171,172,452,453,454,456,457,458,459,460,461,462,463,173,175,176,177,464,178,179,180,181,182,183,466,467,184,185,468,469,186,470,471,472,473,187,188,485,487,488,490,491,492,493,494,495,496,497],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Contains:40","failures":[500],"status":-1,"binaryOperator":"((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[501,502],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[23,24,25,26,27,466],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[78,82],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[142,143,464],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[503],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[190,191,192,193,28,196,199,30,200,201,202,31,203,32,33,204,47,48,49,50,51,52,219,220,222,53,54,223,224,55,57,58,61,62,0,63,1,2,3,4,5,6,64,7,9,10,65,11,66,67,68,234,69,235,70,71,72,236,237,73,74,239,18,240,242,243,75,76,77,78,79,80,81,82,83,84,85,15,86,87,88,89,90,91,92,93,94,95,96,97,98,13,248,249,250,251,99,100,101,102,103,104,16,22,106,258,109,263,112,269,281,282,114,283,119,308,120,121,309,122,311,330,335,346,347,348,349,350,125,355,358,365,366,25,127,367,128,129,368,369,371,372,373,374,375,376,132,133,404,405,134,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,135,136,137,138,139,443,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,444,447,448,449,450,451,168,169,170,171,172,452,453,454,456,457,459,460,461,462,463,173,174,175,176,177,464,178,180,181,182,183,466,467,184,185,468,469,186,470,471,472,473,475,187,188,189,491,492,493,494,495,496,497],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[32,33,128,129,388,406,409,410,415,419,420,422,425,150,154,155,157,160],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[109,110,111,504,124],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[52,505,506,53,223,56,57,58,59,61,62,99,100,102,103,104,252,16,22,105,106,107,258,507,108,260,109,263,110,111,267,112,504,269,114,115,116,117,118,306,307,312,312,313,313,124,125,355,126,358,135,438,136,137,138,477,482,491],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[190,191,192,193,28,29,196,199,30,200,201,202,31,203,32,33,204,34,35,36,37,38,39,40,41,42,43,44,45,46,216,47,48,49,50,51,52,219,220,222,53,54,223,224,55,56,57,58,59,60,61,62,0,63,1,2,3,4,5,6,64,7,9,10,65,11,66,67,68,234,69,235,70,71,72,236,237,73,74,239,18,240,242,75,76,77,78,79,80,81,82,83,84,85,15,86,87,88,89,90,91,92,93,94,95,246,96,97,98,13,99,100,101,102,103,104,252,16,22,105,106,107,258,108,109,263,110,111,267,112,269,113,281,282,114,283,115,116,117,118,305,306,307,119,308,120,121,309,122,311,312,313,314,123,315,124,330,346,347,348,349,350,125,355,365,366,25,127,367,128,129,368,373,374,375,376,377,378,379,132,133,404,405,134,499,499,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,135,136,137,138,139,443,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,444,447,448,449,450,451,168,169,170,171,172,452,453,454,456,457,458,459,460,461,462,463,173,175,176,177,464,178,179,180,181,182,183,466,467,184,185,468,469,186,470,471,472,473,187,188,485,487,488,490,491,492,493,494,495,496,497],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":78,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":182,"org.easymock.tests2.UsageTest.argumentsOrdered":237,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":390,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":235,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":315,"org.easymock.tests2.DelegateToTest.testReturnException":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":493,"org.easymock.tests.MockingTest.testPartialClassMocking":136,"org.easymock.tests.MockClassControlTest.testToString":359,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":247,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":411,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":116,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":29,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":132,"org.easymock.tests2.UsageTest.wrongArguments":234,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":215,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":472,"org.easymock.samples.ExampleTest.answerVsDelegate":308,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":482,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":441,"org.easymock.tests2.UsageConstraintsTest.testNull":80,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":102,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":44,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":364,"org.easymock.tests2.CaptureTest.testPrimitive":2,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":134,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":430,"org.easymock.tests.UsageTest.moreThanOneArgument":183,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":348,"org.easymock.tests.UsageTest.argumentsOrdered":469,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":406,"org.easymock.tests.UsageVarargTest.varargIntAccepted":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":168,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":258,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":279,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":172,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":34,"org.easymock.tests.ReplayStateInvalidUsageTest.times":339,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":503,"org.easymock.tests2.DependencyTest.testClassMocking":194,"org.easymock.tests2.AnswerTest.answer":196,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":397,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":193,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":479,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":67,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":22,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":347,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":39,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":410,"org.easymock.tests2.DelegateToTest.testDelegate":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":426,"org.easymock.tests.LimitationsTest.mockFinalMethod":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":451,"org.easymock.tests2.DependencyTest.testClassMockingSupport":195,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":474,"org.easymock.tests2.CaptureTest.testCapture1_2446744":3,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":424,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":191,"org.easymock.tests.UsageThrowableTest.throwError":139,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":333,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":481,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":434,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":304,"org.easymock.samples.PartialClassMockTest.testGetArea":124,"org.easymock.tests.MockingTest.testInterfaceMocking":439,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":169,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":412,"org.easymock.tests2.UsageTest.niceToStrict":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":293,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":321,"org.easymock.tests2.ThreadingTest.testChangeDefault":502,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":109,"org.easymock.tests2.MockBuilderTest.testCreateMock":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":300,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":212,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":420,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":23,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":40,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":478,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":345,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":470,"org.easymock.tests.UsageOverloadedMethodTest.overloading":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":302,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":488,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":88,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":157,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":20,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":87,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":7,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":455,"org.easymock.tests2.EasyMockSupportClassTest.testAll":115,"org.easymock.tests.MockClassControlTest.testEquals":363,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":428,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":505,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":449,"org.easymock.tests2.CaptureTest.testCaptureAll":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":192,"org.easymock.tests.MockNameTest.defaultName":435,"org.easymock.tests2.UsageConstraintsTest.testMatches":89,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":349,"org.easymock.samples.ExampleTest.voteForRemovals":122,"org.easymock.tests.UsageVarargTest.allKinds":463,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":450,"org.easymock.samples.BasicClassMockTest.testPrintContent":307,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":144,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":497,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":276,"org.easymock.tests2.UsageConstraintsTest.greaterThan":91,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":287,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":174,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":107,"org.easymock.samples.ExampleTest.voteForRemoval":120,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":329,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":48,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":256,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":483,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":252,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":491,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":66,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":37,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":492,"org.easymock.tests2.CaptureTest.testCaptureFirst":11,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":38,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":74,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":490,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":153,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":50,"org.easymock.tests2.CaptureTest.testCapture2_2446744":65,"org.easymock.tests2.UsageTest.moreThanOneArgument":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":398,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":112,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":462,"org.easymock.tests.GenericTest.testBridgedEquals":356,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":378,"org.easymock.tests.UsageExpectAndReturnTest.longType":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":447,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":35,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":504,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":429,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":465,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":246,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":352,"org.easymock.tests.UsageCallCountTest.tooManyCalls":379,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":301,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":214,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":416,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":143,"org.easymock.tests.MockingTest.testNiceClassMocking":442,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":57,"org.easymock.tests.MockingTest.testClassMocking":437,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":507,"org.easymock.tests2.UsageConstraintsTest.testContains":86,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":372,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":114,"org.easymock.tests2.UsageConstraintsTest.testFind":79,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":181,"org.easymock.tests.MockTypeTest.fromEasyMockClass":480,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":222,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":365,"org.easymock.tests.UsageExpectAndReturnTest.object":156,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":43,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":457,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":319,"org.easymock.tests.UsageTest.exactCallCountByLastCall":186,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":407,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":217,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":452,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":162,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":487,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":271,"org.easymock.tests.MockClassControlTest.testHashCode":362,"org.easymock.tests2.EasyMockSupportTest.testVerify":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":295,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":408,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":485,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":190,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":243,"org.easymock.tests.UsageVarargTest.varargCharAccepted":456,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":322,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":403,"org.easymock.tests2.UsageTest.openCallCountByLastCall":70,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":46,"org.easymock.tests.DefaultClassInstantiatorTest.object":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":343,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":317,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":208,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":105,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":361,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":417,"org.easymock.tests.CapturesMatcherTest.test":499,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":118,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":360,"org.easymock.tests2.UsageTest.resumeIfFailure":73,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":477,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":495,"org.easymock.tests2.StubTest.stubWithReturnValue":55,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":96,"org.easymock.tests2.SerializationTest.testAllMockedMethod":223,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":396,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":498,"org.easymock.samples.SupportTest.voteForRemovals":123,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":24,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":354,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":423,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":402,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":197,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":446,"org.easymock.tests.UsageExpectAndThrowTest.object":421,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":94,"org.easymock.tests2.DelegateToTest.testWrongClass":240,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":187,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":188,"org.easymock.tests.UsageStrictMockTest.range":128,"org.easymock.samples.ConstructorCalledMockTest.testTax":312,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":232,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":42,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":422,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":110,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":284,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":471,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":131,"org.easymock.tests2.CaptureTest.testCaptureNone":64,"org.easymock.tests.UsageUnorderedTest.message":330,"org.easymock.tests.UsageVerifyTest.twoReturns":178,"org.easymock.tests.UsageVarargTest.varargByteAccepted":461,"org.easymock.tests2.ThreadingTest.testThreadSafe":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":298,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":376,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":306,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":320,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":476,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":400,"org.easymock.tests2.UsageConstraintsTest.any":85,"org.easymock.tests2.StubTest.stub":224,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":338,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":494,"org.easymock.tests.UsageExpectAndThrowTest.longType":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":401,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":19,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":337,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":203,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":113,"org.easymock.tests2.SerializationTest.testClass":53,"org.easymock.tests.LimitationsTest.mockNativeMethod":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":165,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":126,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":207,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":204,"org.easymock.tests2.NameTest.nameForMocksControl":251,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":209,"org.easymock.tests2.MockedExceptionTest.testMockedException":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":288,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":185,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":415,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":138,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":221,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":99,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":111,"org.easymock.tests.MockingTest.testNicePartialClassMocking":137,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":104,"org.easymock.tests2.CaptureTest.testCaptureLast":6,"org.easymock.tests2.CompareToTest.testCompareEqual":14,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":205,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":475,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":62,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":83,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":95,"org.easymock.tests.MockingTest.testTwoMocks":438,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":419,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":236,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":98,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":501,"org.easymock.samples.ExampleTest.removeNonExistingDocument":310,"org.easymock.tests.UsageStrictMockTest.differentMethods":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":211,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":272,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":325,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":49,"org.easymock.tests2.MockBuilderTest.testCreateMockString":269,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":357,"org.easymock.tests.UsageExpectAndThrowTest.floatType":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":289,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":286,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":199,"org.easymock.tests.UsageVerifyTest.twoThrows":464,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":218,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":117,"org.easymock.samples.ExampleTest.voteAgainstRemoval":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":391,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":370,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":106,"org.easymock.tests.LimitationsTest.privateConstructor":432,"org.easymock.tests2.UsageConstraintsTest.testNotNull":97,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":145,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":281,"org.easymock.tests2.UsageTest.defaultResetToNice":72,"org.easymock.samples.ExampleTest.voteAgainstRemovals":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":161,"org.easymock.tests.UsageVarargTest.differentLength":458,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":206,"org.easymock.tests2.CallbackTest.callback":219,"org.easymock.tests2.UsageConstraintsTest.equals":244,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":254,"org.easymock.tests.UsageTest.openCallCountByLastCall":184,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":404,"org.easymock.tests.UsageCallCountTest.tooFewCalls":374,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":59,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":473,"org.easymock.tests.UsageThrowableTest.throwCheckedException":142,"org.easymock.tests.MockingTest.testStrictClassMocking":436,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":27,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":444,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":61,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":210,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":340,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":60,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":200,"org.easymock.tests.ObjectMethodsTest.testHashCode":318,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":51,"org.easymock.tests2.NameTest.nameForNiceMock":250,"org.easymock.tests2.DependencyTest.testInterfaceMocking":28,"org.easymock.samples.ExampleTest.addDocument":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":299,"org.easymock.tests2.DelegateToTest.testStubDelegate":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":303,"org.easymock.tests2.AnswerTest.stubAnswer":30,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":127,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":265,"org.easymock.tests.UsageVarargTest.varargLongAccepted":460,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":389,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":164,"org.easymock.tests.UsageExpectAndReturnTest.floatType":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":52,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":313,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":489,"org.easymock.tests.UsageThrowableTest.noUpperLimit":443,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":278,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":76,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":227,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":4,"org.easymock.tests2.SerializationTest.test":54,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":21,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":324,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":147,"org.easymock.tests2.UsageConstraintsTest.testSame":81,"org.easymock.samples.SupportTest.addDocument":314,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":225,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":290,"org.easymock.tests.GenericTest.testPackageScope":125,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":384,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":277,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":440,"org.easymock.tests2.NameTest.nameForMock":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":158,"org.easymock.tests2.UsageStrictMockTest.differentMethods":33,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":268,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":255,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":425,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":316,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":176,"org.easymock.tests2.MockedExceptionTest.testRealException":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":393,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":133,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":342,"org.easymock.tests2.NameTest.nameForStrictMock":249,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":262,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":220,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":103,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":231,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":93,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":326,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":108,"org.easymock.tests2.UsageStrictMockTest.range":32,"org.easymock.tests2.UsageConstraintsTest.lessThan":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":36,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":294,"org.easymock.tests2.UsageConstraintsTest.testOr":82,"org.easymock.tests.UsageRangeTest.combination":173,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":100,"org.easymock.tests.UsageTest.wrongArguments":467,"org.easymock.tests2.MockBuilderTest.testWithConstructor":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":291,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":358,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":381,"org.easymock.tests.UsageVarargTest.varargShortAccepted":459,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":327,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":377,"org.easymock.tests2.UsageConstraintsTest.cmpTo":15,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":198,"org.easymock.tests2.CompareToTest.testLessThan":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":383,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":71,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":332,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":260,"org.easymock.tests.UsageTest.unexpectedCallWithArray":466,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":375,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":160,"org.easymock.tests2.CaptureTest.testCapture":8,"org.easymock.tests2.UsageConstraintsTest.constraints":77,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":367,"org.easymock.samples.ExampleTest.addAndChangeDocument":311,"org.easymock.tests2.ConstraintsToStringTest.containsToString":500,"org.easymock.tests.UsageStrictMockTest.testVerify":369,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":305,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":366,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":448,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":5,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":506,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":170,"org.easymock.tests.LimitationsTest.abstractClass":431,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":152,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":171,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":41}}]
