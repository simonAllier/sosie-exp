[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[8,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[10,11,12,13,14,15,16,17,18,18,19,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,0,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,6,98,99,8,9,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,2,3,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[332,250,333,334,335],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[174,186,187,194,201,292],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,17,18,18,19,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,42,43,44,45,46,47,48,49,50,51,52,336,53,54,55,0,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,337,338,84,85,86,87,88,89,90,91,92,94,96,97,6,98,99,8,9,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,119,120,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,339,160,161,162,340,163,164,165,166,2,3,4,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,341,216,217,218,219,220,342,343,344,345,346,221,222,223,347,348,349,224,225,226,230,231,233,234,235,236,238,239,333,334,335,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,350,285,286,287,288,289,290,291,292,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,351,352,353,354,355,356,357,358,327,359,328,329,360,330],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[361,362,363],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[88,95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[340],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[364],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"position":"org.easymock.internal.RecordState:280","failures":[11,339,160,161,162,340,163,328],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:206","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[365,366,367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":46,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":260,"org.easymock.tests2.UsageTest.argumentsOrdered":134,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":209,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":129,"org.easymock.tests2.StubTest.stubWithReturnValue":166,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":195,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":65,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":22,"org.easymock.tests2.SerializationTest.testAllMockedMethod":151,"org.easymock.tests2.DelegateToTest.testReturnException":160,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":207,"org.easymock.tests.MockingTest.testPartialClassMocking":221,"org.easymock.samples.SupportTest.voteForRemovals":24,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":1,"org.easymock.tests.MockClassControlTest.testToString":254,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":364,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":310,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":298,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":153,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":337,"org.easymock.tests.UsageExpectAndThrowTest.object":308,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":62,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":28,"org.easymock.tests2.DelegateToTest.testWrongClass":162,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":291,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":292,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":286,"org.easymock.tests2.UsageTest.wrongArguments":127,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests.UsageStrictMockTest.range":182,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":169,"org.easymock.samples.ExampleTest.answerVsDelegate":11,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":109,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":142,"org.easymock.tests2.UsageConstraintsTest.testNull":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":309,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":90,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":259,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":111,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":119,"org.easymock.tests2.CaptureTest.testPrimitive":72,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":290,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":317,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":266,"org.easymock.tests.UsageTest.moreThanOneArgument":261,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":250,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":89,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":173,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":349,"org.easymock.tests2.CaptureTest.testCaptureNone":77,"org.easymock.tests.UsageUnorderedTest.message":318,"org.easymock.tests.UsageVerifyTest.twoReturns":218,"org.easymock.tests.UsageVarargTest.varargByteAccepted":277,"org.easymock.tests2.ThreadingTest.testThreadSafe":99,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":351,"org.easymock.tests.UsageTest.argumentsOrdered":267,"org.easymock.tests.UsageVarargTest.varargIntAccepted":271,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":236,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":280,"org.easymock.tests2.CaptureTest.testCapture_2617107":71,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":115,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":366,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":289,"org.easymock.tests2.UsageConstraintsTest.any":53,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":118,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":247,"org.easymock.tests2.StubTest.stub":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":284,"org.easymock.tests.UsageExpectAndThrowTest.longType":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":208,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":361,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":246,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":34,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests2.SerializationTest.testClass":149,"org.easymock.tests.ReplayStateInvalidUsageTest.times":248,"org.easymock.tests.LimitationsTest.mockNativeMethod":230,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":205,"org.easymock.tests2.AnswerTest.answer":83,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":4,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":41,"org.easymock.tests2.CaptureTest.testAnd":69,"org.easymock.tests2.UsageTest.strictResetToDefault":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":95,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":37,"org.easymock.tests2.NameTest.nameForMocksControl":159,"org.easymock.tests2.MockedExceptionTest.testMockedException":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":106,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":265,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":355,"org.easymock.tests2.DelegateToTest.testDelegate":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":302,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":223,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":87,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":120,"org.easymock.tests.MockingTest.testNicePartialClassMocking":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":313,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":92,"org.easymock.tests2.CaptureTest.testCaptureLast":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":343,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":51,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":297,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":63,"org.easymock.tests.MockingTest.testTwoMocks":346,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":342,"org.easymock.tests2.CaptureTest.testCapture1_2446744":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":186,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":39,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":133,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":67,"org.easymock.tests.UsageThrowableTest.throwError":319,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":242,"org.easymock.samples.ExampleTest.removeNonExistingDocument":16,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":244,"org.easymock.tests.UsageStrictMockTest.differentMethods":183,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":9,"org.easymock.tests2.MockBuilderTest.testCreateMockString":123,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":252,"org.easymock.tests.UsageExpectAndThrowTest.floatType":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":175,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":58,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":84,"org.easymock.tests.UsageVerifyTest.twoThrows":217,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":154,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":281,"org.easymock.samples.ExampleTest.voteAgainstRemoval":13,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":348,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":347,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":97,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":299,"org.easymock.tests2.UsageTest.niceToStrict":128,"org.easymock.tests2.UsageConstraintsTest.testNotNull":66,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":326,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":137,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":117,"org.easymock.tests2.MockBuilderTest.testCreateMock":121,"org.easymock.tests2.UsageTest.defaultResetToNice":132,"org.easymock.samples.ExampleTest.voteAgainstRemovals":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":201,"org.easymock.tests.UsageVarargTest.differentLength":274,"org.easymock.tests2.CallbackTest.callback":164,"org.easymock.tests.UsageTest.openCallCountByLastCall":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":307,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":107,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":43,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":358,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":288,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":167,"org.easymock.tests.UsageCallCountTest.tooFewCalls":234,"org.easymock.tests.UsageOverloadedMethodTest.overloading":225,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":329,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":56,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":197,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":145,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":362,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":170,"org.easymock.tests.UsageThrowableTest.throwCheckedException":323,"org.easymock.tests.MockClassControlTest.testEquals":258,"org.easymock.tests2.EasyMockSupportClassTest.testAll":152,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":3,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":295,"org.easymock.tests2.CaptureTest.testCaptureAll":70,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":220,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":147,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":144,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":249,"org.easymock.tests2.UsageConstraintsTest.testMatches":57,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":146,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":86,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":174,"org.easymock.tests.ObjectMethodsTest.testHashCode":228,"org.easymock.samples.ExampleTest.voteForRemovals":15,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":101,"org.easymock.tests2.NameTest.nameForNiceMock":158,"org.easymock.tests.UsageVarargTest.allKinds":279,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":216,"org.easymock.tests2.DependencyTest.testInterfaceMocking":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":296,"org.easymock.samples.BasicClassMockTest.testPrintContent":26,"org.easymock.samples.ExampleTest.addDocument":14,"org.easymock.tests2.DelegateToTest.testStubDelegate":161,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":325,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":31,"org.easymock.tests2.AnswerTest.stubAnswer":85,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":211,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":180,"org.easymock.tests2.UsageConstraintsTest.greaterThan":59,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":213,"org.easymock.tests.UsageVarargTest.varargLongAccepted":276,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":6,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":184,"org.easymock.samples.ExampleTest.voteForRemoval":12,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":8,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":204,"org.easymock.tests.UsageExpectAndReturnTest.floatType":188,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":367,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":98,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests.UsageThrowableTest.noUpperLimit":320,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":60,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":285,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":44,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":124,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":74,"org.easymock.tests2.SerializationTest.test":150,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":104,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":321,"org.easymock.tests2.UsageConstraintsTest.testSame":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":187,"org.easymock.samples.SupportTest.addDocument":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":206,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":339,"org.easymock.tests2.CaptureTest.testCaptureFirst":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":105,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":136,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":193,"org.easymock.tests.GenericTest.testPackageScope":2,"org.easymock.tests2.CaptureTest.testCapture2_2446744":81,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":100,"org.easymock.tests2.UsageTest.moreThanOneArgument":126,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":354,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":122,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":278,"org.easymock.tests.GenericTest.testBridgedEquals":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":238,"org.easymock.tests2.NameTest.nameForMock":156,"org.easymock.tests.UsageExpectAndReturnTest.longType":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":293,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":102,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":198,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":350,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":314,"org.easymock.tests2.UsageStrictMockTest.differentMethods":36,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":334,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":190,"org.easymock.tests.UsageCallCountTest.tooManyCalls":239,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":215,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":233,"org.easymock.tests2.MockedExceptionTest.testRealException":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":303,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":287,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":251,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":143,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":232,"org.easymock.tests2.UsageConstraintsTest.testContains":55,"org.easymock.tests2.NameTest.nameForStrictMock":157,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":139,"org.easymock.tests2.UsageConstraintsTest.testFind":47,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":226,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":29,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":91,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":30,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":177,"org.easymock.tests.UsageExpectAndReturnTest.object":196,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":61,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":94,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":116,"org.easymock.tests2.UsageStrictMockTest.range":35,"org.easymock.tests2.UsageConstraintsTest.lessThan":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":110,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":273,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":229,"org.easymock.tests.UsageTest.exactCallCountByLastCall":268,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":219,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":103,"org.easymock.tests2.CaptureTest.testCaptureRightOne":79,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":352,"org.easymock.tests2.UsageConstraintsTest.testOr":50,"org.easymock.tests.UsageRangeTest.combination":212,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":269,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":88,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":328,"org.easymock.tests.UsageTest.wrongArguments":263,"org.easymock.tests.MockClassControlTest.testHashCode":257,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":253,"org.easymock.tests2.EasyMockSupportTest.testVerify":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":199,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":357,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":327,"org.easymock.tests.UsageVarargTest.varargShortAccepted":275,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":237,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":38,"org.easymock.tests2.UsageConstraintsTest.cmpTo":54,"org.easymock.tests.UsageVarargTest.varargCharAccepted":272,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":338,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":32,"org.easymock.tests2.UsageTest.openCallCountByLastCall":130,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":113,"org.easymock.tests.DefaultClassInstantiatorTest.object":176,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":356,"org.easymock.tests2.CaptureTest.testCaptureFromStub":80,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":241,"org.easymock.tests.UsageTest.unexpectedCallWithArray":262,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":227,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":305,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":322,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":179,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":235,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":200,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":256,"org.easymock.tests2.UsageConstraintsTest.constraints":45,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":96,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":304,"org.easymock.samples.ExampleTest.addAndChangeDocument":17,"org.easymock.tests.CapturesMatcherTest.test":7,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":203,"org.easymock.tests.UsageStrictMockTest.testVerify":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":333,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":20,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":155,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":294,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":75,"org.easymock.tests2.UsageTest.resumeIfFailure":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":282,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":192,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":283,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":108,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":365}}]
