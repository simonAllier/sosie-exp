[{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,434,435,435,436,437,438,439,440],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[441,442,443,444,445,446,447,174],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,434,435,435,436,437,438,439,440],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[75,77,448,449,436],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[450,451,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","defaultValue":"value","key":"key"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[113],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[23,25,28,29,453,53,454,73,455,74,75,77,448,456,78,457,458,158,165,168,171,174,175,249,252,459,260,434,434,435,435,436],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[24,27,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,454,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,143,144,148,150,254,255,256,257,258,265,266,304,305,306,307,361,362,363,364,396,397,409,410,411,412,413],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.RecordState:217","failures":[10,17,18,19,20,21,22,24,29,32,33,34,460,35,36,461,462,38,39,40,41,42,45,51,52,55,57,58,59,60,61,62,64,65,66,67,68,69,72,75,77,448,85,94,95,97,98,99,103,104,106,110,113,116,117,119,120,122,125,128,129,130,131,132,133,463,464,137,138,139,140,465,142,143,144,145,146,147,156,158,165,168,171,172,173,174,176,178,180,182,183,184,226,227,229,234,239,247,250,251,265,275,276,278,283,288,293,294,295,297,298,300,301,302,303,304,318,319,337,338,339,340,341,342,343,344,345,350,352,353,355,368,369,370,372,373,377,380,381,382,386,387,389,393,395,396,397,398,399,400,401,409,410,411,412,421,422,424,425,426,427,428,429,431,432,433,436,437,438,439,440],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:338","sourceCode":"if (java.lang.reflect.Type != null) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","resolvedType":"actualTypeArgument","variable":"variable"}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[116],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[148],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[11,86,466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","type":"type","this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[59,61,69,109,110,113,115,116,118,128,133],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[59,60,61,62,69,70,109,110,112,113,114,115,116,117,118,119,128,129,133,134],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[467,468,469],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[470],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[471,472,473,474,376,396],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[475,476],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[31,50],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[42,94,100,101,106,143,317,319,374,378,379,382,397],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[42,148,150,176,199],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:70","failures":[145,146,399,400],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[145,146,194,228,232,233,235,238,277,281,282,284,287,312,315,316,399,400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[21,125],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[249],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[415,419],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[17,18,20,21,22,23,24,26,27,28,29,30,31,453,53,54,55,463,464,137,138,140,465,151,152,155,156,157,477,159,478,163,479,166,167,173,210,211,212,213,214,215,216,217,245,246,247,248,249,250,251,253,383,384,385,386,387,389,392,393,414,415,416,417,418,419,420,432,433,434,435,436],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[17,18,20,21,22,23,24,25,26,27,28,29,30,31,453,53,54,55,454,480,73,455,74,75,76,77,448,78,79,457,449,458,463,464,137,138,140,465,481,482,483,484,485,151,152,155,486,487,156,488,157,158,477,159,160,489,478,161,162,163,164,165,479,166,490,491,167,168,169,170,171,173,174,175,210,211,212,213,214,215,216,217,223,245,246,247,248,249,250,251,252,253,459,260,383,384,385,386,387,389,392,393,414,415,416,417,418,419,420,432,433,434,434,435,435,436],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[53,54,55,56,306,357,358,359,360,361,362,411],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[61,109,116,128],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":110,"org.easymock.tests2.UsageTest.argumentsOrdered":104,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":374,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":196,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":99,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":440,"org.easymock.tests2.DelegateToTest.testReturnException":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":358,"org.easymock.tests.MockingTest.testPartialClassMocking":386,"org.easymock.tests.MockClassControlTest.testToString":212,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":0,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":407,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":489,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":273,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":442,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":409,"org.easymock.tests2.UsageTest.wrongArguments":97,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":91,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":268,"org.easymock.samples.ExampleTest.answerVsDelegate":425,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":260,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":391,"org.easymock.tests2.UsageConstraintsTest.testNull":113,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":38,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":217,"org.easymock.tests2.CaptureTest.testPrimitive":62,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":413,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":292,"org.easymock.tests.UsageTest.moreThanOneArgument":375,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":19,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":309,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":312,"org.easymock.tests.UsageTest.argumentsOrdered":381,"org.easymock.tests.UsageVarargTest.varargIntAccepted":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":254,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":454,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":446,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":15,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":258,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":85,"org.easymock.tests.ReplayStateInvalidUsageTest.times":333,"org.easymock.tests2.AnswerTest.answer":42,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":203,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":4,"org.easymock.tests2.CaptureTest.testAnd":59,"org.easymock.tests2.UsageTest.strictResetToDefault":95,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":27,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":347,"org.easymock.tests2.DelegateToTest.testDelegate":182,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":288,"org.easymock.tests.LimitationsTest.mockFinalMethod":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":361,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":324,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":183,"org.easymock.tests2.CaptureTest.testCapture1_2446744":63,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":286,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":2,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":327,"org.easymock.tests.UsageThrowableTest.throwError":337,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":466,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":170,"org.easymock.samples.PartialClassMockTest.testGetArea":436,"org.easymock.tests.MockingTest.testInterfaceMocking":388,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":255,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":478,"org.easymock.tests2.UsageTest.niceToStrict":98,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":274,"org.easymock.tests2.ThreadingTest.testChangeDefault":451,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":186,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":75,"org.easymock.tests2.MockBuilderTest.testCreateMock":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":490,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":88,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":471,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":282,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":36,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":266,"org.easymock.tests.UsageOverloadedMethodTest.overloading":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":164,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":123,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":353,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":421,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":235,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":122,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":68,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":296,"org.easymock.tests2.EasyMockSupportClassTest.testAll":156,"org.easymock.tests.MockClassControlTest.testEquals":216,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":251,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":290,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":481,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":3,"org.easymock.tests2.CaptureTest.testCaptureAll":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":322,"org.easymock.tests.MockNameTest.defaultName":244,"org.easymock.tests2.UsageConstraintsTest.testMatches":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":310,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":325,"org.easymock.samples.ExampleTest.voteForRemovals":429,"org.easymock.tests.UsageVarargTest.allKinds":304,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":317,"org.easymock.samples.BasicClassMockTest.testPrintContent":433,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":323,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":343,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":141,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":362,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":447,"org.easymock.tests2.UsageConstraintsTest.greaterThan":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":488,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":346,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":30,"org.easymock.samples.ExampleTest.voteForRemoval":426,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":420,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":31,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":23,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":393,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":94,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":34,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":357,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":177,"org.easymock.tests2.CaptureTest.testCaptureFirst":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":192,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":460,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":106,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":231,"org.easymock.tests2.UsageTest.moreThanOneArgument":96,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":51,"org.easymock.tests2.CaptureTest.testCapture2_2446744":71,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":204,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":303,"org.easymock.tests.GenericTest.testBridgedEquals":253,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":372,"org.easymock.tests.UsageExpectAndReturnTest.longType":227,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":32,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":320,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":449,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":291,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":131,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":289,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":307,"org.easymock.tests.UsageCallCountTest.tooManyCalls":373,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":491,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":278,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":342,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":464,"org.easymock.tests.MockingTest.testNiceClassMocking":392,"org.easymock.tests.MockingTest.testClassMocking":384,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":480,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":366,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":55,"org.easymock.tests2.UsageConstraintsTest.testFind":112,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":423,"org.easymock.tests.MockTypeTest.fromEasyMockClass":259,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":394,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":150,"org.easymock.tests.UsageExpectAndReturnTest.object":234,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":462,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":443,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":298,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":221,"org.easymock.tests.UsageTest.exactCallCountByLastCall":382,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":191,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":406,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":313,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":175,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":240,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":293,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":6,"org.easymock.tests.MockClassControlTest.testHashCode":215,"org.easymock.tests2.EasyMockSupportTest.testVerify":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":162,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":314,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":271,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":350,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":1,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":136,"org.easymock.tests.UsageVarargTest.varargCharAccepted":297,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":209,"org.easymock.tests2.UsageTest.openCallCountByLastCall":100,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":468,"org.easymock.tests.DefaultClassInstantiatorTest.object":414,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":40,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":270,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":163,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":280,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":485,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":340,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":83,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":5,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":28,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":214,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":279,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":168,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":213,"org.easymock.tests2.UsageTest.resumeIfFailure":105,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":360,"org.easymock.tests2.StubTest.stubWithReturnValue":93,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":132,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":233,"org.easymock.tests2.SerializationTest.testAllMockedMethod":173,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":202,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":472,"org.easymock.samples.SupportTest.voteForRemovals":439,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":249,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":8,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":285,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":208,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":43,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":408,"org.easymock.tests.UsageExpectAndThrowTest.object":283,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":129,"org.easymock.tests2.DelegateToTest.testWrongClass":180,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":363,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":364,"org.easymock.samples.ConstructorCalledMockTest.testTax":434,"org.easymock.tests.UsageStrictMockTest.range":399,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":153,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":37,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":463,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":284,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":155,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":335,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":267,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":473,"org.easymock.tests2.CaptureTest.testCaptureNone":67,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":264,"org.easymock.tests.UsageUnorderedTest.message":265,"org.easymock.tests.UsageVerifyTest.twoReturns":319,"org.easymock.tests.UsageVarargTest.varargByteAccepted":302,"org.easymock.tests2.ThreadingTest.testThreadSafe":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":479,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":370,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":432,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":222,"org.easymock.tests2.CaptureTest.testCapture_2617107":61,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":185,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":206,"org.easymock.tests2.UsageConstraintsTest.any":119,"org.easymock.tests2.StubTest.stub":92,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":332,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":207,"org.easymock.tests.UsageExpectAndThrowTest.longType":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":359,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":418,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":331,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":144,"org.easymock.tests2.SerializationTest.testClass":171,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":10,"org.easymock.tests.LimitationsTest.mockNativeMethod":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":243,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":252,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":484,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":82,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":147,"org.easymock.tests2.MockedExceptionTest.testMockedException":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":157,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":379,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":389,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":149,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":277,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":448,"org.easymock.tests.MockingTest.testNicePartialClassMocking":387,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":22,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":441,"org.easymock.tests2.CaptureTest.testCaptureLast":66,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":80,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":184,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":465,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":116,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":130,"org.easymock.tests.MockingTest.testTwoMocks":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":224,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":281,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":103,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":134,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":452,"org.easymock.samples.ExampleTest.removeNonExistingDocument":430,"org.easymock.tests.UsageStrictMockTest.differentMethods":400,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":87,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":7,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":476,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":416,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":50,"org.easymock.tests2.MockBuilderTest.testCreateMockString":458,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":477,"org.easymock.tests.UsageExpectAndThrowTest.floatType":275,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":487,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":45,"org.easymock.tests.UsageVerifyTest.twoThrows":318,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":165,"org.easymock.samples.ExampleTest.voteAgainstRemoval":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":197,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":262,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":29,"org.easymock.tests.LimitationsTest.privateConstructor":246,"org.easymock.tests2.UsageConstraintsTest.testNotNull":133,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":344,"org.easymock.tests2.UsageTest.defaultResetToNice":102,"org.easymock.samples.ExampleTest.voteAgainstRemovals":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":198,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":239,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":81,"org.easymock.tests.UsageVarargTest.differentLength":299,"org.easymock.tests2.CallbackTest.callback":176,"org.easymock.tests2.UsageConstraintsTest.equals":111,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":25,"org.easymock.tests.UsageTest.openCallCountByLastCall":378,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":107,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":411,"org.easymock.tests.UsageCallCountTest.tooFewCalls":368,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":269,"org.easymock.tests.UsageThrowableTest.throwCheckedException":341,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":474,"org.easymock.tests.MockingTest.testStrictClassMocking":383,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":140,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":306,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":86,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":334,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":139,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":47,"org.easymock.tests.ObjectMethodsTest.testHashCode":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":445,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":52,"org.easymock.tests2.DependencyTest.testInterfaceMocking":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":444,"org.easymock.samples.ExampleTest.addDocument":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":166,"org.easymock.tests2.DelegateToTest.testStubDelegate":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":169,"org.easymock.tests2.AnswerTest.stubAnswer":46,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":397,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":456,"org.easymock.tests.UsageVarargTest.varargLongAccepted":301,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":195,"org.easymock.tests.UsageExpectAndReturnTest.floatType":226,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":174,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":435,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":14,"org.easymock.tests.UsageThrowableTest.noUpperLimit":338,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":108,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":151,"org.easymock.tests2.SerializationTest.test":172,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":64,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":415,"org.easymock.tests2.UsageConstraintsTest.testSame":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":225,"org.easymock.samples.SupportTest.addDocument":438,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":159,"org.easymock.tests.GenericTest.testPackageScope":250,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":190,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":13,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":390,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":236,"org.easymock.tests2.UsageStrictMockTest.differentMethods":146,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":26,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":228,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":287,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":218,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":348,"org.easymock.tests2.MockedExceptionTest.testRealException":56,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":261,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":200,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":199,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":410,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":336,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":469,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":152,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":417,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":128,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":73,"org.easymock.tests2.UsageStrictMockTest.range":145,"org.easymock.tests2.UsageConstraintsTest.lessThan":135,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":482,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":9,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":470,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":161,"org.easymock.tests2.CaptureTest.testCaptureRightOne":69,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":475,"org.easymock.tests2.UsageConstraintsTest.testOr":115,"org.easymock.tests.UsageRangeTest.combination":345,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.UsageTest.wrongArguments":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":160,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":211,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":237,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":419,"org.easymock.tests.UsageVarargTest.varargShortAccepted":300,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":371,"org.easymock.tests2.UsageConstraintsTest.cmpTo":120,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":189,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":101,"org.easymock.tests2.CaptureTest.testCaptureFromStub":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":326,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":455,"org.easymock.tests.UsageTest.unexpectedCallWithArray":376,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":396,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":369,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":238,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":398,"org.easymock.tests2.UsageConstraintsTest.constraints":109,"org.easymock.samples.ExampleTest.addAndChangeDocument":431,"org.easymock.tests.UsageStrictMockTest.testVerify":402,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":437,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":395,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":321,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":65,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":483,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":256,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":230,"org.easymock.tests.LimitationsTest.abstractClass":245,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":257,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":461,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":294}}]
