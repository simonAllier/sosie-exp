[{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[49,50],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[51,52,53,0,54,55,56,57,58,59,60],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[61,21,62,63,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[65,66,47],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[67],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[68,69,70,71,72,73,74,75,76,76,77,77,51,78,52,79,80,81,82,83,84,85,53,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,0,54,102,55,67,56,57,103,58,104,105,106,107,108,109,1,110,111,59,112,113,114,115,60,116,117,118,119,120,121,122,123,124,61,125,126,127,128,129,130,131,132,133,134,135,2,136,137,3,4,5,138,139,140,6,7,8,9,141,10,142,143,144,145,146,147,148,11,149,12,150,151,152,153,154,155,13,156,14,15,16,157,158,159,160,17,161,162,163,18,19,164,165,20,166,167,21,168,169,170,171,172,173,174,175,176,177,178,22,179,180,181,182,183,23,24,25,62,63,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,65,66,208,209,26,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,30,238,31,32,239,240,33,34,35,241,242,243,244,245,246,247,248,249,36,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,39,40,268,41,42,43,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,47,48,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[15,26,334,335,42,47,48],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[68,336,337,76,76,77,77,89,338,99,339,340,341,118,119,120,121,123,124,342,343,344,132,345,346,133,347,348,349,350,351,352,353,354,355,134,356,357,358,359,360,135,361,362,141,10,143,144,145,146,147,363,364,148,11,149,12,365,150,366,367,174,175,176,178,22,179,368,180,181,182,183,369,23,24,25,210,213,370,49,371,372,373,50,374,375,376,216,377,224,225,226,227,228,229,230,378,379,246,247,248,249,380,381,270,382,271,272,273,332],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[383],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[384,6,33],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[69,70,71,72,385,73,74,51,78,52,79,81,82,83,84,85,53,88,89,90,338,92,93,96,97,98,99,100,101,0,54,102,55,67,56,57,103,104,105,106,107,108,109,1,110,111,59,112,113,115,60,116,117,119,120,123,124,61,127,128,129,136,137,4,5,140,8,141,142,143,144,145,147,148,149,151,152,155,386,156,16,157,158,387,388,389,390,21,168,169,170,171,174,175,176,177,178,180,181,62,63,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,216,391,392,393,394,395,396,397,398,399,217,218,219,220,221,222,223,400,231,232,233,234,235,238,241,242,243,244,245,247,248,249,36,250,251,252,253,254,255,256,257,258,259,260,261,266,401,268,43,269,402,270,382,273,275,276,403,404,282,405,406,407,283,47,48,289,299,300,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[408],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"methodName"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","obj":"obj","targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:228","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[137,3,6,7,409,410,411,412,413,414,415,238,31,32,33,34,40],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[15,335,42,47,48],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[339,416,417,418,419,420,421],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"i"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[133,11,150,22,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[88],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"shouldFillInStackTrace"}},{"position":"org.easymock.internal.Range:36","failures":[68,422,69,70,71,72,385,73,423,74,424,75,336,337,425,76,77,51,78,52,79,80,81,82,83,84,85,53,86,87,88,89,90,338,91,92,93,94,95,96,97,98,99,339,426,100,101,0,54,384,102,55,67,56,57,103,58,104,105,106,107,108,109,1,110,111,59,112,113,114,115,60,116,117,340,427,428,429,341,430,431,118,119,120,121,432,122,123,124,433,61,125,126,127,128,129,434,435,436,437,438,130,131,439,440,441,442,443,342,343,344,132,345,346,133,347,348,349,350,351,352,353,354,355,134,356,357,358,359,360,135,361,362,2,136,137,3,4,5,138,139,140,6,7,8,9,444,141,10,142,143,144,145,146,445,147,363,364,148,11,149,12,365,150,151,152,153,154,155,13,386,156,14,15,16,157,446,447,158,159,160,17,161,162,163,18,19,164,165,20,166,167,448,449,387,388,389,390,21,168,169,170,171,450,451,452,453,454,172,173,455,456,457,458,459,174,175,176,177,178,460,22,179,461,368,180,181,182,421,183,462,369,23,24,463,25,62,464,63,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,65,66,208,209,26,210,465,466,211,212,213,214,215,467,370,49,371,372,373,50,468,374,375,376,216,377,391,392,393,469,394,395,29,396,397,398,399,217,218,219,220,221,222,223,224,400,225,226,227,228,229,230,231,232,233,234,235,470,471,472,473,474,475,476,477,478,479,480,481,482,64,483,484,236,485,486,487,488,489,237,490,30,238,31,32,239,240,33,34,35,241,242,243,244,245,378,379,246,247,248,491,249,492,493,380,36,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,38,494,265,495,266,267,39,401,40,268,41,42,43,269,402,381,270,382,271,272,273,274,275,276,277,278,279,280,281,403,404,282,405,406,407,44,45,46,283,47,48,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,496,497,498,499,500,501,502,503,504,505,506,507,508,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[98,204,207,65,66,208,209,222,276,47,287,294,295,296,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[409,411,413,414,31,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[51,52,80,81,82,85,53,86,87],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[15,335,42,47,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[89,99,339,509,416,417,418,419,420,510,421,369,511,512],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[285,288,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[74,78,52,80,81,83,84,87,88,96,97,100,101,0,102,55,67,56,106,107,108,109,110,111,116,117,137,5,138,139,8,151,152,153,15,16,21,62,63,184,185,188,190,191,192,193,195,196,197,198,200,201,202,203,205,26,30,238,239,240,36,250,251,252,42,43,276,282,283,304,305,308,310,311,312,313,315,316,317,318,320,321,322,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[513],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"failures":[67],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[68,69,70,71,72,73,74,75,76,76,77,77,51,78,52,79,80,81,82,83,84,85,53,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,0,54,102,55,67,56,57,103,58,104,105,106,107,108,109,1,110,111,59,112,113,114,115,60,116,117,118,119,120,121,122,123,124,61,125,126,127,128,129,130,131,132,133,134,135,2,136,137,3,4,5,138,139,140,6,7,8,9,141,10,142,143,144,145,146,147,148,11,149,12,150,151,152,153,154,155,13,156,14,15,16,157,158,159,160,17,161,162,163,18,19,164,165,20,166,167,21,168,169,170,171,172,173,174,175,176,177,178,22,179,180,181,182,183,23,24,25,62,63,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,65,66,208,209,26,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,232,233,234,235,236,237,30,238,31,32,239,240,33,34,35,241,242,243,244,245,246,247,248,249,36,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,39,40,268,41,42,43,269,270,271,273,274,275,276,277,278,279,280,281,282,283,47,48,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,331,332,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[514,515,516],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[110,517],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":54,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":30,"org.easymock.tests2.UsageTest.argumentsOrdered":7,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":480,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":5,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":422,"org.easymock.tests2.DelegateToTest.testReturnException":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":219,"org.easymock.tests.MockingTest.testPartialClassMocking":247,"org.easymock.tests.MockClassControlTest.testToString":225,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":449,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":487,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":304,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":416,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":103,"org.easymock.tests2.UsageTest.wrongArguments":3,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":299,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":443,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":255,"org.easymock.samples.ExampleTest.answerVsDelegate":70,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":213,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":493,"org.easymock.tests2.UsageConstraintsTest.testNull":55,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":143,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":20,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":230,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":366,"org.easymock.tests2.CaptureTest.testPrimitive":79,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":303,"org.easymock.tests.UsageTest.moreThanOneArgument":238,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":323,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":233,"org.easymock.tests.UsageTest.argumentsOrdered":34,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":277,"org.easymock.tests.UsageVarargTest.varargIntAccepted":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":484,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":420,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":178,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":458,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":428,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":261,"org.easymock.tests.ReplayStateInvalidUsageTest.times":505,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests2.DependencyTest.testClassMocking":446,"org.easymock.tests2.AnswerTest.answer":61,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":485,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":171,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":466,"org.easymock.tests2.CaptureTest.testAnd":51,"org.easymock.tests2.UsageTest.strictResetToDefault":136,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":461,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":163,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":251,"org.easymock.tests2.DelegateToTest.testDelegate":96,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":281,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":319,"org.easymock.tests.LimitationsTest.mockFinalMethod":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":222,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":245,"org.easymock.tests2.DependencyTest.testClassMockingSupport":447,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":297,"org.easymock.tests2.CaptureTest.testCapture1_2446744":80,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":445,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":317,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":169,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":499,"org.easymock.tests.UsageThrowableTest.throwError":204,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":212,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":459,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":362,"org.easymock.samples.PartialClassMockTest.testGetArea":68,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":500,"org.easymock.tests.MockingTest.testInterfaceMocking":491,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":258,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":292,"org.easymock.tests2.UsageTest.niceToStrict":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":305,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":180,"org.easymock.tests2.MockBuilderTest.testCreateMock":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":440,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":409,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":313,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":18,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":465,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":296,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":403,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":253,"org.easymock.tests.UsageOverloadedMethodTest.overloading":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":360,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":108,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":195,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":274,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":107,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":85,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":469,"org.easymock.tests2.EasyMockSupportClassTest.testAll":132,"org.easymock.tests.MockClassControlTest.testEquals":229,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":382,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":410,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":170,"org.easymock.tests2.CaptureTest.testCaptureAll":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":243,"org.easymock.tests.MockNameTest.defaultName":333,"org.easymock.tests2.UsageConstraintsTest.testMatches":109,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":497,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":234,"org.easymock.samples.ExampleTest.voteForRemovals":73,"org.easymock.tests.UsageVarargTest.allKinds":217,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":244,"org.easymock.samples.BasicClassMockTest.testPrintContent":337,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":208,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":455,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":223,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":510,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":468,"org.easymock.tests2.UsageConstraintsTest.greaterThan":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":250,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":12,"org.easymock.samples.ExampleTest.voteForRemoval":71,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":374,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":152,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":365,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":408,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":214,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":146,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":273,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":161,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":218,"org.easymock.tests2.CaptureTest.testCaptureFirst":88,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":476,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":162,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":9,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":290,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":191,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":154,"org.easymock.tests2.UsageTest.moreThanOneArgument":137,"org.easymock.tests2.CaptureTest.testCapture2_2446744":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":486,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":24,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":399,"org.easymock.tests.GenericTest.testBridgedEquals":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":45,"org.easymock.tests.UsageExpectAndReturnTest.longType":187,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":322,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":114,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":231,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":263,"org.easymock.tests.UsageCallCountTest.tooManyCalls":46,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":442,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":309,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":66,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":119,"org.easymock.tests.MockingTest.testNiceClassMocking":380,"org.easymock.tests.MockingTest.testClassMocking":379,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":404,"org.easymock.tests2.UsageConstraintsTest.testContains":106,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":176,"org.easymock.tests2.UsageConstraintsTest.testFind":102,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":276,"org.easymock.tests.MockTypeTest.fromEasyMockClass":211,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":39,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":63,"org.easymock.tests.UsageExpectAndReturnTest.object":194,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":417,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":395,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":330,"org.easymock.tests.UsageTest.exactCallCountByLastCall":35,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":494,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":278,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":415,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":339,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":391,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":200,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":451,"org.easymock.tests.MockClassControlTest.testHashCode":228,"org.easymock.tests2.EasyMockSupportTest.testVerify":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":353,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":279,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":295,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":168,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":27,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":444,"org.easymock.tests.UsageVarargTest.varargCharAccepted":394,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":467,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":490,"org.easymock.tests2.UsageTest.openCallCountByLastCall":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":514,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":167,"org.easymock.tests.DefaultClassInstantiatorTest.object":370,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":294,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":328,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":28,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":207,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":367,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":437,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":450,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":11,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":227,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":310,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":201,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":135,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":226,"org.easymock.tests2.UsageTest.resumeIfFailure":8,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":210,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":221,"org.easymock.tests2.StubTest.stubWithReturnValue":98,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":421,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":115,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":193,"org.easymock.tests2.SerializationTest.testAllMockedMethod":338,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":236,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":512,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":411,"org.easymock.samples.SupportTest.voteForRemovals":75,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":381,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":316,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":237,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":125,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":495,"org.easymock.tests.UsageExpectAndThrowTest.object":314,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":112,"org.easymock.tests2.DelegateToTest.testWrongClass":94,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":324,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":325,"org.easymock.tests.UsageStrictMockTest.range":42,"org.easymock.samples.ConstructorCalledMockTest.testTax":76,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":430,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":164,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":315,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":182,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":507,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":413,"org.easymock.tests2.CaptureTest.testCaptureNone":84,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":293,"org.easymock.tests.UsageUnorderedTest.message":26,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":37,"org.easymock.tests.UsageVerifyTest.twoReturns":48,"org.easymock.tests.UsageVarargTest.varargByteAccepted":398,"org.easymock.tests2.ThreadingTest.testThreadSafe":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":356,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":407,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":331,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":336,"org.easymock.tests2.CaptureTest.testCapture_2617107":52,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":412,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":488,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":302,"org.easymock.tests2.UsageConstraintsTest.any":104,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":504,"org.easymock.tests2.StubTest.stub":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":220,"org.easymock.tests.UsageExpectAndThrowTest.longType":307,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":373,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":503,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":14,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":172,"org.easymock.tests2.SerializationTest.testClass":89,"org.easymock.tests.LimitationsTest.mockNativeMethod":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":203,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":271,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":436,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":157,"org.easymock.tests2.NameTest.nameForMocksControl":390,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":383,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":438,"org.easymock.tests2.MockedExceptionTest.testMockedException":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":346,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":240,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":464,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":308,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":183,"org.easymock.tests.MockingTest.testNicePartialClassMocking":248,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":509,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":434,"org.easymock.tests2.CaptureTest.testCaptureLast":83,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":298,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":124,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":57,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":113,"org.easymock.tests.MockingTest.testTwoMocks":246,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":312,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":116,"org.easymock.samples.ExampleTest.removeNonExistingDocument":423,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":501,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":439,"org.easymock.tests.UsageStrictMockTest.differentMethods":43,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":452,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":371,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":153,"org.easymock.tests2.MockBuilderTest.testCreateMockString":25,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":224,"org.easymock.tests.UsageExpectAndThrowTest.floatType":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":426,"org.easymock.tests.UsageVerifyTest.twoThrows":47,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":134,"org.easymock.samples.ExampleTest.voteAgainstRemoval":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":481,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":291,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":149,"org.easymock.tests.LimitationsTest.privateConstructor":376,"org.easymock.tests2.UsageConstraintsTest.testNotNull":60,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":174,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":209,"org.easymock.tests2.UsageTest.defaultResetToNice":140,"org.easymock.samples.ExampleTest.voteAgainstRemovals":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":199,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":435,"org.easymock.tests.UsageVarargTest.differentLength":29,"org.easymock.tests2.CallbackTest.callback":21,"org.easymock.tests2.UsageConstraintsTest.equals":384,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":363,"org.easymock.tests.UsageTest.openCallCountByLastCall":239,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":301,"org.easymock.tests.UsageCallCountTest.tooFewCalls":405,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":256,"org.easymock.tests.UsageThrowableTest.throwCheckedException":65,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":414,"org.easymock.tests.MockingTest.testStrictClassMocking":378,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":131,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":120,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":506,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":122,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":129,"org.easymock.tests.ObjectMethodsTest.testHashCode":329,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":419,"org.easymock.tests2.NameTest.nameForNiceMock":389,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":155,"org.easymock.tests2.DependencyTest.testInterfaceMocking":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":418,"org.easymock.samples.ExampleTest.addDocument":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":357,"org.easymock.tests2.DelegateToTest.testStubDelegate":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.AnswerTest.stubAnswer":128,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":268,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":462,"org.easymock.tests.UsageVarargTest.varargLongAccepted":397,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndReturnTest.floatType":186,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":202,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":99,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":457,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":111,"org.easymock.tests.UsageThrowableTest.noUpperLimit":205,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":101,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":340,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":81,"org.easymock.tests2.SerializationTest.test":90,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":185,"org.easymock.tests2.UsageConstraintsTest.testSame":67,"org.easymock.samples.SupportTest.addDocument":424,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":432,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":348,"org.easymock.tests.GenericTest.testPackageScope":270,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":456,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":492,"org.easymock.tests2.NameTest.nameForMock":387,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":463,"org.easymock.tests2.UsageStrictMockTest.differentMethods":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":364,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":188,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":318,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":327,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":252,"org.easymock.tests2.MockedExceptionTest.testRealException":177,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":483,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":431,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":511,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":64,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":508,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":300,"org.easymock.tests2.NameTest.nameForStrictMock":388,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":368,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":515,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":62,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":144,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":341,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":59,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":334,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":372,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":22,"org.easymock.tests2.UsageStrictMockTest.range":15,"org.easymock.tests2.UsageConstraintsTest.lessThan":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":478,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":17,"org.easymock.tests2.CaptureTest.testCaptureRightOne":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":352,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":513,"org.easymock.tests2.UsageConstraintsTest.testOr":56,"org.easymock.tests.UsageRangeTest.combination":36,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":10,"org.easymock.tests.UsageTest.wrongArguments":32,"org.easymock.tests2.MockBuilderTest.testWithConstructor":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":349,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":197,"org.easymock.tests.UsageVarargTest.varargShortAccepted":396,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":50,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":44,"org.easymock.tests2.UsageConstraintsTest.cmpTo":105,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":473,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests2.CaptureTest.testCaptureFromStub":86,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":498,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":179,"org.easymock.tests.UsageTest.unexpectedCallWithArray":31,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":406,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":198,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":41,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":74,"org.easymock.tests.UsageStrictMockTest.testVerify":402,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":425,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":401,"org.easymock.tests2.CompareToTest.testGreateThan":517,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":242,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":259,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":190,"org.easymock.tests.LimitationsTest.abstractClass":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":260,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":392,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":19,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":335}}]
