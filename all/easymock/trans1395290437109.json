[{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","sourceCode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))","type":"CtReturnImpl"},"failures":[3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,18,19,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[63,71,105,106,107,108,109,110,79,80,81,83,85,111,86,101,103,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.Capture:134","failures":[113,114],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[115,43,116,44],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[64,70,72,73,74,75,76,80,81,82,84,87,88,89,102],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[117,118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[119,120,121,122,123,124,125,126,114,127,128,129],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[130,2,131,132,133,134,0,135,119,120,127],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[76,136],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[137,138,139,140,141,142,143,144,145],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[146,147],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[65,67,69,71,72,73,74,75,82,86,87,88,89,91,96,98,100],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[148,149,150,64,151,152,153,70,72,73,74,75,76,154,80,81,82,84,85,47,53,54,56,87,88,89,155,156,102,103],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[157,158,159,160,161,162,163,164,165,148,149,150,166,167,168,169,6,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,137,61,202,203,62,63,64,204,205,206,207,208,209,210,211,212,213,214,215,216,71,72,73,217,218,74,75,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,7,237,238,239,104,8,9,10,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,117,256,257,258,259,260,261,118,262,263,264,265,266,105,267,268,269,106,107,270,108,271,272,109,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,11,12,13,300,14,301,302,303,76,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,154,328,329,330,331,332,333,334,335,336,77,78,110,337,15,338,339,340,341,342,343,16,79,80,81,344,345,346,347,348,349,350,82,83,351,84,85,111,352,17,353,138,354,355,356,357,358,359,18,18,19,19,360,361,362,363,20,21,22,23,364,24,25,26,27,28,365,366,29,30,31,32,367,368,33,369,34,370,371,372,373,374,375,35,376,377,36,378,379,39,40,380,41,139,381,140,382,383,130,2,384,385,131,386,132,133,387,134,388,389,390,391,392,393,394,395,396,0,1,397,398,399,135,400,401,43,116,44,47,402,49,50,51,403,53,404,405,86,87,406,407,408,409,410,88,89,155,411,412,413,414,415,141,416,142,143,417,144,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,156,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,57,456,3,457,4,458,145,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,119,474,120,121,122,123,124,125,475,126,127,128,476,129,477,478,479,101,480,102,103,112],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[481],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[65,67,72,82,91,98],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:90","sourceCode":"return java.lang.Class<?>.getConstructor(new java.lang.Class[0])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[391],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[43,482,403,57,456,483,484,485,486,487],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[28,365,366,29,30,31,32,367,488,368,489,490,33,491,369,34,492,370,371,493,494,372,373,374,375,35,495,376,496,497,377,36,378,379,37,38,39,40,41,42,43,44,45,47,48,402,49,50,51,52,403,53,54,56,412,498,413],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[256,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[25,394],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[387,392,401,499],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[115,43,116,44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[115,43,116],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[110],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests2.UsageTest.argumentsOrdered":89,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":216,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":440,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":251,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":407,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":360,"org.easymock.tests2.DelegateToTest.testReturnException":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":197,"org.easymock.tests.MockingTest.testPartialClassMocking":12,"org.easymock.tests.MockClassControlTest.testToString":338,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":443,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":263,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":483,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":387,"org.easymock.tests2.UsageTest.wrongArguments":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":304,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":455,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":194,"org.easymock.samples.ExampleTest.answerVsDelegate":138,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":6,"org.easymock.tests2.UsageConstraintsTest.testNull":131,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":302,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":24,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":156,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":343,"org.easymock.tests2.CaptureTest.testPrimitive":121,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":308,"org.easymock.tests.UsageTest.moreThanOneArgument":71,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":277,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":333,"org.easymock.tests.UsageTest.argumentsOrdered":75,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":344,"org.easymock.tests.UsageVarargTest.varargIntAccepted":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":117,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":206,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":432,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":50,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":210,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":94,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":449,"org.easymock.tests.ReplayStateInvalidUsageTest.times":324,"org.easymock.tests2.AnswerTest.answer":141,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":421,"org.easymock.tests2.CaptureTest.testAnd":119,"org.easymock.tests2.UsageTest.strictResetToDefault":405,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":437,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":329,"org.easymock.tests2.DelegateToTest.testDelegate":473,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":273,"org.easymock.tests.LimitationsTest.mockFinalMethod":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":215,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":77,"org.easymock.tests2.CaptureTest.testCapture1_2446744":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":419,"org.easymock.tests.UsageThrowableTest.throwError":184,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":318,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":433,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":379,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.MockingTest.testInterfaceMocking":300,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":207,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":494,"org.easymock.tests2.UsageTest.niceToStrict":406,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":264,"org.easymock.tests2.ThreadingTest.testChangeDefault":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":241,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":49,"org.easymock.tests2.MockBuilderTest.testCreateMock":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":452,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":107,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":91,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":438,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":159,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":160,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":192,"org.easymock.tests.UsageOverloadedMethodTest.overloading":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":377,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":392,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":203,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":289,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":391,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":126,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":223,"org.easymock.tests2.EasyMockSupportClassTest.testAll":33,"org.easymock.tests.MockClassControlTest.testEquals":342,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":9,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":96,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":275,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":58,"org.easymock.tests2.CaptureTest.testCaptureAll":474,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":420,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":213,"org.easymock.tests.MockNameTest.defaultName":183,"org.easymock.tests2.UsageConstraintsTest.testMatches":393,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":334,"org.easymock.samples.ExampleTest.voteForRemovals":357,"org.easymock.tests.UsageVarargTest.allKinds":231,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":79,"org.easymock.samples.BasicClassMockTest.testPrintContent":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":214,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":190,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":478,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":487,"org.easymock.tests2.UsageConstraintsTest.greaterThan":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":491,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":328,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":32,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":315,"org.easymock.samples.ExampleTest.voteForRemoval":354,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":460,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":367,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":27,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":404,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":16,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":436,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":196,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":468,"org.easymock.tests2.CaptureTest.testCaptureFirst":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":247,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":411,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":285,"org.easymock.tests2.CaptureTest.testCapture2_2446744":476,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":462,"org.easymock.tests2.UsageTest.moreThanOneArgument":86,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":258,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":230,"org.easymock.tests.GenericTest.testBridgedEquals":240,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":149,"org.easymock.tests.UsageExpectAndReturnTest.longType":281,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":434,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":211,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":276,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":398,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":336,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":274,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":331,"org.easymock.tests.UsageCallCountTest.tooManyCalls":150,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":66,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":286,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":38,"org.easymock.tests.MockingTest.testNiceClassMocking":303,"org.easymock.tests.MockingTest.testClassMocking":299,"org.easymock.tests2.UsageConstraintsTest.testContains":390,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":161,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":46,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":4,"org.easymock.tests2.UsageConstraintsTest.testFind":385,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":176,"org.easymock.tests.MockTypeTest.fromEasyMockClass":169,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":140,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":349,"org.easymock.tests.UsageExpectAndReturnTest.object":288,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":453,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":481,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":484,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":225,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":180,"org.easymock.tests.UsageTest.exactCallCountByLastCall":219,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":246,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":232,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":345,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":69,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":456,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":220,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":294,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":202,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":423,"org.easymock.tests.MockClassControlTest.testHashCode":341,"org.easymock.tests2.EasyMockSupportTest.testVerify":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":373,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":93,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":346,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":158,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":137,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":418,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":153,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":477,"org.easymock.tests.UsageVarargTest.varargCharAccepted":224,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":262,"org.easymock.tests2.UsageTest.openCallCountByLastCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":441,"org.easymock.tests.DefaultClassInstantiatorTest.object":309,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":157,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":178,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":70,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":374,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":447,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":422,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":30,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":340,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":268,"org.easymock.tests.CapturesMatcherTest.test":113,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":295,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":36,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":95,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":339,"org.easymock.tests2.UsageTest.resumeIfFailure":155,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":5,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":498,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":199,"org.easymock.tests2.StubTest.stubWithReturnValue":465,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":482,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":399,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":287,"org.easymock.tests2.SerializationTest.testAllMockedMethod":44,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":256,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":98,"org.easymock.samples.SupportTest.voteForRemovals":363,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":271,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":115,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":118,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":416,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":234,"org.easymock.tests.UsageExpectAndThrowTest.object":270,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":1,"org.easymock.tests2.DelegateToTest.testWrongClass":471,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":205,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests.UsageStrictMockTest.range":84,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":414,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":439,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":108,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":51,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":74,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":368,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":193,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":65,"org.easymock.tests2.CaptureTest.testCaptureNone":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":173,"org.easymock.tests.UsageUnorderedTest.message":76,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":151,"org.easymock.tests.UsageVerifyTest.twoReturns":81,"org.easymock.tests.UsageVarargTest.varargByteAccepted":229,"org.easymock.tests2.ThreadingTest.testThreadSafe":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":495,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":165,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":181,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":20,"org.easymock.tests2.CaptureTest.testCapture_2617107":120,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":100,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":260,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":307,"org.easymock.tests2.UsageConstraintsTest.any":388,"org.easymock.tests2.StubTest.stub":464,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":323,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":261,"org.easymock.tests.UsageExpectAndThrowTest.longType":266,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":313,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":322,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":480,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":427,"org.easymock.tests2.SerializationTest.testClass":43,"org.easymock.tests.LimitationsTest.mockNativeMethod":7,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":10,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":297,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":446,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":60,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":112,"org.easymock.tests2.MockedExceptionTest.testMockedException":457,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":369,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":218,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":105,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":14,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":381,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":22,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":52,"org.easymock.tests.MockingTest.testNicePartialClassMocking":13,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":26,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":444,"org.easymock.tests2.CaptureTest.testCaptureLast":125,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":78,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":133,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":42,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":397,"org.easymock.tests.MockingTest.testTwoMocks":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":278,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":106,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":88,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":400,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":146,"org.easymock.samples.ExampleTest.removeNonExistingDocument":358,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":451,"org.easymock.tests.UsageStrictMockTest.differentMethods":85,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":424,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":311,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":461,"org.easymock.tests2.ConstraintsToStringTest.andToString":97,"org.easymock.tests2.MockBuilderTest.testCreateMockString":56,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":492,"org.easymock.tests.UsageExpectAndThrowTest.floatType":265,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":490,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":143,"org.easymock.tests.UsageVerifyTest.twoThrows":80,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":35,"org.easymock.samples.ExampleTest.voteAgainstRemoval":355,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":252,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":31,"org.easymock.tests.LimitationsTest.privateConstructor":236,"org.easymock.tests2.UsageConstraintsTest.testNotNull":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":191,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":3,"org.easymock.tests2.UsageTest.defaultResetToNice":410,"org.easymock.samples.ExampleTest.voteAgainstRemovals":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":293,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":445,"org.easymock.tests.UsageVarargTest.differentLength":226,"org.easymock.tests2.CallbackTest.callback":145,"org.easymock.tests2.UsageConstraintsTest.equals":384,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":365,"org.easymock.tests.UsageTest.openCallCountByLastCall":217,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":382,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":306,"org.easymock.tests.UsageCallCountTest.tooFewCalls":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":40,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":195,"org.easymock.tests.UsageThrowableTest.throwCheckedException":188,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":67,"org.easymock.tests.MockingTest.testStrictClassMocking":298,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":41,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":450,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":39,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":380,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":144,"org.easymock.tests2.CompareToTest.testGreateOrEqual":499,"org.easymock.tests.ObjectMethodsTest.testHashCode":179,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":463,"org.easymock.tests2.DependencyTest.testInterfaceMocking":466,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":485,"org.easymock.samples.ExampleTest.addDocument":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":376,"org.easymock.tests2.DelegateToTest.testStubDelegate":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.AnswerTest.stubAnswer":417,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":83,"org.easymock.tests.UsageVarargTest.varargLongAccepted":228,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":250,"org.easymock.tests.UsageExpectAndReturnTest.floatType":280,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":296,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":57,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests2.ConstraintsToStringTest.orToString":90,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":431,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":396,"org.easymock.tests.UsageThrowableTest.noUpperLimit":185,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":383,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":412,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":123,"org.easymock.tests2.SerializationTest.test":116,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":310,"org.easymock.tests2.UsageConstraintsTest.testSame":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":279,"org.easymock.samples.SupportTest.addDocument":362,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":370,"org.easymock.tests.GenericTest.testPackageScope":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":245,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":430,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":290,"org.easymock.tests2.UsageStrictMockTest.differentMethods":103,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":366,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":282,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":109,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":330,"org.easymock.tests2.MockedExceptionTest.testRealException":458,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":170,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":255,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":68,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":254,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":305,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":327,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":402,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":25,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":413,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":136,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":312,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":47,"org.easymock.tests2.UsageStrictMockTest.range":102,"org.easymock.tests2.UsageConstraintsTest.lessThan":401,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":426,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":486,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":249,"org.easymock.tests2.CaptureTest.testCaptureRightOne":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":372,"org.easymock.tests2.UsageConstraintsTest.testOr":132,"org.easymock.tests.UsageRangeTest.combination":154,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.UsageTest.wrongArguments":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":371,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":15,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":291,"org.easymock.tests.UsageVarargTest.varargShortAccepted":227,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":314,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":148,"org.easymock.tests2.UsageConstraintsTest.cmpTo":389,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":244,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":409,"org.easymock.tests2.CaptureTest.testCaptureFromStub":128,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":317,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":48,"org.easymock.tests.UsageTest.unexpectedCallWithArray":72,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":82,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":292,"org.easymock.tests2.CaptureTest.testCapture":114,"org.easymock.tests2.UsageConstraintsTest.constraints":130,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":351,"org.easymock.samples.ExampleTest.addAndChangeDocument":359,"org.easymock.tests2.ConstraintsToStringTest.notToString":92,"org.easymock.tests.UsageStrictMockTest.testVerify":352,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":361,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":350,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":212,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":124,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":208,"org.easymock.tests.LimitationsTest.abstractClass":235,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":284,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":209,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":221}}]
