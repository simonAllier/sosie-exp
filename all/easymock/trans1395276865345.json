[{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,54,55,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[21,160,161,22,162,163,164,165,166,167,23,168],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:290","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[169],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[170,171,172,173,174,175,176,177,178,179,180,181,182,16,183,184,17,185,186,18,187,19,188,189,190,191,192,25,193,26,194,195,196,44,54,54,55,55,197,198,199,200,201,202,203,204,134,205,206,207,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[209,210,211,212,213,214,215],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[216,37],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:34","failures":[7,217,218,219,220,221,222,223,224,225,226,227,228,229,230,52,209,231,82,83,232,233,234,210,235,121,141,213,214,147,236,237,148,238,239,240,241,242,243,244,158,215,245],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[246],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[247,27,29,37,248],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[249,250,251],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[21,160,167,29,252,33,253,254,255],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"o"}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[256,191,257],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[258],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[258,246],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[164,165],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[259,260],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[261,262,263,264,54,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[166],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[265,35,266,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[267,160,22,162,163,164,268,168,257,269],"status":-1,"binaryOperator":"((((this.java.util.List<org.easymock.IArgumentMatcher>) == null) && ((org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>) == null)) || (((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[0,170,270,271,272,273,274,5,6,275,276,277,278,279,169,7,280,256,8,9,10,218,219,11,281,12,282,283,284,285,286,287,13,288,289,290,291,292,172,173,174,175,293,176,177,178,179,180,181,182,294,15,183,184,185,186,187,21,267,160,161,22,162,163,164,268,165,167,23,24,168,188,189,295,190,191,192,193,194,195,196,27,28,29,252,30,31,32,33,253,296,297,298,34,299,35,36,257,37,38,255,300,266,269,248,39,40,41,42,43,44,45,46,301,302,47,303,304,48,49,50,51,305,306,307,308,52,309,209,231,310,311,312,313,314,315,316,317,54,54,55,55,197,318,319,320,56,57,321,322,58,323,63,64,324,325,65,66,67,326,327,68,328,69,70,71,72,329,73,74,75,76,330,77,78,79,80,200,81,82,84,85,233,234,331,332,333,334,335,336,337,338,88,89,90,91,92,210,201,106,107,339,340,108,341,109,110,111,112,342,113,114,115,116,343,117,118,119,120,235,121,344,345,346,347,348,349,350,351,122,123,352,353,354,127,128,129,130,131,132,355,356,357,358,359,360,361,362,363,364,202,204,141,213,214,142,143,144,145,146,365,366,367,237,368,369,370,154,155,156,157,371,372,158,373,215,245,374,206,207,208,375,260,376,377,378],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[26,207],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[7,52,231,310,82,108,111,112,113,116,379,141,213,214,237,158,245,374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[21,160,167,29,253],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[178,380,54,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[170,270,171,381],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[171,382,383,172,175,384,179,385,386,387,388,389,390,391,392,188,189,190,191,192,193,393,26,196,394,395,43,44,198,199,200,93,396,397,398,399,400,401,402,403,201,404,202,203,246,133,134,135,136,137,138,139,140,405,406,205,407],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[180,181,182,16,183,408,409,184,17,185,186,18,187,19,25,194,195,395,42,197,410,411,258,204],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[252,30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[21,160,167,29,252,33,253,254,255],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"symbol","methodName":"symbol"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[172,175,188,190,191,192,193,246,140],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[217,218,219,209,83,232,233,234,210,213,214,148,243,244,215],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,170,270,171,271,272,273,274,5,6,275,276,277,278,279,169,7,217,280,256,8,9,10,218,219,11,281,12,282,283,284,285,286,287,13,288,289,290,291,14,292,172,173,174,175,293,176,177,178,179,180,181,182,412,413,414,415,294,15,16,183,184,185,186,187,21,267,160,161,22,162,163,164,268,165,167,23,24,168,188,189,295,190,191,192,25,193,26,194,195,196,27,28,29,252,30,31,32,33,253,296,254,297,298,34,299,35,36,257,37,38,255,300,266,269,248,39,40,41,42,43,44,45,46,301,302,47,303,304,48,49,50,51,305,306,307,308,52,309,209,231,310,416,311,417,312,313,314,315,418,316,53,317,419,54,54,55,55,197,198,199,318,319,320,56,57,321,322,58,59,323,63,64,324,325,65,66,67,326,327,68,328,69,70,71,72,329,73,74,75,76,330,77,78,79,80,200,81,82,83,232,84,85,233,234,331,332,333,334,420,335,336,421,337,422,338,88,89,90,91,92,210,93,201,106,107,339,340,108,341,109,110,111,112,342,113,114,115,116,343,117,118,119,120,235,121,344,345,346,347,348,349,350,351,122,123,352,353,354,127,128,129,130,131,132,355,356,357,358,359,423,360,361,362,363,364,202,203,204,133,141,213,214,142,143,144,145,146,365,147,366,367,236,237,368,369,370,154,155,156,157,371,372,244,158,373,215,245,374,159,205,206,207,208,375,260,376,377,378],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":252,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":81,"org.easymock.tests2.UsageTest.argumentsOrdered":219,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":290,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":256,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":417,"org.easymock.tests2.DelegateToTest.testReturnException":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":128,"org.easymock.tests.MockingTest.testPartialClassMocking":206,"org.easymock.tests.MockClassControlTest.testToString":135,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":354,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":395,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":180,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":106,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":276,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":63,"org.easymock.tests2.UsageTest.wrongArguments":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":61,"org.easymock.samples.ExampleTest.answerVsDelegate":313,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":411,"org.easymock.tests2.UsageConstraintsTest.testNull":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":190,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":140,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":289,"org.easymock.tests2.CaptureTest.testPrimitive":161,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":65,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":120,"org.easymock.tests.UsageTest.moreThanOneArgument":82,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":144,"org.easymock.tests.UsageTest.argumentsOrdered":234,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":375,"org.easymock.tests.UsageVarargTest.varargIntAccepted":357,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":88,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":16,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":92,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":224,"org.easymock.tests.ReplayStateInvalidUsageTest.times":102,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":0,"org.easymock.tests2.AnswerTest.answer":271,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":4,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests2.UsageTest.strictResetToDefault":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":285,"org.easymock.tests2.DelegateToTest.testDelegate":48,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":378,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":343,"org.easymock.tests.LimitationsTest.mockFinalMethod":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":153,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":235,"org.easymock.tests2.CaptureTest.testCapture1_2446744":22,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":249,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":2,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":96,"org.easymock.tests.UsageThrowableTest.throwError":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":146,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":380,"org.easymock.samples.PartialClassMockTest.testGetArea":197,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":97,"org.easymock.tests2.CompareToTest.testLessOrEqual":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":89,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":388,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":107,"org.easymock.tests2.UsageTest.niceToStrict":280,"org.easymock.tests2.ThreadingTest.testChangeDefault":251,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":184,"org.easymock.tests2.MockBuilderTest.testCreateMock":18,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":112,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":221,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":370,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":420,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":59,"org.easymock.tests.UsageOverloadedMethodTest.overloading":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":392,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":35,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":367,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":73,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":321,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":299,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":165,"org.easymock.tests2.EasyMockSupportClassTest.testAll":179,"org.easymock.tests.MockClassControlTest.testEquals":139,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":203,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":118,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":151,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":3,"org.easymock.tests2.CaptureTest.testCaptureAll":267,"org.easymock.tests2.UsageConstraintsTest.testMatches":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":145,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":94,"org.easymock.samples.ExampleTest.voteForRemovals":316,"org.easymock.tests.UsageVarargTest.allKinds":364,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":152,"org.easymock.samples.BasicClassMockTest.testPrintContent":199,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":350,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":132,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":304,"org.easymock.tests2.UsageConstraintsTest.greaterThan":37,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":155,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":196,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":401,"org.easymock.samples.ExampleTest.voteForRemoval":314,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":394,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":50,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":25,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":200,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":283,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":127,"org.easymock.tests2.CaptureTest.testCaptureFirst":168,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":284,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":281,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":70,"org.easymock.tests2.CaptureTest.testCapture2_2446744":24,"org.easymock.tests2.UsageTest.moreThanOneArgument":7,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":305,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":187,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":363,"org.easymock.tests.GenericTest.testBridgedEquals":246,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":422,"org.easymock.tests.UsageExpectAndReturnTest.longType":327,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":149,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":12,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":119,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":269,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":323,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":142,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":333,"org.easymock.tests.UsageCallCountTest.tooManyCalls":338,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":239,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":335,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":71,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":341,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":349,"org.easymock.tests.MockingTest.testNiceClassMocking":407,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":173,"org.easymock.tests.MockingTest.testClassMocking":406,"org.easymock.tests2.UsageConstraintsTest.testContains":34,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":86,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":44,"org.easymock.tests2.UsageConstraintsTest.testFind":30,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":58,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":278,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":371,"org.easymock.tests.UsageExpectAndReturnTest.object":329,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":288,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":359,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":126,"org.easymock.tests.UsageTest.exactCallCountByLastCall":331,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":56,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":260,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":242,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":77,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":355,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":366,"org.easymock.tests.MockClassControlTest.testHashCode":138,"org.easymock.tests2.EasyMockSupportTest.testVerify":14,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":223,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":376,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":365,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":1,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":20,"org.easymock.tests.UsageVarargTest.varargCharAccepted":358,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":308,"org.easymock.tests2.UsageTest.openCallCountByLastCall":8,"org.easymock.tests.DefaultClassInstantiatorTest.object":93,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":368,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":124,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":389,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":110,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":347,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":137,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":194,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":109,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":78,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":182,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":136,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":225,"org.easymock.tests2.UsageTest.resumeIfFailure":11,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":410,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":130,"org.easymock.tests2.StubTest.stubWithReturnValue":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":72,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":248,"org.easymock.tests2.SerializationTest.testAllMockedMethod":171,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":352,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":228,"org.easymock.samples.SupportTest.voteForRemovals":311,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":258,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":114,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":381,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":353,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":272,"org.easymock.tests.UsageExpectAndThrowTest.object":342,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":300,"org.easymock.tests2.DelegateToTest.testWrongClass":303,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":123,"org.easymock.samples.ConstructorCalledMockTest.testTax":54,"org.easymock.tests.UsageStrictMockTest.range":215,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":13,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":384,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":104,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":60,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":238,"org.easymock.tests2.CaptureTest.testCaptureNone":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":320,"org.easymock.tests.UsageUnorderedTest.message":210,"org.easymock.tests.UsageVerifyTest.twoReturns":214,"org.easymock.tests.UsageVarargTest.varargByteAccepted":362,"org.easymock.tests2.ThreadingTest.testThreadSafe":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":390,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":337,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":198,"org.easymock.tests2.CaptureTest.testCapture_2617107":160,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":230,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":379,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":325,"org.easymock.tests2.UsageConstraintsTest.any":297,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":101,"org.easymock.tests2.StubTest.stub":294,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":129,"org.easymock.tests.UsageExpectAndThrowTest.longType":340,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":399,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":100,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":309,"org.easymock.tests2.SerializationTest.testClass":170,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":46,"org.easymock.tests.LimitationsTest.mockNativeMethod":201,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":80,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":204,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":310,"org.easymock.tests2.NameTest.nameForMocksControl":415,"org.easymock.tests2.MockedExceptionTest.testMockedException":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":385,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":108,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":208,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":188,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":186,"org.easymock.tests.MockingTest.testNicePartialClassMocking":207,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":192,"org.easymock.tests2.CaptureTest.testCaptureLast":164,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":121,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":177,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":253,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":266,"org.easymock.tests.MockingTest.testTwoMocks":205,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":111,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":218,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":40,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":250,"org.easymock.samples.ExampleTest.removeNonExistingDocument":53,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":98,"org.easymock.tests.UsageStrictMockTest.differentMethods":245,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":397,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":51,"org.easymock.tests2.ConstraintsToStringTest.andToString":227,"org.easymock.tests2.MockBuilderTest.testCreateMockString":19,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":386,"org.easymock.tests.UsageExpectAndThrowTest.floatType":339,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":257,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":274,"org.easymock.tests.UsageVerifyTest.twoThrows":213,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":181,"org.easymock.samples.ExampleTest.voteAgainstRemoval":315,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":318,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":195,"org.easymock.tests.LimitationsTest.privateConstructor":403,"org.easymock.tests2.UsageConstraintsTest.testNotNull":39,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":42,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":351,"org.easymock.tests2.UsageTest.defaultResetToNice":10,"org.easymock.samples.ExampleTest.voteAgainstRemovals":312,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":330,"org.easymock.tests.UsageVarargTest.differentLength":423,"org.easymock.tests2.CallbackTest.callback":292,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":264,"org.easymock.tests.UsageTest.openCallCountByLastCall":84,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":324,"org.easymock.tests.UsageCallCountTest.tooFewCalls":336,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":62,"org.easymock.tests.UsageThrowableTest.throwCheckedException":348,"org.easymock.tests.MockingTest.testStrictClassMocking":405,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":240,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":176,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":57,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":174,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":103,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":293,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":6,"org.easymock.tests.ObjectMethodsTest.testHashCode":125,"org.easymock.tests2.NameTest.nameForNiceMock":414,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":306,"org.easymock.tests2.DependencyTest.testInterfaceMocking":275,"org.easymock.samples.ExampleTest.addDocument":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":391,"org.easymock.tests2.DelegateToTest.testStubDelegate":47,"org.easymock.tests2.AnswerTest.stubAnswer":5,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":158,"org.easymock.tests.UsageVarargTest.varargLongAccepted":361,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":374,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":79,"org.easymock.tests.UsageExpectAndReturnTest.floatType":326,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":178,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":55,"org.easymock.tests2.ConstraintsToStringTest.orToString":220,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":38,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests.UsageThrowableTest.noUpperLimit":345,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":28,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":382,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":162,"org.easymock.tests2.SerializationTest.test":270,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":396,"org.easymock.tests2.UsageConstraintsTest.testSame":32,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":67,"org.easymock.samples.SupportTest.addDocument":416,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":387,"org.easymock.tests.GenericTest.testPackageScope":202,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":377,"org.easymock.tests2.NameTest.nameForMock":412,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":74,"org.easymock.tests2.UsageStrictMockTest.differentMethods":231,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":263,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":393,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":68,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":116,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":157,"org.easymock.tests2.MockedExceptionTest.testRealException":45,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":241,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":52,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":105,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":64,"org.easymock.tests2.NameTest.nameForStrictMock":413,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":409,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":191,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":383,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":398,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":211,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":255,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":183,"org.easymock.tests2.UsageStrictMockTest.range":209,"org.easymock.tests2.UsageConstraintsTest.lessThan":41,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":282,"org.easymock.tests2.CaptureTest.testCaptureRightOne":167,"org.easymock.tests2.UsageConstraintsTest.testOr":33,"org.easymock.tests.UsageRangeTest.combination":154,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":189,"org.easymock.tests.UsageTest.wrongArguments":232,"org.easymock.tests2.MockBuilderTest.testWithConstructor":261,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":259,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":400,"org.easymock.tests.UsageVarargTest.varargShortAccepted":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":87,"org.easymock.tests2.UsageConstraintsTest.cmpTo":298,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":273,"org.easymock.tests2.CompareToTest.testLessThan":265,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":9,"org.easymock.tests2.CaptureTest.testCaptureFromStub":23,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":95,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":408,"org.easymock.tests.UsageTest.unexpectedCallWithArray":83,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":244,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":421,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":262,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":76,"org.easymock.tests2.CaptureTest.testCapture":166,"org.easymock.tests2.UsageConstraintsTest.constraints":29,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":373,"org.easymock.samples.ExampleTest.addAndChangeDocument":317,"org.easymock.tests2.ConstraintsToStringTest.notToString":222,"org.easymock.tests.UsageStrictMockTest.testVerify":159,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":419,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":372,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":150,"org.easymock.tests2.CompareToTest.testGreateThan":216,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":90,"org.easymock.tests.LimitationsTest.abstractClass":402,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":91,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":212,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":287,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":356}}]
