[{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[3,4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[8,9,10,11],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:58","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,2,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[61],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[62,63,64],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,0,1,91,92,2,93,94,95],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[96,97],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[98,99,100,101,102,103,104,105,8],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[106],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[12,13,14,15,25,26,29,30,32,34,2,42,44,45,48,49,51,55,56,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[98,99,101,102,103,104,105],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[107,108,109,110,111,112,113,114,115,18,116,117,22,118,119,66,53],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[120,121],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[17,24,31,32,40,2,42,50,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[107,109,112,114,115,18,116,117,122,123,22],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,16,148,149,150,151,152,153,154,17,155,156,157,158,159,160,161,162,163,164,107,108,109,165,166,167,168,110,111,169,112,170,113,171,172,173,174,175,176,177,178,179,180,3,181,65,8,9,10,182,183,114,115,184,18,19,116,117,185,20,21,186,187,188,189,190,191,192,123,193,194,195,196,22,23,97,24,197,25,26,121,198,27,28,29,30,31,199,32,200,33,34,201,202,203,118,119,66,204,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,87,235,236,237,35,238,36,239,37,88,89,240,40,90,0,1,91,92,41,2,42,43,44,45,46,47,48,49,50,51,52,241,242,243,244,245,246,247,248,53,249,250,251,252,55,56,253,57,58,254,255,256,257,258,259,59,260,60,261,262,263,264,265,266,267,268,269,270,271,272],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[20,236],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[124,125,126,128,129,274,132,133,134,135,136,137,138,139,140,141,275,142,276,277,120,278,143,61,279,280,281,144,282,283,145,146,147,284,16,285,148,98,286,287,288,289,290,149,291,292,293,294,295,296,297,298,150,299,151,100,300,301,302,303,304,153,154,17,305,306,155,156,157,307,308,309,310,158,311,159,312,160,313,314,315,316,317,318,161,319,320,162,321,322,163,323,164,107,108,109,165,166,167,168,110,111,169,112,324,170,113,173,174,175,176,178,179,180,3,181,4,65,8,9,10,182,183,114,115,325,184,18,19,116,117,185,122,20,21,186,187,188,189,190,191,192,123,193,194,195,196,22,23,97,24,197,25,26,121,198,27,28,326,29,30,327,31,328,199,32,200,33,34,201,329,330,331,332,333,202,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,203,118,119,66,204,365,366,367,368,369,5,370,371,372,373,374,375,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,376,377,378,379,380,381,382,205,383,384,385,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,386,387,388,389,390,391,226,227,228,229,230,231,232,392,233,393,234,87,394,395,396,397,398,235,399,400,401,402,403,404,405,406,407,408,409,410,236,411,412,413,237,35,238,36,414,239,37,415,416,417,418,419,420,421,88,422,423,424,425,426,38,39,427,428,89,240,40,90,0,1,91,92,41,2,42,429,430,431,432,433,43,44,434,45,46,47,48,49,50,51,52,241,242,435,243,244,436,245,246,247,248,53,54,437,438,439,62,440,441,442,249,250,443,444,251,445,446,447,448,449,450,252,55,56,253,57,58,254,451,6,452,7,453,454,455,255,256,456,257,457,458,459,93,94,95,258,259,59,460,460,461,461,260,60,261,262,263,264,462,265,266,267,268,269,270,271,272],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[8,9,10,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1673","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[182,114,191,196],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[324,65,182,183,184,18,19,116,186,188,189,191,192,22,23,97,32,341,345,346,355,360,203,118,204,226,227,228,229,230,231,232,392,236,445,446,447,448,449,56,460,461],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:75","sourceCode":"return org.easymock.internal.IMocksControlState","type":"CtReturnImpl"},"failures":[124,125,126,127,128,129,130,274,131,132,133,134,135,12,13,14,15,136,137,138,139,140,141,275,142,120,278,143,61,280,281,144,282,283,145,146,147,284,16,148,149,463,297,150,299,151,152,300,464,465,153,154,17,305,306,155,156,157,307,308,309,310,158,159,160,161,162,163,164,107,108,109,165,166,167,168,110,111,169,112,324,170,113,171,172,173,174,175,176,177,178,179,180,3,181,4,65,8,9,10,182,183,114,115,184,18,19,116,117,185,122,20,21,186,187,188,189,190,191,192,123,193,194,195,196,22,23,97,24,197,25,26,121,198,27,28,326,29,30,327,31,328,199,32,200,33,34,201,202,357,363,203,118,119,66,204,365,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,376,377,378,379,380,381,382,205,383,384,385,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,392,233,393,234,87,394,395,396,235,400,401,402,236,411,412,413,237,35,238,36,414,239,37,415,416,418,419,420,421,88,422,426,38,39,427,428,89,240,40,90,0,1,91,92,41,2,42,429,430,431,432,433,43,44,434,45,46,47,48,49,50,51,52,241,242,243,244,436,245,246,247,248,53,54,249,250,443,251,445,446,447,448,449,450,252,55,56,253,57,58,254,451,452,455,255,256,257,93,94,95,258,259,59,460,460,461,461,260,60,261,262,263,264,265,266,267,268,269,270,271,272],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[124,125,126,127,128,129,130,274,131,132,133,134,135,466,12,13,14,15,136,137,138,139,140,141,275,467,142,276,277,120,278,143,61,279,468,280,281,144,282,283,145,146,147,284,16,285,148,98,286,287,288,289,290,149,291,292,293,294,295,296,463,297,469,298,150,299,151,152,470,100,300,464,465,301,471,472,302,303,304,473,474,153,154,17,305,306,155,156,157,307,308,309,310,158,311,475,476,159,477,312,160,478,313,314,479,480,315,316,317,318,161,481,319,482,483,320,162,321,322,163,323,164,107,108,109,165,166,167,168,110,111,169,112,324,170,113,171,172,173,174,484,175,176,177,485,178,486,179,180,3,181,4,65,487,488,489,490,491,492,8,9,10,182,183,114,115,325,184,18,19,116,117,185,122,20,21,186,187,188,189,190,191,192,123,193,194,195,196,22,23,97,24,197,25,26,121,198,27,28,326,29,30,327,31,328,199,32,200,33,34,201,329,330,331,332,333,202,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,203,118,119,66,204,365,366,367,368,369,5,370,371,372,373,374,375,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,376,377,378,379,380,381,382,205,383,384,385,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,386,387,388,389,390,391,226,227,228,229,230,231,232,392,233,393,234,87,394,395,396,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,397,398,235,399,400,401,402,403,404,405,406,407,408,409,410,236,411,412,413,237,35,238,36,414,239,37,415,416,417,418,419,420,421,88,422,515,516,517,423,518,424,519,425,426,38,39,427,428,89,240,40,90,0,1,91,92,41,2,42,429,430,431,432,433,43,44,434,45,46,47,48,49,50,51,52,241,242,435,243,244,436,245,246,247,248,53,54,437,438,439,62,440,441,442,249,250,443,444,251,445,446,447,448,449,450,252,55,56,253,57,58,254,451,6,452,7,453,454,455,255,256,456,257,457,458,459,93,94,95,258,259,59,460,461,260,60,261,262,263,264,462,265,266,267,268,269,270,271,272],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[124,125,126,127,128,129,130,274,131,132,133,134,135,466,12,13,14,15,136,137,138,139,140,141,275,467,142,276,277,120,278,143,61,279,468,280,281,144,282,283,145,146,147,284,16,285,148,98,286,287,288,289,290,149,291,292,293,294,295,296,463,297,469,298,150,299,151,152,470,100,300,464,465,301,302,303,304,473,474,153,154,17,305,306,155,156,157,307,308,309,310,158,311,475,476,159,477,312,160,478,313,314,479,480,315,316,317,318,161,481,319,482,483,320,162,321,322,163,323,164,107,108,109,165,166,167,168,110,111,169,112,324,170,113,171,172,173,174,484,175,176,177,485,178,179,180,3,181,4,65,8,9,10,182,183,114,115,325,184,18,19,116,117,185,122,20,21,186,187,188,189,190,191,192,123,193,194,195,196,22,23,97,24,197,25,26,121,198,27,28,326,29,30,327,31,328,199,32,200,33,34,201,329,330,331,332,333,202,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,203,118,119,66,204,365,366,367,368,369,5,370,371,372,373,374,375,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,376,377,378,379,380,381,382,205,383,384,385,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,386,387,388,389,390,391,226,227,228,229,230,231,232,392,233,393,234,87,394,395,396,397,398,235,399,400,401,402,403,404,405,406,407,408,409,410,236,411,412,413,237,35,238,36,414,239,37,415,416,417,418,419,420,421,88,422,515,516,517,423,518,424,519,425,426,38,39,427,428,89,240,40,90,0,1,91,92,41,2,42,429,430,431,432,433,43,44,434,45,46,47,48,49,50,51,52,241,242,435,243,244,436,245,246,247,248,53,54,437,438,439,62,440,441,442,249,250,443,444,251,445,446,447,448,449,450,252,55,56,253,57,58,254,451,6,452,7,453,454,455,255,256,456,257,457,458,459,93,94,95,258,259,59,460,461,260,60,261,262,263,264,462,265,266,267,268,269,270,271,272],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[156,157],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[520],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[115],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":115,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests2.UsageTest.argumentsOrdered":30,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":351,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":198,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":268,"org.easymock.tests2.DelegateToTest.testReturnException":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":419,"org.easymock.tests.MockingTest.testPartialClassMocking":255,"org.easymock.tests.MockClassControlTest.testToString":405,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":466,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":479,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":67,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":154,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":514,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":101,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":185,"org.easymock.tests2.UsageTest.wrongArguments":26,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":203,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":381,"org.easymock.samples.ExampleTest.answerVsDelegate":60,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":424,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":458,"org.easymock.tests2.UsageConstraintsTest.testNull":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":139,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":132,"org.easymock.tests2.CaptureTest.testPrimitive":165,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":204,"org.easymock.tests.UsageTest.moreThanOneArgument":44,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":86,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":447,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":426,"org.easymock.tests.UsageTest.argumentsOrdered":49,"org.easymock.tests.UsageVarargTest.varargIntAccepted":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":226,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":463,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":105,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":338,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":230,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":498,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests.ReplayStateInvalidUsageTest.times":372,"org.easymock.tests2.DependencyTest.testClassMocking":473,"org.easymock.tests2.AnswerTest.answer":17,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":310,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":517,"org.easymock.tests2.CaptureTest.testAnd":107,"org.easymock.tests2.UsageTest.strictResetToDefault":197,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":446,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":128,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":428,"org.easymock.tests2.DelegateToTest.testDelegate":16,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":497,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":82,"org.easymock.tests.LimitationsTest.mockFinalMethod":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":88,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":433,"org.easymock.tests2.DependencyTest.testClassMockingSupport":474,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":415,"org.easymock.tests2.CaptureTest.testCapture1_2446744":166,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":467,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":80,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":308,"org.easymock.tests.UsageThrowableTest.throwError":89,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":367,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":518,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":322,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":501,"org.easymock.samples.PartialClassMockTest.testGetArea":267,"org.easymock.tests.MockingTest.testInterfaceMocking":456,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":368,"org.easymock.tests2.CompareToTest.testLessOrEqual":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":227,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":480,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":391,"org.easymock.tests2.UsageTest.niceToStrict":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":68,"org.easymock.tests2.ThreadingTest.testChangeDefault":486,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":341,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":150,"org.easymock.tests2.MockBuilderTest.testCreateMock":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":293,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":76,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":129,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":516,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":95,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":412,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":379,"org.easymock.tests.UsageOverloadedMethodTest.overloading":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":320,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":188,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":87,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":217,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":258,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":187,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":63,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":169,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":435,"org.easymock.tests.MockClassControlTest.testEquals":409,"org.easymock.tests2.EasyMockSupportClassTest.testAll":159,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":250,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":431,"org.easymock.tests2.CaptureTest.testCaptureAll":108,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":309,"org.easymock.tests.MockNameTest.defaultName":340,"org.easymock.tests2.UsageConstraintsTest.testMatches":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":448,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":365,"org.easymock.samples.ExampleTest.voteForRemovals":264,"org.easymock.tests.UsageVarargTest.allKinds":53,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":432,"org.easymock.samples.BasicClassMockTest.testPrintContent":270,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":91,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":328,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":422,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":335,"org.easymock.tests2.UsageConstraintsTest.greaterThan":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":477,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":383,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":61,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":502,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":441,"org.easymock.samples.ExampleTest.voteForRemoval":261,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":179,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":279,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":519,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":275,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":494,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":24,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":251,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":126,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":475,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":418,"org.easymock.tests2.CaptureTest.testCaptureFirst":113,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":127,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":31,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":396,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":213,"org.easymock.tests2.CaptureTest.testCapture2_2446744":170,"org.easymock.tests2.UsageTest.moreThanOneArgument":25,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":3,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":359,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":248,"org.easymock.tests.GenericTest.testBridgedEquals":444,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":239,"org.easymock.tests.UsageExpectAndReturnTest.longType":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":429,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":85,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":392,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":195,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":445,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":401,"org.easymock.tests.UsageCallCountTest.tooManyCalls":37,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":214,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":295,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":1,"org.easymock.tests.MockingTest.testNiceClassMocking":459,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":172,"org.easymock.tests.MockingTest.testClassMocking":454,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":413,"org.easymock.tests2.UsageConstraintsTest.testContains":186,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":144,"org.easymock.tests2.UsageConstraintsTest.testFind":184,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":59,"org.easymock.tests.MockTypeTest.fromEasyMockClass":423,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":450,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":164,"org.easymock.tests.UsageExpectAndReturnTest.object":216,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":142,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":102,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":244,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":389,"org.easymock.tests.UsageTest.exactCallCountByLastCall":50,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":38,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":6,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":98,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":52,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":222,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":234,"org.easymock.tests.MockClassControlTest.testHashCode":408,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":330,"org.easymock.tests2.EasyMockSupportTest.testVerify":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":316,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":39,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":94,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":233,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":307,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":285,"org.easymock.tests.UsageVarargTest.varargCharAccepted":243,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":364,"org.easymock.tests2.UsageTest.openCallCountByLastCall":27,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":134,"org.easymock.tests.DefaultClassInstantiatorTest.object":54,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":93,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":387,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":289,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":329,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":500,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":407,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":278,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":73,"org.easymock.tests.ReplayStateInvalidCallsTest.times":506,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":223,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":400,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":507,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":162,"org.easymock.tests2.UsageTest.resumeIfFailure":327,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":515,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":421,"org.easymock.tests2.StubTest.stubWithReturnValue":65,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":99,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":215,"org.easymock.tests2.SerializationTest.testAllMockedMethod":10,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":357,"org.easymock.samples.SupportTest.voteForRemovals":272,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":442,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":79,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":11,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":363,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":305,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":7,"org.easymock.tests.UsageExpectAndThrowTest.object":77,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":193,"org.easymock.tests2.DelegateToTest.testWrongClass":147,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":504,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":231,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":232,"org.easymock.samples.ConstructorCalledMockTest.testTax":460,"org.easymock.tests.UsageStrictMockTest.range":57,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":303,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":274,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":171,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":78,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":151,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":311,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":380,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":496,"org.easymock.tests2.CaptureTest.testCaptureNone":111,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":378,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":488,"org.easymock.tests.UsageUnorderedTest.message":51,"org.easymock.tests.UsageVerifyTest.twoReturns":42,"org.easymock.tests.UsageVarargTest.varargByteAccepted":247,"org.easymock.tests2.ThreadingTest.testThreadSafe":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":481,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":36,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":390,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":269,"org.easymock.tests2.CaptureTest.testCapture_2617107":109,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":417,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":361,"org.easymock.tests2.UsageConstraintsTest.any":20,"org.easymock.tests2.StubTest.stub":4,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":371,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":420,"org.easymock.tests.UsageExpectAndThrowTest.longType":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":362,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":62,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":370,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":200,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests.LimitationsTest.mockNativeMethod":235,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":443,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":225,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":288,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":512,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":201,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":489,"org.easymock.tests2.NameTest.nameForMocksControl":15,"org.easymock.tests2.MockedExceptionTest.testMockedException":281,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":312,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":71,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":257,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":323,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":136,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":152,"org.easymock.tests.MockingTest.testNicePartialClassMocking":256,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":141,"org.easymock.tests2.CaptureTest.testCaptureLast":110,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":286,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":416,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":511,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":177,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":117,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":194,"org.easymock.tests.MockingTest.testTwoMocks":455,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":508,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":485,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":75,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":23,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":492,"org.easymock.samples.ExampleTest.removeNonExistingDocument":462,"org.easymock.tests.UsageStrictMockTest.differentMethods":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":292,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":331,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":491,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":438,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":180,"org.easymock.tests2.MockBuilderTest.testCreateMockString":465,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":478,"org.easymock.tests.UsageExpectAndThrowTest.floatType":69,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":476,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":155,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":161,"org.easymock.samples.ExampleTest.voteAgainstRemoval":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":352,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":376,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":143,"org.easymock.tests.LimitationsTest.privateConstructor":398,"org.easymock.tests2.UsageConstraintsTest.testNotNull":22,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":92,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":280,"org.easymock.tests2.UsageTest.defaultResetToNice":326,"org.easymock.samples.ExampleTest.voteAgainstRemovals":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":353,"org.easymock.tests.UsageVarargTest.differentLength":436,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":287,"org.easymock.tests2.CallbackTest.callback":158,"org.easymock.tests2.UsageConstraintsTest.equals":325,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":276,"org.easymock.tests.UsageTest.openCallCountByLastCall":46,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":182,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":119,"org.easymock.tests.UsageCallCountTest.tooFewCalls":35,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":174,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":382,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":490,"org.easymock.tests.UsageThrowableTest.throwCheckedException":0,"org.easymock.tests.MockingTest.testStrictClassMocking":453,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":411,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":176,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":291,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":373,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":175,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":157,"org.easymock.tests.ObjectMethodsTest.testHashCode":388,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":520,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":104,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":510,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":181,"org.easymock.tests2.NameTest.nameForNiceMock":14,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":505,"org.easymock.tests2.DependencyTest.testInterfaceMocking":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":103,"org.easymock.samples.ExampleTest.addDocument":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":319,"org.easymock.tests2.DelegateToTest.testStubDelegate":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":321,"org.easymock.tests2.AnswerTest.stubAnswer":156,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":56,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":470,"org.easymock.tests.UsageVarargTest.varargLongAccepted":246,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":350,"org.easymock.tests.UsageExpectAndReturnTest.floatType":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":224,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":148,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":461,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":394,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":192,"org.easymock.tests.UsageThrowableTest.noUpperLimit":240,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":337,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":183,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":301,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":167,"org.easymock.tests2.SerializationTest.test":9,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":64,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":437,"org.easymock.tests2.UsageConstraintsTest.testSame":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":207,"org.easymock.samples.SupportTest.addDocument":271,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":484,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":495,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":313,"org.easymock.tests.GenericTest.testPackageScope":249,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":336,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":457,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":493,"org.easymock.tests2.NameTest.nameForMock":12,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":218,"org.easymock.tests2.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":277,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":210,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":81,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":385,"org.easymock.tests2.MockedExceptionTest.testRealException":282,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":425,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":355,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":118,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":375,"org.easymock.tests2.NameTest.nameForStrictMock":13,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":298,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":163,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":140,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":302,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":439,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":123,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":297,"org.easymock.tests2.UsageStrictMockTest.range":33,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":499,"org.easymock.tests2.UsageConstraintsTest.lessThan":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":333,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":349,"org.easymock.tests2.CaptureTest.testCaptureRightOne":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":315,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":487,"org.easymock.tests2.UsageConstraintsTest.testOr":116,"org.easymock.tests.UsageRangeTest.combination":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":137,"org.easymock.tests.UsageTest.wrongArguments":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":314,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":404,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":211,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":342,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":440,"org.easymock.tests.UsageVarargTest.varargShortAccepted":245,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":414,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":513,"org.easymock.tests2.UsageConstraintsTest.cmpTo":21,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":306,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":503,"org.easymock.tests2.CompareToTest.testLessThan":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":344,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":28,"org.easymock.tests2.CaptureTest.testCaptureFromStub":324,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":366,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":469,"org.easymock.tests.UsageTest.unexpectedCallWithArray":434,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":509,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":238,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":220,"org.easymock.tests2.UsageConstraintsTest.constraints":114,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":253,"org.easymock.samples.ExampleTest.addAndChangeDocument":265,"org.easymock.tests.UsageStrictMockTest.testVerify":451,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":266,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":252,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":430,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":168,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":228,"org.easymock.tests.LimitationsTest.abstractClass":397,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":212,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":130,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":241}}]
