[{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[3,4,5,6,7,8,9,10,11],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[15,16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[17],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[18,19,20,21,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,0,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,1,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,16,151,152,2,12,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[173,174,175,176,177,55,56,178,179,70,180,181,182,183,184,185,186,147],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[187,173,26,27,28,29,30,31,32,33,34,188,35,36,37,38,39,189,190,191,40,192,193,194,195,196,197,44,198,199,45,46,200,47,201,202,203,204,48,205,206,207,208,49,209,210,211,212,174,175,176,50,51,52,53,54,177,55,56,213,214,215,58,216,59,60,61,15,217,218,62,63,219,64,220,221,222,223,65,224,225,226,227,66,228,229,230,231,232,67,68,178,69,233,179,70,72,73,234,235,236,237,238,79,80,81,82,83,84,85,86,87,88,89,239,90,91,92,93,94,95,96,180,97,98,0,99,100,240,101,241,102,103,104,242,105,106,107,108,109,110,111,112,113,114,115,1,116,117,243,118,244,119,120,121,122,123,124,125,126,245,246,127,247,248,129,130,131,132,133,134,135,136,137,138,139,140,141,142,249,181,182,183,184,143,14,250,251,252,253,145,185,146,254,186,147,255,256,257,148,258,259,260,261,149,150,16,151,262,152,263,264,2,265,266,12,153,154,156,267,268,269,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,270,271],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:191","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[272,25,173,273,274,275,177,55,56,213,178,233,179,180,276,277,278,279,280,281,185,254,186],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[282,283],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[286,287,288],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[18,19,20,21,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[187,173,289,290,29,30,31,32,33,34,35,36,37,38,39,189,190,191,40,192,291,292,293,294,197,295,41,42,43,198,199,45,46,200,47,201,202,203,204,48,205,206,207,208,49,209,210,211,212,177,55,56,213,214,215,296,297,298,299,300,57,58,216,15,217,218,62,63,219,64,220,221,222,223,65,224,225,226,227,66,228,229,230,231,67,178,69,233,179,70,71,72,73,74,75,76,77,78,234,235,236,237,238,80,82,83,84,85,86,87,88,89,239,90,91,93,94,95,96,180,98,0,301,302,240,101,102,103,104,113,1,118,119,124,125,126,245,247,248,303,129,131,132,133,134,135,136,137,138,139,140,141,249,143,14,144,250,251,252,145,185,146,254,186,147,148,259,261,149,267,157,158,159,160,162,163,168,169,171,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[304],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[287,288],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[305,162,164,165,306,166,167,168,170,285,171,307,172],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[162,164,165,306,166,167,168,170,285,171,307,172],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[257,148,258,259,260,261,149,150,308,16,12,153,267,268,162,163,164,165,171,307],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[286,287,288],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[282],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[282,283],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":148,"org.easymock.tests2.UsageTest.argumentsOrdered":100,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":13,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":0,"org.easymock.tests2.StubTest.stubWithReturnValue":252,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":204,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":94,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":156,"org.easymock.tests2.SerializationTest.testAllMockedMethod":161,"org.easymock.tests2.DelegateToTest.testReturnException":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":292,"org.easymock.tests.MockingTest.testPartialClassMocking":59,"org.easymock.samples.SupportTest.voteForRemovals":83,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":282,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":225,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":304,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":217,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":121,"org.easymock.tests.UsageExpectAndThrowTest.object":65,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":153,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":19,"org.easymock.tests2.DelegateToTest.testWrongClass":144,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":214,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":215,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":150,"org.easymock.tests2.UsageTest.wrongArguments":97,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":189,"org.easymock.tests.UsageStrictMockTest.range":233,"org.easymock.samples.ExampleTest.answerVsDelegate":85,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":105,"org.easymock.tests2.UsageConstraintsTest.testNull":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":224,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":103,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests2.CaptureTest.testPrimitive":165,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":231,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests.UsageTest.moreThanOneArgument":173,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":298,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":11,"org.easymock.tests2.CaptureTest.testCaptureNone":169,"org.easymock.tests.UsageUnorderedTest.message":213,"org.easymock.tests.UsageVerifyTest.twoReturns":56,"org.easymock.tests.UsageVarargTest.varargByteAccepted":37,"org.easymock.tests2.ThreadingTest.testThreadSafe":247,"org.easymock.tests.UsageTest.argumentsOrdered":28,"org.easymock.tests.UsageVarargTest.varargIntAccepted":32,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":51,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":90,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":234,"org.easymock.tests2.CaptureTest.testCapture_2617107":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":40,"org.easymock.tests2.UsageConstraintsTest.any":16,"org.easymock.tests2.StubTest.stub":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":238,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":293,"org.easymock.tests.UsageExpectAndThrowTest.longType":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":7,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":286,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":146,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":124,"org.easymock.tests2.SerializationTest.testClass":159,"org.easymock.tests.LimitationsTest.mockNativeMethod":54,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":212,"org.easymock.tests2.AnswerTest.answer":125,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":308,"org.easymock.tests2.CaptureTest.testAnd":162,"org.easymock.tests2.UsageTest.strictResetToDefault":96,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":147,"org.easymock.tests2.NameTest.nameForMocksControl":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":297,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":195,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":135,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":290,"org.easymock.tests2.DelegateToTest.testDelegate":250,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":219,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":61,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":104,"org.easymock.tests.MockingTest.testNicePartialClassMocking":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":66,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":116,"org.easymock.tests2.CaptureTest.testCaptureLast":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":25,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":111,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":149,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":154,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":272,"org.easymock.tests2.CaptureTest.testCapture1_2446744":306,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":198,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":222,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":99,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":268,"org.easymock.tests.UsageThrowableTest.throwError":71,"org.easymock.tests.UsageStrictMockTest.differentMethods":179,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":303,"org.easymock.tests2.ConstraintsToStringTest.andToString":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":300,"org.easymock.tests.UsageExpectAndThrowTest.floatType":62,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":2,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":126,"org.easymock.tests.UsageVerifyTest.twoThrows":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":122,"org.easymock.samples.PartialClassMockTest.testGetArea":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":235,"org.easymock.samples.ExampleTest.voteAgainstRemoval":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":10,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":218,"org.easymock.tests2.UsageTest.niceToStrict":98,"org.easymock.tests2.UsageConstraintsTest.testNotNull":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":78,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":102,"org.easymock.samples.ExampleTest.voteAgainstRemovals":84,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":49,"org.easymock.tests.UsageVarargTest.differentLength":188,"org.easymock.tests2.CallbackTest.callback":249,"org.easymock.tests.UsageTest.openCallCountByLastCall":289,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":277,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":223,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":255,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":191,"org.easymock.tests.UsageCallCountTest.tooFewCalls":176,"org.easymock.tests.UsageOverloadedMethodTest.overloading":58,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":263,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":43,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":205,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":57,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":108,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":287,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":152,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":170,"org.easymock.tests.UsageThrowableTest.throwCheckedException":75,"org.easymock.tests2.EasyMockSupportClassTest.testAll":120,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":80,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":273,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":229,"org.easymock.tests2.CaptureTest.testCaptureAll":163,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":110,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":107,"org.easymock.tests2.UsageConstraintsTest.testMatches":264,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":17,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":109,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":299,"org.easymock.samples.ExampleTest.voteForRemovals":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":22,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":129,"org.easymock.tests2.NameTest.nameForNiceMock":183,"org.easymock.tests.UsageVarargTest.allKinds":39,"org.easymock.tests2.DependencyTest.testInterfaceMocking":157,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":21,"org.easymock.samples.BasicClassMockTest.testPrintContent":91,"org.easymock.samples.ExampleTest.addDocument":88,"org.easymock.tests2.DelegateToTest.testStubDelegate":14,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":77,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":253,"org.easymock.tests2.AnswerTest.stubAnswer":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":295,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":178,"org.easymock.tests2.UsageConstraintsTest.greaterThan":265,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":194,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":244,"org.easymock.tests.UsageVarargTest.varargLongAccepted":36,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":70,"org.easymock.samples.ExampleTest.voteForRemoval":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":4,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":211,"org.easymock.tests.UsageExpectAndReturnTest.floatType":45,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":127,"org.easymock.tests2.ConstraintsToStringTest.orToString":276,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":266,"org.easymock.tests.UsageThrowableTest.noUpperLimit":72,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":256,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":95,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":81,"org.easymock.tests2.SerializationTest.test":160,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":166,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":288,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":133,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":73,"org.easymock.tests2.UsageConstraintsTest.testSame":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":199,"org.easymock.samples.SupportTest.addDocument":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":291,"org.easymock.tests2.CaptureTest.testCaptureFirst":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":134,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":101,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":202,"org.easymock.tests.GenericTest.testPackageScope":79,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":128,"org.easymock.tests2.UsageTest.moreThanOneArgument":180,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":242,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":38,"org.easymock.tests.GenericTest.testBridgedEquals":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":52,"org.easymock.tests2.NameTest.nameForMock":181,"org.easymock.tests.UsageExpectAndReturnTest.longType":46,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":131,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":206,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":155,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":228,"org.easymock.tests2.UsageStrictMockTest.differentMethods":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":200,"org.easymock.tests.UsageCallCountTest.tooManyCalls":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":196,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":203,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":64,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":190,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":106,"org.easymock.tests2.UsageConstraintsTest.testContains":262,"org.easymock.tests2.NameTest.nameForStrictMock":182,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":130,"org.easymock.tests2.UsageConstraintsTest.testFind":258,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":216,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":270,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":1,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":271,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":232,"org.easymock.tests.UsageExpectAndReturnTest.object":48,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":12,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":117,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":241,"org.easymock.tests2.UsageStrictMockTest.range":254,"org.easymock.tests2.UsageConstraintsTest.lessThan":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":20,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":34,"org.easymock.tests.UsageTest.exactCallCountByLastCall":29,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":15,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":132,"org.easymock.tests2.CaptureTest.testCaptureRightOne":171,"org.easymock.tests2.UsageConstraintsTest.testOr":261,"org.easymock.tests.UsageRangeTest.combination":193,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":24,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":209,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":30,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":113,"org.easymock.tests.UsageTest.wrongArguments":26,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":42,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":47,"org.easymock.tests2.EasyMockSupportTest.testVerify":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":207,"org.easymock.tests.UsageVarargTest.varargShortAccepted":35,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":41,"org.easymock.tests2.UsageConstraintsTest.cmpTo":151,"org.easymock.tests.UsageVarargTest.varargCharAccepted":33,"org.easymock.tests2.CaptureTest.testCaptureMultiple":305,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":8,"org.easymock.tests2.UsageTest.openCallCountByLastCall":301,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":302,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":141,"org.easymock.tests2.CaptureTest.testCaptureFromStub":307,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":275,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":221,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":74,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":68,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":208,"org.easymock.tests2.CaptureTest.testCapture":285,"org.easymock.tests2.UsageConstraintsTest.constraints":257,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":243,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.samples.ExampleTest.addAndChangeDocument":239,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":220,"org.easymock.tests2.ConstraintsToStringTest.notToString":278,"org.easymock.tests.CapturesMatcherTest.test":284,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":210,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":93,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":279,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":123,"org.easymock.tests2.UsageTest.resumeIfFailure":240,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":236,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":237,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":44,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":137}}]
