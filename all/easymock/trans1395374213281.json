[{"transplant":{"position":"org.easymock.internal.MocksControl:223","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:142","sourceCode":"final java.lang.Long java.lang.Long = org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializableUID(java.lang.Class<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[67,68,69,70,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[72],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[73,74,75,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[9,77,78,79,80,81,82,83,84,85,21,86,87,88,89,90,91,91,92,92,93,94,95,96,97,98,99,100,101,102,103,44,104,105,106,107,108,109],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[110,111],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[112,113,114,115,116,117,118],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[67,119,120,121,122,123,124,0,125,126,127,128,129,130,131,132,117,133,134,135,136,137,138,139,140,1,141,142,143,2,144,145,3,146,147,148,149,150,151,152,4,5,153,154,155,156,157,158,159,160,161,162,6,7,163,164,165,118,166,167,168,169,170,171,172,173,174,175,176,177,178,179,68,180,69,181,182,183,8,9,10,11,12,13,184,185,186,187,14,188,15,16,189,17,190,191,192,18,19,193,194,195,77,78,196,20,197,79,80,81,82,110,111,198,199,200,83,201,84,85,202,21,86,203,204,205,206,207,87,88,89,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,33,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,90,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,91,91,92,92,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,93,315,94,95,96,97,98,316,317,318,319,320,321,322,323,70,34,35,36,37,38,39,99,100,101,102,103,324,71,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,40,41,406,407,42,43,44,408,45,46,47,48,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,49,50,51,52,443,53,54,444,55,445,446,447,448,104,105,449,450,106,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,63,64,65,107,108,109,490,491,492,493,494,495,496,66,497,498,499,500,501,502,503,504,505,506],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"classConstructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[125,128,117,134,507,137,508,509,510,149,159,165,118,91,92],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[203],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[351],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[149,150,151,511],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[165,512,513,91,92],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[122,123],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[414,514,515],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[380,381,64],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"bridgeMethod","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[67,182,9,12,14,15,16,190,191,18,19,194,80,81,199,200,87,88,287,288,289,290,297,309,311,314,378,43,44,46,442,49,51,52,443,53,54,444,55,489,63,64,65,490,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"minimum"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[203],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[67,119,120,121,122,123,124,0,126,127,129,130,131,132,133,516,134,135,136,138,139,140,1,141,142,143,2,144,145,3,146,147,148,517,518,519,520,521,522,149,150,151,152,4,5,153,154,155,156,157,158,159,160,161,162,6,7,163,164,165,118,167,168,169,170,171,172,173,174,175,176,177,178,179,68,180,69,181,182,183,8,9,10,11,12,13,184,523,524,185,186,187,14,188,15,16,189,17,190,191,192,18,19,193,194,195,77,78,196,20,197,79,80,81,82,110,111,198,199,200,83,201,84,85,202,21,86,203,204,205,206,207,87,88,89,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,33,525,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,90,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,526,277,278,279,527,280,281,282,283,284,285,286,287,288,289,290,91,92,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,93,315,94,95,96,97,98,316,317,318,319,320,321,322,323,70,34,35,36,37,38,39,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,99,100,101,102,103,324,71,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,40,41,406,407,42,43,44,408,45,46,47,48,410,411,412,413,414,415,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,49,50,51,52,443,53,54,444,55,445,446,447,448,104,105,449,450,106,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,63,64,65,107,108,109,490,491,492,493,494,495,496,66,497,498,499,500,501,550,551,502,503,504,505,506],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":20,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":442,"org.easymock.tests2.UsageTest.argumentsOrdered":19,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":146,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":339,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":17,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":291,"org.easymock.tests2.DelegateToTest.testReturnException":68,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":461,"org.easymock.tests.MockingTest.testPartialClassMocking":387,"org.easymock.tests.MockClassControlTest.testToString":318,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":286,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":476,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":221,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":356,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":239,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":549,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":112,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":104,"org.easymock.tests2.UsageTest.wrongArguments":16,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":480,"org.easymock.samples.ExampleTest.answerVsDelegate":297,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":504,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":392,"org.easymock.tests2.UsageConstraintsTest.testNull":80,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":153,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":3,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":323,"org.easymock.tests2.CaptureTest.testPrimitive":247,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":106,"org.easymock.tests.UsageTest.moreThanOneArgument":49,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":375,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":5,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":96,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":455,"org.easymock.tests.UsageTest.argumentsOrdered":54,"org.easymock.tests.UsageVarargTest.varargIntAccepted":492,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":116,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":0,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":524,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":177,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":103,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":533,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":26,"org.easymock.tests.ReplayStateInvalidUsageTest.times":402,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":266,"org.easymock.tests2.DependencyTest.testClassMocking":236,"org.easymock.tests2.AnswerTest.answer":67,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":260,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":551,"org.easymock.tests2.CaptureTest.testAnd":244,"org.easymock.tests2.UsageTest.strictResetToDefault":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":161,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":95,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":142,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":459,"org.easymock.tests2.DelegateToTest.testDelegate":182,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":532,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":371,"org.easymock.tests.LimitationsTest.mockFinalMethod":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":464,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":486,"org.easymock.tests2.DependencyTest.testClassMockingSupport":237,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":40,"org.easymock.tests2.CaptureTest.testCapture1_2446744":248,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":369,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":258,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":396,"org.easymock.tests.UsageThrowableTest.throwError":376,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":503,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":98,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":508,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":512,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":235,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":536,"org.easymock.samples.PartialClassMockTest.testGetArea":292,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":397,"org.easymock.tests.MockingTest.testInterfaceMocking":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":440,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":474,"org.easymock.tests2.UsageTest.niceToStrict":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":357,"org.easymock.tests2.ThreadingTest.testChangeDefault":525,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":130,"org.easymock.tests2.MockBuilderTest.testCreateMock":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":269,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":23,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":365,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":143,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":550,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":355,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":478,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":74,"org.easymock.tests.UsageOverloadedMethodTest.overloading":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":232,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":36,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":84,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":487,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":429,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":514,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":201,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":253,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":493,"org.easymock.tests2.EasyMockSupportClassTest.testAll":214,"org.easymock.tests.MockClassControlTest.testEquals":322,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":326,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":28,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":373,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":484,"org.easymock.tests2.CaptureTest.testCaptureAll":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":259,"org.easymock.tests.MockNameTest.defaultName":438,"org.easymock.tests2.UsageConstraintsTest.testMatches":85,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":97,"org.easymock.samples.ExampleTest.voteForRemovals":301,"org.easymock.tests.UsageVarargTest.allKinds":500,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":485,"org.easymock.samples.BasicClassMockTest.testPrintContent":305,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":382,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":465,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":174,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":416,"org.easymock.tests2.UsageConstraintsTest.greaterThan":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":215,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":446,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":7,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":537,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":417,"org.easymock.samples.ExampleTest.voteForRemoval":298,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":163,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":240,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":505,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":156,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":529,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":14,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":324,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":1,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":212,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":460,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":179,"org.easymock.tests2.CaptureTest.testCaptureFirst":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":141,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":39,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":425,"org.easymock.tests2.UsageTest.moreThanOneArgument":15,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":242,"org.easymock.tests2.CaptureTest.testCapture2_2446744":255,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":347,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":499,"org.easymock.tests.GenericTest.testBridgedEquals":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":75,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":313,"org.easymock.tests.UsageExpectAndReturnTest.longType":421,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":482,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":374,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":109,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":206,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":372,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":467,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":94,"org.easymock.tests.UsageCallCountTest.tooManyCalls":314,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":57,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":231,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":426,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":271,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":361,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":381,"org.easymock.tests.MockingTest.testNiceClassMocking":393,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":274,"org.easymock.tests.MockingTest.testClassMocking":385,"org.easymock.tests2.UsageConstraintsTest.testContains":83,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":307,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":282,"org.easymock.tests2.UsageConstraintsTest.testFind":79,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":489,"org.easymock.tests.MockTypeTest.fromEasyMockClass":502,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":407,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":210,"org.easymock.tests.UsageExpectAndReturnTest.object":428,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":158,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":145,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":495,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":113,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":472,"org.easymock.tests.UsageTest.exactCallCountByLastCall":444,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":76,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":456,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":61,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":118,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":434,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":35,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":168,"org.easymock.tests.MockClassControlTest.testHashCode":321,"org.easymock.tests2.EasyMockSupportTest.testVerify":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":224,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":25,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":457,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":70,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":257,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":195,"org.easymock.tests.UsageVarargTest.varargCharAccepted":494,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":409,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageTest.openCallCountByLastCall":190,"org.easymock.tests.DefaultClassInstantiatorTest.object":410,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":147,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":353,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":470,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":363,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":379,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":264,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":167,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":535,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":162,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":362,"org.easymock.tests.ReplayStateInvalidCallsTest.times":541,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":435,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":466,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":542,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":233,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":319,"org.easymock.tests2.UsageTest.resumeIfFailure":193,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":501,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":523,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":463,"org.easymock.tests2.StubTest.stubWithReturnValue":285,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":117,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":427,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":207,"org.easymock.tests2.SerializationTest.testAllMockedMethod":151,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":345,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":510,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":30,"org.easymock.samples.SupportTest.voteForRemovals":295,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":368,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":511,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":351,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":119,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":477,"org.easymock.tests.UsageExpectAndThrowTest.object":366,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":204,"org.easymock.tests2.DelegateToTest.testWrongClass":69,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":539,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":107,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":108,"org.easymock.tests.UsageStrictMockTest.range":45,"org.easymock.samples.ConstructorCalledMockTest.testTax":91,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":186,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":144,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":367,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":132,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":404,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":479,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":56,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":531,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":441,"org.easymock.tests2.CaptureTest.testCaptureNone":252,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":518,"org.easymock.tests.UsageUnorderedTest.message":55,"org.easymock.tests.UsageVerifyTest.twoReturns":65,"org.easymock.tests.UsageVarargTest.varargByteAccepted":498,"org.easymock.tests2.ThreadingTest.testThreadSafe":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":228,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":311,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":473,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":304,"org.easymock.tests2.CaptureTest.testCapture_2617107":246,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":32,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":406,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":349,"org.easymock.tests2.UsageConstraintsTest.any":199,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":401,"org.easymock.tests2.StubTest.stub":284,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":350,"org.easymock.tests.UsageExpectAndThrowTest.longType":359,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":414,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":400,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":10,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":172,"org.easymock.tests2.SerializationTest.testClass":149,"org.easymock.tests.LimitationsTest.mockNativeMethod":453,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":437,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":263,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":547,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":13,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":519,"org.easymock.tests2.NameTest.nameForMocksControl":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":265,"org.easymock.tests2.MockedExceptionTest.testMockedException":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":216,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":443,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":390,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":209,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":360,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":152,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":133,"org.easymock.tests.MockingTest.testNicePartialClassMocking":388,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":155,"org.easymock.tests2.CaptureTest.testCaptureLast":251,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":261,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":41,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":546,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":110,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":279,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":205,"org.easymock.tests.MockingTest.testTwoMocks":386,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":543,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":527,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":418,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":364,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":88,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":522,"org.easymock.samples.ExampleTest.removeNonExistingDocument":302,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":398,"org.easymock.tests.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":268,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":169,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":521,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":412,"org.easymock.tests2.ConstraintsToStringTest.andToString":29,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":241,"org.easymock.tests2.MockBuilderTest.testCreateMockString":138,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":218,"org.easymock.tests.UsageExpectAndThrowTest.floatType":358,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":213,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":121,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":166,"org.easymock.tests.UsageVerifyTest.twoThrows":64,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":227,"org.easymock.samples.ExampleTest.voteAgainstRemoval":299,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":340,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":6,"org.easymock.tests.LimitationsTest.privateConstructor":452,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":72,"org.easymock.tests2.UsageConstraintsTest.testNotNull":87,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":280,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":383,"org.easymock.tests2.UsageTest.defaultResetToNice":192,"org.easymock.samples.ExampleTest.voteAgainstRemovals":296,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":341,"org.easymock.tests.UsageVarargTest.differentLength":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":262,"org.easymock.tests2.CallbackTest.callback":124,"org.easymock.tests2.UsageConstraintsTest.equals":197,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":59,"org.easymock.tests.UsageTest.openCallCountByLastCall":52,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":449,"org.easymock.tests.UsageCallCountTest.tooFewCalls":309,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":276,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":481,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":520,"org.easymock.tests.UsageThrowableTest.throwCheckedException":380,"org.easymock.tests.MockingTest.testStrictClassMocking":384,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":58,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":278,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":267,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":275,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":403,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":277,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":123,"org.easymock.tests.ObjectMethodsTest.testHashCode":471,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":115,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":545,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":243,"org.easymock.tests2.NameTest.nameForNiceMock":289,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":540,"org.easymock.tests2.DependencyTest.testInterfaceMocking":238,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":114,"org.easymock.samples.ExampleTest.addDocument":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":229,"org.easymock.tests2.DelegateToTest.testStubDelegate":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":234,"org.easymock.tests2.AnswerTest.stubAnswer":122,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":44,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":516,"org.easymock.tests.UsageVarargTest.varargLongAccepted":497,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":338,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":436,"org.easymock.tests.UsageExpectAndReturnTest.floatType":420,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":165,"org.easymock.tests2.ConstraintsToStringTest.orToString":22,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":176,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":37,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":86,"org.easymock.tests.UsageThrowableTest.noUpperLimit":377,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":78,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":184,"org.easymock.tests2.SerializationTest.test":150,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":249,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":515,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":419,"org.easymock.tests2.UsageConstraintsTest.testSame":81,"org.easymock.samples.SupportTest.addDocument":294,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":526,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":530,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":219,"org.easymock.tests.GenericTest.testPackageScope":325,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":175,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":391,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":528,"org.easymock.tests2.NameTest.nameForMock":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":430,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":137,"org.easymock.tests2.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":160,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":422,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":370,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":469,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":448,"org.easymock.tests2.MockedExceptionTest.testRealException":283,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":506,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":509,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":342,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":405,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":105,"org.easymock.tests2.NameTest.nameForStrictMock":288,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":129,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":73,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":154,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":185,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":413,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":203,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":126,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":534,"org.easymock.tests2.UsageConstraintsTest.lessThan":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":171,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":223,"org.easymock.tests2.CaptureTest.testCaptureRightOne":254,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":517,"org.easymock.tests2.UsageConstraintsTest.testOr":82,"org.easymock.tests.UsageRangeTest.combination":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":4,"org.easymock.tests.UsageTest.wrongArguments":51,"org.easymock.tests2.MockBuilderTest.testWithConstructor":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":220,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":423,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":330,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":415,"org.easymock.tests.UsageVarargTest.varargShortAccepted":66,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":312,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":548,"org.easymock.tests2.UsageConstraintsTest.cmpTo":200,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":120,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":538,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":332,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":191,"org.easymock.tests2.CaptureTest.testCaptureFromStub":90,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":395,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":127,"org.easymock.tests.UsageTest.unexpectedCallWithArray":50,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":544,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":43,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":310,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":507,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":432,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":408,"org.easymock.tests2.UsageConstraintsTest.constraints":196,"org.easymock.samples.ExampleTest.addAndChangeDocument":303,"org.easymock.tests2.ConstraintsToStringTest.notToString":24,"org.easymock.tests.UsageStrictMockTest.testVerify":48,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":293,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":483,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":250,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":101,"org.easymock.tests.LimitationsTest.abstractClass":451,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":102,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":38,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":491,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":2}}]
