[{"transplant":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:229","failures":[8,9,10,11,12],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Invocation:195","failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,10,53,54,55,56,57,58,12,59,60,61,62,63,64,65,66],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[13,14,15,16,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,22,92,93,94,95,96,34,97,98,99,100,101,102,103,104,8,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,1,128,129,130,131,0,132,133,134,50,135,136,137,138,139,9,140,52,141,142,143,144,145,53,54,146,147,148,149,55,150,151,152,153,11,154,155,58,12,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,60,172,173,61,174,62,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,2,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,3,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,4,5,270,271,272,273,274,275,6,276,277,278,279,280,281,7,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,340,341,341,342,343,344,345,346,347,348],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[67,68,86,88,89,91,96,349,321,343],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:126","failures":[180,182,184,323,343],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[69,70,71,350],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[99,101,102,158,351,352,353,354,232,234,235,306,314,330,331,332],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[355,13,14,15,16,67,356,68,357,358,359,360,70,71,361,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,17,18,19,20,21,22,23,24,25,26,27,28,92,93,94,95,96,29,30,31,32,33,34,35,36,37,38,39,40,97,98,99,100,101,102,103,362,41,104,363,8,44,364,46,365,105,47,366,48,49,367,106,368,369,370,371,108,109,110,111,372,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,1,128,129,130,131,0,132,133,134,50,135,136,137,138,373,374,139,375,51,9,140,52,376,10,141,142,143,144,145,53,54,147,148,377,150,151,378,379,152,153,56,11,57,380,154,381,155,58,382,12,59,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,60,172,173,61,174,62,175,176,177,178,179,180,181,182,183,184,383,384,385,386,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,2,215,216,217,218,387,219,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,410,411,412,413,414,415,416,417,418,246,247,248,419,249,250,251,3,252,253,254,420,421,422,255,423,424,425,426,259,260,261,262,263,264,64,427,65,428,66,429,430,265,266,267,268,269,4,5,270,271,272,273,274,275,6,276,277,278,279,280,281,7,282,283,284,285,286,287,288,431,289,290,291,292,293,294,295,296,297,432,298,299,300,301,433,302,303,434,435,436,437,438,439,440,441,442,443,444,445,446,349,447,448,304,449,450,451,452,453,305,454,306,307,308,309,310,311,455,456,312,457,313,314,458,315,316,317,318,319,320,321,322,323,324,325,326,459,327,328,329,460,461,462,463,464,465,466,467,468,469,470,330,331,332,333,334,335,336,337,338,339,342,343,344,345,346,347,471,348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"genericParameters"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[472],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[418,419],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[85],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[180,182,183,184,436,323,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[357,358,359,360,69,70,72,75,76,81,82,83,84,86,89,90,91,22,92,93,94,95,34,97,99,100,101,102,103,104,8,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,1,128,129,131,0,132,133,134,50,135,136,137,138,373,139,51,9,140,52,141,142,143,144,145,53,54,146,147,148,149,55,151,152,153,56,154,381,155,58,382,12,59,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,60,172,173,61,174,62,175,176,177,178,180,181,182,184,383,384,385,386,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,214,2,215,216,217,218,389,390,391,392,393,394,395,396,397,398,399,400,402,220,221,223,224,229,231,232,233,234,235,236,237,238,240,241,242,243,244,245,410,411,412,413,414,415,416,417,246,249,250,251,3,252,254,256,257,258,259,260,261,262,263,264,268,269,4,5,270,271,272,273,274,275,6,276,277,278,279,280,281,7,282,283,284,285,432,433,306,307,308,309,310,311,312,313,314,458,315,316,317,318,319,320,321,322,323,324,326,459,327,328,329,460,461,462,463,464,466,467,468,330,331,332,338,340,340,341,341,342,343,345,471],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[107,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[125,137,161,395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[242,243,331],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[67,68,69,70,72,73,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,22,92,93,94,95,96,34,99,101,102,104,8,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,1,128,129,131,0,132,133,134,50,135,136,137,138,139,9,140,52,141,142,143,144,145,53,54,146,147,148,149,55,150,151,152,153,11,154,155,58,12,156,157,158,160,162,163,164,167,168,169,170,171,60,172,173,61,174,62,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,2,215,216,217,218,219,220,221,222,223,224,225,226,227,228,232,234,235,238,239,240,241,242,243,244,245,246,248,249,250,251,3,252,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,4,5,270,271,272,273,274,275,6,276,277,278,279,280,281,7,282,283,284,285,298,304,305,306,307,308,309,310,311,312,313,314,316,317,320,321,323,324,326,327,328,329,330,331,332,334,338,340,340,341,341,342,343,344,345,347,348],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[473,474,475,476,477,478,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Invocation:99","failures":[119,154,175,177,215,480,334,338,344,345,347,348],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[110,117,123,133,481],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[101,159,165,166,231,234,482,483,306,458,315,318,319,331,332],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[99,101,102,158,351,352,353,354,232,234,235,306,314,330,331,332],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[125,137,161],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[443,445,452,453,454],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[67,356,68,357,358,359,360,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,91,22,92,93,94,95,96,34,97,98,99,100,101,102,103,104,8,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,1,128,129,130,131,0,132,133,134,50,135,136,137,138,373,139,51,9,140,52,141,142,143,144,145,53,54,146,147,148,149,55,150,151,152,153,56,11,154,381,155,58,382,12,59,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,60,172,173,61,174,62,175,176,177,178,180,181,182,184,383,384,385,386,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,214,2,215,217,218,220,221,222,223,224,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,249,250,251,3,252,256,257,258,259,260,261,262,263,264,268,269,4,5,270,271,272,273,274,275,6,276,277,278,279,280,281,7,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,433,302,303,306,307,308,309,310,311,312,313,314,458,315,316,317,318,319,320,321,323,324,459,327,328,329,460,461,462,463,464,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[69,71,94,104,8,105,106,107,134,50,136,137,138,373,139,51,9,140,52,53,54,146,147,149,55,56,484,11,57,154,381,155,58,382,12,485,59,486,487,205,411,246,247,248,255,256,257,258,64,428,312,335,336,338,340,340,341,341],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[110,116,121,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[355,13,14,15,16,67,356,68,357,358,359,360,69,70,71,361,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,17,18,19,20,21,22,23,24,25,26,27,28,92,93,94,95,96,29,30,31,32,33,34,35,36,37,38,39,40,97,98,99,100,101,102,103,362,41,42,104,43,363,8,44,364,489,45,46,490,491,365,492,105,47,366,48,49,367,106,493,494,107,473,368,495,496,369,370,371,108,109,110,111,372,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,1,128,129,130,131,0,132,133,134,50,135,136,137,138,373,374,139,497,375,51,9,140,52,376,10,141,498,142,143,144,145,53,54,146,147,499,148,149,55,377,500,501,502,503,504,505,150,151,378,379,152,153,56,11,57,380,154,381,155,58,506,507,382,12,59,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,60,172,173,61,174,62,175,176,177,178,179,180,181,182,183,184,383,384,385,386,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,205,206,207,208,209,210,211,212,213,214,2,215,216,217,218,387,219,388,389,390,391,392,393,394,395,396,397,398,399,400,402,403,404,405,406,407,409,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,410,411,412,413,414,415,416,417,418,246,247,248,419,249,250,251,3,252,253,254,420,421,422,255,256,257,423,258,424,425,426,259,260,261,262,263,264,64,530,531,427,65,428,66,429,430,265,266,267,268,269,4,5,270,271,272,273,274,275,6,276,277,278,279,280,281,7,282,283,284,285,286,287,288,431,289,290,291,292,293,294,295,296,297,432,298,299,300,301,433,302,303,434,435,436,437,438,439,440,441,442,443,444,445,446,349,447,448,304,449,450,451,452,453,305,454,306,307,308,309,310,311,455,456,312,457,313,314,458,315,316,317,318,319,320,321,322,323,324,325,326,459,327,328,329,460,461,462,463,464,465,466,467,468,469,470,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,471,348],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[83,99,108,109,112,113,114,115,121,123,124,126,127,0,132,133,151,214,2,220,221,224,225,232,249,250,251,3,252,268,307,308,309,310,311,340,340,341,341],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":111,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":488,"org.easymock.tests2.UsageTest.argumentsOrdered":166,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":313,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":444,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":161,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":337,"org.easymock.tests2.DelegateToTest.testReturnException":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":260,"org.easymock.tests.MockingTest.testPartialClassMocking":256,"org.easymock.tests.MockClassControlTest.testToString":412,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":355,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":45,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":185,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":8,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":351,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":153,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":529,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":475,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":117,"org.easymock.tests2.UsageTest.wrongArguments":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":220,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":385,"org.easymock.samples.ExampleTest.answerVsDelegate":343,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":428,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":425,"org.easymock.tests2.UsageConstraintsTest.testNull":113,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":136,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":417,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":175,"org.easymock.tests2.CaptureTest.testPrimitive":75,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":204,"org.easymock.tests.UsageTest.moreThanOneArgument":314,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":251,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":209,"org.easymock.tests.UsageTest.argumentsOrdered":319,"org.easymock.tests.UsageVarargTest.varargIntAccepted":288,"org.easymock.tests.InvocationTest.testEquals":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":307,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":479,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":39,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":311,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":513,"org.easymock.tests.ReplayStateInvalidUsageTest.times":397,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":22,"org.easymock.tests2.DependencyTest.testClassMocking":378,"org.easymock.tests2.AnswerTest.answer":86,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":449,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":360,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":531,"org.easymock.tests2.CaptureTest.testAnd":72,"org.easymock.tests2.UsageTest.strictResetToDefault":157,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":217,"org.easymock.tests2.DelegateToTest.testDelegate":184,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":213,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":512,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":200,"org.easymock.tests.LimitationsTest.mockFinalMethod":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":464,"org.easymock.tests2.DependencyTest.testClassMockingSupport":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":253,"org.easymock.tests2.CaptureTest.testCapture1_2446744":76,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":374,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":358,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":391,"org.easymock.tests.UsageThrowableTest.throwError":238,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":65,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":40,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":494,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":516,"org.easymock.samples.PartialClassMockTest.testGetArea":338,"org.easymock.tests.MockingTest.testInterfaceMocking":423,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":308,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":207,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":470,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":186,"org.easymock.tests2.UsageTest.niceToStrict":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":46,"org.easymock.tests2.ThreadingTest.testChangeDefault":498,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":154,"org.easymock.tests2.MockBuilderTest.testCreateMock":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":48,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":25,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":194,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":173,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":530,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":267,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":383,"org.easymock.tests.UsageOverloadedMethodTest.overloading":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":367,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":123,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":278,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":327,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":122,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":81,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":431,"org.easymock.tests.MockClassControlTest.testEquals":416,"org.easymock.tests2.EasyMockSupportClassTest.testAll":104,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":247,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":202,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":462,"org.easymock.tests2.CaptureTest.testCaptureAll":73,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":359,"org.easymock.tests.MockNameTest.defaultName":430,"org.easymock.tests2.UsageConstraintsTest.testMatches":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":389,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":3,"org.easymock.samples.ExampleTest.voteForRemovals":347,"org.easymock.tests.UsageVarargTest.allKinds":296,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":330,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":463,"org.easymock.samples.BasicClassMockTest.testPrintContent":336,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":244,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":97,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":264,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":408,"org.easymock.tests2.UsageConstraintsTest.greaterThan":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":43,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":216,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":52,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":517,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":409,"org.easymock.samples.ExampleTest.voteForRemoval":344,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":142,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":376,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":373,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":509,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":156,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":205,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":171,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":259,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":179,"org.easymock.tests2.CaptureTest.testCaptureFirst":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":60,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":168,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":459,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":275,"org.easymock.tests2.UsageTest.moreThanOneArgument":158,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":144,"org.easymock.tests2.CaptureTest.testCapture2_2446744":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":450,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":12,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":295,"org.easymock.tests.GenericTest.testBridgedEquals":419,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":302,"org.easymock.tests.UsageExpectAndReturnTest.longType":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":460,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":169,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":485,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":203,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":130,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":225,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":201,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":249,"org.easymock.tests.UsageCallCountTest.tooManyCalls":303,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":6,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":243,"org.easymock.tests.MockingTest.testNiceClassMocking":426,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":54,"org.easymock.tests.MockingTest.testClassMocking":422,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":484,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":432,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":94,"org.easymock.tests2.UsageConstraintsTest.testFind":112,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":329,"org.easymock.tests.MockTypeTest.fromEasyMockClass":427,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":68,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":229,"org.easymock.tests.UsageExpectAndReturnTest.object":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":139,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":476,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":290,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":468,"org.easymock.tests.UsageTest.exactCallCountByLastCall":320,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":473,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":282,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":286,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":323,"org.easymock.tests.MockClassControlTest.testHashCode":415,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":30,"org.easymock.tests2.EasyMockSupportTest.testVerify":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":491,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":211,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":266,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":357,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":361,"org.easymock.tests.UsageVarargTest.varargCharAccepted":289,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":401,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":454,"org.easymock.tests2.UsageTest.openCallCountByLastCall":162,"org.easymock.tests.DefaultClassInstantiatorTest.object":402,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":177,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":265,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":466,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":483,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":365,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":20,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":29,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":515,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":414,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":9,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":191,"org.easymock.tests.ReplayStateInvalidCallsTest.times":521,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":226,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":522,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":106,"org.easymock.tests2.UsageTest.resumeIfFailure":167,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":64,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":495,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":262,"org.easymock.tests2.StubTest.stubWithReturnValue":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":474,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":131,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":276,"org.easymock.tests2.SerializationTest.testAllMockedMethod":71,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":304,"org.easymock.samples.SupportTest.voteForRemovals":334,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":418,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":32,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":197,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":350,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":305,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":87,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":388,"org.easymock.tests.UsageExpectAndThrowTest.object":195,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":128,"org.easymock.tests2.DelegateToTest.testWrongClass":182,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":519,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":214,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":2,"org.easymock.tests.UsageStrictMockTest.range":234,"org.easymock.samples.ConstructorCalledMockTest.testTax":340,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":370,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":174,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":196,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":155,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":399,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":384,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":511,"org.easymock.tests2.CaptureTest.testCaptureNone":80,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":208,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":501,"org.easymock.tests.UsageUnorderedTest.message":306,"org.easymock.tests.UsageVerifyTest.twoReturns":332,"org.easymock.tests.UsageVarargTest.varargByteAccepted":294,"org.easymock.tests2.ThreadingTest.testThreadSafe":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":47,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":301,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":469,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":335,"org.easymock.tests2.CaptureTest.testCapture_2617107":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":223,"org.easymock.tests2.UsageConstraintsTest.any":119,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":396,"org.easymock.tests2.StubTest.stub":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndThrowTest.longType":188,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":261,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":406,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":395,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":100,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":34,"org.easymock.tests2.SerializationTest.testClass":69,"org.easymock.tests.LimitationsTest.mockNativeMethod":312,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":285,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":19,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":527,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":103,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":502,"org.easymock.tests2.NameTest.nameForMocksControl":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":21,"org.easymock.tests2.MockedExceptionTest.testMockedException":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":363,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":317,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":189,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":258,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":356,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":58,"org.easymock.tests.MockingTest.testNicePartialClassMocking":257,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":138,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":17,"org.easymock.tests2.CaptureTest.testCaptureLast":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":254,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":526,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":116,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":129,"org.easymock.tests.MockingTest.testTwoMocks":255,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":523,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":377,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":193,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":165,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":132,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":505,"org.easymock.samples.ExampleTest.removeNonExistingDocument":471,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":393,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":24,"org.easymock.tests.UsageStrictMockTest.differentMethods":235,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":31,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":504,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":404,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":143,"org.easymock.tests2.MockBuilderTest.testCreateMockString":59,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":410,"org.easymock.tests.UsageExpectAndThrowTest.floatType":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":44,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":42,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":89,"org.easymock.tests.UsageVerifyTest.twoThrows":331,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":105,"org.easymock.samples.ExampleTest.voteAgainstRemoval":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":206,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":140,"org.easymock.tests.LimitationsTest.privateConstructor":456,"org.easymock.tests2.UsageConstraintsTest.testNotNull":0,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":92,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":245,"org.easymock.tests2.UsageTest.defaultResetToNice":164,"org.easymock.samples.ExampleTest.voteAgainstRemovals":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":7,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":18,"org.easymock.tests.UsageVarargTest.differentLength":291,"org.easymock.tests2.CallbackTest.callback":96,"org.easymock.tests2.UsageConstraintsTest.equals":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":497,"org.easymock.tests.UsageTest.openCallCountByLastCall":316,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":222,"org.easymock.tests.UsageCallCountTest.tooFewCalls":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":147,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":386,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":503,"org.easymock.tests.UsageThrowableTest.throwCheckedException":242,"org.easymock.tests.MockingTest.testStrictClassMocking":421,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":149,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":269,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":23,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":398,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":148,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":91,"org.easymock.tests2.CompareToTest.testGreateOrEqual":481,"org.easymock.tests.ObjectMethodsTest.testHashCode":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":478,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":525,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":145,"org.easymock.tests2.NameTest.nameForNiceMock":15,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":520,"org.easymock.tests2.DependencyTest.testInterfaceMocking":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":477,"org.easymock.samples.ExampleTest.addDocument":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.DelegateToTest.testStubDelegate":181,"org.easymock.tests2.AnswerTest.stubAnswer":90,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":232,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":506,"org.easymock.tests.UsageVarargTest.varargLongAccepted":293,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.floatType":270,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":107,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":341,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":38,"org.easymock.tests.UsageThrowableTest.noUpperLimit":239,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":325,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":109,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":368,"org.easymock.tests2.SerializationTest.test":70,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":77,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":403,"org.easymock.tests2.UsageConstraintsTest.testSame":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":5,"org.easymock.samples.SupportTest.addDocument":333,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":499,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":510,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":364,"org.easymock.tests.GenericTest.testPackageScope":246,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":37,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":424,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":508,"org.easymock.tests2.NameTest.nameForMock":13,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":279,"org.easymock.tests2.UsageStrictMockTest.differentMethods":102,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":375,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":272,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":199,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":465,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":218,"org.easymock.tests2.MockedExceptionTest.testRealException":95,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":371,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":482,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":349,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":221,"org.easymock.tests2.NameTest.nameForStrictMock":14,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":380,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":67,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":137,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":369,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":405,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":1,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":352,"org.easymock.tests.ErrorMessageTest.testGetters":353,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":11,"org.easymock.tests2.UsageStrictMockTest.range":101,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":514,"org.easymock.tests2.UsageConstraintsTest.lessThan":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":490,"org.easymock.tests2.CaptureTest.testCaptureRightOne":82,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":500,"org.easymock.tests2.UsageConstraintsTest.testOr":115,"org.easymock.tests.UsageRangeTest.combination":215,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageTest.wrongArguments":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":489,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":411,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":280,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":407,"org.easymock.tests.UsageVarargTest.varargShortAccepted":292,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":433,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":528,"org.easymock.tests2.UsageConstraintsTest.cmpTo":120,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":88,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":163,"org.easymock.tests2.CaptureTest.testCaptureFromStub":83,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":390,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":57,"org.easymock.tests.UsageTest.unexpectedCallWithArray":458,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":524,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":231,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":281,"org.easymock.tests2.UsageConstraintsTest.constraints":110,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":233,"org.easymock.samples.ExampleTest.addAndChangeDocument":348,"org.easymock.tests.UsageStrictMockTest.testVerify":237,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":339,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":461,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":78,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":309,"org.easymock.tests.LimitationsTest.abstractClass":455,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":310,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":61,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":287,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":354}}]
