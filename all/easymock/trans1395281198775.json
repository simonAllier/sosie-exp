[{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[16,17,18,19,20],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,13,46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,21,90,22,23,24,25,26,27,91,28,30,31,92,32,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,35,111,112,1,113,114,36,37,2,3,115,38,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,39,142,143,144,145,146,40,147,4,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,41,203,8,42,43,9,10,44,204,205,206,11,207,208,209,210,211,212,213,214,215,216,17,18,20,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,45,12,13,252,253,254,255,256,257,258,259,260,261,14,46,262,15,263,264,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[266,267,268,269,270,271,272,273,274],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[121,275],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[276],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[277,278,279,280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[281,282,283,284,7,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[285,276,286,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[288,289,290,48,49,50,51,52,53,291,54,55,56,57,58,59,60,292,266,293,294,295,296,297,298,61,299,62,63,64,65,66,300,67,68,69,70,71,72,301,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,302,303,304,305,306,307,308,309,310,311,312,313,314,267,315,0,268,316,317,318,319,21,90,22,23,24,25,26,27,91,28,30,31,92,32,93,94,95,96,97,98,320,321,99,322,323,324,325,326,100,327,328,101,102,103,104,105,106,107,108,109,329,330,331,332,333,110,334,335,336,337,338,339,35,111,112,1,113,114,36,37,340,2,3,115,38,341,342,116,117,118,343,344,345,346,347,348,119,349,350,351,352,353,354,355,120,121,122,356,123,357,358,359,360,361,362,363,124,125,126,364,365,127,366,128,367,368,369,129,130,131,132,133,134,135,370,136,137,138,139,140,371,372,373,141,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,39,395,396,142,143,144,145,146,40,147,4,148,149,274,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,397,277,278,398,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,33,416,417,418,419,192,193,194,195,196,420,421,422,423,424,425,426,427,197,428,198,199,429,430,5,431,432,433,434,200,435,201,202,41,203,7,8,42,43,9,10,44,204,285,205,206,276,286,436,437,438,439,440,441,442,443,444,445,446,447,448,449,11,450,279,280,207,208,451,209,210,211,212,213,214,215,216,16,17,18,19,20,217,218,219,452,453,454,455,456,457,47,458,287,459,275,460,461,462,463,464,465,34,466,467,468,469,470,471,220,221,222,472,223,224,225,226,227,228,229,230,473,474,475,476,477,478,231,232,479,480,233,481,234,235,236,237,238,482,483,484,485,239,240,241,242,243,486,487,488,244,489,490,245,491,492,246,247,248,249,250,251,45,12,13,493,494,252,253,254,255,495,256,257,258,259,260,261,14,46,262,15,263,264,265,496,497,498],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[288,48,50,51,53,60,292,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,308,312,314,315,317,21,90,23,24,27,91,28,30,92,32,93,94,95,96,97,98,99,325,326,100,101,102,103,104,105,108,110,35,111,112,113,36,37,340,115,38,116,117,119,121,125,126,364,365,127,128,367,368,129,130,131,132,133,134,135,370,136,137,138,139,141,376,386,392,39,143,40,4,148,274,150,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,402,403,405,430,200,435,201,202,41,203,42,43,44,207,209,211,212,213,214,215,216,17,19,217,218,219,233,234,235,238,239,240,241,242,243,45,13,258,259,46,15,263],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[454],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[299],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[16,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"position":"org.easymock.internal.LastControl:92","failures":[65,66,70,71,301,82,21,22,30],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[49,61,62,118,39,142,144,197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[76],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:283","sourceCode":"return ((org.easymock.internal.ClassProxyFactory.MockMethodInterceptor)(net.sf.cglib.proxy.Factory.getCallback(0))).java.lang.reflect.InvocationHandler","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[499,89],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[124,464,470,237],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[266,267,500,269,270,271,272,273,501,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[112,40,148,149,430,433,203,45,12,13,46,263,264],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[65,66,68,70,71,301,82,87,21,22,30],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[275],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[288,289,290,48,49,50,51,52,53,54,55,56,57,58,59,60,292,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,302,303,304,305,306,308,312,313,314,315,316,317,319,21,90,22,23,24,25,26,27,91,28,30,31,92,32,93,94,95,96,97,98,320,99,324,325,326,100,101,102,103,104,105,106,107,108,109,110,35,111,112,1,113,114,36,37,340,2,3,115,38,116,117,118,119,120,121,122,123,124,125,126,364,365,127,128,367,368,129,130,131,132,133,134,135,370,136,137,138,139,140,141,376,386,392,39,142,143,144,145,146,40,147,4,148,149,274,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,402,403,405,192,193,194,195,196,197,198,199,5,200,201,202,41,203,7,8,42,43,9,10,44,204,436,437,438,439,440,11,207,208,209,210,211,212,213,214,215,216,17,18,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,234,235,236,237,238,482,483,484,485,239,240,241,242,243,246,247,248,249,250,251,45,12,13,252,253,254,255,495,256,257,258,259,260,261,14,46,262,15,263,264],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[355,121,275],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[274,150,151,502],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[266,267,269,270,271,272,273],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[213,214,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:48","failures":[288,289,289,290,290,48,49,50,51,53,54,60,292,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,308,312,314,315,317,21,90,23,24,27,91,28,30,31,92,32,93,94,95,96,97,98,99,325,326,100,101,102,103,104,105,106,107,108,109,110,35,111,112,113,36,37,340,115,38,116,117,118,119,355,120,121,122,356,123,124,125,126,364,365,127,128,367,368,129,130,131,132,133,134,135,370,136,137,138,139,141,376,386,392,39,395,396,142,143,144,40,4,148,274,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,397,277,278,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,402,403,405,192,193,194,195,196,197,198,199,430,432,434,200,435,201,202,41,203,42,43,44,204,285,205,206,276,286,11,450,279,280,207,208,209,210,211,212,213,214,215,216,17,19,217,218,219,465,470,233,234,235,236,237,238,239,240,241,242,243,487,246,247,248,249,250,251,45,12,13,252,258,259,46,15,263,496,497,498],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[288,289,290,48,49,50,51,52,53,54,55,56,57,58,59,60,292,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,302,303,304,305,306,308,312,313,314,315,316,317,319,21,90,22,23,24,25,26,27,91,28,30,31,92,32,93,94,95,96,97,98,320,99,324,325,326,100,101,102,104,105,106,107,108,109,110,35,111,112,1,113,114,36,37,340,2,3,115,38,116,117,118,119,120,121,122,123,124,125,126,364,365,127,128,367,368,129,130,131,132,133,134,135,370,136,137,138,139,140,141,376,386,392,39,142,143,144,145,146,40,147,4,148,149,274,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,402,403,405,192,193,194,195,196,197,198,199,5,200,201,202,41,203,7,8,42,43,9,10,44,204,436,437,438,439,440,11,207,208,209,210,211,212,213,214,215,216,17,18,217,218,219,220,221,222,223,224,225,226,227,228,229,230,233,234,235,236,237,238,482,483,484,485,239,240,241,242,243,246,247,248,249,250,251,45,12,13,252,253,254,255,495,256,257,258,259,260,261,14,46,262,15,263,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[281,282,283,284,7,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[499,89],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":66,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":41,"org.easymock.tests2.UsageTest.argumentsOrdered":3,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":275,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":114,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":55,"org.easymock.tests2.DelegateToTest.testReturnException":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":247,"org.easymock.tests.MockingTest.testPartialClassMocking":402,"org.easymock.tests.MockClassControlTest.testToString":475,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":294,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":152,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":376,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":269,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":72,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":234,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":484,"org.easymock.samples.ExampleTest.answerVsDelegate":49,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":425,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":407,"org.easymock.tests2.UsageConstraintsTest.testNull":68,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":137,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":232,"org.easymock.tests2.CaptureTest.testPrimitive":23,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":238,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":171,"org.easymock.tests.UsageTest.moreThanOneArgument":203,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":194,"org.easymock.tests.UsageTest.argumentsOrdered":10,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":285,"org.easymock.tests.UsageVarargTest.varargIntAccepted":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":464,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":273,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":306,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":338,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":359,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":454,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":243,"org.easymock.tests.ReplayStateInvalidUsageTest.times":416,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests2.DependencyTest.testClassMocking":341,"org.easymock.tests2.AnswerTest.answer":39,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":34,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":305,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":422,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests2.UsageTest.strictResetToDefault":111,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":310,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":133,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":201,"org.easymock.tests2.DelegateToTest.testDelegate":123,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":167,"org.easymock.tests.LimitationsTest.mockFinalMethod":481,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":440,"org.easymock.tests2.DependencyTest.testClassMockingSupport":342,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":431,"org.easymock.tests2.CaptureTest.testCapture1_2446744":24,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":165,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":303,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":411,"org.easymock.tests.UsageThrowableTest.throwError":209,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":424,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":398,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":394,"org.easymock.samples.PartialClassMockTest.testGetArea":288,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":412,"org.easymock.tests.MockingTest.testInterfaceMocking":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":240,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":497,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":492,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":153,"org.easymock.tests2.UsageTest.niceToStrict":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":312,"org.easymock.tests2.MockBuilderTest.testCreateMock":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":351,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":161,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":281,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":134,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":421,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":280,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":493,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":482,"org.easymock.tests.UsageOverloadedMethodTest.overloading":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":385,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":77,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":199,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":183,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":217,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":76,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":28,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":472,"org.easymock.tests2.EasyMockSupportClassTest.testAll":141,"org.easymock.tests.MockClassControlTest.testEquals":231,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":18,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":438,"org.easymock.tests2.CaptureTest.testCaptureAll":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":304,"org.easymock.tests.MockNameTest.defaultName":451,"org.easymock.tests2.UsageConstraintsTest.testMatches":78,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":409,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":195,"org.easymock.samples.ExampleTest.voteForRemovals":53,"org.easymock.tests.UsageVarargTest.allKinds":230,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":439,"org.easymock.samples.BasicClassMockTest.testPrintContent":57,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":215,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":251,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":335,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":356,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":501,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":448,"org.easymock.tests2.UsageConstraintsTest.greaterThan":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":435,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":100,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":449,"org.easymock.samples.ExampleTest.voteForRemoval":50,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":102,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":327,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":426,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":360,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":320,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":204,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":131,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":246,"org.easymock.tests2.CaptureTest.testCaptureFirst":32,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":132,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":38,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":5,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":179,"org.easymock.tests2.UsageTest.moreThanOneArgument":112,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":104,"org.easymock.tests2.CaptureTest.testCapture2_2446744":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":466,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":317,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":229,"org.easymock.tests.GenericTest.testBridgedEquals":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":256,"org.easymock.tests.UsageExpectAndReturnTest.longType":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":436,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":170,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":434,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":85,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":277,"org.easymock.tests.UsageCallCountTest.tooManyCalls":257,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":157,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":214,"org.easymock.tests.MockingTest.testNiceClassMocking":408,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":364,"org.easymock.tests.MockingTest.testClassMocking":400,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":494,"org.easymock.tests2.UsageConstraintsTest.testContains":75,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":108,"org.easymock.tests2.UsageConstraintsTest.testFind":67,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":219,"org.easymock.tests.MockTypeTest.fromEasyMockClass":423,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":62,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":260,"org.easymock.tests.UsageExpectAndReturnTest.object":182,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":99,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":352,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":136,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":270,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":245,"org.easymock.tests.UsageTest.exactCallCountByLastCall":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":486,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":205,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":266,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":188,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":220,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":198,"org.easymock.tests.MockClassControlTest.testHashCode":478,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":330,"org.easymock.tests2.EasyMockSupportTest.testVerify":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":383,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":206,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":197,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":279,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":302,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":343,"org.easymock.tests.UsageVarargTest.varargCharAccepted":223,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":441,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastCall":36,"org.easymock.tests.DefaultClassInstantiatorTest.object":442,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":139,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":450,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":489,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":384,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":159,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":329,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":477,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":189,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":397,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":392,"org.easymock.tests2.UsageTest.resumeIfFailure":115,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":420,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":249,"org.easymock.tests2.StubTest.stubWithReturnValue":125,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":267,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":181,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":86,"org.easymock.tests2.SerializationTest.testAllMockedMethod":151,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":465,"org.easymock.samples.SupportTest.voteForRemovals":60,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":282,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":164,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":502,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":470,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":395,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":488,"org.easymock.tests.UsageExpectAndThrowTest.object":162,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":83,"org.easymock.tests2.DelegateToTest.testWrongClass":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":258,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":259,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.samples.ConstructorCalledMockTest.testTax":289,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":362,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":370,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":126,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":163,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":314,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":418,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":483,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":283,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":498,"org.easymock.tests2.CaptureTest.testCaptureNone":91,"org.easymock.tests.UsageUnorderedTest.message":11,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":228,"org.easymock.tests2.ThreadingTest.testThreadSafe":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":387,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":255,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":491,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":56,"org.easymock.tests2.CaptureTest.testCapture_2617107":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":237,"org.easymock.tests2.UsageConstraintsTest.any":73,"org.easymock.tests2.StubTest.stub":124,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":33,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndThrowTest.longType":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":248,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":446,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":415,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":147,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":110,"org.easymock.tests2.SerializationTest.testClass":274,"org.easymock.tests.LimitationsTest.mockNativeMethod":233,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":191,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":19,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":346,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":149,"org.easymock.tests2.NameTest.nameForMocksControl":298,"org.easymock.tests2.MockedExceptionTest.testMockedException":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":375,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":43,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":405,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":156,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":299,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":315,"org.easymock.tests.MockingTest.testNicePartialClassMocking":403,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":500,"org.easymock.tests2.CaptureTest.testCaptureLast":27,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":432,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":71,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":368,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":84,"org.easymock.tests.MockingTest.testTwoMocks":401,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":172,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":160,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":2,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":88,"org.easymock.samples.ExampleTest.removeNonExistingDocument":291,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":413,"org.easymock.tests.UsageStrictMockTest.differentMethods":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":331,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":444,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":103,"org.easymock.tests2.MockBuilderTest.testCreateMockString":319,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":473,"org.easymock.tests.UsageExpectAndThrowTest.floatType":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":377,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":142,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":293,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":386,"org.easymock.samples.ExampleTest.voteAgainstRemoval":51,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":460,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":326,"org.easymock.tests.LimitationsTest.privateConstructor":480,"org.easymock.tests2.UsageConstraintsTest.testNotNull":87,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":216,"org.easymock.tests2.UsageTest.defaultResetToNice":340,"org.easymock.samples.ExampleTest.voteAgainstRemovals":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":187,"org.easymock.tests.UsageVarargTest.differentLength":225,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":345,"org.easymock.tests2.CallbackTest.callback":118,"org.easymock.tests2.UsageConstraintsTest.equals":300,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":322,"org.easymock.tests.UsageTest.openCallCountByLastCall":42,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":63,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":236,"org.easymock.tests.UsageCallCountTest.tooFewCalls":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":127,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":485,"org.easymock.tests.UsageThrowableTest.throwCheckedException":213,"org.easymock.tests.MockingTest.testStrictClassMocking":399,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":284,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":208,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":367,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":349,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":365,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":128,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":144,"org.easymock.tests.ObjectMethodsTest.testHashCode":490,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":272,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":105,"org.easymock.tests2.NameTest.nameForNiceMock":297,"org.easymock.tests2.DependencyTest.testInterfaceMocking":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":271,"org.easymock.samples.ExampleTest.addDocument":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":393,"org.easymock.tests2.DelegateToTest.testStubDelegate":121,"org.easymock.tests2.AnswerTest.stubAnswer":143,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":46,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":0,"org.easymock.tests.UsageVarargTest.varargLongAccepted":227,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":190,"org.easymock.tests.UsageExpectAndReturnTest.floatType":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":292,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":290,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":81,"org.easymock.tests.UsageThrowableTest.noUpperLimit":210,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":337,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":64,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":357,"org.easymock.tests2.SerializationTest.test":150,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":25,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":443,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":173,"org.easymock.tests2.UsageConstraintsTest.testSame":69,"org.easymock.samples.SupportTest.addDocument":59,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":366,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":378,"org.easymock.tests.GenericTest.testPackageScope":17,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":336,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":406,"org.easymock.tests2.NameTest.nameForMock":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":184,"org.easymock.tests2.UsageStrictMockTest.differentMethods":148,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":318,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":323,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":176,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":166,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":244,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":202,"org.easymock.tests2.MockedExceptionTest.testRealException":109,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":462,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":40,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":235,"org.easymock.tests2.NameTest.nameForStrictMock":296,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":311,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":61,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":97,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":361,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":445,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":82,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":308,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests2.UsageConstraintsTest.lessThan":89,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":333,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":287,"org.easymock.tests2.CaptureTest.testCaptureRightOne":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":382,"org.easymock.tests2.UsageConstraintsTest.testOr":70,"org.easymock.tests.UsageRangeTest.combination":200,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":94,"org.easymock.tests.UsageTest.wrongArguments":8,"org.easymock.tests2.MockBuilderTest.testWithConstructor":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":379,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":185,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":447,"org.easymock.tests.UsageVarargTest.varargShortAccepted":226,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":495,"org.easymock.tests2.UsageConstraintsTest.cmpTo":74,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":396,"org.easymock.tests2.CompareToTest.testLessThan":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":455,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":37,"org.easymock.tests2.CaptureTest.testCaptureFromStub":31,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":410,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":309,"org.easymock.tests.UsageTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":186,"org.easymock.tests2.CaptureTest.testCapture":29,"org.easymock.tests2.UsageConstraintsTest.constraints":65,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":262,"org.easymock.samples.ExampleTest.addAndChangeDocument":54,"org.easymock.tests.UsageStrictMockTest.testVerify":265,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":58,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":261,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":437,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":241,"org.easymock.tests.LimitationsTest.abstractClass":479,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":178,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":135,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":221}}]
