[{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[14,15,16,17,18,19,20,21,22,23,24,11,25,26,27,28,29,30],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[48,49,50],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,1,65,5,66,67,68,69,70,71,72,73,74,75,76,77,78,79,40,80,41,16,18,19,22,23,24,11,26,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,29,98,99,30,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,13,122,123,124,125,126,127,128],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[129,130,10,131],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:216","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[42],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[132,133,7,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[55,5,135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[136,137,138,139,140,14,141,141,142,142,143,144,145,146,147,148,149,150,79,40,151,152,80,41,18,20,22,23,11,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:946","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[52,67,69,70,88,94,110,112,113,119,120,121,182,183,184,185],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[136,186,137,138,187,139,188,189,190,140,191,192,193,14,141,142,194,195,196,197,198,199,200,143,32,51,201,52,53,54,55,202,203,204,56,57,58,59,205,206,207,208,209,210,144,211,212,145,213,214,215,216,217,218,219,220,221,146,222,223,224,225,226,147,227,228,229,230,231,232,233,234,235,15,236,237,238,60,0,61,239,62,63,240,64,1,241,242,243,244,245,148,246,247,248,129,249,65,250,251,252,132,253,254,31,2,133,3,255,256,4,257,258,5,130,6,7,8,9,259,10,134,260,261,66,262,67,68,69,70,71,263,72,73,74,75,264,265,266,267,149,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,76,287,288,289,290,291,77,78,292,293,294,295,296,150,79,40,151,297,152,80,41,42,16,18,19,298,20,21,22,23,299,300,24,11,26,301,302,303,304,305,306,307,308,309,310,153,81,154,155,135,156,27,311,312,313,314,82,315,316,83,317,84,318,319,320,321,322,85,86,323,324,325,326,327,328,329,330,331,157,332,333,334,335,158,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,87,88,89,90,374,375,91,92,93,376,377,378,379,380,94,381,382,383,159,160,384,161,385,386,387,162,163,388,389,390,28,391,95,96,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,164,165,166,167,168,417,418,419,169,170,420,421,422,423,424,171,172,173,174,175,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,176,177,445,178,446,12,447,97,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,29,468,469,98,99,30,100,101,470,471,472,102,473,103,104,474,475,105,106,107,108,476,109,110,111,112,113,114,477,478,115,479,480,116,117,118,119,120,121,481,482,483,484,485,486,487,488,489,490,491,492,493,494,179,180,495,181,13,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,122,517,518,519,520,521,522,123,523,524,124,125,525,526,126,127,128,527,528,529],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[51,52,202,203,58,59,207,148,129,249,65,252,132,253,254,3,256,257,258,5,130,6,134,260,261,67,69,70,264,149,270,273,276,277,281,282,11,328,330,331,351,87,88,374,375,93,377,380,402,404,413,414,416,164,165,168,418,419,169,170,421,422,423,424,172,173,174,175,439,110,112,113,117,119,121,13,496,497,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[136,186,137,138,187,139,188,189,190,140,191,192,193,14,141,142,194,195,196,198,199,200,143,32,51,201,52,53,54,55,202,203,204,56,57,58,59,205,206,207,208,209,210,144,211,212,145,213,214,215,216,217,218,219,220,221,146,222,223,224,225,226,147,227,228,229,230,231,232,233,234,235,15,236,237,238,60,0,61,239,62,63,240,64,1,241,242,243,244,245,148,246,247,248,129,249,65,250,251,252,132,253,254,31,2,133,3,255,256,4,257,258,5,130,6,7,8,9,259,10,134,260,261,66,262,67,68,69,70,71,263,72,73,74,75,264,265,266,267,149,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,76,287,288,289,290,291,77,78,292,293,294,295,296,150,79,40,151,297,152,80,41,42,16,18,19,298,20,21,22,23,299,300,24,11,26,301,302,303,304,305,306,307,308,309,310,153,81,154,155,135,156,27,311,312,313,314,82,315,316,83,317,84,318,319,320,321,322,85,86,323,324,325,326,327,328,329,330,331,157,332,333,334,335,158,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,87,88,89,90,374,375,91,92,93,376,377,378,379,380,94,381,382,383,159,160,384,161,385,386,387,162,163,388,389,390,28,391,95,96,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,164,165,166,167,168,417,418,419,169,170,420,421,422,423,424,171,172,173,174,175,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,176,177,445,178,446,12,447,97,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,29,468,469,98,99,30,100,101,470,471,472,102,473,103,104,474,475,105,106,107,108,476,109,110,111,112,113,114,477,478,115,479,480,116,117,118,119,120,121,481,482,483,484,485,486,487,488,489,490,491,492,493,494,179,180,495,181,13,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,122,517,518,519,520,521,522,123,523,524,124,125,525,526,126,127,128,527,528,529],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[233,235,259,134],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[248],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[401,506,509,510],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[530,531],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[52,67,70,71,88,392,110,113,114,117,119,120,121],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[53,56,57,69,89,90,91,92,94,532,109,112,120,121],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[65,250,252,132,253,254,31,2,133,3,7,8,134,260,269,270,271,272,279,280],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[15,236,237,533],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[207,229,230,231,232,378,400,435,447,488,489,490,491,492,493,499,500,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[233],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[192,193,14,141,141,142,142,143,534,535,536,537,144,145,146,147,231,15,237,150,79,40,151,80,41,16,17,18,19,20,21,22,23,24,11,25,26,153,81,155,135,156,27,312,82,315,316,83,333,158,383,159,160,161,389,390,28,29,30,526],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[141,141,142,142,143,32,15,300,313],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[263,72,81,84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[200,311,329],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:335","sourceCode":"if (java.lang.reflect.Type == null) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[136,186,138,188,14,141,141,142,142,143,51,201,52,53,54,202,203,204,56,57,58,59,206,207,144,145,146,147,229,230,231,232,15,236,238,60,0,61,239,62,63,240,64,1,241,242,243,245,148,246,248,129,249,65,250,252,132,253,254,31,2,3,255,256,4,257,258,5,130,6,7,8,9,10,134,260,261,66,67,68,69,70,71,264,149,268,269,272,273,278,279,280,281,283,284,285,286,77,150,79,40,151,152,80,41,16,20,21,22,23,24,11,26,303,304,153,81,154,155,135,156,27,312,82,315,316,83,85,328,330,331,157,332,158,337,338,339,340,344,345,346,347,348,349,350,351,87,88,89,90,374,375,91,92,93,376,377,380,94,159,160,161,162,163,389,96,164,165,166,167,168,417,418,419,169,170,420,421,422,423,424,171,172,173,174,175,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,441,442,443,444,176,177,445,178,446,12,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,473,105,108,109,110,111,112,113,114,477,478,115,479,480,117,118,119,120,121,481,488,489,490,491,492,493,494,179,180,495,181,13,496,497,498,123,523,524,525,526,126,127,128,527,528,529],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":250,"org.easymock.tests2.UsageTest.argumentsOrdered":57,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":87,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":403,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":55,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":191,"org.easymock.tests2.DelegateToTest.testReturnException":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":489,"org.easymock.tests.MockingTest.testPartialClassMocking":159,"org.easymock.tests.MockClassControlTest.testToString":126,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":263,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":448,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":145,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":182,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":304,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":373,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":2,"org.easymock.tests2.UsageTest.wrongArguments":53,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":376,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":339,"org.easymock.samples.ExampleTest.answerVsDelegate":186,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":30,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":386,"org.easymock.tests2.UsageConstraintsTest.testNull":132,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":155,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":529,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":1,"org.easymock.tests2.CaptureTest.testPrimitive":272,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":380,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":467,"org.easymock.tests.UsageTest.moreThanOneArgument":88,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":445,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":506,"org.easymock.tests.UsageTest.argumentsOrdered":92,"org.easymock.tests.UsageVarargTest.varargIntAccepted":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":494,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":295,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":307,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":181,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":357,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":49,"org.easymock.tests.ReplayStateInvalidUsageTest.times":433,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":85,"org.easymock.tests2.DependencyTest.testClassMocking":301,"org.easymock.tests2.AnswerTest.answer":264,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":286,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":469,"org.easymock.tests2.CaptureTest.testAnd":269,"org.easymock.tests2.UsageTest.strictResetToDefault":201,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":44,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":497,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":239,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":510,"org.easymock.tests2.DelegateToTest.testDelegate":248,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":356,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":463,"org.easymock.tests.LimitationsTest.mockFinalMethod":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":492,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":348,"org.easymock.tests2.DependencyTest.testClassMockingSupport":302,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":95,"org.easymock.tests2.CaptureTest.testCapture1_2446744":273,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":311,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":461,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":284,"org.easymock.tests.UsageThrowableTest.throwError":437,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":427,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":99,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":446,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":228,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":360,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":428,"org.easymock.tests.MockingTest.testInterfaceMocking":384,"org.easymock.tests2.CompareToTest.testLessOrEqual":131,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":179,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":503,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":449,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":125,"org.easymock.tests2.UsageTest.niceToStrict":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":217,"org.easymock.tests2.ThreadingTest.testChangeDefault":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":20,"org.easymock.tests2.MockBuilderTest.testCreateMock":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":224,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":324,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":457,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":62,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":468,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":102,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":337,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":37,"org.easymock.tests.UsageOverloadedMethodTest.overloading":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":226,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":480,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":421,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":530,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":4,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":278,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":514,"org.easymock.tests.MockClassControlTest.testEquals":528,"org.easymock.tests2.EasyMockSupportClassTest.testAll":144,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":390,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":465,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":534,"org.easymock.tests2.CaptureTest.testCaptureAll":270,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":346,"org.easymock.tests.MockNameTest.defaultName":97,"org.easymock.tests2.UsageConstraintsTest.testMatches":258,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":425,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":178,"org.easymock.samples.ExampleTest.voteForRemovals":139,"org.easymock.tests.UsageVarargTest.allKinds":521,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":119,"org.easymock.samples.BasicClassMockTest.testPrintContent":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":347,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":443,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":493,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":247,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":292,"org.easymock.tests2.UsageConstraintsTest.greaterThan":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":211,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":496,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":83,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":361,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":487,"org.easymock.samples.ExampleTest.voteForRemoval":137,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":317,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":27,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":353,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":51,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":333,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":0,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":488,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":244,"org.easymock.tests2.CaptureTest.testCaptureFirst":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":61,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":59,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":118,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":419,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":157,"org.easymock.tests2.UsageTest.moreThanOneArgument":52,"org.easymock.tests2.CaptureTest.testCapture2_2446744":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":411,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":11,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":520,"org.easymock.tests.GenericTest.testBridgedEquals":391,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":38,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":106,"org.easymock.tests.UsageExpectAndReturnTest.longType":167,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":344,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":466,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":25,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":505,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":464,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":500,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":176,"org.easymock.tests.UsageCallCountTest.tooManyCalls":107,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":50,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":453,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":442,"org.easymock.tests.MockingTest.testNiceClassMocking":387,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":79,"org.easymock.tests.MockingTest.testClassMocking":382,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":473,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":17,"org.easymock.tests2.UsageConstraintsTest.testContains":256,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":231,"org.easymock.tests2.UsageConstraintsTest.testFind":252,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":351,"org.easymock.tests.MockTypeTest.fromEasyMockClass":98,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":108,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":235,"org.easymock.tests.UsageExpectAndReturnTest.object":420,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":312,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":64,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":516,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":524,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":39,"org.easymock.tests.UsageTest.exactCallCountByLastCall":93,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":507,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":341,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":32,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":511,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":172,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":479,"org.easymock.tests.MockClassControlTest.testHashCode":527,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":288,"org.easymock.tests2.EasyMockSupportTest.testVerify":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":219,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":48,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":508,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":478,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":283,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":205,"org.easymock.tests.UsageVarargTest.varargCharAccepted":515,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastCall":202,"org.easymock.tests.DefaultClassInstantiatorTest.object":481,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":242,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":470,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":123,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":532,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":220,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":537,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":440,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":287,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":128,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":315,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":359,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":454,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":173,"org.easymock.tests.ReplayStateInvalidCallsTest.times":365,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":499,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":147,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":127,"org.easymock.tests2.UsageTest.resumeIfFailure":58,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":29,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":491,"org.easymock.tests2.StubTest.stubWithReturnValue":207,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":45,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":170,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":10,"org.easymock.tests2.SerializationTest.testAllMockedMethod":237,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":409,"org.easymock.samples.SupportTest.voteForRemovals":140,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":388,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":290,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":460,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":533,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":415,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":265,"org.easymock.tests.UsageExpectAndThrowTest.object":458,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":343,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":8,"org.easymock.tests2.DelegateToTest.testWrongClass":246,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":162,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":363,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":163,"org.easymock.samples.ConstructorCalledMockTest.testTax":141,"org.easymock.tests.UsageStrictMockTest.range":112,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":309,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":150,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":36,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":459,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":22,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":435,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":208,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":338,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":355,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":504,"org.easymock.tests2.CaptureTest.testCaptureNone":277,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":196,"org.easymock.tests.UsageUnorderedTest.message":94,"org.easymock.tests.UsageVerifyTest.twoReturns":121,"org.easymock.tests.UsageVarargTest.varargByteAccepted":519,"org.easymock.tests2.ThreadingTest.testThreadSafe":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":222,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":475,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":124,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":192,"org.easymock.tests2.CaptureTest.testCapture_2617107":271,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":379,"org.easymock.tests2.UsageConstraintsTest.any":3,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":432,"org.easymock.tests2.StubTest.stub":206,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":501,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":490,"org.easymock.tests.UsageExpectAndThrowTest.longType":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":414,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":485,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":431,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":68,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":77,"org.easymock.tests.LimitationsTest.mockNativeMethod":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":175,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":28,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":536,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":320,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":371,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":71,"org.easymock.tests2.NameTest.nameForMocksControl":75,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":197,"org.easymock.tests2.MockedExceptionTest.testMockedException":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":212,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":375,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":452,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":161,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":234,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":153,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":23,"org.easymock.tests.MockingTest.testNicePartialClassMocking":160,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":156,"org.easymock.tests2.CaptureTest.testCaptureLast":276,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":318,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":96,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":41,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":31,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":370,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":9,"org.easymock.tests.MockingTest.testTwoMocks":383,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":367,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":456,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":56,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":260,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":200,"org.easymock.samples.ExampleTest.removeNonExistingDocument":188,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":429,"org.easymock.tests.UsageStrictMockTest.differentMethods":113,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":289,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":483,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":199,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":331,"org.easymock.tests2.MockBuilderTest.testCreateMockString":26,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":525,"org.easymock.tests.UsageExpectAndThrowTest.floatType":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":213,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":210,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":267,"org.easymock.tests.UsageVerifyTest.twoThrows":120,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":146,"org.easymock.samples.ExampleTest.voteAgainstRemoval":138,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":404,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":316,"org.easymock.tests.LimitationsTest.privateConstructor":335,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":35,"org.easymock.tests2.UsageConstraintsTest.testNotNull":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":444,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":229,"org.easymock.tests2.UsageTest.defaultResetToNice":204,"org.easymock.samples.ExampleTest.voteAgainstRemovals":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":405,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":171,"org.easymock.tests.UsageVarargTest.differentLength":122,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":319,"org.easymock.tests2.CallbackTest.callback":76,"org.easymock.tests2.UsageConstraintsTest.equals":251,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":313,"org.easymock.tests.UsageTest.openCallCountByLastCall":374,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":378,"org.easymock.tests.UsageCallCountTest.tooFewCalls":104,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":151,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":340,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":198,"org.easymock.tests.UsageThrowableTest.throwCheckedException":441,"org.easymock.tests.MockingTest.testStrictClassMocking":381,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":447,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":80,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":86,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":434,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":152,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":268,"org.easymock.tests.ObjectMethodsTest.testHashCode":523,"org.easymock.tests2.NameTest.nameForNiceMock":74,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":332,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":369,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":364,"org.easymock.tests2.DependencyTest.testInterfaceMocking":303,"org.easymock.samples.ExampleTest.addDocument":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":223,"org.easymock.tests2.DelegateToTest.testStubDelegate":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":227,"org.easymock.tests2.AnswerTest.stubAnswer":149,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":110,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":299,"org.easymock.tests.UsageVarargTest.varargLongAccepted":518,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":174,"org.easymock.tests.UsageExpectAndReturnTest.floatType":166,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":143,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":142,"org.easymock.tests.UsageThrowableTest.noUpperLimit":438,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":116,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":294,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":249,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":305,"org.easymock.tests2.SerializationTest.test":236,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":274,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":531,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":165,"org.easymock.tests2.UsageConstraintsTest.testSame":253,"org.easymock.samples.SupportTest.addDocument":190,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":297,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":354,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":214,"org.easymock.tests.GenericTest.testPackageScope":389,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":293,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":385,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":352,"org.easymock.tests2.NameTest.nameForMock":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":422,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":47,"org.easymock.tests2.UsageStrictMockTest.differentMethods":70,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":314,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":168,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":462,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":522,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":498,"org.easymock.tests2.MockedExceptionTest.testRealException":232,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":406,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":67,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":436,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":377,"org.easymock.tests2.NameTest.nameForStrictMock":73,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":298,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":33,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":135,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":308,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":484,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":183,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":7,"org.easymock.tests.ErrorMessageTest.testGetters":184,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":18,"org.easymock.tests2.UsageStrictMockTest.range":69,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":358,"org.easymock.tests2.UsageConstraintsTest.lessThan":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":218,"org.easymock.tests2.CaptureTest.testCaptureRightOne":279,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":195,"org.easymock.tests2.UsageConstraintsTest.testOr":254,"org.easymock.tests.UsageRangeTest.combination":13,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":81,"org.easymock.tests.UsageTest.wrongArguments":90,"org.easymock.tests2.MockBuilderTest.testWithConstructor":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":215,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":526,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":394,"org.easymock.tests.UsageVarargTest.varargShortAccepted":517,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":486,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":105,"org.easymock.tests2.UsageConstraintsTest.cmpTo":255,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":372,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":266,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":396,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":203,"org.easymock.tests2.CaptureTest.testCaptureFromStub":280,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":426,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":19,"org.easymock.tests.UsageTest.unexpectedCallWithArray":89,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":368,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":474,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":46,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":424,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":111,"org.easymock.tests2.UsageConstraintsTest.constraints":65,"org.easymock.samples.ExampleTest.addAndChangeDocument":189,"org.easymock.tests.UsageStrictMockTest.testVerify":477,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":194,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":476,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":345,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":275,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":535,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":180,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":418,"org.easymock.tests.LimitationsTest.abstractClass":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":495,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":512,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":63}}]
