[{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:117","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[4,5,6,7],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:332","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","value":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[9,10,11,12,13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,11,12,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,15,120,121,122,123,124,17,125,126,127,128,19,129,20,21,22,23,24,130,131,132,133,134,135,136,137,138,139,140,141,142,143,29,31,144,32,33,34,35,145,146,36,37,38,39,147,40,148,41,149,42,43,44,45,150,151,152,153,154,155,156,157,158,159,5,6,56,160,58,161,162,163,164,165,166,167,168,169,170,171,172,173,59,174,175,176,177,178,179,180,181,182,183,184,185,186,60,187,188,189,190,0,191,192,193,194,195,196,197,198,199,200,201,202,65,203,66,67,68,69,70,71,204,205,206,207,208,209,210,211,73,74,212,213,76,77,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,80,81,83,236,237,84,85,86,238,239,96,240,241,242,243,244,245,246,247,248,249,250,251,101,252,253,254,255,256,102,103,104,105,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[124,16,20,21,130,131,132,133,134,135,136,137,138,139,140,141,142,143,29,308,4,170,172,173,59,174,175,176,177,178,179,180,309,181,182,183,184,185,186,60,187,188,189,190,0,191,192,193,194,195,198,199,200,66,67,205,206,207,208,209,210,211,256,310,102,103,270,271,272,273,274,283,284,286,287,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[311,312,9,106,107,108,109,110,111,112,113,114,313,115,116,117,118,119,15,120,121,122,123,314,315,124,316,317,16,318,319,17,320,18,125,126,127,128,19,129,20,21,22,23,24,321,25,26,27,28,130,131,132,133,134,135,136,137,138,139,140,141,142,143,322,323,324,325,326,29,30,327,328,329,330,331,332,333,334,335,31,144,32,33,34,35,145,146,336,36,37,38,39,147,40,148,41,149,42,43,337,44,45,150,151,152,46,338,47,48,339,340,10,341,11,342,12,343,344,49,50,345,51,346,347,348,153,52,53,154,349,155,54,55,350,351,352,353,354,355,356,357,156,358,359,157,158,159,308,4,5,6,360,361,362,363,364,56,57,365,366,367,368,369,370,371,372,160,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,58,161,162,394,163,164,165,395,166,167,168,169,170,171,172,173,59,174,396,175,176,177,178,179,180,309,181,182,183,184,185,186,60,187,188,189,190,0,191,192,193,194,195,397,398,196,197,198,399,199,200,61,201,202,62,63,64,400,401,402,403,404,405,406,407,408,409,65,203,66,67,68,69,70,71,204,205,206,207,208,209,210,211,410,411,412,413,414,415,416,417,418,419,420,421,72,422,73,74,212,213,75,76,77,423,214,215,424,425,78,79,8,426,427,428,429,430,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,80,81,82,83,236,237,84,85,86,87,431,432,88,89,90,91,92,433,434,435,436,437,438,439,93,94,95,440,238,239,96,441,240,241,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,242,243,244,245,97,466,246,98,99,467,468,469,470,471,1,472,473,474,100,247,248,249,475,250,251,101,252,253,254,255,256,310,476,477,478,102,103,104,105,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,479,276,277,480,278,481,482,483,279,280,281,282,283,284,484,485,285,486,487,488,489,490,491,492,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[311,311,312,312,9,107,108,119,15,121,122,123,314,124,316,317,16,318,319,17,320,18,125,126,127,46,47,48,340,10,341,11,12,344,49,50,51,346,347,153,52,53,154,54,55,351,352,353,355,4,6,370,371,372,160,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,397,398,400,401,402,403,404,406,409,87,90,438,439,93,94,95,440,238,239,468,469,470,471,1,472,474,275,479,276,277,480,278,484,485,285,486],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[342,493,494,495,496,497,347],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[438,440,466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[498,499,66,82,500,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[311,311,312,312,15,16,47,10,49,51,346,153,53,55,160,375,385,58],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:116","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[392],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[130,131,132,133,140,141,59,174,175,176,177,178,179,180,309,181,189,190,193,194],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[342,502,346,347],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[311,311,312,312,9,106,107,108,109,110,111,112,113,114,313,115,116,117,118,119,15,120,121,122,123,314,124,16,318,319,17,125,126,127,128,19,129,20,21,22,23,24,25,26,27,28,130,131,132,133,134,135,136,137,138,139,140,141,142,143,29,332,333,334,335,31,144,32,33,34,35,145,146,336,36,37,38,39,147,40,148,41,149,42,43,337,44,45,150,151,152,46,47,10,341,11,12,49,50,51,346,153,52,53,154,155,54,55,156,157,158,159,308,4,5,6,56,160,375,385,391,58,161,162,163,164,165,166,167,168,169,170,171,172,173,59,174,175,176,177,178,179,180,181,182,183,184,185,186,60,187,188,189,190,0,191,192,193,194,195,196,197,198,199,200,201,202,63,64,403,404,406,65,203,66,67,68,69,70,71,204,205,206,207,208,209,210,211,410,411,412,413,414,415,416,417,418,419,420,421,72,422,73,74,212,213,75,76,77,426,427,428,429,430,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,80,81,82,83,236,237,84,85,86,434,435,436,437,438,439,93,94,95,440,238,239,96,441,240,241,242,243,244,97,466,246,468,247,248,249,250,251,101,252,253,254,255,256,102,103,104,105,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[358,158,159,448],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[166],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[109,110,111,112,113,114,313,115,119,15,120,121,122,123,314,124,317,16,318,319,17,320,125,126,127,128,19,129,20,21,22,23,24,25,26,27,28,130,131,132,133,134,135,136,137,138,139,140,141,142,143,332,333,334,335,31,144,32,33,34,35,145,146,336,36,37,38,39,46,47,48,340,10,341,49,50,51,346,52,53,54,55,352,353,354,355,357,156,157,158,159,308,4,5,6,58,161,162,163,164,165,166,167,168,169,170,171,172,173,59,174,175,176,177,178,179,180,181,182,183,184,185,186,60,187,188,189,190,0,191,192,193,194,195,196,198,199,200,61,201,202,63,64,400,401,403,404,405,406,407,408,409,65,203,66,67,68,69,70,71,204,205,206,207,208,209,210,211,410,411,412,413,414,415,416,417,418,419,420,421,72,422,73,74,212,213,75,76,77,79,8,426,427,428,429,430,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,80,81,82,83,236,237,84,85,86,87,88,89,90,91,92,434,435,436,437,438,439,93,94,95,440,238,239,96,441,240,241,242,243,244,97,466,246,468,247,248,249,250,251,101,252,253,254,255,256,102,103,104,105,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[130,132,133,134,135,136,139,503,140],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[130,131,132,133,140,141,59,174,175,176,177,178,179,180,309,181,189,190,193,194],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[504,505,506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[438,440,466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[189],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"toStringMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":174,"org.easymock.tests2.UsageTest.argumentsOrdered":37,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":80,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":452,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":35,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":106,"org.easymock.tests2.DelegateToTest.testReturnException":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":280,"org.easymock.tests.MockingTest.testPartialClassMocking":403,"org.easymock.tests.MockClassControlTest.testToString":93,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":321,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":379,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":216,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":375,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":493,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":180,"org.easymock.tests2.UsageTest.wrongArguments":33,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":205,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":436,"org.easymock.samples.ExampleTest.answerVsDelegate":110,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":90,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":408,"org.easymock.tests2.UsageConstraintsTest.testNull":176,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":121,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":45,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":239,"org.easymock.tests2.CaptureTest.testPrimitive":133,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":209,"org.easymock.tests.UsageTest.moreThanOneArgument":81,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":235,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":267,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":423,"org.easymock.tests.UsageTest.argumentsOrdered":85,"org.easymock.tests.UsageVarargTest.varargIntAccepted":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":457,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":270,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":497,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":46,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":353,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":368,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":444,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":274,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":505,"org.easymock.tests.ReplayStateInvalidUsageTest.times":418,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":29,"org.easymock.tests2.DependencyTest.testClassMocking":397,"org.easymock.tests2.AnswerTest.answer":156,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":459,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":335,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":432,"org.easymock.tests2.CaptureTest.testAnd":130,"org.easymock.tests2.UsageTest.strictResetToDefault":144,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":16,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":149,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":240,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":425,"org.easymock.tests2.DelegateToTest.testDelegate":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":231,"org.easymock.tests.LimitationsTest.mockFinalMethod":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":283,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":430,"org.easymock.tests2.DependencyTest.testClassMockingSupport":398,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":78,"org.easymock.tests2.CaptureTest.testCapture1_2446744":134,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":333,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":412,"org.easymock.tests.UsageThrowableTest.throwError":257,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":89,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":478,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":369,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":393,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":413,"org.easymock.tests.MockingTest.testInterfaceMocking":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":271,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":488,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":99,"org.easymock.tests2.UsageTest.niceToStrict":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":10,"org.easymock.tests2.MockBuilderTest.testCreateMock":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":388,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":328,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":225,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":42,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":431,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":477,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":72,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":434,"org.easymock.tests.UsageOverloadedMethodTest.overloading":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":185,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":202,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":242,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":299,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":184,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":2,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":139,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":475,"org.easymock.tests2.EasyMockSupportClassTest.testAll":160,"org.easymock.tests.MockClassControlTest.testEquals":238,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":277,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":428,"org.easymock.tests2.CaptureTest.testCaptureAll":131,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":334,"org.easymock.tests.MockNameTest.defaultName":100,"org.easymock.tests2.UsageConstraintsTest.testMatches":186,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":410,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":268,"org.easymock.samples.ExampleTest.voteForRemovals":114,"org.easymock.tests.UsageVarargTest.allKinds":256,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":429,"org.easymock.samples.BasicClassMockTest.testPrintContent":108,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":263,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":19,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":365,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":473,"org.easymock.tests2.UsageConstraintsTest.greaterThan":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":441,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":17,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":474,"org.easymock.samples.ExampleTest.voteForRemoval":111,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":168,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":320,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":91,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":354,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":314,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":31,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":275,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":148,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":371,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":279,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":394,"org.easymock.tests2.CaptureTest.testCaptureFirst":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":41,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":39,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":64,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":295,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":170,"org.easymock.tests2.CaptureTest.testCapture2_2446744":142,"org.easymock.tests2.UsageTest.moreThanOneArgument":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":460,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":50,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":255,"org.easymock.tests.GenericTest.testBridgedEquals":278,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":76,"org.easymock.tests.UsageExpectAndReturnTest.longType":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":426,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":147,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":234,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":433,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":191,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":232,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":491,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":265,"org.easymock.tests.UsageCallCountTest.tooManyCalls":77,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":506,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":330,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":221,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":262,"org.easymock.tests.MockingTest.testNiceClassMocking":409,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":52,"org.easymock.tests.MockingTest.testClassMocking":401,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":422,"org.easymock.tests2.UsageConstraintsTest.testContains":183,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":127,"org.easymock.tests2.UsageConstraintsTest.testFind":175,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":244,"org.easymock.tests.MockTypeTest.fromEasyMockClass":88,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":65,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":199,"org.easymock.tests.UsageExpectAndReturnTest.object":298,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":494,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":251,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":246,"org.easymock.tests.UsageTest.exactCallCountByLastCall":86,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":481,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":347,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":304,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":201,"org.easymock.tests.MockClassControlTest.testHashCode":440,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":361,"org.easymock.tests2.EasyMockSupportTest.testVerify":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":382,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":504,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":215,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":476,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":332,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":308,"org.easymock.tests.UsageVarargTest.varargCharAccepted":250,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":467,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":465,"org.easymock.tests2.UsageTest.openCallCountByLastCall":145,"org.easymock.tests.DefaultClassInstantiatorTest.object":468,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":151,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":310,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":97,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":383,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":325,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":360,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":95,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":222,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":391,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":94,"org.easymock.tests2.UsageTest.resumeIfFailure":38,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":282,"org.easymock.tests2.StubTest.stubWithReturnValue":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":342,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":192,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":297,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":458,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":499,"org.easymock.samples.SupportTest.voteForRemovals":117,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":479,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":228,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":7,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":464,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":358,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":483,"org.easymock.tests.UsageExpectAndThrowTest.object":226,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":190,"org.easymock.tests2.DelegateToTest.testWrongClass":165,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":210,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":211,"org.easymock.tests.UsageStrictMockTest.range":69,"org.easymock.samples.ConstructorCalledMockTest.testTax":311,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":356,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":337,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":153,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":227,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":11,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":420,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":435,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":500,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":489,"org.easymock.tests2.CaptureTest.testCaptureNone":138,"org.easymock.tests.UsageUnorderedTest.message":102,"org.easymock.tests.UsageVerifyTest.twoReturns":105,"org.easymock.tests.UsageVarargTest.varargByteAccepted":254,"org.easymock.tests2.ThreadingTest.testThreadSafe":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":386,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":213,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":107,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":98,"org.easymock.tests2.CaptureTest.testCapture_2617107":132,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":462,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":208,"org.easymock.tests2.UsageConstraintsTest.any":181,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":417,"org.easymock.tests2.StubTest.stub":161,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndThrowTest.longType":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":281,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":1,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":416,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":21,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":56,"org.easymock.tests.LimitationsTest.mockNativeMethod":285,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":480,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":307,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":324,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":24,"org.easymock.tests2.NameTest.nameForMocksControl":28,"org.easymock.tests2.MockedExceptionTest.testMockedException":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":374,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":237,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":406,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":399,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":220,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":12,"org.easymock.tests.MockingTest.testNicePartialClassMocking":404,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":123,"org.easymock.tests2.CompareToTest.testNotComparable":14,"org.easymock.tests2.CaptureTest.testCaptureLast":137,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":322,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":79,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":179,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":0,"org.easymock.tests.MockingTest.testTwoMocks":402,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":350,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":224,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":36,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":194,"org.easymock.samples.ExampleTest.removeNonExistingDocument":313,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":414,"org.easymock.tests.UsageStrictMockTest.differentMethods":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":327,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":362,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":470,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":169,"org.easymock.tests2.MockBuilderTest.testCreateMockString":51,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":438,"org.easymock.tests.UsageExpectAndThrowTest.floatType":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":376,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":157,"org.easymock.tests.UsageVerifyTest.twoThrows":104,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":348,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":385,"org.easymock.samples.ExampleTest.voteAgainstRemoval":112,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":453,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":319,"org.easymock.tests.LimitationsTest.privateConstructor":485,"org.easymock.tests2.UsageConstraintsTest.testNotNull":193,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":125,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":264,"org.easymock.tests2.UsageTest.defaultResetToNice":336,"org.easymock.samples.ExampleTest.voteAgainstRemovals":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":303,"org.easymock.tests.UsageVarargTest.differentLength":101,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":323,"org.easymock.tests2.CallbackTest.callback":58,"org.easymock.tests2.UsageConstraintsTest.equals":396,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":316,"org.easymock.tests.UsageTest.openCallCountByLastCall":236,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":172,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":207,"org.easymock.tests.UsageCallCountTest.tooFewCalls":74,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":154,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":437,"org.easymock.tests.UsageThrowableTest.throwCheckedException":261,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":501,"org.easymock.tests.MockingTest.testStrictClassMocking":400,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":30,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":53,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":419,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":155,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":159,"org.easymock.tests.ObjectMethodsTest.testHashCode":466,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":496,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":171,"org.easymock.tests2.NameTest.nameForNiceMock":27,"org.easymock.tests2.DependencyTest.testInterfaceMocking":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":495,"org.easymock.samples.ExampleTest.addDocument":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.DelegateToTest.testStubDelegate":164,"org.easymock.tests2.AnswerTest.stubAnswer":158,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":67,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":343,"org.easymock.tests.UsageVarargTest.varargLongAccepted":253,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndReturnTest.floatType":290,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":306,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":346,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":312,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":188,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests.UsageThrowableTest.noUpperLimit":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":367,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":173,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":351,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":135,"org.easymock.tests2.SerializationTest.test":5,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":469,"org.easymock.tests2.UsageConstraintsTest.testSame":177,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":289,"org.easymock.samples.SupportTest.addDocument":116,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":349,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":377,"org.easymock.tests.GenericTest.testPackageScope":276,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":366,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":407,"org.easymock.tests2.NameTest.nameForMock":25,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":300,"org.easymock.tests2.UsageStrictMockTest.differentMethods":23,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":345,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":317,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":292,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":230,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":245,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":241,"org.easymock.tests2.MockedExceptionTest.testRealException":128,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":357,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":455,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":421,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":206,"org.easymock.tests2.NameTest.nameForStrictMock":26,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":340,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":198,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":122,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":355,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":471,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":189,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":47,"org.easymock.tests2.UsageStrictMockTest.range":22,"org.easymock.tests2.UsageConstraintsTest.lessThan":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":40,"org.easymock.tests2.CaptureTest.testCaptureRightOne":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":381,"org.easymock.tests2.UsageConstraintsTest.testOr":178,"org.easymock.tests.UsageRangeTest.combination":96,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":15,"org.easymock.tests.UsageTest.wrongArguments":83,"org.easymock.tests2.MockBuilderTest.testWithConstructor":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":378,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":439,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":301,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":472,"org.easymock.tests.UsageVarargTest.varargShortAccepted":252,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":75,"org.easymock.tests2.UsageConstraintsTest.cmpTo":182,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":445,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests2.CaptureTest.testCaptureFromStub":141,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":411,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":48,"org.easymock.tests.UsageTest.unexpectedCallWithArray":82,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":212,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":302,"org.easymock.tests2.CaptureTest.testCapture":503,"org.easymock.tests2.UsageConstraintsTest.constraints":59,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":68,"org.easymock.samples.ExampleTest.addAndChangeDocument":115,"org.easymock.tests.UsageStrictMockTest.testVerify":204,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":118,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":427,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":272,"org.easymock.tests.LimitationsTest.abstractClass":484,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":294,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":43,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":248}}]
