[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[4,5,6],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[28,29,30,31,32,33,34,35,36,36,37,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,4,64,65,66,67,5,68,69,70,71,72,73,74,75,76,77,6,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,13,14,15,16,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,17,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,18,19,20,21,22,23,223,224,225,226,227,228,229,230,24,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,9,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,25,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[85,87,97,234],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:435","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"methods":"methods","list":"candidateMethods"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[228,331,332],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[65,340,6,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[112],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[51,53,54,146,341,342,343,344,345,346,197,199,200,227,228,229,347,348,349,350,351,270,326,352,353,338,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:33","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(boolean.boolean, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[354],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,33,34,35,36,36,37,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,4,64,65,66,67,5,68,69,70,71,72,73,74,75,76,77,6,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,13,14,15,16,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,17,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,18,19,20,21,22,23,223,224,225,226,227,228,229,230,24,348,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,9,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,25,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,352,336,337,338,339],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[165,166,167],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[36,37,355,356,357,358,359],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[28,29,30,31,32,33,35,45,47,48,50,51,54,55,56,57,58,59,61,62,63,4,64,65,66,67,5,68,69,70,71,72,73,74,75,76,77,6,78,79,81,82,83,84,85,86,87,88,90,91,92,93,94,95,98,99,100,101,102,104,106,107,108,109,111,112,114,116,117,118,121,135,137,138,145,146,148,149,152,155,13,14,15,16,159,160,163,164,165,166,167,172,173,174,175,176,177,179,180,181,17,182,183,184,185,186,187,188,189,190,191,192,195,197,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,18,19,20,21,22,23,223,224,225,226,227,228,229,230,231,232,233,235,236,240,241,242,243,244,245,246,262,270,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,328,329,338],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[360,165],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[361,85,87,88,89,90,91,92,94,362,95,96,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[26],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[28,30,31,33,39,42,45,46,51,53,54,60,61,62,63,4,64,65,66,67,5,68,69,70,71,72,73,74,75,76,77,6,78,79,81,82,83,84,85,86,88,89,92,93,94,95,97,98,99,101,104,105,106,107,108,109,111,114,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,137,139,140,144,145,146,148,150,151,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,177,17,186,197,199,200,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,229,230,231,232,233,234,235,236,240,269,270,273,274,277,289,290,291,292,293,295,296,298,299,300,327,329,330,331,332,333,334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"this","delegateTo":"value","this":"lastResult"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[49,51,52,53,54,55,60,363,63,75,105,112,115,364,123,125,127,128,130,131,135,136,365,139,140,141,142,143,144,146,147,148,149,153,154,155,156,157,366,159,160,163,164,172,173,174,175,180,194,196,197,198,199,200,201,223,227,228,229,347,348,237,367,368,369,370,371,372,373,374,241,243,244,247,248,249,263,264,265,269,270,271,272,275,276,277,283,375,326,352,353,338,339],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[376],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[113,114,137,377,378,379],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":269,"org.easymock.tests2.UsageTest.argumentsOrdered":154,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":21,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":149,"org.easymock.tests2.StubTest.stubWithReturnValue":17,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":212,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":81,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":40,"org.easymock.tests2.SerializationTest.testAllMockedMethod":167,"org.easymock.tests2.DelegateToTest.testReturnException":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":19,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":8,"org.easymock.tests.MockingTest.testPartialClassMocking":231,"org.easymock.samples.SupportTest.voteForRemovals":42,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":26,"org.easymock.tests.MockClassControlTest.testToString":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":364,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":306,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":169,"org.easymock.tests.UsageExpectAndThrowTest.object":316,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":78,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":46,"org.easymock.tests2.DelegateToTest.testWrongClass":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":299,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":300,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":295,"org.easymock.tests2.UsageTest.wrongArguments":147,"org.easymock.tests.UsageStrictMockTest.range":199,"org.easymock.samples.ConstructorCalledMockTest.testTax":36,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":184,"org.easymock.samples.ExampleTest.answerVsDelegate":29,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":129,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":372,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":158,"org.easymock.tests2.UsageConstraintsTest.testNull":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":317,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":107,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":268,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":131,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":139,"org.easymock.tests2.CaptureTest.testPrimitive":88,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":298,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":325,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":275,"org.easymock.tests.UsageTest.moreThanOneArgument":270,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":259,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":106,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":183,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":190,"org.easymock.tests2.CaptureTest.testCaptureNone":93,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":376,"org.easymock.tests.UsageUnorderedTest.message":326,"org.easymock.tests.UsageVerifyTest.twoReturns":229,"org.easymock.tests.UsageVarargTest.varargByteAccepted":286,"org.easymock.tests2.ThreadingTest.testThreadSafe":117,"org.easymock.tests.UsageTest.argumentsOrdered":276,"org.easymock.tests.UsageVarargTest.varargIntAccepted":280,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":246,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":367,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":43,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":289,"org.easymock.tests2.CaptureTest.testCapture_2617107":87,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":297,"org.easymock.tests2.UsageConstraintsTest.any":69,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":138,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":257,"org.easymock.tests2.StubTest.stub":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":293,"org.easymock.tests.UsageExpectAndThrowTest.longType":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":20,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":10,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":256,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":52,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":157,"org.easymock.tests2.SerializationTest.testClass":165,"org.easymock.tests.LimitationsTest.mockNativeMethod":240,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":60,"org.easymock.tests.ReplayStateInvalidUsageTest.times":9,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":222,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":0,"org.easymock.tests2.AnswerTest.answer":99,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":340,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":59,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":378,"org.easymock.tests2.CaptureTest.testAnd":85,"org.easymock.tests2.UsageTest.strictResetToDefault":145,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":55,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":112,"org.easymock.tests2.NameTest.nameForMocksControl":175,"org.easymock.tests2.MockedExceptionTest.testMockedException":14,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":189,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":126,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":274,"org.easymock.tests2.DelegateToTest.testDelegate":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":310,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":233,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":140,"org.easymock.tests.MockingTest.testNicePartialClassMocking":232,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":321,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":109,"org.easymock.tests2.CompareToTest.testNotComparable":354,"org.easymock.tests2.CaptureTest.testCaptureLast":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":348,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":5,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":305,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":347,"org.easymock.tests2.CaptureTest.testCapture1_2446744":89,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":203,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":57,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":153,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":83,"org.easymock.tests.UsageThrowableTest.throwError":327,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":252,"org.easymock.samples.ExampleTest.removeNonExistingDocument":34,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":254,"org.easymock.tests.UsageStrictMockTest.differentMethods":200,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":371,"org.easymock.tests2.ConstraintsToStringTest.andToString":345,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":119,"org.easymock.tests2.MockBuilderTest.testCreateMockString":143,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":261,"org.easymock.tests.UsageExpectAndThrowTest.floatType":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":192,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":75,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":100,"org.easymock.tests.UsageVerifyTest.twoThrows":228,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":170,"org.easymock.samples.PartialClassMockTest.testGetArea":39,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":290,"org.easymock.samples.ExampleTest.voteAgainstRemoval":31,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":114,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":307,"org.easymock.tests2.UsageTest.niceToStrict":148,"org.easymock.tests2.UsageConstraintsTest.testNotNull":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":334,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":13,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":137,"org.easymock.tests2.MockBuilderTest.testCreateMock":141,"org.easymock.tests2.UsageTest.defaultResetToNice":152,"org.easymock.samples.ExampleTest.voteAgainstRemovals":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":7,"org.easymock.tests.UsageVarargTest.differentLength":283,"org.easymock.tests2.CallbackTest.callback":180,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":355,"org.easymock.tests.UsageTest.openCallCountByLastCall":273,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":315,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":127,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":61,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":241,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":182,"org.easymock.tests.UsageCallCountTest.tooFewCalls":244,"org.easymock.tests.UsageOverloadedMethodTest.overloading":235,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":337,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":73,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":214,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":161,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":72,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":11,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":94,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":185,"org.easymock.tests.UsageThrowableTest.throwCheckedException":331,"org.easymock.tests.MockClassControlTest.testEquals":267,"org.easymock.tests2.EasyMockSupportClassTest.testAll":168,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":187,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":323,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":377,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":358,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":303,"org.easymock.tests2.CaptureTest.testCaptureAll":86,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":58,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":24,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":163,"org.easymock.tests.MockNameTest.defaultName":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":363,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":160,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":258,"org.easymock.tests2.UsageConstraintsTest.testMatches":74,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":162,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":102,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":191,"org.easymock.tests.ObjectMethodsTest.testHashCode":238,"org.easymock.samples.ExampleTest.voteForRemovals":33,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":121,"org.easymock.tests2.NameTest.nameForNiceMock":174,"org.easymock.tests.UsageVarargTest.allKinds":288,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":227,"org.easymock.tests2.DependencyTest.testInterfaceMocking":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":304,"org.easymock.samples.BasicClassMockTest.testPrintContent":44,"org.easymock.samples.ExampleTest.addDocument":32,"org.easymock.tests2.DelegateToTest.testStubDelegate":177,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":333,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":49,"org.easymock.tests2.AnswerTest.stubAnswer":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":23,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":197,"org.easymock.tests2.UsageConstraintsTest.greaterThan":76,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":224,"org.easymock.tests.UsageVarargTest.varargLongAccepted":285,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":115,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":201,"org.easymock.samples.ExampleTest.voteForRemoval":30,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":118,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":221,"org.easymock.tests.UsageExpectAndReturnTest.floatType":205,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":373,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":110,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":116,"org.easymock.tests2.ConstraintsToStringTest.orToString":341,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":37,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests.UsageThrowableTest.noUpperLimit":328,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":77,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":294,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":62,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":144,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":90,"org.easymock.tests2.SerializationTest.test":166,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":360,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":124,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":329,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":204,"org.easymock.tests2.UsageConstraintsTest.testSame":66,"org.easymock.samples.SupportTest.addDocument":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":18,"org.easymock.tests2.CaptureTest.testCaptureFirst":98,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":125,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":156,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":339,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":255,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":210,"org.easymock.tests.GenericTest.testPackageScope":186,"org.easymock.tests2.CaptureTest.testCapture2_2446744":97,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":120,"org.easymock.tests2.UsageTest.moreThanOneArgument":146,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":142,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":287,"org.easymock.tests.GenericTest.testBridgedEquals":27,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":248,"org.easymock.tests2.NameTest.nameForMock":172,"org.easymock.tests.UsageExpectAndReturnTest.longType":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":301,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":122,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":215,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":80,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":322,"org.easymock.tests2.UsageStrictMockTest.differentMethods":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":207,"org.easymock.tests.UsageCallCountTest.tooManyCalls":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":320,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":226,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":243,"org.easymock.tests2.MockedExceptionTest.testRealException":16,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":211,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":311,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":51,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":332,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":296,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":260,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":159,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":242,"org.easymock.tests2.UsageConstraintsTest.testContains":71,"org.easymock.tests2.NameTest.nameForStrictMock":173,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":15,"org.easymock.tests2.UsageConstraintsTest.testFind":64,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":236,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":47,"org.easymock.tests.MockTypeTest.fromEasyMockClass":370,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":108,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":194,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":48,"org.easymock.tests.UsageExpectAndReturnTest.object":213,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":111,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":136,"org.easymock.tests2.UsageStrictMockTest.range":53,"org.easymock.tests2.UsageConstraintsTest.lessThan":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":130,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":282,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":239,"org.easymock.tests.UsageTest.exactCallCountByLastCall":277,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":230,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":123,"org.easymock.tests2.CaptureTest.testCaptureRightOne":95,"org.easymock.tests2.UsageConstraintsTest.testOr":67,"org.easymock.tests.UsageRangeTest.combination":223,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":278,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":105,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":336,"org.easymock.tests.UsageTest.wrongArguments":272,"org.easymock.tests2.MockBuilderTest.testWithConstructor":356,"org.easymock.tests.MockClassControlTest.testHashCode":266,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":262,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":208,"org.easymock.tests2.EasyMockSupportTest.testVerify":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":216,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":335,"org.easymock.tests.UsageVarargTest.varargShortAccepted":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":2,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":56,"org.easymock.tests2.UsageConstraintsTest.cmpTo":70,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":103,"org.easymock.tests.UsageVarargTest.varargCharAccepted":281,"org.easymock.tests2.CaptureTest.testCaptureMultiple":361,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":50,"org.easymock.tests2.UsageTest.openCallCountByLastCall":150,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":151,"org.easymock.tests.DefaultClassInstantiatorTest.object":193,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":133,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":1,"org.easymock.tests2.CaptureTest.testCaptureFromStub":96,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":251,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":365,"org.easymock.tests.UsageTest.unexpectedCallWithArray":271,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":237,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":351,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":313,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":379,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":330,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":196,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":245,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":357,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":217,"org.easymock.tests2.CaptureTest.testCapture":362,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":265,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":198,"org.easymock.tests2.UsageConstraintsTest.constraints":63,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":312,"org.easymock.samples.ExampleTest.addAndChangeDocument":35,"org.easymock.tests2.ConstraintsToStringTest.notToString":343,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":220,"org.easymock.tests.UsageStrictMockTest.testVerify":202,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":38,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":344,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":264,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":171,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":302,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":91,"org.easymock.tests2.UsageTest.resumeIfFailure":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":291,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":369,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":209,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":292,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":128}}]
