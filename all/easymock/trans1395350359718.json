[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[3,4,5,6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[12,13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,23,24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,7,8,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,1,99,100,101,102,103,104,105,106,107,108,109,110,3,111,112,113,114,115,116,117,118,119,120,121,122,123,5,124,125,126,6,127,128,129,130,131,132,133,134,135,136,12,13,137,138,139,140,141,142,143,144,145,146,147,148,149,2,150,151,152,153,154,155,156,157,158,159,160,0,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,10,11,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[33,35,41,42,55,56,57,58,59,60,61,62,63,64,65,66,67,68,75,9,79,80,309,310,106,107,108,109,110,3,111,112,113,114,4,115,116,117,118,119,120,121,122,123,5,124,125,311,126,6,127,128,164,165,166,167,168,182,183,194,195,252,259,260,312,261,262,263,264,265,279,280,281,282],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[23,24,38,313,314,44,315,316,317,318,319,320],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:140","sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Set<org.easymock.internal.MethodSerializationWrapper>)","type":"CtInvocationImpl"},"failures":[44],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[118],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[7,321,162,163,10],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[322,141],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[313,44,323,324,318,325],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[326],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[327],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[328],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[329],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[26,44,330,76,77,322,331,137,332,138,333,139,140,334,141,335,155,156,157,336,337,205],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":109,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":301,"org.easymock.tests2.UsageTest.argumentsOrdered":151,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":193,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":147,"org.easymock.tests2.StubTest.stubWithReturnValue":105,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":318,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":215,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":25,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":126,"org.easymock.tests2.SerializationTest.testAllMockedMethod":46,"org.easymock.tests2.DelegateToTest.testReturnException":87,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":191,"org.easymock.tests.MockingTest.testPartialClassMocking":288,"org.easymock.samples.SupportTest.voteForRemovals":15,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":322,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":244,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":296,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":232,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":155,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":134,"org.easymock.tests.UsageExpectAndThrowTest.object":242,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":37,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":124,"org.easymock.tests2.DelegateToTest.testWrongClass":89,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":280,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":281,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":261,"org.easymock.tests2.UsageTest.wrongArguments":145,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.samples.ExampleTest.answerVsDelegate":17,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":337,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":48,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":243,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":72,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":139,"org.easymock.tests2.CaptureTest.testPrimitive":58,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":265,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":306,"org.easymock.tests.UsageTest.moreThanOneArgument":302,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":251,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":284,"org.easymock.tests2.CaptureTest.testCaptureNone":63,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":0,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":326,"org.easymock.tests.UsageUnorderedTest.message":252,"org.easymock.tests.UsageVerifyTest.twoReturns":163,"org.easymock.tests.UsageVarargTest.varargByteAccepted":277,"org.easymock.tests2.ThreadingTest.testThreadSafe":30,"org.easymock.tests.UsageTest.argumentsOrdered":307,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":254,"org.easymock.tests.UsageVarargTest.varargIntAccepted":271,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":200,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":27,"org.easymock.tests2.CaptureTest.testCapture_2617107":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":164,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":264,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":333,"org.easymock.tests2.UsageConstraintsTest.any":115,"org.easymock.tests2.StubTest.stub":104,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":189,"org.easymock.tests.UsageExpectAndThrowTest.longType":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":192,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":42,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":85,"org.easymock.tests2.SerializationTest.testClass":44,"org.easymock.tests.LimitationsTest.mockNativeMethod":253,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":225,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":205,"org.easymock.tests2.AnswerTest.answer":133,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":4,"org.easymock.tests2.CaptureTest.testAnd":55,"org.easymock.tests2.UsageTest.strictResetToDefault":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":9,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":43,"org.easymock.tests2.NameTest.nameForMocksControl":132,"org.easymock.tests2.MockedExceptionTest.testMockedException":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":283,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":96,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":305,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":258,"org.easymock.tests2.DelegateToTest.testDelegate":91,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":290,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":236,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":69,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":140,"org.easymock.tests.MockingTest.testNicePartialClassMocking":289,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":247,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":74,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":323,"org.easymock.tests2.CaptureTest.testCaptureLast":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":194,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":54,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":113,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":125,"org.easymock.tests.MockingTest.testTwoMocks":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":170,"org.easymock.tests2.CaptureTest.testCapture1_2446744":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":240,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":150,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":127,"org.easymock.tests.UsageThrowableTest.throwError":172,"org.easymock.tests.UsageStrictMockTest.differentMethods":11,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":32,"org.easymock.tests2.MockBuilderTest.testCreateMockString":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":286,"org.easymock.tests.UsageExpectAndThrowTest.floatType":234,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":121,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":136,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":314,"org.easymock.tests.UsageVerifyTest.twoThrows":162,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":156,"org.easymock.samples.PartialClassMockTest.testGetArea":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":165,"org.easymock.samples.ExampleTest.voteAgainstRemoval":19,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":159,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":160,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":77,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":233,"org.easymock.tests2.UsageTest.niceToStrict":146,"org.easymock.tests2.UsageConstraintsTest.testNotNull":6,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":81,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":179,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":138,"org.easymock.tests2.MockBuilderTest.testCreateMock":334,"org.easymock.tests2.UsageTest.defaultResetToNice":2,"org.easymock.samples.ExampleTest.voteAgainstRemovals":16,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":221,"org.easymock.tests.UsageVarargTest.differentLength":274,"org.easymock.tests2.CallbackTest.callback":47,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":315,"org.easymock.tests.UsageTest.openCallCountByLastCall":304,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":241,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":97,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":106,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":263,"org.easymock.tests.UsageCallCountTest.tooFewCalls":198,"org.easymock.tests.UsageOverloadedMethodTest.overloading":267,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":229,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":119,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":51,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":328,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":118,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":64,"org.easymock.tests.UsageThrowableTest.throwCheckedException":176,"org.easymock.tests2.EasyMockSupportClassTest.testAll":154,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":204,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":249,"org.easymock.tests2.CaptureTest.testCaptureAll":56,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":260,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":53,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":50,"org.easymock.tests2.UsageConstraintsTest.testMatches":120,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":52,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":13,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":285,"org.easymock.samples.ExampleTest.voteForRemovals":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":324,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":34,"org.easymock.tests2.NameTest.nameForNiceMock":131,"org.easymock.tests.UsageVarargTest.allKinds":279,"org.easymock.tests2.DependencyTest.testInterfaceMocking":36,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":161,"org.easymock.samples.BasicClassMockTest.testPrintContent":28,"org.easymock.samples.ExampleTest.addDocument":20,"org.easymock.tests2.DelegateToTest.testStubDelegate":88,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":178,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":39,"org.easymock.tests2.AnswerTest.stubAnswer":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":195,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":90,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":183,"org.easymock.tests2.UsageConstraintsTest.greaterThan":122,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":298,"org.easymock.tests.UsageVarargTest.varargLongAccepted":276,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":78,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":185,"org.easymock.samples.ExampleTest.voteForRemoval":18,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":31,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":224,"org.easymock.tests.UsageExpectAndReturnTest.floatType":208,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":38,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":123,"org.easymock.tests.UsageThrowableTest.noUpperLimit":173,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":291,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":107,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":142,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":60,"org.easymock.tests2.SerializationTest.test":45,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":319,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":94,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":207,"org.easymock.tests2.UsageConstraintsTest.testSame":111,"org.easymock.samples.SupportTest.addDocument":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":190,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":86,"org.easymock.tests2.CaptureTest.testCaptureFirst":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":95,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":153,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":213,"org.easymock.tests.GenericTest.testPackageScope":203,"org.easymock.tests2.CaptureTest.testCapture2_2446744":67,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":33,"org.easymock.tests2.UsageTest.moreThanOneArgument":144,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":257,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":141,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":278,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":201,"org.easymock.tests2.NameTest.nameForMock":129,"org.easymock.tests.UsageExpectAndReturnTest.longType":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":312,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":218,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":311,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":320,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":248,"org.easymock.tests2.UsageStrictMockTest.differentMethods":8,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":210,"org.easymock.tests.UsageCallCountTest.tooManyCalls":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":246,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":300,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":197,"org.easymock.tests2.MockedExceptionTest.testRealException":84,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":214,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":325,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":237,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":41,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":262,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":49,"org.easymock.tests2.UsageConstraintsTest.testContains":117,"org.easymock.tests2.NameTest.nameForStrictMock":130,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":83,"org.easymock.tests2.UsageConstraintsTest.testFind":110,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":268,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":79,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":73,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":80,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":180,"org.easymock.tests.UsageExpectAndReturnTest.object":216,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":5,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":75,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":137,"org.easymock.tests2.UsageStrictMockTest.range":7,"org.easymock.tests2.UsageConstraintsTest.lessThan":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":99,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":273,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":327,"org.easymock.tests.UsageTest.exactCallCountByLastCall":308,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":259,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":93,"org.easymock.tests2.CaptureTest.testCaptureRightOne":65,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":255,"org.easymock.tests2.UsageConstraintsTest.testOr":112,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":313,"org.easymock.tests.UsageRangeTest.combination":297,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":269,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":70,"org.easymock.tests.UsageTest.wrongArguments":303,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":228,"org.easymock.tests2.MockBuilderTest.testWithConstructor":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":211,"org.easymock.tests2.EasyMockSupportTest.testVerify":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":219,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":256,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":293,"org.easymock.tests.UsageVarargTest.varargShortAccepted":275,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":310,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":309,"org.easymock.tests2.UsageConstraintsTest.cmpTo":116,"org.easymock.tests.UsageVarargTest.varargCharAccepted":272,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":135,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":40,"org.easymock.tests2.UsageTest.openCallCountByLastCall":148,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":149,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":102,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":292,"org.easymock.tests2.CaptureTest.testCaptureFromStub":66,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":332,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":239,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":175,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":182,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":199,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":220,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":76,"org.easymock.tests2.UsageConstraintsTest.constraints":108,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":184,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":238,"org.easymock.samples.ExampleTest.addAndChangeDocument":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":223,"org.easymock.tests.UsageStrictMockTest.testVerify":186,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":187,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":157,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":181,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":61,"org.easymock.tests2.UsageTest.resumeIfFailure":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":166,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":336,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":212,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":167,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":321,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":98}}]
