[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[21,22,23,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[25],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:124","failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,21,63,64,65,66,67,68,69,70,71,72,73,74,75,23,76,77,78,79,24,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,20,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,0,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[177,220,226,274,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,307,308,309,310,311,316,317,318,314],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}","type":"CtForImpl"},"failures":[33,34,112,319,320,321,25,322,323,324,325,326,327,328,329,330,331,332,333,159,163,334,164,335,336,337,167,338,339,168,340,341,342,343,344,345,346,347,348,169,349,350,351,352,353,170,354,355],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[33,34,356,321,324,325],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[357,358],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[359],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,57,58,59,60,61,62,21,63,64,65,66,67,68,69,70,71,72,73,74,75,23,76,77,78,79,24,80,81,82,83,84,85,87,88,89,90,91,92,95,96,97,98,99,100,102,103,105,112,113,115,116,117,118,120,121,122,123,126,127,128,129,130,133,135,136,139,140,141,143,144,145,146,151,154,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,183,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,222,223,224,225,226,227,228,230,231,232,235,236,237,238,239,240,241,243,244,245,246,249,250,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[360,361,362,363,364],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[33,34,356,112,319,321,25,322,323,324,325,365,366,367,164],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[48,64,67,83,89,90,95,191,220,228,229,265,266,267,268,269,271,272,273,274,275,276,277,303],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[90,368,92,95],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[369,182,183,370,371],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[372,172,373],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[172],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[46,49,50,51,60,73,101,109,111,115,119,123,124,127,132,137,138,20,139,142,143,144,148,149,150,151,175,189,0,192,193,194,222,226,227,242,243,244,245,247,248,251,252,253,259,303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[3,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[48,51,52,141,191,194,195,225,226,227,246],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[374,303],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[164,165,166,375],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[26,27,28,29,30,31,32,35,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,376,58,59,60,61,62,21,63,64,65,66,22,67,68,69,70,71,72,73,74,75,23,76,77,78,79,24,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,377,378,97,98,99,102,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,379,161,165,380,381,382,383,372,171,172,173,384,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,0,191,192,193,194,195,385,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,386,223,224,387,225,226,227,228,229,388,357,389,390,391,392,393,394,234,235,236,395,396,397,398,399,400,401,402,238,239,240,241,242,243,244,403,404,405,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,406,407,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,408,409,410,411,412,316,317,318,312,413,313,314,414,415,315],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[44,45,78,24],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[26,27,28,29,30,31,32,33,33,34,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,21,63,64,65,66,67,68,69,70,71,72,73,74,75,23,76,77,78,79,24,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,377,378,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,20,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,380,381,382,383,372,171,172,173,384,174,175,176,177,178,179,180,181,182,183,370,184,185,186,187,188,189,190,0,191,192,193,194,195,385,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,386,223,224,387,225,226,227,228,229,388,357,389,390,391,230,231,232,392,393,394,234,235,236,237,402,238,239,240,241,242,243,244,403,404,405,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,406,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,408,409,410,411,412,316,317,318,312,413,313,314,414,415,315],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[48,49,50,51,21,67,73,24,83,84,86,87,88,89,90,95,96,98,139,141,142,145,146,148,149,151,380,381,382,383,172,175,177,0,191,192,193,194,220,225,226,227,236,245,246,248,249,250,251,252,253,264,272,275,303,306],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":61,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":359,"org.easymock.tests2.UsageTest.argumentsOrdered":149,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":245,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":373,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":144,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":37,"org.easymock.tests2.DelegateToTest.testReturnException":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":217,"org.easymock.tests.MockingTest.testPartialClassMocking":230,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":343,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":168,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":283,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":43,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":66,"org.easymock.tests2.UsageTest.wrongArguments":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":271,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":9,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":180,"org.easymock.samples.ExampleTest.answerVsDelegate":27,"org.easymock.tests2.UsageConstraintsTest.testNull":21,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":103,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":127,"org.easymock.tests2.CaptureTest.testPrimitive":85,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":275,"org.easymock.tests.UsageTest.moreThanOneArgument":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":302,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":186,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":408,"org.easymock.tests.UsageTest.argumentsOrdered":252,"org.easymock.tests.UsageVarargTest.varargIntAccepted":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":265,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":17,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":269,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":57,"org.easymock.tests2.AnswerTest.answer":96,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":363,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":56,"org.easymock.tests2.CaptureTest.testAnd":82,"org.easymock.tests2.UsageTest.strictResetToDefault":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":108,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":122,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":223,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":412,"org.easymock.tests2.DelegateToTest.testDelegate":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":388,"org.easymock.tests2.CaptureTest.testCapture1_2446744":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":54,"org.easymock.tests.UsageThrowableTest.throwError":304,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":399,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":188,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":365,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":355,"org.easymock.samples.PartialClassMockTest.testGetArea":36,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":266,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":393,"org.easymock.tests2.UsageTest.niceToStrict":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":344,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":333,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":133,"org.easymock.tests2.MockBuilderTest.testCreateMock":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":351,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":6,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":292,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":123,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":318,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":402,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":178,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":330,"org.easymock.tests.UsageOverloadedMethodTest.overloading":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":353,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":71,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":207,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":234,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":70,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":91,"org.easymock.tests2.EasyMockSupportClassTest.testAll":167,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":183,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":55,"org.easymock.tests2.CaptureTest.testCaptureAll":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":280,"org.easymock.tests.MockNameTest.defaultName":407,"org.easymock.tests2.UsageConstraintsTest.testMatches":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":187,"org.easymock.samples.ExampleTest.voteForRemovals":31,"org.easymock.tests.UsageVarargTest.allKinds":264,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":225,"org.easymock.samples.BasicClassMockTest.testPrintContent":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":281,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":310,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":46,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":221,"org.easymock.tests2.UsageConstraintsTest.greaterThan":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":338,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":386,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":111,"org.easymock.samples.ExampleTest.voteForRemoval":28,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":114,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":106,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":270,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":120,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":216,"org.easymock.tests2.CaptureTest.testCaptureFirst":95,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":372,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":121,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":151,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":203,"org.easymock.tests2.UsageTest.moreThanOneArgument":141,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":116,"org.easymock.tests2.CaptureTest.testCapture2_2446744":94,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":364,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":263,"org.easymock.tests.GenericTest.testBridgedEquals":371,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":331,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":243,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":328,"org.easymock.tests.UsageExpectAndReturnTest.longType":199,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":278,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":301,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":406,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":78,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":184,"org.easymock.tests.UsageCallCountTest.tooManyCalls":244,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":352,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":8,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":288,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":309,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":158,"org.easymock.tests2.UsageConstraintsTest.testContains":69,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":154,"org.easymock.tests2.UsageConstraintsTest.testFind":62,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":236,"org.easymock.tests.MockTypeTest.fromEasyMockClass":398,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":189,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":45,"org.easymock.tests.UsageExpectAndReturnTest.object":206,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":126,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":258,"org.easymock.tests.UsageTest.exactCallCountByLastCall":253,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":332,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":228,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":409,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":319,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":212,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":313,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":10,"org.easymock.tests2.EasyMockSupportTest.testVerify":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":346,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":410,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":312,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":317,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":53,"org.easymock.tests.UsageVarargTest.varargCharAccepted":257,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":47,"org.easymock.tests2.UsageTest.openCallCountByLastCall":145,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":129,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":316,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":395,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":347,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":3,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":109,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":289,"org.easymock.tests.CapturesMatcherTest.test":233,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":170,"org.easymock.tests2.UsageTest.resumeIfFailure":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":219,"org.easymock.tests2.StubTest.stubWithReturnValue":177,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":322,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":79,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":205,"org.easymock.tests2.SerializationTest.testAllMockedMethod":166,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":389,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":367,"org.easymock.samples.SupportTest.voteForRemovals":39,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":369,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":12,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":295,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":375,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":390,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":377,"org.easymock.tests.UsageExpectAndThrowTest.object":293,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":76,"org.easymock.tests2.DelegateToTest.testWrongClass":173,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":276,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":277,"org.easymock.samples.ConstructorCalledMockTest.testTax":33,"org.easymock.tests.UsageStrictMockTest.range":193,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":125,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":157,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":329,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":294,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":135,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":179,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":394,"org.easymock.tests2.CaptureTest.testCaptureNone":90,"org.easymock.tests.UsageUnorderedTest.message":303,"org.easymock.tests.UsageVerifyTest.twoReturns":227,"org.easymock.tests.UsageVarargTest.varargByteAccepted":262,"org.easymock.tests2.ThreadingTest.testThreadSafe":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":349,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":241,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":397,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":40,"org.easymock.tests2.CaptureTest.testCapture_2617107":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":274,"org.easymock.tests2.UsageConstraintsTest.any":67,"org.easymock.tests2.StubTest.stub":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":218,"org.easymock.tests.UsageExpectAndThrowTest.longType":286,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":49,"org.easymock.tests2.SerializationTest.testClass":164,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests.LimitationsTest.mockNativeMethod":237,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":215,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":2,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":52,"org.easymock.tests2.NameTest.nameForMocksControl":383,"org.easymock.tests2.MockedExceptionTest.testMockedException":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":339,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":250,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":287,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":136,"org.easymock.tests.MockingTest.testNicePartialClassMocking":231,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":105,"org.easymock.tests2.CaptureTest.testCaptureLast":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":357,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":163,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":65,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":77,"org.easymock.tests.MockingTest.testTwoMocks":391,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":291,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":148,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":80,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":5,"org.easymock.tests.UsageStrictMockTest.differentMethods":194,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":11,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":115,"org.easymock.tests2.MockBuilderTest.testCreateMockString":20,"org.easymock.tests.UsageExpectAndThrowTest.floatType":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":340,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":337,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":97,"org.easymock.tests.UsageVerifyTest.twoThrows":226,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":169,"org.easymock.samples.ExampleTest.voteAgainstRemoval":29,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":392,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":110,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":327,"org.easymock.tests2.UsageConstraintsTest.testNotNull":24,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":152,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":311,"org.easymock.tests2.UsageTest.defaultResetToNice":147,"org.easymock.samples.ExampleTest.voteAgainstRemovals":26,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":1,"org.easymock.tests.UsageVarargTest.differentLength":259,"org.easymock.tests2.CallbackTest.callback":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":356,"org.easymock.tests.UsageTest.openCallCountByLastCall":249,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":273,"org.easymock.tests.UsageCallCountTest.tooFewCalls":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":160,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":181,"org.easymock.tests.UsageThrowableTest.throwCheckedException":308,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":162,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":229,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":376,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":161,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":99,"org.easymock.tests.ObjectMethodsTest.testHashCode":396,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":117,"org.easymock.tests2.NameTest.nameForNiceMock":382,"org.easymock.tests2.DependencyTest.testInterfaceMocking":42,"org.easymock.samples.ExampleTest.addDocument":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":350,"org.easymock.tests2.DelegateToTest.testStubDelegate":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.AnswerTest.stubAnswer":98,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":191,"org.easymock.tests.UsageVarargTest.varargLongAccepted":261,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":195,"org.easymock.tests.UsageExpectAndReturnTest.floatType":198,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":112,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":34,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":16,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":75,"org.easymock.tests.UsageThrowableTest.noUpperLimit":305,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":59,"org.easymock.tests2.SerializationTest.test":165,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":87,"org.easymock.tests2.UsageConstraintsTest.testSame":63,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":197,"org.easymock.samples.SupportTest.addDocument":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":341,"org.easymock.tests.GenericTest.testPackageScope":182,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":411,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":15,"org.easymock.tests2.NameTest.nameForMock":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":208,"org.easymock.tests2.UsageStrictMockTest.differentMethods":51,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":200,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":297,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":224,"org.easymock.tests2.MockedExceptionTest.testRealException":155,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":401,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":366,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":272,"org.easymock.tests2.NameTest.nameForStrictMock":381,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":44,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":320,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":104,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":23,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":374,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":132,"org.easymock.tests2.UsageStrictMockTest.range":50,"org.easymock.tests2.UsageConstraintsTest.lessThan":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":13,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":361,"org.easymock.tests2.CaptureTest.testCaptureRightOne":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":345,"org.easymock.tests2.UsageConstraintsTest.testOr":64,"org.easymock.tests.UsageRangeTest.combination":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":101,"org.easymock.tests.UsageTest.wrongArguments":248,"org.easymock.tests2.MockBuilderTest.testWithConstructor":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":342,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":360,"org.easymock.tests.UsageVarargTest.varargShortAccepted":260,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":242,"org.easymock.tests2.UsageConstraintsTest.cmpTo":68,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":378,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests2.CaptureTest.testCaptureFromStub":93,"org.easymock.tests.UsageTest.unexpectedCallWithArray":247,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":240,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":210,"org.easymock.tests2.CaptureTest.testCapture":368,"org.easymock.tests2.UsageConstraintsTest.constraints":60,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":192,"org.easymock.samples.ExampleTest.addAndChangeDocument":32,"org.easymock.tests.UsageStrictMockTest.testVerify":385,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":35,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":279,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":88,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":267,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":202,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":268,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":124,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":255}}]
