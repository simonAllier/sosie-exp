[{"position":"org.easymock.internal.ReflectionUtils:180","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,1,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,10,75,11,12,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,112,113,113,114],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"position":"org.easymock.internal.MockBuilder:89","failures":[23,24,115,35],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    this.java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,13,14,137,15,16,17,18,138,19,20,21,22,23,24,25,26,27,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,28,29,30,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,31,32,33,34,35,36,37,38,183,1,39,40,41,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,42,43,44,45,241,242,46,47,243,244,245,246,247,248,249,250,251,252,253,48,254,255,49,256,257,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,258,10,259,75,11,12,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,76,77,78,79,80,81,82,83,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,84,85,86,87,88,89,90,91,92,321,322,323,324,325,93,326,327,328,329,94,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,95,96,97,98,99,453,100,454,455,101,102,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,103,104,105,106,107,108,109,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,110,111,112,113,114,509,510,511,512],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"propertyFileName":"propertyFileName","properties":"properties","in":"in"}},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[200,246,248,249,335,387,388,389,513,514,515,516,445,459,461,462],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[0,1,4,5,6,7,9,10,11,12],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[517,518,519,520,446,458],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[23,24,521,115,35],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[201,207,208,248,522,335,388,389,446,447,450,451,458,461],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[517,458],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,13,14,137,15,16,17,18,138,19,20,21,22,23,24,25,26,27,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,28,29,30,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,31,32,33,34,35,36,37,38,183,1,39,40,41,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,42,43,44,45,241,242,46,47,243,244,245,246,247,248,249,250,251,252,253,48,254,255,49,256,257,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,523,524,525,258,526,10,259,75,11,12,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,76,77,78,79,80,81,82,83,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,84,85,86,87,88,89,90,91,92,321,322,323,324,325,93,326,327,328,329,94,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,95,96,97,98,99,453,100,454,455,101,102,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,103,104,105,106,107,108,109,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,110,111,112,113,114,509,510,511,512],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[10,259,75,527],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[201,207,208,248,528,522,335,388,389,426,446,447,450,451,458,461],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[103,104,105,106,108,109],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[226,374,458],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[263],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[529],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[0,1,4,5,6,7,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[197,198,205,273,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,388,407,409,410,411,412,413,414,423,431,444,449,474,478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.Capture:82","failures":[169,171,172,173,174,175,176,178,530,179,180,182],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[107,531,532],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[202],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[226],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[162,217,235,374],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:116","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[533,517,534,535,536,537,538,539,518,540,541,200,201,207,208,229,246,248,249,267,268,519,542,520,543,544,545,522,335,387,388,389,421,424,425,426,445,446,447,450,451,458,459,461,462],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,13,14,137,15,16,17,18,138,19,20,21,22,23,24,25,26,27,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,28,29,30,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,31,546,32,33,547,34,35,36,37,0,38,183,1,39,40,548,41,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,42,43,44,45,241,242,46,47,243,244,245,246,247,248,249,250,251,252,253,48,254,255,549,49,256,257,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,10,259,75,11,12,550,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,76,77,78,79,80,81,82,83,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,84,85,86,87,88,89,90,91,92,321,322,323,324,325,93,326,327,328,329,94,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,551,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,95,96,97,98,99,453,100,454,455,101,102,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,552,103,104,105,106,107,108,553,109,476,477,478,501,502,503,504,505,506,507,508,110,111,112,113,114,509,510,511,512],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[197,198,205,273,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,388,407,409,410,411,412,413,414,423,431,444,449,478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[531,532],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[229],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":214,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":444,"org.easymock.tests2.UsageTest.argumentsOrdered":208,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":149,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":280,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":203,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":512,"org.easymock.tests2.DelegateToTest.testReturnException":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":428,"org.easymock.tests.MockingTest.testPartialClassMocking":98,"org.easymock.tests.MockClassControlTest.testToString":78,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":116,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":60,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":343,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":513,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":168,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":500,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":4,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":471,"org.easymock.tests2.UsageTest.wrongArguments":201,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":195,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":338,"org.easymock.samples.ExampleTest.answerVsDelegate":502,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":94,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":455,"org.easymock.tests2.UsageConstraintsTest.testNull":217,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":15,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":148,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":83,"org.easymock.tests2.CaptureTest.testPrimitive":172,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":475,"org.easymock.tests.UsageTest.moreThanOneArgument":445,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":362,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":379,"org.easymock.tests.UsageTest.argumentsOrdered":451,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":382,"org.easymock.tests.UsageVarargTest.varargIntAccepted":365,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":540,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":321,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":135,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":255,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":325,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":484,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":536,"org.easymock.tests.ReplayStateInvalidUsageTest.times":403,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":189,"org.easymock.tests2.DependencyTest.testClassMocking":165,"org.easymock.tests2.AnswerTest.answer":152,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":124,"org.easymock.tests2.CaptureTest.testAnd":169,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":327,"org.easymock.tests2.UsageTest.strictResetToDefault":199,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":547,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":378,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":417,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":143,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":386,"org.easymock.tests2.DelegateToTest.testDelegate":266,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":483,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":358,"org.easymock.tests.LimitationsTest.mockFinalMethod":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":431,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":394,"org.easymock.tests2.DependencyTest.testClassMockingSupport":166,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":267,"org.easymock.tests2.CaptureTest.testCapture1_2446744":173,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":138,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":356,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":122,"org.easymock.tests.UsageThrowableTest.throwError":407,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":397,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":329,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":551,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":74,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":487,"org.easymock.samples.PartialClassMockTest.testGetArea":114,"org.easymock.tests.MockingTest.testInterfaceMocking":453,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":322,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":61,"org.easymock.tests2.UsageTest.niceToStrict":202,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":299,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":344,"org.easymock.tests2.ThreadingTest.testChangeDefault":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":270,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":35,"org.easymock.tests2.MockBuilderTest.testCreateMock":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":69,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":192,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":517,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":352,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":144,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":326,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":342,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":435,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":336,"org.easymock.tests.UsageOverloadedMethodTest.overloading":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":71,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":423,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":227,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":476,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":311,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":531,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":226,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":178,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":366,"org.easymock.tests2.EasyMockSupportClassTest.testAll":53,"org.easymock.tests.MockClassControlTest.testEquals":82,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":90,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":538,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":360,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":392,"org.easymock.tests2.CaptureTest.testCaptureAll":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":123,"org.easymock.tests.MockNameTest.defaultName":320,"org.easymock.tests2.UsageConstraintsTest.testMatches":228,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":395,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":380,"org.easymock.samples.ExampleTest.voteForRemovals":506,"org.easymock.tests.UsageVarargTest.allKinds":374,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":387,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":393,"org.easymock.samples.BasicClassMockTest.testPrintContent":111,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":413,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":132,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":265,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":553,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":9,"org.easymock.tests2.UsageConstraintsTest.greaterThan":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":416,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":488,"org.easymock.samples.ExampleTest.voteForRemoval":503,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":109,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":160,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":26,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":549,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":18,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":480,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":102,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":198,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":141,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":427,"org.easymock.tests2.CaptureTest.testCaptureFirst":182,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":276,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":142,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":210,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":307,"org.easymock.tests2.CaptureTest.testCapture2_2446744":181,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":162,"org.easymock.tests2.UsageTest.moreThanOneArgument":200,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":288,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":373,"org.easymock.tests.GenericTest.testBridgedEquals":92,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":442,"org.easymock.tests.UsageExpectAndReturnTest.longType":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":390,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":361,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":419,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":235,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":359,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":466,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":377,"org.easymock.tests.UsageCallCountTest.tooManyCalls":443,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":542,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":348,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":412,"org.easymock.tests.MockingTest.testNiceClassMocking":101,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":43,"org.easymock.tests.MockingTest.testClassMocking":96,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":436,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":115,"org.easymock.tests2.UsageConstraintsTest.testContains":225,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":30,"org.easymock.tests2.UsageConstraintsTest.testFind":216,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":478,"org.easymock.tests.MockTypeTest.fromEasyMockClass":328,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":456,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":253,"org.easymock.tests.UsageExpectAndReturnTest.object":310,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":5,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":368,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":297,"org.easymock.tests.UsageTest.exactCallCountByLastCall":452,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":275,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":468,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":383,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":545,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":316,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":363,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":126,"org.easymock.tests.MockClassControlTest.testHashCode":81,"org.easymock.tests2.EasyMockSupportTest.testVerify":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":63,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":535,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":384,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":420,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":341,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":528,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":121,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":240,"org.easymock.tests.UsageVarargTest.varargCharAccepted":367,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":552,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":293,"org.easymock.tests2.UsageTest.openCallCountByLastCall":204,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":150,"org.easymock.tests.DefaultClassInstantiatorTest.object":103,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":340,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":295,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":522,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":350,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":410,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":187,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":125,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":486,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":23,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":80,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":349,"org.easymock.tests.CapturesMatcherTest.test":529,"org.easymock.tests.ReplayStateInvalidCallsTest.times":492,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":317,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":465,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":493,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":537,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":72,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":79,"org.easymock.tests2.UsageTest.resumeIfFailure":209,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":93,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":430,"org.easymock.tests2.StubTest.stubWithReturnValue":197,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":0,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":236,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":309,"org.easymock.tests2.SerializationTest.testAllMockedMethod":75,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":286,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":518,"org.easymock.samples.SupportTest.voteForRemovals":511,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":355,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":527,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":292,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":153,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":470,"org.easymock.tests.UsageExpectAndThrowTest.object":353,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":233,"org.easymock.tests2.DelegateToTest.testWrongClass":264,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":490,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":433,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":434,"org.easymock.tests.UsageStrictMockTest.range":461,"org.easymock.samples.ConstructorCalledMockTest.testTax":112,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":256,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":354,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":37,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":450,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":337,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":519,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":482,"org.easymock.tests2.CaptureTest.testCaptureNone":177,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":334,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":524,"org.easymock.tests.UsageUnorderedTest.message":335,"org.easymock.tests.UsageVerifyTest.twoReturns":389,"org.easymock.tests.UsageVarargTest.varargByteAccepted":372,"org.easymock.tests2.ThreadingTest.testThreadSafe":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":67,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":440,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":110,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":298,"org.easymock.tests2.CaptureTest.testCapture_2617107":171,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":541,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":269,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":290,"org.easymock.tests2.UsageConstraintsTest.any":223,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":402,"org.easymock.tests2.StubTest.stub":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":291,"org.easymock.tests.UsageExpectAndThrowTest.longType":346,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":107,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":401,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":247,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests.LimitationsTest.mockNativeMethod":86,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":91,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":319,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":186,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":498,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":250,"org.easymock.tests2.NameTest.nameForMocksControl":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":188,"org.easymock.tests2.MockedExceptionTest.testMockedException":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":55,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":449,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":100,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":347,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":13,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":38,"org.easymock.tests.MockingTest.testNicePartialClassMocking":99,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":17,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":184,"org.easymock.tests2.CaptureTest.testCaptureLast":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":268,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":497,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":47,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":220,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":234,"org.easymock.tests.MockingTest.testTwoMocks":97,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":494,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":243,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":351,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":207,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":238,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":526,"org.easymock.samples.ExampleTest.removeNonExistingDocument":507,"org.easymock.tests.UsageStrictMockTest.differentMethods":462,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":399,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":191,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":127,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":105,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":258,"org.easymock.tests2.ConstraintsToStringTest.andToString":539,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":161,"org.easymock.tests2.MockBuilderTest.testCreateMockString":41,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":57,"org.easymock.tests.UsageExpectAndThrowTest.floatType":345,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":52,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":155,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":550,"org.easymock.tests.UsageVerifyTest.twoThrows":388,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":66,"org.easymock.samples.ExampleTest.voteAgainstRemoval":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":281,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":332,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":24,"org.easymock.tests.LimitationsTest.privateConstructor":85,"org.easymock.tests2.UsageConstraintsTest.testNotNull":237,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":414,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":28,"org.easymock.tests2.UsageTest.defaultResetToNice":206,"org.easymock.samples.ExampleTest.voteAgainstRemovals":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":282,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":315,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":185,"org.easymock.tests.UsageVarargTest.differentLength":369,"org.easymock.tests2.CallbackTest.callback":260,"org.easymock.tests2.UsageConstraintsTest.equals":215,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":543,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":20,"org.easymock.tests.UsageTest.openCallCountByLastCall":448,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":211,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":473,"org.easymock.tests.UsageCallCountTest.tooFewCalls":438,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":45,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":339,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":525,"org.easymock.tests.UsageThrowableTest.throwCheckedException":411,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":520,"org.easymock.tests.MockingTest.testStrictClassMocking":95,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":46,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":376,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":190,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":44,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":404,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":242,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":157,"org.easymock.tests.ObjectMethodsTest.testHashCode":296,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":8,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":496,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":163,"org.easymock.tests2.NameTest.nameForNiceMock":119,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":491,"org.easymock.tests2.DependencyTest.testInterfaceMocking":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":6,"org.easymock.samples.ExampleTest.addDocument":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":73,"org.easymock.tests2.DelegateToTest.testStubDelegate":263,"org.easymock.tests2.AnswerTest.stubAnswer":156,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":459,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":183,"org.easymock.tests.UsageVarargTest.varargLongAccepted":371,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":279,"org.easymock.tests.UsageExpectAndReturnTest.floatType":302,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":318,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.tests2.ConstraintsToStringTest.orToString":533,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":113,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":424,"org.easymock.tests.UsageThrowableTest.noUpperLimit":408,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":134,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":231,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":212,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":48,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":174,"org.easymock.tests2.SerializationTest.test":259,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":532,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":104,"org.easymock.tests2.UsageConstraintsTest.testSame":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":301,"org.easymock.samples.SupportTest.addDocument":510,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":241,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":481,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":58,"org.easymock.tests.GenericTest.testPackageScope":89,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":274,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":133,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":454,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":479,"org.easymock.tests2.NameTest.nameForMock":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":312,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":548,"org.easymock.tests2.UsageStrictMockTest.differentMethods":249,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":21,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":304,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":357,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":294,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":418,"org.easymock.tests2.MockedExceptionTest.testRealException":164,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":331,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":284,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":544,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":2,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":283,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":472,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":406,"org.easymock.tests2.NameTest.nameForStrictMock":118,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":34,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":251,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":16,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":49,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":514,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":106,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":232,"org.easymock.tests.ErrorMessageTest.testGetters":515,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":32,"org.easymock.tests2.UsageStrictMockTest.range":248,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":485,"org.easymock.tests2.UsageConstraintsTest.lessThan":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":129,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":521,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":140,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":278,"org.easymock.tests2.CaptureTest.testCaptureRightOne":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":62,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":523,"org.easymock.tests2.UsageConstraintsTest.testOr":219,"org.easymock.tests.UsageRangeTest.combination":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":14,"org.easymock.tests.UsageTest.wrongArguments":447,"org.easymock.tests2.MockBuilderTest.testWithConstructor":546,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":59,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":77,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":313,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":108,"org.easymock.tests.UsageVarargTest.varargShortAccepted":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":441,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":499,"org.easymock.tests2.UsageConstraintsTest.cmpTo":224,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":154,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":273,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":205,"org.easymock.tests2.CaptureTest.testCaptureFromStub":180,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":396,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":33,"org.easymock.tests.UsageTest.unexpectedCallWithArray":446,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":495,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":458,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":439,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":314,"org.easymock.tests2.CaptureTest.testCapture":530,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":460,"org.easymock.tests2.UsageConstraintsTest.constraints":213,"org.easymock.samples.ExampleTest.addAndChangeDocument":508,"org.easymock.tests2.ConstraintsToStringTest.notToString":534,"org.easymock.tests.UsageStrictMockTest.testVerify":464,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":509,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":457,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":391,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":323,"org.easymock.tests.LimitationsTest.abstractClass":84,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":306,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":324,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":516,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":145,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":364}}]
