[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"failMessage","key":"failMessage"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,115,16,17,18,19,20,116,21,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,252,253,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[46,65,68,468,108,109,112,113,137,226,227,279,298,304,305],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[252,253,317,318,469,470,471,331,472,473,474,475,476,368,464],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[65,66,68,69,71,108,277,279,280,361,363,365,370,373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:169","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n    java.util.List<java.lang.reflect.Field>.remove(org.easymock.internal.InjectionTarget.getTargetField());\n} ","type":"CtIfImpl"},"failures":[262,263,265,268,269,272,420,421,423,426,427,430],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:170","sourceCode":"org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[236,477,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,115,16,17,18,19,20,116,21,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,501,502,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,503,504,273,274,275,276,277,278,279,280,281,282,283,284,505,506,285,286,287,288,289,290,291,507,292,293,294,508,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,509,313,314,315,316,317,318,510,319,320,321,322,323,324,325,326,327,328,329,330,511,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,512,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,513,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[255,256,261,262,263,265,267,268,269,272,419,420,421,423,425,426,427,430],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[391,393,401,437,438,441,443,444,446,456,461],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[36,40],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,514,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,115,16,17,18,19,20,116,21,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,501,502,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,515,232,233,234,235,236,237,516,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,503,504,273,274,275,276,277,278,279,280,281,282,283,284,505,506,517,285,286,287,288,289,290,291,507,292,293,294,508,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,518,510,319,320,321,322,323,469,324,325,470,326,327,328,329,471,330,511,331,332,333,473,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,512,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[46,66,68,69,107,519,520,521,522,225,226,227,277,279,280,297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[22,23,29,30,31,32,34,35,37,38,41,42,43,44,45,46,51,61,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,106,107,109,110,111,112,113,114,120,121,122,123,124,125,126,127,128,129,130,131,133,134,136,138,139,140,142,143,145,146,147,148,149,163,164,166,170,171,172,173,174,175,187,188,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,239,240,241,242,243,244,245,246,247,248,249,251,273,276,277,278,279,280,281,282,283,289,290,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,323,327,328,360,361,362,363,364,365,366,367,370,372,376,379,380,381,382,384,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,431,432,433,434,435,436,437,438,440,441,442,443,444,445,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[523,515,516],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[8,176,179,180],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","args":"args","cstr":"cstr"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[22,23,37,38,41,42,45,46,61,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,106,107,108,110,111,114,115,121,122,123,124,125,126,136,137,163,164,166,170,187,188,198,199,200,201,221,222,223,224,225,226,227,228,244,245,246,247,248,249,250,254,255,260,266,273,274,275,277,278,279,280,281,283,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,306,307,308,310,312,313,314,315,316,317,324,327,329,330,332,333,334,338,341,351,357,360,361,362,363,364,365,367,370,371,372,373,376,380,387,391,392,394,395,398,399,400,401,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,424,431,435,436,437,438,440,441,442,443,444,445,447,448,449,450,451,452,453,454,455,456,457,458,460,461,462,463,464,465,466],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[394],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:45","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[61,122,163,164,166,254,288,289,290,291,292,293,294,315,317,324,327,329,330,333,338,341,351,357,360,362,363,365,387],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[524,464,465,466],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[36,40],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[525,526,527,528,529,317,318,471,331,464],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[36,40],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[262,263,265,268,269,270,271,272,420,421,423,426,427,428,429,430],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[22,27,29,30,31,32,34,35,37,38,41,42,43,44,45,46,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,106,107,109,110,111,112,113,114,120,121,122,123,124,125,131,133,134,136,138,139,140,142,143,144,145,146,147,148,149,163,164,166,174,177,178,187,188,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,244,245,246,247,248,249,251,254,255,256,257,258,259,260,266,273,274,275,276,277,278,279,280,281,282,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,310,312,313,314,315,316,317,319,320,321,322,324,327,329,330,333,338,341,351,357,360,361,362,363,364,365,367,371,372,373,376,379,380,381,382,384,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,424,435,436,437,438,440,441,442,443,444,445,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[530,531,513],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[532,533,534,535,536],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:318","failures":[72,75],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[536,435,454,460],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":438,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":106,"org.easymock.tests2.UsageTest.argumentsOrdered":305,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":415,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":10,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":300,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":255,"org.easymock.tests2.DelegateToTest.testReturnException":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":171,"org.easymock.tests.MockingTest.testPartialClassMocking":163,"org.easymock.tests.MockClassControlTest.testToString":192,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":510,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":18,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":201,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":341,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":519,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":274,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":500,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":525,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":445,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":41,"org.easymock.tests2.UsageTest.wrongArguments":298,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":430,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":230,"org.easymock.samples.ExampleTest.answerVsDelegate":245,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":184,"org.easymock.tests2.UsageConstraintsTest.testNull":441,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":168,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":363,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":414,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":197,"org.easymock.tests2.CaptureTest.testPrimitive":394,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":45,"org.easymock.tests.UsageTest.moreThanOneArgument":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":220,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":241,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":176,"org.easymock.tests.UsageTest.argumentsOrdered":113,"org.easymock.tests.UsageVarargTest.varargIntAccepted":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":15,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":121,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":323,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":506,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":271,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":2,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":125,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":484,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":424,"org.easymock.tests.ReplayStateInvalidUsageTest.times":55,"org.easymock.tests2.DependencyTest.testClassMocking":503,"org.easymock.tests2.AnswerTest.answer":376,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":16,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":434,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":502,"org.easymock.tests2.CaptureTest.testAnd":391,"org.easymock.tests2.UsageTest.strictResetToDefault":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":409,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":223,"org.easymock.tests2.DelegateToTest.testDelegate":390,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":180,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":483,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":216,"org.easymock.tests.LimitationsTest.mockFinalMethod":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":130,"org.easymock.tests2.DependencyTest.testClassMockingSupport":504,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":100,"org.easymock.tests2.CaptureTest.testCapture1_2446744":395,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":512,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":432,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":49,"org.easymock.tests.UsageThrowableTest.throwError":72,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":183,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":514,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":243,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":359,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":487,"org.easymock.samples.PartialClassMockTest.testGetArea":254,"org.easymock.tests.MockingTest.testInterfaceMocking":165,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":50,"org.easymock.tests2.CompareToTest.testLessOrEqual":536,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":122,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":151,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":158,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":202,"org.easymock.tests2.UsageTest.niceToStrict":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":346,"org.easymock.tests2.ThreadingTest.testChangeDefault":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":327,"org.easymock.tests2.MockBuilderTest.testCreateMock":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":354,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":427,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":210,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":410,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":501,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":26,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":228,"org.easymock.tests.UsageOverloadedMethodTest.overloading":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":356,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":451,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":91,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":198,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":477,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":450,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":400,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":141,"org.easymock.tests.MockClassControlTest.testEquals":196,"org.easymock.tests2.EasyMockSupportClassTest.testAll":338,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":38,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":218,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":433,"org.easymock.tests2.CaptureTest.testCaptureAll":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":128,"org.easymock.tests.MockNameTest.defaultName":189,"org.easymock.tests2.UsageConstraintsTest.testMatches":452,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":47,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":242,"org.easymock.samples.ExampleTest.voteForRemovals":249,"org.easymock.tests.UsageVarargTest.allKinds":149,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":129,"org.easymock.samples.BasicClassMockTest.testPrintContent":258,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":78,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":275,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":529,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":516,"org.easymock.tests2.UsageConstraintsTest.greaterThan":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":339,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":222,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":373,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":488,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":238,"org.easymock.samples.ExampleTest.voteForRemoval":246,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":313,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":374,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":185,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":517,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":366,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":480,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":120,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":295,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":407,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":336,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":170,"org.easymock.tests2.CaptureTest.testCaptureFirst":404,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":408,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":307,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":87,"org.easymock.tests2.CaptureTest.testCapture2_2446744":403,"org.easymock.tests2.UsageTest.moreThanOneArgument":297,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":333,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":148,"org.easymock.tests.GenericTest.testBridgedEquals":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":34,"org.easymock.tests.UsageExpectAndReturnTest.longType":83,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":405,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":126,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":219,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":459,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":159,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":217,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":239,"org.easymock.tests.UsageCallCountTest.tooManyCalls":35,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":355,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":429,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":206,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":77,"org.easymock.tests.MockingTest.testNiceClassMocking":169,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":289,"org.easymock.tests.MockingTest.testClassMocking":161,"org.easymock.tests2.UsageConstraintsTest.testContains":449,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":28,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":310,"org.easymock.tests2.UsageConstraintsTest.testFind":440,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":200,"org.easymock.tests.MockTypeTest.fromEasyMockClass":182,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":384,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":63,"org.easymock.tests.UsageExpectAndReturnTest.object":90,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":367,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":413,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":526,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":143,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":156,"org.easymock.tests.UsageTest.exactCallCountByLastCall":114,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":5,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":177,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":103,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":318,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":96,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":133,"org.easymock.tests.MockClassControlTest.testHashCode":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":262,"org.easymock.tests2.EasyMockSupportTest.testVerify":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":348,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":178,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":131,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":431,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":418,"org.easymock.tests.UsageVarargTest.varargCharAccepted":142,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":515,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":21,"org.easymock.tests2.UsageTest.openCallCountByLastCall":301,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":416,"org.easymock.tests.DefaultClassInstantiatorTest.object":232,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":24,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":154,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":468,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":349,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":75,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":261,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":486,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":194,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":371,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":207,"org.easymock.tests.ReplayStateInvalidCallsTest.times":492,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":117,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":493,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":357,"org.easymock.tests2.UsageTest.resumeIfFailure":306,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":181,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":505,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":173,"org.easymock.tests2.StubTest.stubWithReturnValue":283,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":471,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":460,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":89,"org.easymock.tests2.SerializationTest.testAllMockedMethod":466,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":115,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":476,"org.easymock.samples.SupportTest.voteForRemovals":260,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":213,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":524,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":116,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":377,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":105,"org.easymock.tests.UsageExpectAndThrowTest.object":211,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":457,"org.easymock.tests2.DelegateToTest.testWrongClass":388,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":490,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":187,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":188,"org.easymock.tests.UsageStrictMockTest.range":68,"org.easymock.samples.ConstructorCalledMockTest.testTax":252,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":286,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":412,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":288,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":212,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":329,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":112,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":229,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":482,"org.easymock.tests2.CaptureTest.testCaptureNone":399,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":152,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":531,"org.easymock.tests.UsageUnorderedTest.message":46,"org.easymock.tests.UsageVerifyTest.twoReturns":227,"org.easymock.tests.UsageVarargTest.varargByteAccepted":147,"org.easymock.tests2.ThreadingTest.testThreadSafe":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":352,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":32,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":157,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":257,"org.easymock.tests2.CaptureTest.testCapture_2617107":393,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":102,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":19,"org.easymock.tests2.UsageConstraintsTest.any":447,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":54,"org.easymock.tests2.StubTest.stub":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":20,"org.easymock.tests.UsageExpectAndThrowTest.longType":204,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":236,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":53,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":278,"org.easymock.tests2.SerializationTest.testClass":464,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":266,"org.easymock.tests.LimitationsTest.mockNativeMethod":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":99,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":39,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":421,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":498,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":281,"org.easymock.tests2.NameTest.nameForMocksControl":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":423,"org.easymock.tests2.MockedExceptionTest.testMockedException":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":340,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":111,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":166,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":205,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":383,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":360,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":330,"org.easymock.tests.MockingTest.testNicePartialClassMocking":164,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":365,"org.easymock.tests2.CompareToTest.testCompareEqual":534,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":419,"org.easymock.tests2.CaptureTest.testCaptureLast":398,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":101,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":497,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":444,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":294,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":458,"org.easymock.tests.MockingTest.testTwoMocks":162,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":494,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":508,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":209,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":304,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":462,"org.easymock.samples.ExampleTest.removeNonExistingDocument":250,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":426,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":51,"org.easymock.tests.UsageStrictMockTest.differentMethods":69,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":263,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":513,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":234,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":314,"org.easymock.tests2.MockBuilderTest.testCreateMockString":334,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":190,"org.easymock.tests.UsageExpectAndThrowTest.floatType":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":342,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":337,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":379,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":518,"org.easymock.tests.UsageVerifyTest.twoThrows":226,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":351,"org.easymock.samples.ExampleTest.voteAgainstRemoval":247,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":11,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":372,"org.easymock.tests.LimitationsTest.privateConstructor":60,"org.easymock.tests2.UsageConstraintsTest.testNotNull":461,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":79,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":308,"org.easymock.tests2.UsageTest.defaultResetToNice":303,"org.easymock.samples.ExampleTest.voteAgainstRemovals":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":95,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":420,"org.easymock.tests.UsageVarargTest.differentLength":144,"org.easymock.tests2.CallbackTest.callback":467,"org.easymock.tests2.UsageConstraintsTest.equals":439,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":368,"org.easymock.tests.UsageTest.openCallCountByLastCall":110,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":43,"org.easymock.tests.UsageCallCountTest.tooFewCalls":30,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":231,"org.easymock.tests.UsageThrowableTest.throwCheckedException":76,"org.easymock.tests.MockingTest.testStrictClassMocking":160,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":23,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":293,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":425,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":290,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":56,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":292,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":381,"org.easymock.tests2.CompareToTest.testGreateOrEqual":535,"org.easymock.tests.ObjectMethodsTest.testHashCode":155,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":496,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":316,"org.easymock.tests2.NameTest.nameForNiceMock":321,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":491,"org.easymock.tests2.DependencyTest.testInterfaceMocking":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":527,"org.easymock.samples.ExampleTest.addDocument":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":353,"org.easymock.tests2.DelegateToTest.testStubDelegate":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":358,"org.easymock.tests2.AnswerTest.stubAnswer":380,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":66,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":511,"org.easymock.tests.UsageVarargTest.varargLongAccepted":146,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":9,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":98,"org.easymock.tests.UsageExpectAndReturnTest.floatType":82,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":317,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":253,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":455,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":135,"org.easymock.tests.UsageThrowableTest.noUpperLimit":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":270,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":436,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":284,"org.easymock.tests2.SerializationTest.test":465,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":396,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":478,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":233,"org.easymock.tests2.UsageConstraintsTest.testSame":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":81,"org.easymock.samples.SupportTest.addDocument":259,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":523,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":507,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":481,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":343,"org.easymock.tests.GenericTest.testPackageScope":37,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":4,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":269,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":167,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":479,"org.easymock.tests2.NameTest.nameForMock":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":92,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":473,"org.easymock.tests2.UsageStrictMockTest.differentMethods":280,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":84,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":215,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":153,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":224,"org.easymock.tests2.MockedExceptionTest.testRealException":311,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":14,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":287,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":13,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":277,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":42,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":58,"org.easymock.tests2.NameTest.nameForStrictMock":320,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":326,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":382,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":364,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":285,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":520,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":456,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":235,"org.easymock.tests.ErrorMessageTest.testGetters":521,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":324,"org.easymock.tests2.UsageStrictMockTest.range":279,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":485,"org.easymock.tests2.UsageConstraintsTest.lessThan":463,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":265,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":528,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":8,"org.easymock.tests2.CaptureTest.testCaptureRightOne":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":347,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":530,"org.easymock.tests2.UsageConstraintsTest.testOr":443,"org.easymock.tests.UsageRangeTest.combination":221,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":361,"org.easymock.tests.UsageTest.wrongArguments":109,"org.easymock.tests2.MockBuilderTest.testWithConstructor":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":344,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":1,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":93,"org.easymock.tests.UsageVarargTest.varargShortAccepted":145,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":237,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":33,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":499,"org.easymock.tests2.UsageConstraintsTest.cmpTo":448,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":378,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":489,"org.easymock.tests2.CompareToTest.testLessThan":532,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":3,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":302,"org.easymock.tests2.CaptureTest.testCaptureFromStub":402,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":48,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":325,"org.easymock.tests.UsageTest.unexpectedCallWithArray":108,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":495,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":65,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":31,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":472,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":94,"org.easymock.tests2.UsageConstraintsTest.constraints":437,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":67,"org.easymock.samples.ExampleTest.addAndChangeDocument":251,"org.easymock.tests.UsageStrictMockTest.testVerify":71,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":256,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":64,"org.easymock.tests2.CompareToTest.testGreateThan":533,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":127,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":123,"org.easymock.tests.LimitationsTest.abstractClass":59,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":86,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":124,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":522,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":411,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":139}}]
