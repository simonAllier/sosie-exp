[{"position":"org.easymock.ConstructorArgs:77","failures":[0,1],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[18,19,20,21,22,23,24,25,26,27,28],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[29,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[31,32,33,34],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[35,36,37,38],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[40,41,42,43],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:36","failures":[2,3,44,4,45,46,47,48,49,50,51,6,52,7,53,12,13,54,14,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[84,85],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[115,116,117,118,119,120],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[121,122,123],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[124],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,44,4,45,125,54,14,55,112,113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[126,127,128,129],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[130,131,132,133,44,134,87,135,136,137,138,139,140,141,142,143,144,145,145,146,146,54,79,147,41,148,149,23,150,24,151,32,152,42,153,27,28,154,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[18,155,19,156,20,147,21,22,149,23,150,24,25,157,26,158,27,159,28,154],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[3,44,4,45,125,54,14,55,112,113],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[91,102,103,104,30],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[116,119],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[39],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[18,19,156,160,161,162,163,164,165,20,147,166],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[167],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[130,66,168,169,170,171,172,173,174,175,176,177,178,131,132,67,179,133,2,180,181,182,183,184,185,186,187,188,189,68,190,86,191,192,3,44,193,4,45,194,125,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,47,223,52,7,8,224,225,9,10,226,227,134,87,135,136,137,228,229,230,231,232,233,234,235,236,237,11,238,239,240,241,242,243,244,245,246,247,248,249,250,251,88,89,90,73,74,75,76,77,78,138,139,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,53,12,13,287,288,289,290,115,140,141,142,143,144,291,292,293,294,295,296,297,298,145,145,146,146,91,299,300,301,302,303,304,305,306,307,308,309,54,310,14,55,311,312,79,92,93,94,95,96,97,98,313,314,56,15,315,316,317,318,319,16,17,320,321,80,81,82,83,322,323,324,99,325,100,326,327,328,329,330,101,102,84,103,104,331,105,332,106,107,108,109,110,333,111,112,334,113,85,335,336,337,338,339,340,341,342,343,344,345,346,114,347,348,18,155,19,156,160,161,162,163,349,164,20,147,350,166,351,352,353,354,355,356,357,358,359,360,361,362,363,31,364,365,366,367,368,41,148,21,22,149,23,150,24,25,157,158,369,151,370,32,152,371,42,153,27,159,33,372,43,28,154,34,36,37,38,373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:80","failures":[374,375,376,91,330,29,101,377,102,84,103,104,331,105,30,332,85,36],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[378,177,178,374,39,379,380,86,381,227,382,383,384,88,89,90,385,375,376,252,253,254,255,256,257,258,259,115,116,117,118,121,119,120,145,145,146,146,91,301,302,386,387,388,389,390,92,93,94,95,97,98,80,81,82,100,391,330,101,377,392,102,84,103,104,393,331,105,332,394,395,396,106,397,398,107,399,400,401,402,403,404,405,406,407,108,408,409,410,411,412,109,413,414,110,333,112,334,113,85,335,415,416,336,337,338,339,417,418,36,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[392,109],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":22,"org.easymock.tests2.UsageTest.argumentsOrdered":17,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":223,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":361,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":316,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":299,"org.easymock.tests2.DelegateToTest.testReturnException":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":74,"org.easymock.tests.MockingTest.testPartialClassMocking":88,"org.easymock.tests.MockClassControlTest.testToString":254,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":263,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":307,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":131,"org.easymock.tests2.UsageTest.wrongArguments":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":289,"org.easymock.samples.ExampleTest.answerVsDelegate":292,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":376,"org.easymock.tests2.UsageConstraintsTest.testNull":23,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":112,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":259,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":360,"org.easymock.tests2.CaptureTest.testPrimitive":156,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":133,"org.easymock.tests.UsageTest.moreThanOneArgument":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":282,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":142,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":127,"org.easymock.tests.UsageTest.argumentsOrdered":10,"org.easymock.tests.UsageVarargTest.varargIntAccepted":240,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":65,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":134,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":330,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":137,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":61,"org.easymock.tests.ReplayStateInvalidUsageTest.times":188,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":364,"org.easymock.tests2.DependencyTest.testClassMocking":386,"org.easymock.tests2.AnswerTest.answer":340,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":368,"org.easymock.tests2.CaptureTest.testAnd":18,"org.easymock.tests2.UsageTest.strictResetToDefault":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":141,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":355,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":129,"org.easymock.tests2.DelegateToTest.testDelegate":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":278,"org.easymock.tests.LimitationsTest.mockFinalMethod":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":232,"org.easymock.tests2.DependencyTest.testClassMockingSupport":387,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":46,"org.easymock.tests2.CaptureTest.testCapture1_2446744":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":276,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":366,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":182,"org.easymock.tests.UsageThrowableTest.throwError":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":414,"org.easymock.samples.PartialClassMockTest.testGetArea":91,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":183,"org.easymock.tests2.CompareToTest.testLessOrEqual":40,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":403,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":264,"org.easymock.tests2.UsageTest.niceToStrict":315,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":1,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":102,"org.easymock.tests2.MockBuilderTest.testCreateMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":410,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":58,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":272,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":356,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":168,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":287,"org.easymock.tests.UsageOverloadedMethodTest.overloading":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":407,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":32,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":214,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":260,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":122,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":370,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":164,"org.easymock.tests2.EasyMockSupportClassTest.testAll":106,"org.easymock.tests.MockClassControlTest.testEquals":258,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":178,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":280,"org.easymock.tests2.CaptureTest.testCaptureAll":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":230,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":367,"org.easymock.tests2.UsageConstraintsTest.testMatches":152,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":143,"org.easymock.samples.ExampleTest.voteForRemovals":296,"org.easymock.tests.UsageVarargTest.allKinds":248,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":231,"org.easymock.samples.BasicClassMockTest.testPrintContent":302,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":201,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":78,"org.easymock.tests2.UsageConstraintsTest.greaterThan":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":284,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":339,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":120,"org.easymock.samples.ExampleTest.voteForRemoval":293,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":417,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":85,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":227,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":313,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":69,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":353,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":73,"org.easymock.tests2.CaptureTest.testCaptureFirst":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":354,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":321,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":11,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":210,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":99,"org.easymock.tests2.UsageTest.moreThanOneArgument":56,"org.easymock.tests2.CaptureTest.testCapture2_2446744":350,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":105,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":247,"org.easymock.tests.GenericTest.testBridgedEquals":39,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":175,"org.easymock.tests.UsageExpectAndReturnTest.longType":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":228,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":351,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":30,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":281,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":372,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":140,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":71,"org.easymock.tests.UsageCallCountTest.tooManyCalls":176,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":49,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":211,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":200,"org.easymock.tests.MockingTest.testNiceClassMocking":385,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":93,"org.easymock.tests.MockingTest.testClassMocking":383,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":169,"org.easymock.tests2.UsageConstraintsTest.testContains":151,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":29,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":82,"org.easymock.tests2.UsageConstraintsTest.testFind":149,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":262,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":191,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":345,"org.easymock.tests.UsageExpectAndReturnTest.object":213,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":359,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":242,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":251,"org.easymock.tests.UsageTest.exactCallCountByLastCall":226,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":391,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":219,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":235,"org.easymock.tests.MockClassControlTest.testHashCode":257,"org.easymock.tests2.EasyMockSupportTest.testVerify":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":405,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":60,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":233,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":365,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":31,"org.easymock.tests.UsageVarargTest.varargCharAccepted":241,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":309,"org.easymock.tests2.UsageTest.openCallCountByLastCall":317,"org.easymock.tests.DefaultClassInstantiatorTest.object":115,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":362,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":249,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":406,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":198,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":256,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":337,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":269,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":220,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":109,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":62,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":255,"org.easymock.tests2.UsageTest.resumeIfFailure":320,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":375,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":76,"org.easymock.tests2.StubTest.stubWithReturnValue":79,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":212,"org.easymock.tests2.SerializationTest.testAllMockedMethod":38,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":64,"org.easymock.samples.SupportTest.voteForRemovals":304,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":275,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":35,"org.easymock.tests.UsageExpectAndThrowTest.object":273,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":159,"org.easymock.tests2.DelegateToTest.testWrongClass":347,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":138,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":139,"org.easymock.samples.ConstructorCalledMockTest.testTax":145,"org.easymock.tests.UsageStrictMockTest.range":4,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":358,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":92,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":274,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":394,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":288,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":48,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":124,"org.easymock.tests2.CaptureTest.testCaptureNone":349,"org.easymock.tests.UsageUnorderedTest.message":2,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":246,"org.easymock.tests2.ThreadingTest.testThreadSafe":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":408,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":173,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":301,"org.easymock.tests2.CaptureTest.testCapture_2617107":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":179,"org.easymock.tests2.UsageConstraintsTest.any":158,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":187,"org.easymock.tests2.StubTest.stub":312,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":75,"org.easymock.tests.UsageExpectAndThrowTest.longType":266,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":121,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":186,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":310,"org.easymock.tests2.SerializationTest.testClass":36,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":305,"org.easymock.tests.LimitationsTest.mockNativeMethod":86,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":222,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":374,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests2.NameTest.nameForMocksControl":329,"org.easymock.tests2.MockedExceptionTest.testMockedException":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":398,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":225,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":90,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":267,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":110,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":104,"org.easymock.tests.MockingTest.testNicePartialClassMocking":89,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":113,"org.easymock.tests2.CaptureTest.testCaptureLast":163,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":47,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":98,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":25,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":33,"org.easymock.tests.MockingTest.testTwoMocks":384,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":271,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":154,"org.easymock.samples.ExampleTest.removeNonExistingDocument":297,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":184,"org.easymock.tests.UsageStrictMockTest.differentMethods":45,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":117,"org.easymock.tests2.ConstraintsToStringTest.andToString":63,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":324,"org.easymock.tests2.MockBuilderTest.testCreateMockString":332,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":399,"org.easymock.tests.UsageExpectAndThrowTest.floatType":265,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":341,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":108,"org.easymock.samples.ExampleTest.voteAgainstRemoval":294,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":338,"org.easymock.tests.LimitationsTest.privateConstructor":380,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":0,"org.easymock.tests2.UsageConstraintsTest.testNotNull":28,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":202,"org.easymock.tests2.UsageTest.defaultResetToNice":319,"org.easymock.samples.ExampleTest.voteAgainstRemovals":291,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":218,"org.easymock.tests.UsageVarargTest.differentLength":243,"org.easymock.tests2.CallbackTest.callback":373,"org.easymock.tests2.UsageConstraintsTest.equals":167,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":415,"org.easymock.tests.UsageTest.openCallCountByLastCall":224,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":41,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":67,"org.easymock.tests.UsageCallCountTest.tooFewCalls":171,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":95,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":290,"org.easymock.tests.UsageThrowableTest.throwCheckedException":199,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":50,"org.easymock.tests.MockingTest.testStrictClassMocking":382,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":97,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":66,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":94,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":189,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":96,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":343,"org.easymock.tests.ObjectMethodsTest.testHashCode":250,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":325,"org.easymock.tests2.NameTest.nameForNiceMock":328,"org.easymock.tests2.DependencyTest.testInterfaceMocking":306,"org.easymock.samples.ExampleTest.addDocument":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.DelegateToTest.testStubDelegate":114,"org.easymock.tests2.AnswerTest.stubAnswer":342,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":44,"org.easymock.tests.UsageVarargTest.varargLongAccepted":245,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":194,"org.easymock.tests.UsageExpectAndReturnTest.floatType":205,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":221,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":100,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":146,"org.easymock.tests2.ConstraintsToStringTest.orToString":57,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":153,"org.easymock.tests.UsageThrowableTest.noUpperLimit":196,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":148,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":388,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":161,"org.easymock.tests2.SerializationTest.test":37,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":123,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":116,"org.easymock.tests2.UsageConstraintsTest.testSame":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":204,"org.easymock.samples.SupportTest.addDocument":303,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":400,"org.easymock.tests.GenericTest.testPackageScope":177,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":128,"org.easymock.tests2.NameTest.nameForMock":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":215,"org.easymock.tests2.UsageStrictMockTest.differentMethods":55,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":416,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":207,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":286,"org.easymock.tests2.MockedExceptionTest.testRealException":83,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":51,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":54,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":132,"org.easymock.tests2.NameTest.nameForStrictMock":327,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":392,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":344,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":390,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":118,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":27,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":101,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":126,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":404,"org.easymock.tests2.CaptureTest.testCaptureRightOne":20,"org.easymock.tests2.UsageConstraintsTest.testOr":24,"org.easymock.tests.UsageRangeTest.combination":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":333,"org.easymock.tests.UsageTest.wrongArguments":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":401,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":253,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":216,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":119,"org.easymock.tests.UsageVarargTest.varargShortAccepted":244,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":174,"org.easymock.tests2.UsageConstraintsTest.cmpTo":369,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":318,"org.easymock.tests2.CaptureTest.testCaptureFromStub":147,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":181,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":377,"org.easymock.tests.UsageTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":172,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":217,"org.easymock.tests2.CaptureTest.testCapture":165,"org.easymock.tests2.UsageConstraintsTest.constraints":21,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":193,"org.easymock.samples.ExampleTest.addAndChangeDocument":298,"org.easymock.tests2.ConstraintsToStringTest.notToString":59,"org.easymock.tests.UsageStrictMockTest.testVerify":125,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":300,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":229,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":162,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":135,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":209,"org.easymock.tests.LimitationsTest.abstractClass":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":136,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":357}}]
