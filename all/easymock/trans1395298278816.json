[{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[0,1],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[4,5,9,11,12,13,14,15,16,17,18,76,19,77,20,22,23,24,26,27,78,28,29,31,33,79,80,34,38,42,44,45,46,47,48,49,50,51,53,54,55,60,61,62,64,65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[81,82,83],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[5,13,84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[85,86,87,88,89],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[11,14,15,23,34,90,44,45,46,47,51,54,64,65,69],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[91,92,93,94,95,96],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[97],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[120,121,122,123],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[124,125,126,127,128,129,130,131,132,133,134,135,136,137,91,91,92,92,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,4,164,165,166,167,168,169,170,171,172,173,174,175,176,5,177,178,179,180,181,182,121,183,184,185,186,6,187,188,7,189,190,191,2,3,8,192,193,194,195,9,196,10,11,12,13,197,198,97,14,15,16,17,199,200,18,201,202,84,203,204,205,206,207,208,77,209,210,20,211,21,22,23,24,25,212,213,214,26,215,216,217,27,78,218,219,28,220,221,222,223,224,225,226,29,227,228,229,230,30,231,232,233,234,235,236,237,32,238,79,80,122,123,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,34,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,42,43,44,45,290,291,46,47,48,292,293,294,295,296,297,298,299,49,300,301,302,303,304,305,306,307,308,309,310,311,312,313,50,314,51,52,53,54,55,56,315,316,317,318,319,320,57,321,58,59,322,323,63,64,65,68,71,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[152,153,154,357],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[124,127,139,141,142,145,146,147,148,151,156,158,160,162,163,4,164,165,166,167,168,169,170,171,173,174,175,176,5,177,178,179,180,181,182,121,183,184,2,3,196,10,12,197,198,16,84,206,207,208,21,23,24,214,26,215,27,78,28,221,29,236,122,123,239,240,243,245,246,247,248,250,251,252,253,255,256,257,258,259,262,263,264,265,266,282,42,43,290,291,49,300,301,302,307,308,309,310,311,312,52,54,55,319,320,63,64,330,331,334,335,336,339,341,342,343,344,346,347,348,349,351,352,353,354,355,356],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[11,14,15,23,34,358,90,44,45,46,47,51,54,64,65,69],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[138,140,141,142,143,144,145,147,359,148,149,151],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[91,92,152,161,360,93,94,361,362,363,95,96,364,88,89],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[160,9,198,231,232,233,234,259,261,262,263,264,265,266,278,279,280,281,282,283,42,291,313,320,64,366,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[184,367],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[152,153,154,357],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[174],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[11,14,15,23,34,90,44,45,46,47,51,54,64,65,69],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[11,14,15,23,34,368,90,44,45,46,47,51,54,64,65,69],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[124,125,126,127,128,129,130,131,369,132,133,134,135,136,137,91,92,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,370,155,156,157,371,158,159,160,161,360,162,163,4,164,372,165,166,167,168,169,170,373,171,172,173,174,175,176,5,177,178,179,180,181,120,182,121,183,184,374,375,376,377,378,379,185,186,6,187,380,188,7,189,381,190,382,365,191,2,3,383,384,385,386,387,8,388,389,390,391,392,393,394,395,396,397,192,398,399,193,400,401,402,403,404,405,406,407,408,194,409,410,411,412,413,195,414,415,9,196,10,11,12,13,197,198,97,14,15,16,17,199,200,18,201,202,84,203,416,417,204,93,418,205,76,206,19,419,420,207,421,208,77,209,210,20,211,21,22,23,24,25,422,423,212,213,214,26,215,216,217,27,78,218,219,28,220,221,222,424,223,224,225,226,29,227,228,229,230,425,426,427,428,429,30,430,431,432,433,434,435,231,232,233,234,235,31,436,437,236,237,32,238,438,363,33,79,80,122,439,123,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,34,440,441,442,35,443,36,444,37,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,267,476,268,269,270,477,271,272,38,273,274,275,276,277,278,279,280,281,282,283,478,284,39,40,41,479,480,481,285,286,287,288,289,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,482,114,115,116,117,118,483,119,42,43,44,45,290,291,46,47,48,292,293,294,295,296,484,485,486,297,298,487,299,488,489,490,49,300,301,302,303,304,305,306,307,308,309,310,311,491,492,493,494,495,496,312,313,50,314,51,52,53,54,55,56,315,497,316,317,498,499,318,500,319,320,501,502,503,504,505,57,321,58,59,322,323,60,61,62,63,64,65,506,66,507,366,67,68,69,508,509,510,511,512,513,70,71,514,515,324,516,325,326,517,327,518,519,328,520,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,521,522,72,523,524,73,74,75],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[381],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[190,9,17,21,261,48,52,64,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":164,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests2.UsageTest.argumentsOrdered":15,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":108,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":13,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":125,"org.easymock.tests2.DelegateToTest.testReturnException":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":279,"org.easymock.tests.MockingTest.testPartialClassMocking":297,"org.easymock.tests.MockClassControlTest.testToString":39,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":424,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":495,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":403,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":335,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":213,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":473,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":170,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":330,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":393,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":305,"org.easymock.samples.ExampleTest.answerVsDelegate":127,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":36,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":489,"org.easymock.tests2.UsageConstraintsTest.testNull":166,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":202,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":481,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":28,"org.easymock.tests2.CaptureTest.testPrimitive":141,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":334,"org.easymock.tests.UsageTest.moreThanOneArgument":43,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":354,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":287,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":501,"org.easymock.tests.UsageTest.argumentsOrdered":47,"org.easymock.tests.UsageVarargTest.varargIntAccepted":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":307,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":87,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":235,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":434,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":376,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":311,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":457,"org.easymock.tests.ReplayStateInvalidUsageTest.times":519,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":8,"org.easymock.tests2.DependencyTest.testClassMocking":422,"org.easymock.tests2.AnswerTest.answer":190,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":114,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":230,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":442,"org.easymock.tests2.CaptureTest.testAnd":138,"org.easymock.tests2.UsageTest.strictResetToDefault":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":205,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":301,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":505,"org.easymock.tests2.DelegateToTest.testDelegate":158,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":456,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":350,"org.easymock.tests.LimitationsTest.mockFinalMethod":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":296,"org.easymock.tests2.DependencyTest.testClassMockingSupport":423,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":70,"org.easymock.tests2.CaptureTest.testCapture1_2446744":142,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":417,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":228,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":516,"org.easymock.tests.UsageThrowableTest.throwError":259,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":443,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":435,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":289,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":415,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":460,"org.easymock.samples.PartialClassMockTest.testGetArea":124,"org.easymock.tests.MockingTest.testInterfaceMocking":487,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":308,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":404,"org.easymock.tests2.UsageTest.niceToStrict":12,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":74,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":336,"org.easymock.tests2.ThreadingTest.testChangeDefault":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":98,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":83,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":236,"org.easymock.tests2.MockBuilderTest.testCreateMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":390,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":344,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":27,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":441,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":513,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":303,"org.easymock.tests.UsageOverloadedMethodTest.overloading":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":175,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":366,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":500,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":250,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":174,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":147,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":477,"org.easymock.tests.MockClassControlTest.testEquals":480,"org.easymock.tests2.EasyMockSupportClassTest.testAll":192,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":352,"org.easymock.tests2.CaptureTest.testCaptureAll":139,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":294,"org.easymock.tests.MockNameTest.defaultName":75,"org.easymock.tests2.UsageConstraintsTest.testMatches":176,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":515,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":288,"org.easymock.samples.ExampleTest.voteForRemovals":131,"org.easymock.tests.UsageVarargTest.allKinds":277,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":63,"org.easymock.samples.BasicClassMockTest.testPrintContent":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":295,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":265,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":283,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":371,"org.easymock.tests2.UsageConstraintsTest.greaterThan":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":398,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":19,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":461,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":451,"org.easymock.samples.ExampleTest.voteForRemoval":128,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":419,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":208,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":444,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":416,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":453,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":318,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":105,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":215,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":278,"org.easymock.tests2.CaptureTest.testCaptureFirst":151,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":216,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":17,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":69,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":246,"org.easymock.tests2.CaptureTest.testCapture2_2446744":150,"org.easymock.tests2.UsageTest.moreThanOneArgument":10,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":115,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":79,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":276,"org.easymock.tests.GenericTest.testBridgedEquals":499,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":61,"org.easymock.tests.UsageExpectAndReturnTest.longType":242,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":292,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":353,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":521,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":120,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":492,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":285,"org.easymock.tests.UsageCallCountTest.tooManyCalls":62,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":392,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":340,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":264,"org.easymock.tests.MockingTest.testNiceClassMocking":490,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":186,"org.easymock.tests.MockingTest.testClassMocking":485,"org.easymock.tests2.UsageConstraintsTest.testContains":173,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":321,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":233,"org.easymock.tests2.UsageConstraintsTest.testFind":165,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":320,"org.easymock.tests.MockTypeTest.fromEasyMockClass":35,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":123,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":50,"org.easymock.tests.UsageExpectAndReturnTest.object":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":391,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":219,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":272,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":524,"org.easymock.tests.UsageTest.exactCallCountByLastCall":48,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":103,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":502,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":494,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":360,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":255,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":507,"org.easymock.tests.MockClassControlTest.testHashCode":479,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":426,"org.easymock.tests2.EasyMockSupportTest.testVerify":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":406,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":503,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":512,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":506,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":227,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":368,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":199,"org.easymock.tests.UsageVarargTest.varargCharAccepted":271,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":119,"org.easymock.tests2.UsageTest.openCallCountByLastCall":197,"org.easymock.tests.DefaultClassInstantiatorTest.object":445,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":81,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":221,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":511,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":72,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":262,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":386,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":425,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":459,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":41,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":76,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":341,"org.easymock.tests.ReplayStateInvalidCallsTest.times":465,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":256,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":491,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":466,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":195,"org.easymock.tests2.UsageTest.resumeIfFailure":16,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":281,"org.easymock.tests2.StubTest.stubWithReturnValue":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":362,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":182,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":248,"org.easymock.tests2.SerializationTest.testAllMockedMethod":154,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":482,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":89,"org.easymock.samples.SupportTest.voteForRemovals":134,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":347,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":357,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":483,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":382,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":496,"org.easymock.tests.UsageExpectAndThrowTest.object":345,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":180,"org.easymock.tests2.DelegateToTest.testWrongClass":157,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":463,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":355,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":356,"org.easymock.tests.UsageStrictMockTest.range":54,"org.easymock.samples.ConstructorCalledMockTest.testTax":91,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":378,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":218,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":346,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":32,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":520,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":395,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":46,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":304,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":455,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":510,"org.easymock.tests2.CaptureTest.testCaptureNone":146,"org.easymock.tests.UsageUnorderedTest.message":34,"org.easymock.tests.UsageVerifyTest.twoReturns":65,"org.easymock.tests.UsageVarargTest.varargByteAccepted":275,"org.easymock.tests2.ThreadingTest.testThreadSafe":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":409,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":323,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":135,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":73,"org.easymock.tests2.CaptureTest.testCapture_2617107":140,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":514,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":117,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":333,"org.easymock.tests2.UsageConstraintsTest.any":171,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":518,"org.easymock.tests2.StubTest.stub":159,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":280,"org.easymock.tests.UsageExpectAndThrowTest.longType":338,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":449,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":327,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":22,"org.easymock.tests2.SerializationTest.testClass":152,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":30,"org.easymock.tests.LimitationsTest.mockNativeMethod":267,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":498,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":258,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":385,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":471,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":25,"org.easymock.tests2.NameTest.nameForMocksControl":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":387,"org.easymock.tests2.MockedExceptionTest.testMockedException":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":399,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":291,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":439,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":299,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":339,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":200,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":238,"org.easymock.tests.MockingTest.testNicePartialClassMocking":298,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":203,"org.easymock.tests2.CaptureTest.testCaptureLast":145,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":85,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":383,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":71,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":470,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":189,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":169,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":181,"org.easymock.tests.MockingTest.testTwoMocks":486,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":467,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":343,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":183,"org.easymock.samples.ExampleTest.removeNonExistingDocument":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":389,"org.easymock.tests.UsageStrictMockTest.differentMethods":55,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":326,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":427,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":447,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":394,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":77,"org.easymock.tests2.MockBuilderTest.testCreateMockString":80,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":400,"org.easymock.tests.UsageExpectAndThrowTest.floatType":337,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":191,"org.easymock.tests.UsageVerifyTest.twoThrows":64,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":194,"org.easymock.samples.ExampleTest.voteAgainstRemoval":129,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":109,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":206,"org.easymock.tests.LimitationsTest.privateConstructor":475,"org.easymock.tests2.UsageConstraintsTest.testNotNull":121,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":231,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":266,"org.easymock.tests2.UsageTest.defaultResetToNice":97,"org.easymock.samples.ExampleTest.voteAgainstRemovals":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":254,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":384,"org.easymock.tests.UsageVarargTest.differentLength":38,"org.easymock.tests2.CallbackTest.callback":29,"org.easymock.tests2.UsageConstraintsTest.equals":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":93,"org.easymock.tests.UsageTest.openCallCountByLastCall":290,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":332,"org.easymock.tests.UsageCallCountTest.tooFewCalls":59,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":306,"org.easymock.tests.UsageThrowableTest.throwCheckedException":263,"org.easymock.tests.MockingTest.testStrictClassMocking":484,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":7,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":313,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":388,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":6,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":328,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":188,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":3,"org.easymock.tests.ObjectMethodsTest.testHashCode":523,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":86,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":469,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":210,"org.easymock.tests2.NameTest.nameForNiceMock":225,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":464,"org.easymock.tests2.DependencyTest.testInterfaceMocking":212,"org.easymock.samples.ExampleTest.addDocument":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":414,"org.easymock.tests2.DelegateToTest.testStubDelegate":156,"org.easymock.tests2.AnswerTest.stubAnswer":2,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":52,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":438,"org.easymock.tests.UsageVarargTest.varargLongAccepted":274,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":107,"org.easymock.tests.UsageExpectAndReturnTest.floatType":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":257,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":161,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":433,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":178,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":67,"org.easymock.tests.UsageThrowableTest.noUpperLimit":260,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":163,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":374,"org.easymock.tests2.SerializationTest.test":153,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":143,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":446,"org.easymock.tests2.UsageConstraintsTest.testSame":167,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":240,"org.easymock.samples.SupportTest.addDocument":133,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":380,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":454,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":401,"org.easymock.tests.GenericTest.testPackageScope":316,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":102,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":432,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":488,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":452,"org.easymock.tests2.NameTest.nameForMock":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":251,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":96,"org.easymock.tests2.UsageStrictMockTest.differentMethods":24,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":418,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":243,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":349,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":522,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":302,"org.easymock.tests2.MockedExceptionTest.testRealException":234,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":112,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":379,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":358,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":111,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":21,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":329,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":331,"org.easymock.tests2.NameTest.nameForStrictMock":224,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":437,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":84,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":377,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":448,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":179,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":31,"org.easymock.tests2.UsageStrictMockTest.range":23,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":458,"org.easymock.tests2.UsageConstraintsTest.lessThan":184,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":106,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":405,"org.easymock.tests2.CaptureTest.testCaptureRightOne":148,"org.easymock.tests2.UsageConstraintsTest.testOr":168,"org.easymock.tests.UsageRangeTest.combination":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.UsageTest.wrongArguments":45,"org.easymock.tests2.MockBuilderTest.testWithConstructor":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":402,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":284,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":252,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":450,"org.easymock.tests.UsageVarargTest.varargShortAccepted":273,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":60,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":472,"org.easymock.tests2.UsageConstraintsTest.cmpTo":172,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":365,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":462,"org.easymock.tests2.CompareToTest.testLessThan":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":101,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":198,"org.easymock.tests2.CaptureTest.testCaptureFromStub":149,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":324,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":436,"org.easymock.tests.UsageTest.unexpectedCallWithArray":44,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":468,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":322,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":95,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":253,"org.easymock.tests2.CaptureTest.testCapture":359,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":53,"org.easymock.samples.ExampleTest.addAndChangeDocument":132,"org.easymock.tests.UsageStrictMockTest.testVerify":315,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":137,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":293,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":309,"org.easymock.tests.LimitationsTest.abstractClass":474,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":245,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":78,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":269}}]
