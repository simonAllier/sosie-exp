[{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[10],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,0,85,86,87,88,89,90,91,11,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,10,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,12,132,133,134,135,136,137,13,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,14,15,16,17,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,18,211,19,20,21,22,23,24,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,25,26,27,28,29,30,232,233,234,235,236,237,238,239,240,241,242,243,244,31,245,246,247,248,32,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,35,280,281,282,283,284,285,286,287,288,289,290,291,292,293,36,294,295,296,297,298,299,300,301,302,303,37,304,305,306,307,38,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,41,42,326,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,327,328,329,330,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[0,92,1,3,4,5,332,8,9,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","sourceCode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[102,107,118,334],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[335,336,63,64,65,66,67,68,69,70,337,338,339,340,341,342,342,343,343,71,72,73,74,75,76,77,78,79,80,81,82,83,84,0,85,86,344,87,88,89,345,90,91,11,92,1,346,93,94,95,96,347,97,98,99,100,101,102,348,103,104,105,106,107,108,10,109,110,111,112,113,114,115,116,117,118,349,122,350,123,351,124,125,352,353,126,127,128,354,355,129,130,131,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,12,132,133,134,135,136,137,13,138,139,140,141,142,143,144,145,146,147,148,149,150,393,151,394,152,153,154,155,156,157,395,158,159,160,161,162,163,164,165,166,167,168,169,396,397,170,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,171,172,173,174,175,176,177,178,179,413,414,415,416,417,418,419,420,421,422,423,424,14,15,16,17,180,425,181,182,426,183,184,185,427,9,428,333,186,187,429,188,189,430,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,18,211,19,20,21,22,23,24,212,213,214,215,216,217,218,431,219,432,433,434,435,436,437,438,439,440,220,441,221,222,223,442,224,225,226,227,228,229,230,231,25,26,27,28,29,30,232,233,234,235,236,237,238,239,240,241,242,243,244,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,31,245,246,247,248,32,249,250,251,252,253,254,255,256,257,258,467,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,468,33,34,469,470,471,279,35,280,281,282,283,284,285,286,287,288,472,289,290,473,474,291,292,293,36,475,476,477,478,479,294,295,296,297,298,299,300,301,302,303,37,304,305,306,307,38,480,308,309,481,482,483,484,39,40,485,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,41,42,326,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,327,328,486,487,329,330,331,488,489,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[150,395,14,180,185],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[354,130,131,449],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[342,343,394,425,513,514,429],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[359,416],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[515,516],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[98,348,111,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[336,63,64,65,66,67,68,70,337,338,339,340,341,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,11,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,10,109,110,111,112,113,114,115,116,117,118,351,352,353,128,129,130,131,361,371,12,132,133,134,135,136,137,13,139,140,141,142,144,145,146,147,148,149,151,156,158,159,160,161,162,163,164,165,166,167,168,169,170,398,399,400,401,402,403,404,405,407,408,409,410,411,175,418,14,15,16,17,189,430,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,18,211,19,20,21,22,23,24,212,219,220,221,222,223,224,225,226,227,228,229,230,231,25,26,27,28,29,30,238,239,240,241,242,243,244,31,245,247,248,32,249,250,251,266,268,269,274,275,276,277,278,279,35,280,281,282,283,284,285,286,287,288,289,290,474,291,292,293,36,476,477,296,297,298,299,301,302,303,37,304,305,307,38,324,325,41,42,326,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,327,328,487,331],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[0,85,86,517],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[474],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[0,85,86],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[335,63,65,66,68,338,71,72,74,75,78,79,80,81,83,84,0,85,88,11,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,10,109,110,111,112,113,115,116,117,118,351,124,125,352,353,126,127,130,361,371,374,384,390,12,132,133,135,137,13,138,141,142,144,145,146,147,148,149,151,154,155,156,158,159,160,161,162,165,167,168,170,398,399,400,401,402,403,404,405,406,407,408,409,410,418,16,181,184,427,428,187,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,18,19,20,21,22,23,24,220,452,454,463,464,466,31,245,248,32,251,259,260,262,266,267,268,269,274,275,276,277,278,470,279,283,285,286,289,473,292,293,36,303,304,308,482,483,324,325,326,327,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[96,97],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:2124","failures":[64,128,129,130,189,430,190],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[219,432,436],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[159,160],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[133,165,168,169,171,172,173,174,245,283,286,287,294,296,297,303,37,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[93,95,102,104,107,109,112,113,115,118,518,519,520,334,521,151],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[335,336,63,64,65,66,67,68,69,70,337,338,339,340,341,342,343,71,72,73,74,75,76,77,78,79,80,81,82,83,84,0,85,86,87,88,89,90,91,11,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,10,109,110,111,112,113,114,115,116,117,118,351,124,125,352,353,126,127,128,129,130,131,361,371,374,384,390,12,132,133,134,135,136,137,13,138,139,140,141,142,144,145,146,147,148,149,150,151,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,398,399,400,401,402,403,404,405,406,407,408,409,410,411,171,172,173,174,175,176,177,178,179,418,14,15,16,17,180,181,184,185,427,428,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,18,211,19,20,21,22,23,24,212,219,220,221,222,223,224,225,226,227,228,229,230,231,25,26,27,28,29,30,232,233,234,235,236,237,238,239,240,241,242,243,244,31,245,246,247,248,32,249,250,251,252,253,254,255,256,259,260,262,266,267,268,269,270,271,272,273,274,275,276,277,278,279,35,280,281,282,283,284,285,286,287,288,289,290,291,292,293,36,294,295,296,297,298,299,300,301,302,303,37,304,305,307,38,308,309,312,313,314,315,316,317,318,319,320,321,322,323,324,325,41,42,326,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,327,328,329,330,331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[167,168,195,199,200,202,205,451,285,286,475,478,479,47,51,52,54,57],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[95,361,12,134,135,136,138,139,140,142,150,153,163,166,167,168,401,403,404,406,407,176,177,178,179,418,180,185,427,428,187,188,212,31,246,247,249,250,251,252,253,254,255,256,270,271,272,273,280,282,284,285,286,37,304],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[134,139,140,167,212,522,246,247,249,250,282,285,37,304],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[342,342,343,343,0,92,1,394,333],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[523],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":96,"org.easymock.tests2.UsageTest.argumentsOrdered":140,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":31,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":453,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":136,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":336,"org.easymock.tests2.DelegateToTest.testReturnException":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":26,"org.easymock.tests.MockingTest.testPartialClassMocking":259,"org.easymock.tests.MockClassControlTest.testToString":234,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":412,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":378,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":43,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":374,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":398,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":512,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":3,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":102,"org.easymock.tests2.UsageTest.wrongArguments":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":324,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":367,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":272,"org.easymock.samples.ExampleTest.answerVsDelegate":64,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":216,"org.easymock.tests2.UsageConstraintsTest.testNull":98,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":264,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":147,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":408,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":239,"org.easymock.tests2.CaptureTest.testPrimitive":74,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":326,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":62,"org.easymock.tests.UsageTest.moreThanOneArgument":245,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":242,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":475,"org.easymock.tests.UsageTest.argumentsOrdered":250,"org.easymock.tests.UsageVarargTest.varargIntAccepted":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":458,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":274,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":7,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":120,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":445,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":278,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":496,"org.easymock.tests.ReplayStateInvalidUsageTest.times":320,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":361,"org.easymock.tests2.DependencyTest.testClassMocking":396,"org.easymock.tests2.AnswerTest.answer":128,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":460,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":179,"org.easymock.tests2.CaptureTest.testAnd":71,"org.easymock.tests2.UsageTest.strictResetToDefault":132,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":241,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":403,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":268,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":479,"org.easymock.tests2.DelegateToTest.testDelegate":90,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":495,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":58,"org.easymock.tests.LimitationsTest.mockFinalMethod":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":256,"org.easymock.tests2.DependencyTest.testClassMockingSupport":397,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":485,"org.easymock.tests2.CaptureTest.testCapture1_2446744":75,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":393,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":177,"org.easymock.tests.UsageThrowableTest.throwError":18,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":314,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":215,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":392,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":499,"org.easymock.samples.PartialClassMockTest.testGetArea":335,"org.easymock.tests.MockingTest.testInterfaceMocking":261,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":315,"org.easymock.tests2.CompareToTest.testLessOrEqual":521,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":275,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":482,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":489,"org.easymock.tests2.UsageTest.niceToStrict":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":379,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":184,"org.easymock.tests2.MockBuilderTest.testCreateMock":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":387,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":364,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":52,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":404,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":40,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":294,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":270,"org.easymock.tests.UsageOverloadedMethodTest.overloading":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":107,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":202,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":292,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":106,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":80,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":442,"org.easymock.tests.MockClassControlTest.testEquals":238,"org.easymock.tests2.EasyMockSupportClassTest.testAll":371,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":60,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":514,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":178,"org.easymock.tests2.CaptureTest.testCaptureAll":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":254,"org.easymock.tests.MockNameTest.defaultName":490,"org.easymock.tests2.UsageConstraintsTest.testMatches":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":243,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":312,"org.easymock.samples.ExampleTest.voteForRemovals":68,"org.easymock.tests.UsageVarargTest.allKinds":231,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":255,"org.easymock.samples.BasicClassMockTest.testPrintContent":340,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":23,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":30,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":345,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":437,"org.easymock.tests2.UsageConstraintsTest.greaterThan":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":372,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":267,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":156,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":500,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":438,"org.easymock.samples.ExampleTest.voteForRemoval":65,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":159,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":157,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":217,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":150,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":492,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":12,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":291,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":401,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":369,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":25,"org.easymock.tests2.CaptureTest.testCaptureFirst":84,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":402,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":198,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":161,"org.easymock.tests2.UsageTest.moreThanOneArgument":133,"org.easymock.tests2.CaptureTest.testCapture2_2446744":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":461,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":187,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":230,"org.easymock.tests.GenericTest.testBridgedEquals":474,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":301,"org.easymock.tests.UsageExpectAndReturnTest.longType":194,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":61,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":486,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":114,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":59,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":240,"org.easymock.tests.UsageCallCountTest.tooManyCalls":302,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":366,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":22,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":124,"org.easymock.tests.MockingTest.testNiceClassMocking":265,"org.easymock.tests.MockingTest.testClassMocking":258,"org.easymock.tests2.UsageConstraintsTest.testContains":105,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":295,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":16,"org.easymock.tests2.UsageConstraintsTest.testFind":97,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":36,"org.easymock.tests.MockTypeTest.fromEasyMockClass":214,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":190,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":280,"org.easymock.tests.UsageExpectAndReturnTest.object":201,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":151,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":407,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":4,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":225,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":331,"org.easymock.tests.UsageTest.exactCallCountByLastCall":251,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":476,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":469,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":207,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":221,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":414,"org.easymock.tests.MockClassControlTest.testHashCode":237,"org.easymock.tests2.EasyMockSupportTest.testVerify":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":381,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":477,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":39,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":305,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":176,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":143,"org.easymock.tests.UsageVarargTest.varargCharAccepted":224,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":431,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":466,"org.easymock.tests2.UsageTest.openCallCountByLastCall":137,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":410,"org.easymock.tests.DefaultClassInstantiatorTest.object":219,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":484,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":329,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":522,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":382,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":20,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":413,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":498,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":154,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":236,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":49,"org.easymock.tests.ReplayStateInvalidCallsTest.times":504,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":468,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":390,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":235,"org.easymock.tests2.UsageTest.resumeIfFailure":141,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":213,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":28,"org.easymock.tests2.StubTest.stubWithReturnValue":11,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":115,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":200,"org.easymock.tests2.SerializationTest.testAllMockedMethod":86,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":459,"org.easymock.samples.SupportTest.voteForRemovals":338,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":55,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":517,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":465,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":354,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":471,"org.easymock.tests.UsageExpectAndThrowTest.object":53,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":112,"org.easymock.tests2.DelegateToTest.testWrongClass":89,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":502,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":327,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":328,"org.easymock.tests.UsageStrictMockTest.range":285,"org.easymock.samples.ConstructorCalledMockTest.testTax":342,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":350,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":406,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":351,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":54,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":427,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":249,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":368,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":271,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":494,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":483,"org.easymock.tests2.CaptureTest.testCaptureNone":79,"org.easymock.tests.UsageUnorderedTest.message":212,"org.easymock.tests.UsageVerifyTest.twoReturns":304,"org.easymock.tests.UsageVarargTest.varargByteAccepted":229,"org.easymock.tests2.ThreadingTest.testThreadSafe":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":385,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":299,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":488,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":339,"org.easymock.tests2.CaptureTest.testCapture_2617107":73,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":42,"org.easymock.tests2.UsageConstraintsTest.any":103,"org.easymock.tests2.StubTest.stub":91,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":319,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndThrowTest.longType":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":27,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":435,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":318,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":418,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":220,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":473,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":210,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":358,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":510,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":169,"org.easymock.tests2.NameTest.nameForMocksControl":174,"org.easymock.tests2.MockedExceptionTest.testMockedException":15,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":373,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":32,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":430,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":47,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":262,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":144,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":428,"org.easymock.tests.MockingTest.testNicePartialClassMocking":260,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":149,"org.easymock.tests2.CompareToTest.testCompareEqual":520,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":2,"org.easymock.tests2.CaptureTest.testCaptureLast":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":356,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":310,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":509,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":127,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":101,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":113,"org.easymock.tests.MockingTest.testTwoMocks":467,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":506,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":51,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":139,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":117,"org.easymock.samples.ExampleTest.removeNonExistingDocument":69,"org.easymock.tests.UsageStrictMockTest.differentMethods":286,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":316,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":363,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":415,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":433,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":160,"org.easymock.tests2.MockBuilderTest.testCreateMockString":188,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":232,"org.easymock.tests.UsageExpectAndThrowTest.floatType":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":375,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":129,"org.easymock.tests.UsageVerifyTest.twoThrows":37,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":346,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":384,"org.easymock.samples.ExampleTest.voteAgainstRemoval":66,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":454,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":155,"org.easymock.tests.LimitationsTest.privateConstructor":440,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":515,"org.easymock.tests2.UsageConstraintsTest.testNotNull":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":24,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":14,"org.easymock.tests2.UsageTest.defaultResetToNice":138,"org.easymock.samples.ExampleTest.voteAgainstRemovals":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":206,"org.easymock.tests.UsageVarargTest.differentLength":226,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":357,"org.easymock.tests2.CallbackTest.callback":175,"org.easymock.tests2.UsageConstraintsTest.equals":347,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":394,"org.easymock.tests.UsageTest.openCallCountByLastCall":248,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":93,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":41,"org.easymock.tests.UsageCallCountTest.tooFewCalls":297,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":273,"org.easymock.tests.UsageThrowableTest.throwCheckedException":21,"org.easymock.tests.MockingTest.testStrictClassMocking":257,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":126,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":35,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":362,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":321,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":353,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":131,"org.easymock.tests.ObjectMethodsTest.testHashCode":330,"org.easymock.tests2.CompareToTest.testGreateOrEqual":334,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":6,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":508,"org.easymock.tests2.NameTest.nameForNiceMock":173,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":162,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":503,"org.easymock.tests2.DependencyTest.testInterfaceMocking":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":5,"org.easymock.samples.ExampleTest.addDocument":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.DelegateToTest.testStubDelegate":88,"org.easymock.tests2.AnswerTest.stubAnswer":130,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":283,"org.easymock.tests.UsageVarargTest.varargLongAccepted":228,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.floatType":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":209,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":92,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":343,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":422,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":110,"org.easymock.tests.UsageThrowableTest.noUpperLimit":211,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":94,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":349,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":76,"org.easymock.tests2.SerializationTest.test":85,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":432,"org.easymock.tests2.UsageConstraintsTest.testSame":99,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":192,"org.easymock.samples.SupportTest.addDocument":337,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":493,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":376,"org.easymock.tests.GenericTest.testPackageScope":289,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":421,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":263,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":491,"org.easymock.tests2.NameTest.nameForMock":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":203,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":429,"org.easymock.tests2.UsageStrictMockTest.differentMethods":168,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":152,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":195,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":57,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":487,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":269,"org.easymock.tests2.MockedExceptionTest.testRealException":17,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":456,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":165,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":323,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":325,"org.easymock.tests2.NameTest.nameForStrictMock":172,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":189,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":148,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":122,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":434,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":111,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":181,"org.easymock.tests2.UsageStrictMockTest.range":167,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":497,"org.easymock.tests2.UsageConstraintsTest.lessThan":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":400,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":332,"org.easymock.tests2.CaptureTest.testCaptureRightOne":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":380,"org.easymock.tests2.UsageConstraintsTest.testOr":100,"org.easymock.tests.UsageRangeTest.combination":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":145,"org.easymock.tests.UsageTest.wrongArguments":247,"org.easymock.tests2.MockBuilderTest.testWithConstructor":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":377,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":204,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":436,"org.easymock.tests.UsageVarargTest.varargShortAccepted":227,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":300,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":511,"org.easymock.tests2.UsageConstraintsTest.cmpTo":104,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":355,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":501,"org.easymock.tests2.CompareToTest.testLessThan":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":446,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":13,"org.easymock.tests2.CaptureTest.testCaptureFromStub":82,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":313,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":182,"org.easymock.tests.UsageTest.unexpectedCallWithArray":246,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":507,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":282,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":298,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":513,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":205,"org.easymock.tests2.UsageConstraintsTest.constraints":95,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.samples.ExampleTest.addAndChangeDocument":70,"org.easymock.tests2.ConstraintsToStringTest.notToString":523,"org.easymock.tests.UsageStrictMockTest.testVerify":288,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":341,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":281,"org.easymock.tests2.CompareToTest.testGreateThan":519,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":253,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":77,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":276,"org.easymock.tests.LimitationsTest.abstractClass":439,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":277,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":405,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":222}}]
