[{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[0],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,20,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[21,22,23,24,25,26,27,28,29,2,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[57,58,59],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"methodArgs":"methodArgs","this":"this","methodTypes":"methodTypes","i":"i"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[60,61],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[62],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[63,21,64,65,66,67,68,69,1,70,71,72,73,74,75,76,77,78,58,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,60,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,62,113,114,115,116,37,117,51,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,13,173,174,175,176,177,178,179,180,181],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[182,183,184,37,50,51],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[30,186,187,188],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[189,190,191,192],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[25,193,194,195,196,197,32,35,40,198,46],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1543","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[199,200,201,202,203,21,22,22,23,23,24,204,64,65,66,67,68,205,69,206,1,27,28,29,4,30,186,72,73,74,207,208,75,76,209,210,77,211,78,58,80,81,82,83,84,85,86,87,88,89,90,212,91,92,93,94,95,60,96,97,98,99,100,101,102,103,104,105,106,213,107,214,109,110,111,112,62,113,114,215,216,115,217,218,219,195,220,221,222,196,37,39,41,223,224,225,226,227,228,117,229,230,50,51,231,232,118,119,233,234,235,236,237,120,121,122,123,124,125,238,126,127,128,239,240,241,129,130,242,54,131,132,243,244,133,245,134,135,136,137,246,138,139,140,141,247,142,143,144,145,146,248,147,148,149,150,151,249,250,251,252,253,152,168,169,170,254,171,255,173,174,175,176,177,178,179,180,181,256],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[189,190,191,192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[199,63,200,201,257,202,258,259,260,203,261,262,263,21,264,204,64,65,265,66,266,67,68,205,267,268,69,206,269,270,1,271,272,273,274,27,275,276,277,278,28,279,280,281,282,283,29,2,3,4,5,70,284,71,186,187,72,73,74,207,208,75,76,209,210,77,211,78,285,57,286,58,287,288,79,80,81,82,83,289,84,85,86,87,88,89,290,90,212,91,92,93,94,95,60,96,97,98,99,291,100,101,102,103,292,293,104,294,105,106,295,296,297,298,299,300,213,301,302,303,107,108,214,109,304,110,111,305,306,112,62,113,114,215,216,115,307,308,309,310,116,311,312,313,314,315,217,316,317,318,319,320,321,218,219,220,221,197,31,33,34,36,37,38,39,41,44,45,47,322,323,223,224,324,325,326,327,225,226,227,228,117,229,48,328,230,329,330,50,51,231,331,52,332,333,334,335,336,232,337,338,339,340,341,342,118,119,233,234,235,343,344,345,236,346,347,348,349,350,351,352,353,354,355,356,357,358,237,120,121,122,123,359,360,124,125,361,362,238,126,127,6,363,128,364,365,366,367,368,369,370,371,129,130,53,242,372,54,373,374,375,376,377,378,379,380,381,382,383,7,384,385,59,386,387,388,389,18,390,391,392,393,394,395,19,396,131,132,243,244,133,245,134,135,136,137,246,138,139,140,141,247,142,143,144,145,397,398,399,185,400,401,402,403,404,405,20,406,146,407,248,147,148,149,150,151,249,250,251,252,253,152,8,408,153,154,409,410,155,411,156,157,158,159,412,160,161,162,163,413,164,165,166,167,55,414,415,56,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,168,433,169,170,434,435,436,437,438,439,440,254,441,171,172,255,442,443,444,445,446,447,448,449,450,9,10,11,12,13,14,173,174,175,176,177,178,179,180,181,15,16,17,451,452,256,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[30,186,187,188],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[22,23,24,25,271,272,485,273,486,274,27,275,276,487,488,277,489,490,278,491,28,279,280,281,282,283,29,492,493,193,194,30,195,196,197,32,35,40,43,198,46],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[22,23,24,25,30,32,35,40,43,198,46,494,495,496,49],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[204,65,265,67,68,267,268,206,1,58,85,90,95,101,104,294,105,106,297,298,299,300,213,107,109,304,111,305,306,112,62,115,116,121,122,123,360,124,125,361,362,238,127,128,364,248,432,168,433,169,170,171,172,255,13,470],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[189],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[497],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[199,63,200,201,257,202,258,259,260,203,261,262,263,21,22,23,264,24,25,204,64,65,265,66,266,67,68,205,267,268,69,206,270,1,271,272,485,273,486,274,27,275,276,487,488,277,489,490,278,491,28,279,280,281,282,283,29,492,493,2,3,4,5,70,284,71,30,186,187,72,73,74,207,208,75,76,209,210,77,211,78,285,57,286,58,287,288,79,80,81,82,83,289,84,85,86,87,88,89,290,90,212,91,92,93,94,95,60,96,97,98,99,291,100,101,102,103,292,293,104,294,105,106,295,296,297,298,299,300,213,301,302,303,107,108,214,109,304,110,111,305,306,112,62,113,114,215,216,115,307,308,309,310,116,311,312,313,314,315,217,316,317,318,319,320,321,218,219,195,220,498,221,222,196,197,31,33,34,36,37,38,39,41,43,44,45,47,322,323,223,224,324,325,326,327,225,226,227,228,117,229,48,328,230,49,329,330,50,51,231,331,52,332,333,334,335,336,232,337,338,339,340,341,342,118,119,233,234,235,343,344,345,236,346,347,348,349,350,351,352,353,354,355,356,357,358,237,120,121,122,123,359,360,124,125,361,362,238,126,127,6,363,128,364,365,366,367,239,240,368,241,369,370,371,129,130,53,242,372,54,373,374,375,376,377,378,379,380,381,382,383,7,384,385,59,386,387,388,389,18,390,391,392,393,394,395,19,396,131,132,243,244,133,245,134,135,136,137,246,138,139,140,141,247,142,143,144,145,397,398,399,185,400,401,402,403,404,405,20,406,146,407,248,147,148,149,150,151,249,250,251,252,253,152,8,408,153,154,409,410,155,411,156,157,158,159,412,160,161,162,163,413,164,165,166,167,55,499,500,414,415,56,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,168,433,169,170,434,435,436,437,438,439,440,254,441,171,172,255,443,444,445,446,447,448,450,9,10,11,12,13,14,173,174,175,176,177,178,179,180,181,15,16,17,451,452,256,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[199,63,200,201,257,202,258,259,260,203,261,262,263,21,22,23,264,24,25,26,204,64,65,265,66,266,67,68,205,267,268,69,206,269,270,1,271,272,485,273,486,274,27,275,276,487,488,277,489,490,278,491,28,279,280,281,282,283,29,492,493,2,3,4,5,70,284,71,30,186,187,72,73,74,207,208,75,76,209,210,77,211,78,285,57,286,58,287,288,79,80,81,82,83,289,84,85,86,87,88,89,290,90,212,91,92,93,94,95,60,96,97,98,99,291,100,101,102,103,292,293,104,294,105,106,295,296,297,298,299,300,213,301,302,303,107,108,214,109,304,110,111,305,306,112,62,113,114,215,216,115,307,308,309,310,116,311,312,313,314,315,217,316,317,318,319,320,321,218,219,195,220,498,221,222,196,197,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,322,323,223,224,324,501,502,503,325,326,327,225,226,227,228,117,229,48,328,230,49,329,330,50,51,231,331,52,332,333,334,335,336,232,337,338,339,340,341,342,118,119,233,234,235,343,344,345,236,346,347,348,349,350,351,352,353,354,355,356,357,358,237,120,121,122,123,359,360,124,125,361,362,238,126,127,6,363,128,364,365,366,367,239,240,368,241,369,370,371,129,130,53,242,372,54,373,374,375,376,377,378,379,380,381,382,383,7,384,385,59,386,387,388,389,18,390,391,392,393,394,395,19,396,131,132,243,244,133,245,134,135,136,137,246,138,139,140,141,247,142,143,144,145,397,398,399,185,400,401,402,403,404,405,20,406,146,407,248,147,148,149,150,151,249,250,251,252,253,152,8,408,153,154,409,410,155,411,156,157,158,159,412,160,161,162,163,413,164,165,166,167,55,499,500,414,415,56,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,168,433,169,170,434,435,436,437,438,439,440,254,441,171,172,255,442,443,444,445,446,447,448,449,450,9,10,11,12,13,14,173,174,175,176,177,178,179,180,181,15,16,17,451,452,256,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,504],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[233],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[104,105,106,228,229,432,168,169,170,435],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[265,267,268,105,359,360,361,362,364,505,506,432,169,172,255],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[97],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matched"}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[83,87],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":83,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":122,"org.easymock.tests2.UsageTest.argumentsOrdered":268,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":211,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":59,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":266,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":261,"org.easymock.tests2.DelegateToTest.testReturnException":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":10,"org.easymock.tests.MockingTest.testPartialClassMocking":239,"org.easymock.tests.MockClassControlTest.testToString":479,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":296,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":393,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":488,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":153,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":27,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":224,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":126,"org.easymock.tests2.UsageTest.wrongArguments":265,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":349,"org.easymock.samples.ExampleTest.answerVsDelegate":63,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":56,"org.easymock.tests2.UsageConstraintsTest.testNull":85,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":370,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":228,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":484,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":77,"org.easymock.tests2.CaptureTest.testPrimitive":110,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":128,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":167,"org.easymock.tests.UsageTest.moreThanOneArgument":123,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":251,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":454,"org.easymock.tests.UsageTest.argumentsOrdered":362,"org.easymock.tests.UsageVarargTest.varargIntAccepted":461,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":173,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":31,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":502,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":320,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":177,"org.easymock.tests.ReplayStateInvalidUsageTest.times":404,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":232,"org.easymock.tests2.DependencyTest.testClassMocking":322,"org.easymock.tests2.AnswerTest.answer":213,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":391,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":310,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":500,"org.easymock.tests2.CaptureTest.testAnd":214,"org.easymock.tests2.UsageTest.strictResetToDefault":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":208,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":458,"org.easymock.tests2.DelegateToTest.testDelegate":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":413,"org.easymock.tests.LimitationsTest.mockFinalMethod":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":358,"org.easymock.tests2.DependencyTest.testClassMockingSupport":323,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":374,"org.easymock.tests2.CaptureTest.testCapture1_2446744":111,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":328,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":162,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":308,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":399,"org.easymock.tests.UsageThrowableTest.throwError":146,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":415,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":504,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":253,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":494,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":493,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":185,"org.easymock.tests.MockingTest.testInterfaceMocking":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":174,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":452,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":476,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":154,"org.easymock.tests2.UsageTest.niceToStrict":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":377,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":37,"org.easymock.tests2.MockBuilderTest.testCreateMock":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":281,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":159,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":75,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":499,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":420,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":421,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":347,"org.easymock.tests.UsageOverloadedMethodTest.overloading":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":283,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":439,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":138,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":237,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":92,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":113,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":462,"org.easymock.tests.MockClassControlTest.testEquals":483,"org.easymock.tests2.EasyMockSupportClassTest.testAll":273,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":372,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":165,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":182,"org.easymock.tests2.CaptureTest.testCaptureAll":109,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":309,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":356,"org.easymock.tests.MockNameTest.defaultName":408,"org.easymock.tests2.UsageConstraintsTest.testMatches":94,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":397,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":252,"org.easymock.samples.ExampleTest.voteForRemovals":202,"org.easymock.tests.UsageVarargTest.allKinds":470,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":171,"org.easymock.samples.BasicClassMockTest.testPrintContent":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":357,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":150,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":14,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":288,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":317,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":449,"org.easymock.tests2.UsageConstraintsTest.greaterThan":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":486,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":179,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":231,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":450,"org.easymock.samples.ExampleTest.voteForRemoval":200,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":119,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":331,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":416,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":503,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":48,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":204,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":343,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":74,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":9,"org.easymock.tests2.CaptureTest.testCaptureFirst":115,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":383,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":207,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":206,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":135,"org.easymock.tests2.UsageTest.moreThanOneArgument":65,"org.easymock.tests2.CaptureTest.testCapture2_2446744":216,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":392,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":45,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":469,"org.easymock.tests.GenericTest.testBridgedEquals":373,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":428,"org.easymock.tests.UsageExpectAndReturnTest.longType":244,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":354,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":166,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":453,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":164,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":249,"org.easymock.tests.UsageCallCountTest.tooManyCalls":429,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":282,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":136,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":411,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":149,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":219,"org.easymock.tests.MockingTest.testNiceClassMocking":371,"org.easymock.tests.MockingTest.testClassMocking":366,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":422,"org.easymock.tests2.UsageConstraintsTest.testContains":91,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":4,"org.easymock.tests2.UsageConstraintsTest.testFind":84,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":121,"org.easymock.tests.MockTypeTest.fromEasyMockClass":414,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":430,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":71,"org.easymock.tests.UsageExpectAndReturnTest.object":246,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":340,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":210,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":464,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":474,"org.easymock.tests.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":455,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":25,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":459,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":142,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":438,"org.easymock.tests.MockClassControlTest.testHashCode":482,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":312,"org.easymock.tests2.EasyMockSupportTest.testVerify":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":490,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":456,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":436,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":419,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":307,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":269,"org.easymock.tests.UsageVarargTest.varargCharAccepted":463,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":442,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":396,"org.easymock.tests2.UsageTest.openCallCountByLastCall":67,"org.easymock.tests.DefaultClassInstantiatorTest.object":443,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":78,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":418,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":472,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":506,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":278,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":311,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":481,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":143,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":15,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":29,"org.easymock.tests2.UsageTest.resumeIfFailure":69,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":501,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":12,"org.easymock.tests2.StubTest.stubWithReturnValue":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":40,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":137,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":100,"org.easymock.tests2.SerializationTest.testAllMockedMethod":187,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":390,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":496,"org.easymock.samples.SupportTest.voteForRemovals":203,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":53,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":161,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":188,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":19,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":301,"org.easymock.tests.UsageExpectAndThrowTest.object":412,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":353,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":98,"org.easymock.tests2.DelegateToTest.testWrongClass":287,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":129,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":130,"org.easymock.tests.UsageStrictMockTest.range":169,"org.easymock.samples.ConstructorCalledMockTest.testTax":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":326,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":218,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":160,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":39,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":271,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":348,"org.easymock.tests2.CaptureTest.testCaptureNone":62,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":256,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":190,"org.easymock.tests.UsageUnorderedTest.message":364,"org.easymock.tests.UsageVerifyTest.twoReturns":255,"org.easymock.tests.UsageVarargTest.varargByteAccepted":468,"org.easymock.tests2.ThreadingTest.testThreadSafe":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":279,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":426,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":475,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":262,"org.easymock.tests2.CaptureTest.testCapture_2617107":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":394,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":363,"org.easymock.tests2.UsageConstraintsTest.any":90,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":403,"org.easymock.tests2.StubTest.stub":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":17,"org.easymock.tests.UsageExpectAndThrowTest.longType":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":11,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":447,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":402,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":294,"org.easymock.tests2.SerializationTest.testClass":30,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":217,"org.easymock.tests.LimitationsTest.mockNativeMethod":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":145,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":54,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":183,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":334,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":295,"org.easymock.tests2.NameTest.nameForMocksControl":300,"org.easymock.tests2.MockedExceptionTest.testMockedException":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":274,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":155,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":241,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":284,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":41,"org.easymock.tests.MockingTest.testNicePartialClassMocking":240,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":229,"org.easymock.tests2.CaptureTest.testCaptureLast":112,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":332,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":375,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":88,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":196,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":99,"org.easymock.tests.MockingTest.testTwoMocks":367,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":158,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":267,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":102,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":192,"org.easymock.samples.ExampleTest.removeNonExistingDocument":258,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":400,"org.easymock.tests.UsageStrictMockTest.differentMethods":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":338,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":313,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":445,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":233,"org.easymock.tests2.MockBuilderTest.testCreateMockString":47,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":477,"org.easymock.tests.UsageExpectAndThrowTest.floatType":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":275,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":485,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":303,"org.easymock.tests.UsageVerifyTest.twoThrows":172,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":26,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":28,"org.easymock.samples.ExampleTest.voteAgainstRemoval":201,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":51,"org.easymock.tests.LimitationsTest.privateConstructor":345,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":194,"org.easymock.tests2.UsageConstraintsTest.testNotNull":101,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":151,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":2,"org.easymock.tests2.UsageTest.defaultResetToNice":205,"org.easymock.samples.ExampleTest.voteAgainstRemovals":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":247,"org.easymock.tests.UsageVarargTest.differentLength":465,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":333,"org.easymock.tests2.CallbackTest.callback":116,"org.easymock.tests2.UsageConstraintsTest.equals":289,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":49,"org.easymock.tests.UsageTest.openCallCountByLastCall":124,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":6,"org.easymock.tests.UsageCallCountTest.tooFewCalls":424,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":220,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":350,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":191,"org.easymock.tests.UsageThrowableTest.throwCheckedException":148,"org.easymock.tests.MockingTest.testStrictClassMocking":365,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":222,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":195,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":337,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":405,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":221,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":108,"org.easymock.tests.ObjectMethodsTest.testHashCode":473,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":235,"org.easymock.tests2.NameTest.nameForNiceMock":299,"org.easymock.tests2.DependencyTest.testInterfaceMocking":223,"org.easymock.samples.ExampleTest.addDocument":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.DelegateToTest.testStubDelegate":58,"org.easymock.tests2.AnswerTest.stubAnswer":107,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":168,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":42,"org.easymock.tests.UsageVarargTest.varargLongAccepted":467,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":144,"org.easymock.tests.UsageExpectAndReturnTest.floatType":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":24,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":23,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":440,"org.easymock.tests.UsageThrowableTest.noUpperLimit":407,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":319,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":81,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":324,"org.easymock.tests2.SerializationTest.test":186,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":305,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":132,"org.easymock.tests2.UsageConstraintsTest.testSame":86,"org.easymock.samples.SupportTest.addDocument":260,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":498,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":276,"org.easymock.tests.GenericTest.testPackageScope":242,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":318,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":369,"org.easymock.tests2.NameTest.nameForMock":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":139,"org.easymock.tests2.UsageStrictMockTest.differentMethods":106,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":329,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":133,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":163,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":471,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":181,"org.easymock.tests2.MockedExceptionTest.testRealException":5,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":389,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":327,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":505,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":388,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":104,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":406,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":127,"org.easymock.tests2.NameTest.nameForStrictMock":298,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":36,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":70,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":117,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":325,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":446,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":97,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":105,"org.easymock.tests2.UsageConstraintsTest.lessThan":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":489,"org.easymock.tests2.CaptureTest.testCaptureRightOne":114,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":189,"org.easymock.tests2.UsageConstraintsTest.testOr":87,"org.easymock.tests.UsageRangeTest.combination":178,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":226,"org.easymock.tests.UsageTest.wrongArguments":360,"org.easymock.tests2.MockBuilderTest.testWithConstructor":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":487,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":478,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":378,"org.easymock.tests.UsageVarargTest.varargShortAccepted":466,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":448,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":427,"org.easymock.tests2.UsageConstraintsTest.cmpTo":212,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":380,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":68,"org.easymock.tests2.CaptureTest.testCaptureFromStub":215,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":398,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":34,"org.easymock.tests.UsageTest.unexpectedCallWithArray":359,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":432,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":425,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":198,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":141,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":433,"org.easymock.tests2.UsageConstraintsTest.constraints":82,"org.easymock.samples.ExampleTest.addAndChangeDocument":259,"org.easymock.tests.UsageStrictMockTest.testVerify":435,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":264,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":431,"org.easymock.tests2.CompareToTest.testGreateThan":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":355,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":306,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":175,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":134,"org.easymock.tests.LimitationsTest.abstractClass":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":176,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":254,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":76}}]
