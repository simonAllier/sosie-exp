[{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[6,7,8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:287","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:210","sourceCode":"return org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[19,20,21,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,15,38,39,40,41,42,43,44,45,46],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"position":"org.easymock.internal.Range:44","failures":[70,71,72,19,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,24,112,25,26,113,2,3,4,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,6,150,151,152,7,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,20,178,21,179,22,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,69,202,203,204,205,206,207,208,209,210,211,212,213,214,17,215,216,217,218,219,220,221,222,27,28,29,30,223,224,225,226,227,228,229,230,8,231,232,233,234,235,236,237,238,18,239,240,9,241,242,243,244,245,246,247,248,249,250,251,31,32,252,253,254,255,256,33,34,257,258,259,260,261,262,263,264,10,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,35,36,37,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,15,38,312,39,40,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,23,396,397,41,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,42,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,43,16,44,514,515,45,46,516],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[148,251],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[156,157,158,159,194,250,255,36,302,304,305,306,307,308,309,333,334,335,336,337,338,396,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,429,438,439,443,513,515],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","args":"args","cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[89,96,24,112,124,125,126,127,128,129,130,131,132,133,134,135,136,137,146,149,153,155,172,173,195,196,197,198,200,201,69,202,203,204,205,206,207,208,209,210,211,212,213,214,17,215,216,217,218,219,220,221,291,292,293,294,295,15,38,337,338,42,428,429,431,436,437,438,439,440,455,456,457,458],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[70,71,72,19,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,24,112,25,26,113,2,3,4,114,115,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,6,150,151,152,7,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,20,178,21,179,22,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,69,202,203,204,205,206,207,208,209,210,211,212,213,214,17,215,216,217,218,219,220,221,222,27,28,29,30,223,224,225,226,227,228,229,8,231,233,234,235,236,238,239,240,9,242,243,247,248,249,250,251,31,32,252,253,254,255,256,33,34,257,258,259,260,261,262,263,264,10,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,35,36,37,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,15,38,312,39,40,313,314,315,316,317,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,340,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,23,396,397,41,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,42,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,43,16,44,514,515,45,46,516],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[70,71,72,19,73,74,75,76,78,81,82,83,84,85,86,87,88,89,90,96,105,106,107,111,24,112,25,26,113,2,3,4,114,115,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,146,150,153,155,158,165,20,178,21,22,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,200,201,69,202,203,204,206,207,208,209,210,211,212,213,214,17,215,216,217,218,219,220,221,223,226,227,234,236,238,250,251,31,32,252,253,254,255,33,34,257,258,262,10,274,280,35,36,37,291,292,293,294,295,302,303,304,305,306,307,308,309,311,15,38,312,39,40,313,337,350,351,352,353,355,356,358,359,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,394,23,396,41,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,42,421,424,425,428,436,437,438,439,440,441,442,443,444,445,446,448,449,451,452,453,454,455,456,457,466,467,469,481,509,511,512,513,43,44,514,515,45,46,516],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[517,124,126,127,128,129,130,131,133,518,134,135,137],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[291],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[212],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"org.easymock.MockType.STRICT","org.easymock.MockType.STRICT":"type"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[209],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":198,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":513,"org.easymock.tests2.UsageTest.argumentsOrdered":34,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":495,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":253,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":81,"org.easymock.tests2.DelegateToTest.testReturnException":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":334,"org.easymock.tests.MockingTest.testPartialClassMocking":466,"org.easymock.tests.MockClassControlTest.testToString":475,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":222,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":504,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":399,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":10,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":106,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":68,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":436,"org.easymock.tests2.UsageTest.wrongArguments":32,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":102,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":289,"org.easymock.samples.ExampleTest.answerVsDelegate":19,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":345,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":471,"org.easymock.tests2.UsageConstraintsTest.testNull":201,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":141,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":189,"org.easymock.tests2.CaptureTest.testPrimitive":127,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":440,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":418,"org.easymock.tests.UsageTest.moreThanOneArgument":43,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":140,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":460,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":423,"org.easymock.tests.UsageTest.argumentsOrdered":46,"org.easymock.tests.UsageVarargTest.varargIntAccepted":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":500,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":291,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":170,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":245,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":487,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":295,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":52,"org.easymock.tests.ReplayStateInvalidUsageTest.times":390,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":96,"org.easymock.tests2.DependencyTest.testClassMocking":103,"org.easymock.tests2.AnswerTest.answer":223,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":502,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":176,"org.easymock.tests2.CaptureTest.testAnd":124,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":342,"org.easymock.tests2.UsageTest.strictResetToDefault":251,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":149,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":511,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":184,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":427,"org.easymock.tests2.DelegateToTest.testDelegate":22,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":51,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":414,"org.easymock.tests.LimitationsTest.mockFinalMethod":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":435,"org.easymock.tests2.DependencyTest.testClassMockingSupport":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":299,"org.easymock.tests2.CaptureTest.testCapture1_2446744":128,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":412,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":174,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":384,"org.easymock.tests.UsageThrowableTest.throwError":302,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":344,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":171,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":339,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":282,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":55,"org.easymock.samples.PartialClassMockTest.testGetArea":82,"org.easymock.tests.MockingTest.testInterfaceMocking":468,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":292,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":400,"org.easymock.tests2.UsageTest.niceToStrict":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":269,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":332,"org.easymock.tests2.ThreadingTest.testChangeDefault":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":485,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":234,"org.easymock.tests2.MockBuilderTest.testCreateMock":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":277,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":99,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":408,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":11,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":185,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":484,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":287,"org.easymock.tests.UsageOverloadedMethodTest.overloading":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":279,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":396,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":210,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":441,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":373,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":209,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":133,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":447,"org.easymock.tests.MockClassControlTest.testEquals":479,"org.easymock.tests2.EasyMockSupportClassTest.testAll":262,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":416,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":433,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":175,"org.easymock.tests2.CaptureTest.testCaptureAll":125,"org.easymock.tests.MockNameTest.defaultName":430,"org.easymock.tests2.UsageConstraintsTest.testMatches":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":461,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":382,"org.easymock.samples.ExampleTest.voteForRemovals":76,"org.easymock.tests.UsageVarargTest.allKinds":455,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":434,"org.easymock.samples.BasicClassMockTest.testPrintContent":84,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":308,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":110,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":179,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":167,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":338,"org.easymock.tests2.UsageConstraintsTest.greaterThan":213,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":263,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":510,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":151,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":56,"org.easymock.samples.ExampleTest.voteForRemoval":73,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":326,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":152,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":87,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":346,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":144,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":48,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":481,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":250,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":492,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":182,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":333,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":177,"org.easymock.tests2.CaptureTest.testCaptureFirst":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":491,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":183,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":258,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":369,"org.easymock.tests2.CaptureTest.testCapture2_2446744":136,"org.easymock.tests2.UsageTest.moreThanOneArgument":31,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":503,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":9,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":454,"org.easymock.tests.GenericTest.testBridgedEquals":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":355,"org.easymock.tests.UsageExpectAndReturnTest.longType":365,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":431,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":180,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":417,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":217,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":283,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":458,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":316,"org.easymock.tests.UsageCallCountTest.tooManyCalls":356,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":278,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":370,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":404,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":307,"org.easymock.tests.MockingTest.testNiceClassMocking":472,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":116,"org.easymock.tests.MockingTest.testClassMocking":464,"org.easymock.tests2.UsageConstraintsTest.testContains":208,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":349,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":158,"org.easymock.tests2.UsageConstraintsTest.testFind":200,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":443,"org.easymock.tests.MockTypeTest.fromEasyMockClass":343,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":155,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":310,"org.easymock.tests.UsageExpectAndReturnTest.object":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":188,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":449,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":330,"org.easymock.tests.UsageTest.exactCallCountByLastCall":516,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":490,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":424,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":296,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":108,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":444,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":378,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":23,"org.easymock.tests.MockClassControlTest.testHashCode":478,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":161,"org.easymock.tests2.EasyMockSupportTest.testVerify":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":271,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":425,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":483,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":394,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":173,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":172,"org.easymock.tests.UsageVarargTest.varargCharAccepted":448,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":318,"org.easymock.tests2.CaptureTest.testCaptureMultiple":517,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":508,"org.easymock.tests2.UsageTest.openCallCountByLastCall":254,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":191,"org.easymock.tests.DefaultClassInstantiatorTest.object":319,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":482,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":328,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":305,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":94,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":160,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":477,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":6,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":54,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":405,"org.easymock.tests.ReplayStateInvalidCallsTest.times":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":379,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":315,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":61,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":280,"org.easymock.tests2.UsageTest.resumeIfFailure":257,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":340,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":336,"org.easymock.tests2.StubTest.stubWithReturnValue":194,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":237,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":218,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":371,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":501,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":12,"org.easymock.samples.SupportTest.voteForRemovals":71,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":357,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":411,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":507,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":224,"org.easymock.tests.UsageExpectAndThrowTest.object":409,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":298,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":215,"org.easymock.tests2.DelegateToTest.testWrongClass":21,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":456,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":58,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":457,"org.easymock.tests.UsageStrictMockTest.range":39,"org.easymock.samples.ConstructorCalledMockTest.testTax":79,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":248,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":410,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":236,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":392,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":259,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":288,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":13,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":50,"org.easymock.tests2.CaptureTest.testCaptureNone":132,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":286,"org.easymock.tests.UsageUnorderedTest.message":42,"org.easymock.tests.UsageVerifyTest.twoReturns":37,"org.easymock.tests.UsageVarargTest.varargByteAccepted":453,"org.easymock.tests2.ThreadingTest.testThreadSafe":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":275,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":353,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":83,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":331,"org.easymock.tests2.CaptureTest.testCapture_2617107":126,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":505,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":439,"org.easymock.tests2.UsageConstraintsTest.any":206,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":389,"org.easymock.tests2.StubTest.stub":193,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":506,"org.easymock.tests.UsageExpectAndThrowTest.longType":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":335,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":323,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":388,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":112,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":165,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":421,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":381,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":93,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":66,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":113,"org.easymock.tests2.NameTest.nameForMocksControl":30,"org.easymock.tests2.MockedExceptionTest.testMockedException":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":264,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":515,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":469,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":403,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":154,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":138,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":238,"org.easymock.tests.MockingTest.testNicePartialClassMocking":467,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":143,"org.easymock.tests2.CaptureTest.testCaptureLast":131,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":91,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":300,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":122,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":65,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":203,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":216,"org.easymock.tests.MockingTest.testTwoMocks":465,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":62,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":123,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":362,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":407,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":220,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":1,"org.easymock.samples.ExampleTest.removeNonExistingDocument":77,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":386,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":98,"org.easymock.tests.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":162,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":321,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":88,"org.easymock.tests2.MockBuilderTest.testCreateMockString":242,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":473,"org.easymock.tests.UsageExpectAndThrowTest.floatType":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":265,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":261,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":226,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":109,"org.easymock.tests.UsageVerifyTest.twoThrows":36,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":274,"org.easymock.samples.ExampleTest.voteAgainstRemoval":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":496,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":284,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":150,"org.easymock.tests.LimitationsTest.privateConstructor":420,"org.easymock.tests2.UsageConstraintsTest.testNotNull":219,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":156,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":309,"org.easymock.tests2.UsageTest.defaultResetToNice":256,"org.easymock.samples.ExampleTest.voteAgainstRemovals":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":377,"org.easymock.tests.UsageVarargTest.differentLength":450,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":92,"org.easymock.tests2.CallbackTest.callback":114,"org.easymock.tests2.UsageConstraintsTest.equals":199,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":147,"org.easymock.tests.UsageTest.openCallCountByLastCall":514,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":438,"org.easymock.tests.UsageCallCountTest.tooFewCalls":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":118,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":290,"org.easymock.tests.UsageThrowableTest.throwCheckedException":306,"org.easymock.tests.MockingTest.testStrictClassMocking":463,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":14,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":429,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":121,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":97,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":391,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":120,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":228,"org.easymock.tests.ObjectMethodsTest.testHashCode":329,"org.easymock.tests2.NameTest.nameForNiceMock":29,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":64,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":90,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":59,"org.easymock.tests2.DependencyTest.testInterfaceMocking":105,"org.easymock.samples.ExampleTest.addDocument":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":276,"org.easymock.tests2.DelegateToTest.testStubDelegate":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":281,"org.easymock.tests2.AnswerTest.stubAnswer":227,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":38,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":18,"org.easymock.tests.UsageVarargTest.varargLongAccepted":452,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":494,"org.easymock.tests.UsageExpectAndReturnTest.floatType":364,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":380,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":107,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":80,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":397,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":169,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":214,"org.easymock.tests.UsageThrowableTest.noUpperLimit":303,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":196,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":243,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":129,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":320,"org.easymock.tests2.UsageConstraintsTest.testSame":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":363,"org.easymock.samples.SupportTest.addDocument":70,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":119,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":49,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":266,"org.easymock.tests.GenericTest.testPackageScope":358,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":489,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":168,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":470,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":47,"org.easymock.tests2.NameTest.nameForMock":27,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":374,"org.easymock.tests2.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":241,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":148,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":366,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":413,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":327,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":512,"org.easymock.tests2.MockedExceptionTest.testRealException":159,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":499,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":498,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":437,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":393,"org.easymock.tests2.NameTest.nameForStrictMock":28,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":233,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":142,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":247,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":17,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":322,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":8,"org.easymock.tests2.UsageStrictMockTest.range":25,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":53,"org.easymock.tests2.UsageConstraintsTest.lessThan":221,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":493,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":181,"org.easymock.tests2.CaptureTest.testCaptureRightOne":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":270,"org.easymock.tests2.UsageConstraintsTest.testOr":202,"org.easymock.tests.UsageRangeTest.combination":509,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":139,"org.easymock.tests.UsageTest.wrongArguments":44,"org.easymock.tests2.MockBuilderTest.testWithConstructor":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":267,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":486,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":375,"org.easymock.tests.UsageVarargTest.varargShortAccepted":451,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":324,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":354,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":67,"org.easymock.tests2.UsageConstraintsTest.cmpTo":207,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":225,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":488,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":255,"org.easymock.tests2.CaptureTest.testCaptureFromStub":135,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":383,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":231,"org.easymock.tests.UsageTest.unexpectedCallWithArray":16,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":63,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":376,"org.easymock.tests2.CaptureTest.testCapture":518,"org.easymock.tests2.UsageConstraintsTest.constraints":197,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":312,"org.easymock.samples.ExampleTest.addAndChangeDocument":78,"org.easymock.tests.UsageStrictMockTest.testVerify":314,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":85,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":432,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":293,"org.easymock.tests.LimitationsTest.abstractClass":419,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":368,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":294,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":186}}]
