[{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:203","sourceCode":"T T","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[15,0,1,16,17,18,19,20,21,22],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[24,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[4,44,45,46,47,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[1,2,3,49],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[50],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[5,6,8,51,52,53,54,10,55,56,57,58,11,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,13,84,85,86,87,88,89,14,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:299","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[138],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:46","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:247","sourceCode":"return ((T)(net.sf.cglib.proxy.Factory))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockHandler:79","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[139],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(this.java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"failures":[140],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":38,"org.easymock.tests2.UsageTest.argumentsOrdered":81,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":30,"org.easymock.tests2.CompareToTest.testGreateOrEqual":47,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":79,"org.easymock.samples.ExampleTest.voteForRemovals":134,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":15,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":43,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":58,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.UsageVarargTest.allKinds":122,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":23,"org.easymock.samples.SupportTest.voteForRemovals":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":20,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":129,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":59,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":49,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":31,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":22,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":55,"org.easymock.tests.UsageVarargTest.varargLongAccepted":119,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":18,"org.easymock.samples.ExampleTest.voteForRemoval":132,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":104,"org.easymock.tests.UsageStrictMockTest.range":100,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":16,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":85,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":0,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":72,"org.easymock.tests2.CaptureTest.testPrimitive":84,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":24,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":68,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":108,"org.easymock.tests2.CaptureTest.testCaptureNone":88,"org.easymock.tests2.CaptureTest.testCaptureFirst":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":69,"org.easymock.tests.UsageUnorderedTest.message":123,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":76,"org.easymock.tests.UsageVarargTest.varargByteAccepted":120,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":32,"org.easymock.tests.UsageTest.argumentsOrdered":109,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":121,"org.easymock.tests.UsageVarargTest.varargIntAccepted":115,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":111,"org.easymock.tests2.CaptureTest.testCapture_2617107":13,"org.easymock.tests.ExpectedMethodCallTest.testHashCode":140,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":66,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":57,"org.easymock.tests2.UsageConstraintsTest.any":52,"org.easymock.tests2.UsageStrictMockTest.differentMethods":64,"org.easymock.tests.UsageCallCountTest.tooManyCalls":112,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":62,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":9,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":36,"org.easymock.tests2.CaptureTest.testAnd":12,"org.easymock.tests2.UsageTest.strictResetToDefault":77,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":65,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":37,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":105,"org.easymock.tests2.DelegateToTest.testDelegate":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":93,"org.easymock.tests2.CompareToTest.testCompareEqual":46,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":34,"org.easymock.tests2.CaptureTest.testCaptureLast":87,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":96,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":56,"org.easymock.tests2.UsageStrictMockTest.range":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":124,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":29,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":80,"org.easymock.tests.UsageThrowableTest.throwError":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":21,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":67,"org.easymock.tests.UsageStrictMockTest.differentMethods":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":39,"org.easymock.tests2.CaptureTest.testCaptureRightOne":14,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":28,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":107,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":17,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":113,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":92,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":33,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":27,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":54,"org.easymock.tests.UsageVerifyTest.twoThrows":103,"org.easymock.tests.UsageVarargTest.varargShortAccepted":118,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":25,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":139,"org.easymock.samples.PartialClassMockTest.testGetArea":137,"org.easymock.tests.UsageVarargTest.varargCharAccepted":116,"org.easymock.tests2.CompareToTest.testLessOrEqual":48,"org.easymock.tests2.CaptureTest.testCaptureMultiple":50,"org.easymock.samples.ExampleTest.voteAgainstRemoval":133,"org.easymock.tests2.CompareToTest.testLessThan":44,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":94,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":60,"org.easymock.tests2.UsageTest.niceToStrict":78,"org.easymock.tests2.UsageConstraintsTest.testNotNull":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":130,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":74,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":75,"org.easymock.samples.ExampleTest.voteAgainstRemovals":131,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":35,"org.easymock.tests2.CallbackTest.callback":91,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":40,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":126,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":106,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":26,"org.easymock.tests.UsageCallCountTest.tooFewCalls":110,"org.easymock.tests.UsageOverloadedMethodTest.overloading":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":138,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":99,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.samples.ExampleTest.addAndChangeDocument":135,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":53,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":42,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":89,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":97,"org.easymock.tests.UsageThrowableTest.throwCheckedException":127,"org.easymock.tests2.CompareToTest.testGreateThan":45,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":86,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":114,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":71,"org.easymock.tests2.CaptureTest.testCaptureAll":83}}]
