[{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[20,21],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[33,34,0,35,36,37,38,39,40,41,42,43,44,45,46,30,31,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,80,81,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,21,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[116,117],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[4,118,119,120,121,122,123,15,124,125,126,127,128,129,130],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[131],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[132],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[133,44,45,46,134,135,7,136,137,138,9,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,18,163,164,165,166,167,168,169],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[171,25,26,27,172,173,29,30],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[174,175,176,177],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[178,179,2,180,181,182,183,184,185,186,187],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[188,189],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[4,118,119,120,121,122,123,15,124,125,126,127,128,129],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[39,190],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[191,192,193,194,123,124],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[195,196,197,198],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[199],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[200,201,98,101],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[202,203,204,205,206,207,208,209,35,210,211,212,213,170,44,45,214,1,215,216,217,218,219,88,89,90,91,92,93,94,95,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,124,240,241,242,243,102,130],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:801","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[244,245,246,22,247,23,207,248,208,24,34,37,40,30,31,249,53,63,80,80,81,81,82,83,86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[133,44,45,46,134,135,7,250,136,251,252,253,137,138,9,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,254,255,162,18,256,257,163,164,165,166,167,168,128,169],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[258,259,260,178,261,179,262,2,180,195,263,264,265,266,196,267,268,269,3,181,270,271,272,273,182,274,197,205,246,206,24,275,276,277,278,279,280,281,282,209,33,35,37,210,211,212,213,283,284,190,285,286,287,288,289,290,291,183,292,293,294,295,296,184,185,297,298,299,300,186,301,170,133,44,45,46,134,30,302,303,304,4,5,305,135,306,307,118,308,309,6,7,1,119,120,310,311,312,313,188,189,314,315,316,73,74,76,77,317,318,319,320,321,322,323,250,8,136,251,252,253,137,138,324,325,326,327,328,329,330,9,331,332,333,334,335,336,337,338,339,187,84,85,10,340,341,342,139,343,344,140,141,345,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,11,346,347,348,349,350,351,352,226,99,122,234,235,236,237,238,353,123,354,355,15,16,356,101,162,357,125,17,18,126,127,358,163,164,165,166,167,168,240,241,242,243,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,19,128,129,380,381,382,383,384,112,113,114,385,386,169,387],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (this.int)) + \" and \") + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[388,389,390,391,303,5,307,118,119,120,122,123,354,16,357,125,126,127,128,129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum","maximum":"minimum"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[392,393],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:110","sourceCode":"continue","type":"CtContinueImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[252,253,128],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[170,141,224,394,395],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[181],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[228],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":178,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":162,"org.easymock.tests2.UsageTest.argumentsOrdered":120,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":309,"org.easymock.tests2.DelegateToTest.testReturnException":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":164,"org.easymock.tests.MockingTest.testPartialClassMocking":112,"org.easymock.tests.MockClassControlTest.testToString":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":142,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":53,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":25,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":195,"org.easymock.tests2.UsageTest.wrongArguments":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":242,"org.easymock.samples.ExampleTest.answerVsDelegate":318,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":96,"org.easymock.tests2.UsageConstraintsTest.testNull":179,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":280,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":95,"org.easymock.tests2.CaptureTest.testPrimitive":293,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":345,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":161,"org.easymock.tests.UsageTest.moreThanOneArgument":357,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":382,"org.easymock.tests.UsageTest.argumentsOrdered":127,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":199,"org.easymock.tests.UsageVarargTest.varargIntAccepted":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":324,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":173,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":205,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":328,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":214,"org.easymock.tests.ReplayStateInvalidUsageTest.times":230,"org.easymock.tests2.DependencyTest.testClassMocking":392,"org.easymock.tests2.AnswerTest.answer":312,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":213,"org.easymock.tests2.CaptureTest.testAnd":291,"org.easymock.tests2.UsageTest.strictResetToDefault":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":381,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":340,"org.easymock.tests2.DelegateToTest.testDelegate":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":157,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":200,"org.easymock.tests.LimitationsTest.mockFinalMethod":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":238,"org.easymock.tests2.DependencyTest.testClassMockingSupport":393,"org.easymock.tests2.CaptureTest.testCapture1_2446744":294,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":155,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":211,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":224,"org.easymock.tests.UsageThrowableTest.throwError":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":71,"org.easymock.samples.PartialClassMockTest.testGetArea":82,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":58,"org.easymock.tests2.UsageTest.niceToStrict":308,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":32,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":246,"org.easymock.tests2.MockBuilderTest.testCreateMock":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":66,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":191,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":151,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":255,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":240,"org.easymock.tests.UsageOverloadedMethodTest.overloading":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":68,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":169,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":196,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":370,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":266,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":297,"org.easymock.tests2.EasyMockSupportClassTest.testAll":50,"org.easymock.tests.MockClassControlTest.testEquals":94,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":85,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":159,"org.easymock.tests2.CaptureTest.testCaptureAll":183,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":236,"org.easymock.tests2.UsageConstraintsTest.testMatches":267,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":383,"org.easymock.samples.ExampleTest.voteForRemovals":322,"org.easymock.tests.UsageVarargTest.allKinds":187,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":19,"org.easymock.samples.BasicClassMockTest.testPrintContent":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":237,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":29,"org.easymock.tests2.UsageConstraintsTest.greaterThan":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":51,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":38,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":108,"org.easymock.samples.ExampleTest.voteForRemoval":319,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":39,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":284,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":209,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":101,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":23,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":163,"org.easymock.tests2.CaptureTest.testCaptureFirst":186,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":311,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":130,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":366,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":285,"org.easymock.tests2.CaptureTest.testCapture2_2446744":300,"org.easymock.tests2.UsageTest.moreThanOneArgument":307,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":339,"org.easymock.tests.GenericTest.testBridgedEquals":87,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":349,"org.easymock.tests.UsageExpectAndReturnTest.longType":362,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":160,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":272,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":158,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":380,"org.easymock.tests.UsageCallCountTest.tooManyCalls":350,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":67,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":147,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":253,"org.easymock.tests.MockingTest.testNiceClassMocking":115,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":73,"org.easymock.tests.MockingTest.testClassMocking":110,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":201,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":220,"org.easymock.tests2.UsageConstraintsTest.testContains":265,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":46,"org.easymock.tests2.UsageConstraintsTest.testFind":261,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":9,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":315,"org.easymock.tests.UsageExpectAndReturnTest.object":369,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":26,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":335,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":219,"org.easymock.tests.UsageTest.exactCallCountByLastCall":358,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":342,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":12,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":31,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":331,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":375,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":386,"org.easymock.tests.MockClassControlTest.testHashCode":93,"org.easymock.tests2.EasyMockSupportTest.testVerify":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":60,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":13,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":385,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":254,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":210,"org.easymock.tests.UsageVarargTest.varargCharAccepted":334,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":302,"org.easymock.tests2.UsageTest.openCallCountByLastCall":6,"org.easymock.tests.DefaultClassInstantiatorTest.object":102,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":217,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":121,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":251,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":176,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":36,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":92,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":148,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":69,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":91,"org.easymock.tests2.UsageTest.resumeIfFailure":310,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":166,"org.easymock.tests2.StubTest.stubWithReturnValue":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":22,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":273,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":368,"org.easymock.tests2.SerializationTest.testAllMockedMethod":276,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":132,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":192,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":154,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":395,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":116,"org.easymock.tests.UsageExpectAndThrowTest.object":152,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":270,"org.easymock.tests2.DelegateToTest.testWrongClass":289,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":351,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":352,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.samples.ConstructorCalledMockTest.testTax":80,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":203,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":72,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":153,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":47,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":241,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":193,"org.easymock.tests2.CaptureTest.testCaptureNone":185,"org.easymock.tests.UsageUnorderedTest.message":122,"org.easymock.tests.UsageVerifyTest.twoReturns":129,"org.easymock.tests.UsageVarargTest.varargByteAccepted":338,"org.easymock.tests2.ThreadingTest.testThreadSafe":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":64,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":348,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":78,"org.easymock.tests2.CaptureTest.testCapture_2617107":292,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":141,"org.easymock.tests2.UsageConstraintsTest.any":263,"org.easymock.tests2.StubTest.stub":170,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":229,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":165,"org.easymock.tests.UsageExpectAndThrowTest.longType":145,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":106,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":228,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":304,"org.easymock.tests2.SerializationTest.testClass":24,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":215,"org.easymock.tests.LimitationsTest.mockNativeMethod":99,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":86,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":378,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":305,"org.easymock.tests2.NameTest.nameForMocksControl":391,"org.easymock.tests2.MockedExceptionTest.testMockedException":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":52,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":18,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":146,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":114,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":277,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":20,"org.easymock.tests.MockingTest.testNicePartialClassMocking":113,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":282,"org.easymock.tests2.CaptureTest.testCaptureLast":184,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":171,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":379,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":180,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":77,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":271,"org.easymock.tests.MockingTest.testTwoMocks":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":150,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":274,"org.easymock.samples.ExampleTest.removeNonExistingDocument":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":175,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":226,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":104,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":190,"org.easymock.tests2.MockBuilderTest.testCreateMockString":208,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":88,"org.easymock.tests.UsageExpectAndThrowTest.floatType":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":54,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":49,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":313,"org.easymock.tests.UsageVerifyTest.twoThrows":128,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":63,"org.easymock.samples.ExampleTest.voteAgainstRemoval":320,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":37,"org.easymock.tests.LimitationsTest.privateConstructor":98,"org.easymock.tests2.UsageConstraintsTest.testNotNull":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":138,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":44,"org.easymock.tests2.UsageTest.defaultResetToNice":1,"org.easymock.samples.ExampleTest.voteAgainstRemovals":317,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":374,"org.easymock.tests2.CallbackTest.callback":316,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":34,"org.easymock.tests.UsageTest.openCallCountByLastCall":17,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":258,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":140,"org.easymock.tests.UsageCallCountTest.tooFewCalls":346,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":243,"org.easymock.tests.UsageThrowableTest.throwCheckedException":252,"org.easymock.tests.MockingTest.testStrictClassMocking":109,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":194,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":139,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":76,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":74,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":231,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":189,"org.easymock.tests2.CompareToTest.testGreateOrEqual":198,"org.easymock.tests.ObjectMethodsTest.testHashCode":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":172,"org.easymock.tests2.NameTest.nameForNiceMock":390,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":286,"org.easymock.tests2.DependencyTest.testInterfaceMocking":301,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":27,"org.easymock.samples.ExampleTest.addDocument":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":70,"org.easymock.tests2.DelegateToTest.testStubDelegate":288,"org.easymock.tests2.AnswerTest.stubAnswer":188,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":354,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":247,"org.easymock.tests.UsageVarargTest.varargLongAccepted":337,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":356,"org.easymock.tests.UsageExpectAndReturnTest.floatType":361,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":30,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":81,"org.easymock.tests.UsageThrowableTest.noUpperLimit":8,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":3,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":259,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":41,"org.easymock.tests2.SerializationTest.test":275,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":295,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":103,"org.easymock.tests2.UsageConstraintsTest.testSame":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":360,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":55,"org.easymock.tests.GenericTest.testPackageScope":84,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":131,"org.easymock.tests2.NameTest.nameForMock":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":371,"org.easymock.tests2.UsageStrictMockTest.differentMethods":5,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":248,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":0,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":363,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":156,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":341,"org.easymock.tests2.MockedExceptionTest.testRealException":134,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":303,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":233,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":344,"org.easymock.tests2.NameTest.nameForStrictMock":389,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":314,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":281,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":43,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":181,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":105,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests2.UsageConstraintsTest.lessThan":197,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":59,"org.easymock.tests2.CaptureTest.testCaptureRightOne":298,"org.easymock.tests2.UsageConstraintsTest.testOr":2,"org.easymock.tests.UsageRangeTest.combination":10,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":278,"org.easymock.tests.UsageTest.wrongArguments":125,"org.easymock.tests2.MockBuilderTest.testWithConstructor":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":56,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":14,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":372,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":107,"org.easymock.tests.UsageVarargTest.varargShortAccepted":336,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":221,"org.easymock.tests2.UsageConstraintsTest.cmpTo":264,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":117,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":7,"org.easymock.tests2.CaptureTest.testCaptureFromStub":299,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":223,"org.easymock.tests.UsageTest.unexpectedCallWithArray":124,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":123,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":347,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":373,"org.easymock.tests2.UsageConstraintsTest.constraints":260,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":355,"org.easymock.samples.ExampleTest.addAndChangeDocument":323,"org.easymock.tests.UsageStrictMockTest.testVerify":239,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":353,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":235,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":326,"org.easymock.tests.LimitationsTest.abstractClass":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":365,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":327,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":332}}]
