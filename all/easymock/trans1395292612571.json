[{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.RecordState:274","failures":[4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[15,16,17,18,19],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[0,20,1,21,2,22,23,24,25,26,27,28,29,30,31,32,3,33,34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[35,36,37,38,39,40,41,42,43,44],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:77","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,57,58,58,59,60,61,62,63,64,65,66,67,68,69,40,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,44,97],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:228","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[98],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[99,44,100,97],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[45,46,47,48,49,50,51,52,53,57,57,58,58,59,60,61,101,63,64,65,66,67,68,69,40,70,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,44,97],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:90","sourceCode":"final java.util.Stack<org.easymock.IArgumentMatcher> java.util.Stack<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.get()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[15,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[99,44,100,97],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[99,44,100,97],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,45,46,47,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,48,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,49,20,240,241,242,243,244,245,246,247,248,4,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,50,51,52,279,53,280,281,282,283,284,285,286,287,288,98,289,290,291,292,54,293,294,295,296,55,297,298,299,300,301,302,56,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,15,16,17,344,18,19,345,346,347,348,349,350,5,351,352,353,354,355,356,57,58,59,357,358,60,61,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,63,64,65,66,392,393,67,68,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,69,410,411,412,413,414,415,416,40,41,417,418,419,420,421,70,72,73,422,74,75,76,77,423,43,78,79,81,424,425,426,82,427,428,83,429,430,431,432,433,434,435,436,437,84,438,439,440,441,442,85,443,444,86,87,445,88,89,90,91,446,92,447,448,93,94,95,96,449,450,6,7,8,9,10,11,12,451,13,452,453,454,455,456,457,458,459,460,461,462,463,21,2,22,23,24,25,26,27,28,29,31,32,3,33,34,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,44,100,97,14],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[139],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[241,350,351,352,354,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[105,238],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[522],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[145,163,166,523,206,207,210,211,254,337,338,381,398,404,405],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[45,46,47,139,48,49,275,50,51,52,53,54,55,302,56,303,304,305,306,307,308,57,57,58,58,59,60,61,63,64,65,66,67,68,69,40,70,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,450,44,97],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[44,100,97],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[109,166,167,171,208,209,214,289,290,311,332,336,381,382,401,402,501,513],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[502],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[152],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[226,4,5,6,9,11,12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,57,58,58,59,60,61,101,62,524,63,64,65,66,67,68,69,40,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,44,97],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[113,114,115,525,526,145,161,163,165,166,167,527,523,204,206,207,210,211,212,261,332,337,338,377,380,381,382,395,398,399,400,404,405,406,407,72,78,79,81,87,94,96,464,468,469,472,495,511,14],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[514],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":496,"org.easymock.tests2.UsageTest.argumentsOrdered":405,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":204,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":473,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":223,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":400,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":357,"org.easymock.tests2.DelegateToTest.testReturnException":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":284,"org.easymock.tests.MockingTest.testPartialClassMocking":51,"org.easymock.tests.MockClassControlTest.testToString":303,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":417,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":432,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":312,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":376,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":137,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":35,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":503,"org.easymock.tests2.UsageTest.wrongArguments":398,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":140,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":488,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":341,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":55,"org.easymock.tests2.UsageConstraintsTest.testNull":499,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":281,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":88,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":472,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":308,"org.easymock.tests2.CaptureTest.testPrimitive":23,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":144,"org.easymock.tests.UsageTest.moreThanOneArgument":205,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":331,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":445,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":347,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":98,"org.easymock.tests.UsageTest.argumentsOrdered":211,"org.easymock.tests.UsageVarargTest.varargIntAccepted":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":20,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":70,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":388,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":371,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":243,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":121,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":482,"org.easymock.tests.ReplayStateInvalidUsageTest.times":154,"org.easymock.tests2.DependencyTest.testClassMocking":373,"org.easymock.tests2.AnswerTest.answer":6,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":230,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":492,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":294,"org.easymock.tests2.UsageTest.strictResetToDefault":396,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":346,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":467,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":334,"org.easymock.tests2.DelegateToTest.testDelegate":463,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":292,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":120,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":327,"org.easymock.tests.LimitationsTest.mockFinalMethod":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":287,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":248,"org.easymock.tests2.DependencyTest.testClassMockingSupport":374,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":198,"org.easymock.tests2.CaptureTest.testCapture1_2446744":24,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":490,"org.easymock.tests.UsageThrowableTest.throwError":170,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":148,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":296,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":526,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":372,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":444,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":124,"org.easymock.samples.PartialClassMockTest.testGetArea":59,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":149,"org.easymock.tests.MockingTest.testInterfaceMocking":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":240,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":433,"org.easymock.tests2.UsageTest.niceToStrict":399,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":313,"org.easymock.tests2.ThreadingTest.testChangeDefault":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":213,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":74,"org.easymock.tests2.MockBuilderTest.testCreateMock":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":440,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":485,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":321,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":468,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":293,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":106,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":107,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":339,"org.easymock.tests.UsageOverloadedMethodTest.overloading":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":437,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":509,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":251,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":189,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":309,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":508,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":29,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":258,"org.easymock.tests2.EasyMockSupportClassTest.testAll":82,"org.easymock.tests.MockClassControlTest.testEquals":307,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":46,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":329,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":101,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":491,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":246,"org.easymock.tests.MockNameTest.defaultName":301,"org.easymock.tests2.UsageConstraintsTest.testMatches":510,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":348,"org.easymock.samples.ExampleTest.voteForRemovals":354,"org.easymock.tests.UsageVarargTest.allKinds":266,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":336,"org.easymock.samples.BasicClassMockTest.testPrintContent":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":247,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":176,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":377,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":462,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":288,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":368,"org.easymock.tests2.UsageConstraintsTest.greaterThan":512,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":427,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":333,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":96,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":125,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":19,"org.easymock.samples.ExampleTest.voteForRemoval":351,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":449,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":413,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":297,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":91,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":117,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":395,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":49,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":465,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":283,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":458,"org.easymock.tests2.CaptureTest.testCaptureFirst":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":219,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":466,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":407,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":185,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":415,"org.easymock.tests2.UsageTest.moreThanOneArgument":397,"org.easymock.tests2.CaptureTest.testCapture2_2446744":3,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":231,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":265,"org.easymock.tests.GenericTest.testBridgedEquals":139,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":114,"org.easymock.tests.UsageExpectAndReturnTest.longType":181,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":244,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":330,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":517,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":328,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":345,"org.easymock.tests.UsageCallCountTest.tooManyCalls":115,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":441,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":175,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":64,"org.easymock.tests.MockingTest.testNiceClassMocking":282,"org.easymock.tests.MockingTest.testClassMocking":278,"org.easymock.tests2.UsageConstraintsTest.testContains":507,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":108,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":71,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":69,"org.easymock.tests2.UsageConstraintsTest.testFind":498,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":311,"org.easymock.tests.MockTypeTest.fromEasyMockClass":295,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":161,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":13,"org.easymock.tests.UsageExpectAndReturnTest.object":188,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":471,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":36,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":260,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":273,"org.easymock.tests.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":218,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":201,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":289,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":41,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":194,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":250,"org.easymock.tests.MockClassControlTest.testHashCode":306,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":362,"org.easymock.tests2.EasyMockSupportTest.testVerify":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":435,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":105,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":4,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":527,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":489,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":476,"org.easymock.tests.UsageVarargTest.varargCharAccepted":259,"org.easymock.tests2.CaptureTest.testCaptureMultiple":1,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":236,"org.easymock.tests2.UsageTest.openCallCountByLastCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":474,"org.easymock.tests.DefaultClassInstantiatorTest.object":343,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":104,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":271,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":523,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":436,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":319,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":480,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":361,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":123,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":94,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":305,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":318,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.ReplayStateInvalidCallsTest.times":129,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":195,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":237,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":85,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":304,"org.easymock.tests2.UsageTest.resumeIfFailure":406,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":54,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":286,"org.easymock.tests2.StubTest.stubWithReturnValue":385,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":42,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":518,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":187,"org.easymock.tests2.SerializationTest.testAllMockedMethod":97,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":229,"org.easymock.samples.SupportTest.voteForRemovals":360,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":364,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":324,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":99,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":235,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":7,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":203,"org.easymock.tests.UsageExpectAndThrowTest.object":322,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":515,"org.easymock.tests2.DelegateToTest.testWrongClass":461,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":127,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":299,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":300,"org.easymock.tests.UsageStrictMockTest.range":166,"org.easymock.samples.ConstructorCalledMockTest.testTax":57,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":390,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":470,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":323,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":424,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":156,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":210,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":340,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":119,"org.easymock.tests2.CaptureTest.testCaptureNone":28,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":269,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":453,"org.easymock.tests.UsageUnorderedTest.message":145,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":525,"org.easymock.tests.UsageVerifyTest.twoReturns":338,"org.easymock.tests.UsageVarargTest.varargByteAccepted":264,"org.easymock.tests2.ThreadingTest.testThreadSafe":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":438,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":112,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":60,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":274,"org.easymock.tests2.CaptureTest.testCapture_2617107":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":233,"org.easymock.tests2.UsageConstraintsTest.any":505,"org.easymock.tests2.StubTest.stub":384,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":285,"org.easymock.tests.UsageExpectAndThrowTest.longType":315,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":344,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":152,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":380,"org.easymock.tests2.SerializationTest.testClass":44,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":366,"org.easymock.tests.LimitationsTest.mockNativeMethod":48,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":197,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":524,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":479,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":135,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":383,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":454,"org.easymock.tests2.NameTest.nameForMocksControl":421,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":481,"org.easymock.tests2.MockedExceptionTest.testMockedException":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":428,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":209,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":451,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":316,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":77,"org.easymock.tests.MockingTest.testNicePartialClassMocking":52,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":90,"org.easymock.tests2.CompareToTest.testCompareEqual":522,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":477,"org.easymock.tests2.CaptureTest.testCaptureLast":27,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":199,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":502,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":134,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":68,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":516,"org.easymock.tests.MockingTest.testTwoMocks":50,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":131,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":320,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":404,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":520,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":457,"org.easymock.samples.ExampleTest.removeNonExistingDocument":355,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":484,"org.easymock.tests.UsageStrictMockTest.differentMethods":167,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":150,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":363,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":456,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":16,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":414,"org.easymock.tests2.MockBuilderTest.testCreateMockString":81,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":429,"org.easymock.tests.UsageExpectAndThrowTest.floatType":314,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":426,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":9,"org.easymock.tests.UsageVerifyTest.twoThrows":337,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":84,"org.easymock.samples.ExampleTest.voteAgainstRemoval":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":224,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":95,"org.easymock.tests.LimitationsTest.privateConstructor":159,"org.easymock.tests2.UsageConstraintsTest.testNotNull":519,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":408,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":177,"org.easymock.tests2.UsageTest.defaultResetToNice":403,"org.easymock.samples.ExampleTest.voteAgainstRemovals":350,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":225,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":478,"org.easymock.tests.UsageVarargTest.differentLength":261,"org.easymock.tests2.CallbackTest.callback":14,"org.easymock.tests2.UsageConstraintsTest.equals":497,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":447,"org.easymock.tests.UsageTest.openCallCountByLastCall":208,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":493,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":142,"org.easymock.tests.UsageCallCountTest.tooFewCalls":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":342,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":455,"org.easymock.tests.UsageThrowableTest.throwCheckedException":174,"org.easymock.tests.MockingTest.testStrictClassMocking":277,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":483,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":65,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":393,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":11,"org.easymock.tests.ObjectMethodsTest.testHashCode":272,"org.easymock.tests2.NameTest.nameForNiceMock":420,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":416,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":133,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":128,"org.easymock.tests2.DependencyTest.testInterfaceMocking":375,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":37,"org.easymock.samples.ExampleTest.addDocument":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":439,"org.easymock.tests2.DelegateToTest.testStubDelegate":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":443,"org.easymock.tests2.AnswerTest.stubAnswer":10,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":164,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":423,"org.easymock.tests.UsageVarargTest.varargLongAccepted":263,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":222,"org.easymock.tests.UsageExpectAndReturnTest.floatType":180,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":196,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":40,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":58,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":513,"org.easymock.tests.UsageThrowableTest.noUpperLimit":171,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":370,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":494,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":386,"org.easymock.tests2.SerializationTest.test":100,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":25,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":15,"org.easymock.tests2.UsageConstraintsTest.testSame":500,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":179,"org.easymock.samples.SupportTest.addDocument":359,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":392,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":118,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":430,"org.easymock.tests.GenericTest.testPackageScope":45,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":217,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":369,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":280,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":116,"org.easymock.tests2.NameTest.nameForMock":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":190,"org.easymock.tests2.UsageStrictMockTest.differentMethods":382,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":448,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":182,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":326,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":270,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":335,"org.easymock.tests2.MockedExceptionTest.testRealException":410,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":226,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":379,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":141,"org.easymock.tests2.NameTest.nameForStrictMock":419,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":422,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":12,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":89,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":389,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":514,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":72,"org.easymock.tests2.UsageStrictMockTest.range":381,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":122,"org.easymock.tests2.UsageConstraintsTest.lessThan":521,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":365,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":464,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":434,"org.easymock.tests2.CaptureTest.testCaptureRightOne":31,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":452,"org.easymock.tests2.UsageConstraintsTest.testOr":501,"org.easymock.tests.UsageRangeTest.combination":332,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":87,"org.easymock.tests.UsageTest.wrongArguments":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":431,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":56,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":214,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":18,"org.easymock.tests.UsageVarargTest.varargShortAccepted":262,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":113,"org.easymock.tests2.UsageConstraintsTest.cmpTo":506,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":136,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":8,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":216,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":402,"org.easymock.tests2.CaptureTest.testCaptureFromStub":32,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":147,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":73,"org.easymock.tests.UsageTest.unexpectedCallWithArray":206,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":132,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":163,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":192,"org.easymock.tests2.CaptureTest.testCapture":30,"org.easymock.tests2.UsageConstraintsTest.constraints":495,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":165,"org.easymock.samples.ExampleTest.addAndChangeDocument":356,"org.easymock.tests.UsageStrictMockTest.testVerify":169,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":358,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":245,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":26,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":184,"org.easymock.tests.LimitationsTest.abstractClass":158,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":242,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":469,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":256}}]
