[{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[0],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[372,373,374,375,376,4,5],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[377,378],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[8,246],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[379,380,0,381,382,383,384],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,1,413,414,372,415,416,417,373,375,3,418,4,5],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[419,420,421,422,180,217],"status":-1,"binaryOperator":"int < (java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[414,104,423,424],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[425,426],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[427,425,428,429,426,430],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[431,432,385,433,434,386,391,394,404,410,435,436,437,414,423,438,439,379,440,380,441,0,381,442,382,443,383,3,444,445,446,447,448,449,450,377,451,452,453,117,454,455,456,378,457,458,459,460,461,462,463,464,4,4,5,5,384,465,466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[13,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,75,112,450,136,137,138,139,140,141,142,143,144,145,146,147,148,149,162,163,164,165,166,175,217,218,232,233,234,235,286,287,288,289,290,291,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,431,432,385,433,467,70,434,386,387,468,469,71,72,73,74,75,76,77,78,79,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,414,104,423,438,372,379,440,415,470,380,441,0,416,381,471,417,442,382,375,383,105,106,107,108,3,418,472,109,110,111,112,113,444,445,114,446,447,448,449,473,450,376,474,377,451,452,453,475,476,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,477,478,479,480,481,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,482,483,454,484,150,151,152,153,154,155,156,157,158,485,486,455,456,378,159,457,160,161,487,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,488,458,489,490,491,492,493,494,224,225,226,227,228,229,230,231,232,233,495,427,425,428,429,496,426,497,430,234,235,498,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,499,459,460,461,500,260,261,262,263,264,265,266,267,268,269,270,271,272,273,462,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,463,501,502,292,293,464,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,4,5,368,384,369,370,371,465,466],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[503],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[37],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,431,432,385,433,70,434,386,468,469,71,72,73,74,75,76,77,78,79,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,414,104,423,438,372,379,440,415,470,380,441,0,416,381,417,442,382,375,383,105,106,107,108,3,418,472,109,110,111,112,113,444,445,114,446,447,448,449,473,450,376,474,377,451,452,453,475,476,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,477,481,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,482,483,454,484,150,151,152,153,154,155,156,157,158,485,486,455,456,378,159,457,160,161,487,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,488,458,489,490,491,492,493,494,224,225,226,227,228,229,230,231,232,233,495,427,425,428,429,496,426,497,430,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,499,459,460,461,500,260,261,262,263,264,265,266,267,268,269,270,271,272,273,462,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,463,292,293,464,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,4,4,5,5,368,384,369,370,371,465,466],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[504,505],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[57,64,135,158,175,178,183,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,270,289,296,298,299,300,301,302,303,320],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1519","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[296,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[6,7,8,9,10,11,269,361],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":19,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":178,"org.easymock.tests2.UsageTest.argumentsOrdered":67,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":129,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":246,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":62,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":368,"org.easymock.tests2.DelegateToTest.testReturnException":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":172,"org.easymock.tests.MockingTest.testPartialClassMocking":456,"org.easymock.tests.MockClassControlTest.testToString":489,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":99,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":394,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":187,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":72,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":26,"org.easymock.tests2.UsageTest.wrongArguments":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":286,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":169,"org.easymock.samples.ExampleTest.answerVsDelegate":361,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":464,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":161,"org.easymock.tests2.UsageConstraintsTest.testNull":22,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":446,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":494,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":128,"org.easymock.tests2.CaptureTest.testPrimitive":139,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":290,"org.easymock.tests.UsageTest.moreThanOneArgument":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":206,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":226,"org.easymock.tests.UsageTest.argumentsOrdered":185,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":355,"org.easymock.tests.UsageVarargTest.varargIntAccepted":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":162,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":438,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":479,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":55,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":166,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":86,"org.easymock.tests.ReplayStateInvalidUsageTest.times":282,"org.easymock.tests2.DependencyTest.testClassMocking":468,"org.easymock.tests2.AnswerTest.answer":93,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":253,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":108,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":502,"org.easymock.tests2.CaptureTest.testAnd":136,"org.easymock.tests2.UsageTest.strictResetToDefault":58,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":377,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":123,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":265,"org.easymock.tests2.DelegateToTest.testDelegate":11,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":202,"org.easymock.tests.LimitationsTest.mockFinalMethod":484,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":211,"org.easymock.tests2.DependencyTest.testClassMockingSupport":469,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":260,"org.easymock.tests2.CaptureTest.testCapture1_2446744":140,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":473,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":106,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":276,"org.easymock.tests.UsageThrowableTest.throwError":296,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":293,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":498,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":228,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":412,"org.easymock.samples.PartialClassMockTest.testGetArea":384,"org.easymock.tests.MockingTest.testInterfaceMocking":159,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":277,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":163,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":399,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":188,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":155,"org.easymock.tests2.UsageTest.niceToStrict":61,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":236,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":380,"org.easymock.tests2.MockBuilderTest.testCreateMock":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":407,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":89,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":419,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":196,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":124,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":501,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":324,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":167,"org.easymock.tests.UsageOverloadedMethodTest.overloading":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":403,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":32,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":270,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":336,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":31,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":145,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":310,"org.easymock.tests.MockClassControlTest.testEquals":493,"org.easymock.tests2.EasyMockSupportClassTest.testAll":391,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":460,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":204,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":435,"org.easymock.tests2.CaptureTest.testCaptureAll":137,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":209,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":374,"org.easymock.tests.MockNameTest.defaultName":177,"org.easymock.tests2.UsageConstraintsTest.testMatches":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":227,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":274,"org.easymock.samples.ExampleTest.voteForRemovals":365,"org.easymock.tests.UsageVarargTest.allKinds":318,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":319,"org.easymock.samples.BasicClassMockTest.testPrintContent":466,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":210,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":302,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":176,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":52,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":497,"org.easymock.tests2.UsageConstraintsTest.greaterThan":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":392,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":264,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":453,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":430,"org.easymock.samples.ExampleTest.voteForRemoval":362,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":475,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":110,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":294,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":480,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":449,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":462,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":57,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":121,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":171,"org.easymock.tests2.CaptureTest.testCaptureFirst":149,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":122,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":69,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":332,"org.easymock.tests2.CaptureTest.testCapture2_2446744":148,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":112,"org.easymock.tests2.UsageTest.moreThanOneArgument":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":382,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":317,"org.easymock.tests.GenericTest.testBridgedEquals":500,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":353,"org.easymock.tests.UsageExpectAndReturnTest.longType":328,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":207,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":443,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":205,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":40,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":345,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":224,"org.easymock.tests.UsageCallCountTest.tooManyCalls":354,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":333,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":301,"org.easymock.tests.MockingTest.testNiceClassMocking":487,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":432,"org.easymock.tests.MockingTest.testClassMocking":486,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":439,"org.easymock.tests2.UsageConstraintsTest.testContains":30,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":347,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":117,"org.easymock.tests2.UsageConstraintsTest.testFind":21,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":158,"org.easymock.tests.MockTypeTest.fromEasyMockClass":292,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":15,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":215,"org.easymock.tests.UsageExpectAndReturnTest.object":335,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":450,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":127,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":312,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":153,"org.easymock.tests.UsageTest.exactCallCountByLastCall":186,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":241,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":304,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":418,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":307,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":341,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":269,"org.easymock.tests.MockClassControlTest.testHashCode":492,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":46,"org.easymock.tests2.EasyMockSupportTest.testVerify":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":401,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":357,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":267,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":323,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":105,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":80,"org.easymock.tests.UsageVarargTest.varargCharAccepted":311,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":495,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":259,"org.easymock.tests2.UsageTest.openCallCountByLastCall":63,"org.easymock.tests.DefaultClassInstantiatorTest.object":427,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":130,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":322,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":402,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":194,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":84,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":45,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":491,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":451,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":193,"org.easymock.tests.CapturesMatcherTest.test":505,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":342,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":212,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":410,"org.easymock.tests2.UsageTest.resumeIfFailure":68,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":463,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":478,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":174,"org.easymock.tests2.StubTest.stubWithReturnValue":135,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":416,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":41,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":334,"org.easymock.tests2.SerializationTest.testAllMockedMethod":423,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":252,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":420,"org.easymock.samples.SupportTest.voteForRemovals":371,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":499,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":199,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":424,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":258,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":94,"org.easymock.tests.UsageExpectAndThrowTest.object":197,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":306,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":38,"org.easymock.tests2.DelegateToTest.testWrongClass":9,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":232,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":233,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests.UsageStrictMockTest.range":220,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":132,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":126,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":431,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":198,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":184,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":284,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":168,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":421,"org.easymock.tests2.CaptureTest.testCaptureNone":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":231,"org.easymock.tests.UsageUnorderedTest.message":291,"org.easymock.tests.UsageVerifyTest.twoReturns":321,"org.easymock.tests.UsageVarargTest.varargByteAccepted":316,"org.easymock.tests2.ThreadingTest.testThreadSafe":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":405,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":351,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":465,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":154,"org.easymock.tests2.CaptureTest.testCapture_2617107":138,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":289,"org.easymock.tests2.UsageConstraintsTest.any":28,"org.easymock.tests2.StubTest.stub":134,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":281,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":214,"org.easymock.tests.UsageExpectAndThrowTest.longType":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":257,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":496,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":280,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":76,"org.easymock.tests2.SerializationTest.testClass":414,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":50,"org.easymock.tests.LimitationsTest.mockNativeMethod":454,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":461,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":344,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":437,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":83,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":79,"org.easymock.tests2.NameTest.nameForMocksControl":103,"org.easymock.tests2.MockedExceptionTest.testMockedException":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":393,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":183,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":457,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":191,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":14,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":444,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":381,"org.easymock.tests.MockingTest.testNicePartialClassMocking":378,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":448,"org.easymock.tests2.CaptureTest.testCaptureLast":143,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":81,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":261,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":386,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":25,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":39,"org.easymock.tests.MockingTest.testTwoMocks":455,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":387,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":195,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":66,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":43,"org.easymock.samples.ExampleTest.removeNonExistingDocument":366,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":88,"org.easymock.tests.UsageStrictMockTest.differentMethods":221,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":47,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":428,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":111,"org.easymock.tests2.MockBuilderTest.testCreateMockString":383,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":395,"org.easymock.tests.UsageExpectAndThrowTest.floatType":189,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":390,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":96,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":472,"org.easymock.tests.UsageVerifyTest.twoThrows":320,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":404,"org.easymock.samples.ExampleTest.voteAgainstRemoval":363,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":247,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":452,"org.easymock.tests.LimitationsTest.privateConstructor":483,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":413,"org.easymock.tests2.UsageConstraintsTest.testNotNull":42,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":303,"org.easymock.tests2.UsageTest.defaultResetToNice":65,"org.easymock.samples.ExampleTest.voteAgainstRemovals":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":82,"org.easymock.tests.UsageVarargTest.differentLength":313,"org.easymock.tests2.CallbackTest.callback":12,"org.easymock.tests2.UsageConstraintsTest.equals":20,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":376,"org.easymock.tests.UsageTest.openCallCountByLastCall":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":288,"org.easymock.tests.UsageCallCountTest.tooFewCalls":349,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":433,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":170,"org.easymock.tests.UsageThrowableTest.throwCheckedException":300,"org.easymock.tests.MockingTest.testStrictClassMocking":485,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":422,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":434,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":235,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":385,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":87,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":283,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":70,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":98,"org.easymock.tests.ObjectMethodsTest.testHashCode":152,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":113,"org.easymock.tests2.NameTest.nameForNiceMock":102,"org.easymock.tests2.DependencyTest.testInterfaceMocking":71,"org.easymock.samples.ExampleTest.addDocument":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":411,"org.easymock.tests2.DelegateToTest.testStubDelegate":8,"org.easymock.tests2.AnswerTest.stubAnswer":97,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":218,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":471,"org.easymock.tests.UsageVarargTest.varargLongAccepted":315,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":245,"org.easymock.tests.UsageExpectAndReturnTest.floatType":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":343,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":3,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":54,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests.UsageThrowableTest.noUpperLimit":297,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":17,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":477,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":141,"org.easymock.tests2.SerializationTest.test":104,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":425,"org.easymock.tests2.UsageConstraintsTest.testSame":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":326,"org.easymock.samples.SupportTest.addDocument":370,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":467,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":396,"org.easymock.tests.GenericTest.testPackageScope":459,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":240,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":53,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":160,"org.easymock.tests2.NameTest.nameForMock":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":337,"org.easymock.tests2.UsageStrictMockTest.differentMethods":78,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":375,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":474,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":201,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":150,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":266,"org.easymock.tests2.MockedExceptionTest.testRealException":118,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":295,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":250,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":503,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":249,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":285,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":287,"org.easymock.tests2.NameTest.nameForStrictMock":101,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":470,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":13,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":447,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":481,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":429,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":37,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":379,"org.easymock.tests2.UsageStrictMockTest.range":77,"org.easymock.tests2.UsageConstraintsTest.lessThan":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":49,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":400,"org.easymock.tests2.CaptureTest.testCaptureRightOne":146,"org.easymock.tests2.UsageConstraintsTest.testOr":24,"org.easymock.tests.UsageRangeTest.combination":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":445,"org.easymock.tests.UsageTest.wrongArguments":181,"org.easymock.tests2.MockBuilderTest.testWithConstructor":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":397,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":458,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":338,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":426,"org.easymock.tests.UsageVarargTest.varargShortAccepted":314,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":352,"org.easymock.tests2.UsageConstraintsTest.cmpTo":29,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":239,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":64,"org.easymock.tests2.CaptureTest.testCaptureFromStub":147,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":275,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":440,"org.easymock.tests.UsageTest.unexpectedCallWithArray":180,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":217,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":350,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":373,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":339,"org.easymock.tests2.CaptureTest.testCapture":504,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":219,"org.easymock.samples.ExampleTest.addAndChangeDocument":367,"org.easymock.tests.UsageStrictMockTest.testVerify":223,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":369,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":208,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":142,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":164,"org.easymock.tests.LimitationsTest.abstractClass":482,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":165,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":125,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":308}}]
