[{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,36,37,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[125,126,127,128],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[86,129,105,130,131,132,133,134,135,136],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[54,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[137,138,139],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[140,141,142],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[143,137,144,138,145,139,146,147,148,149,150],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[151,152,112,119,153,154],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[116,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.RecordState:274","failures":[156,157,158,159,160,161,162,163,164,165,166],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[137,167],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,156,125,199,200,126,201,110,202,203,204,205,206,207,208,209,210,211,212,213,214,215,112,113,216,217,114,115,218,219,220,5,221,222,8,9,10,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,14,15,16,17,116,265,266,267,268,269,19,270,271,272,273,274,275,276,277,278,279,127,128,280,117,118,281,282,283,119,284,285,120,286,287,35,288,157,289,290,291,292,36,36,37,37,293,40,41,294,42,43,44,45,46,49,50,51,52,58,61,71,77,80,81,82,83,295,84,85,158,159,296,297,143,137,167,144,298,138,145,299,139,300,301,302,303,304,305,306,307,308,146,309,310,311,312,147,313,314,86,315,87,88,90,93,94,95,96,98,99,101,316,317,318,121,319,320,321,322,323,122,123,324,325,160,161,162,163,164,165,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,104,107,108,109,344,166,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,148,360,149,361,362,363,364,365,366,367,150,368,369,370,371,372,373,124,374,375],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[376],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[151,152,112,119,153,154],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[377,378,171,379,380,381,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,112,113,216,217,114,115,218,382,383,384,385,386,387,388,389,390,219,5,221,222,8,9,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,15,16,17,116,265,266,267,268,269,391,392,393,394,395,396,270,271,272,273,274,275,276,277,278,128,27,34,280,117,118,283,397,119,284,285,120,286,287,398,35,288,157,289,290,399,291,292,36,36,37,37,400,401,402,293,38,39,40,41,294,42,43,44,46,49,51,58,61,71,77,80,81,82,83,295,84,85,158,159,296,297,143,137,167,144,298,138,145,299,300,301,302,303,304,305,306,307,308,146,309,310,312,147,313,314,86,315,87,88,93,94,95,96,99,101,316,317,318,121,319,320,321,322,323,122,123,324,325,160,163,164,165,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,403,404,405,406,407,343,104,107,108,109,344,166,345,346,347,348,349,350,351,352,353,355,356,357,359,148,360,149,361,362,363,364,365,366,367,150,368,369,370,371,408,372,373,124,374,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:315","failures":[180,183,187,188,193,194,195,196,197,198,200,214,217,222,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,267,268,316,322,107,108,109,344,351],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:163","failures":[164,165],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[116,409,117,118,120,124],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[410],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[156,157,158,159,160,161,162,163,164,165,166],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[168,169,170,377,378,171,379,380,381,411,412,413,172,173,174,0,414,415,416,417,1,418,419,175,176,177,178,179,180,420,421,422,423,424,2,425,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,156,125,199,200,126,201,110,202,203,426,204,205,206,207,208,209,210,211,212,213,214,215,112,113,216,217,114,115,218,382,383,384,427,385,386,428,387,388,389,390,219,429,220,430,3,4,5,6,221,222,7,8,9,10,11,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,223,447,448,449,450,451,224,452,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,12,13,14,15,16,453,17,454,455,18,116,265,266,267,268,269,456,19,20,21,22,23,24,457,25,458,391,459,392,393,460,394,461,462,395,463,396,270,271,272,273,274,275,276,277,278,279,127,128,464,26,27,28,29,30,31,32,33,34,280,117,118,465,281,282,466,467,283,397,119,284,285,120,286,287,398,35,288,157,289,290,399,291,468,292,36,37,400,401,402,293,38,39,40,41,294,42,43,44,45,469,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,470,295,84,85,471,158,472,159,296,297,143,137,473,167,144,298,138,145,299,139,300,301,302,303,304,305,306,307,308,146,309,310,311,312,147,313,314,86,315,87,88,474,90,91,475,92,93,94,95,129,96,476,97,98,99,477,101,316,317,318,121,319,320,321,322,323,122,123,324,325,102,478,479,480,103,481,482,160,161,162,163,164,165,326,327,328,329,483,484,485,486,487,330,488,489,490,491,492,493,331,332,333,334,335,336,337,338,339,340,341,342,403,494,404,405,406,407,495,496,497,498,499,343,500,501,502,503,504,505,104,105,506,107,108,109,344,166,345,346,347,348,349,350,351,507,508,352,353,354,355,356,357,358,359,148,360,149,361,362,363,364,365,366,367,150,368,369,370,509,371,408,372,373,124,374,375],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[143,299,304,314],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[510],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[377,378,171,379,380,381,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,112,113,216,217,114,115,218,382,383,384,385,386,387,388,389,390,219,5,221,222,8,9,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,15,16,17,116,265,266,267,268,269,393,270,271,272,273,274,275,276,277,278,128,27,34,280,117,118,283,397,119,284,285,120,286,287,398,288,157,289,290,399,291,292,40,41,294,42,43,44,46,49,51,81,82,84,85,158,159,296,297,143,137,167,144,298,138,145,299,300,301,302,303,304,305,306,307,308,146,309,310,312,147,313,314,86,315,87,88,93,94,99,101,316,317,318,121,319,320,321,322,323,122,123,324,325,160,163,164,165,326,327,328,329,404,405,406,407,104,107,108,109,344,166,345,346,347,348,349,350,351,352,355,356,357,359,148,360,149,361,362,363,364,365,366,367,150,368,369,370,509,371,408,372,373,124,374,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:39","sourceCode":"if (!(org.easymock.IArgumentMatcher.matches(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[143,145,148,149,150],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[141,511,512],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[143,137,167,144,298,138,145,299,139,300,146,309,147,313,148,360,149,361,150,368],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[377,171,379,380,381,412,413,175,182,113,114,115,382,383,384,385,386,428,387,388,389,390,219,9,116,267,268,34,281,282,283,397,119,284,285,120,286,287,398,288,289,290,399,291,292,400,401,402,293,38,39,139,300,311,312,87,90,93,99,121,320,122,123,334,340,341,342,403,404,405,406,407,350,360,149,363,364,365,366,370,371,408,372,373,124,374,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[151,152,112,119,153,154],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[168,169,170,180,181,183,184,185,186,187,188,197,200,214,217,434,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,117,316,322,351],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":137,"org.easymock.tests2.UsageTest.argumentsOrdered":123,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":214,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":341,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":441,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":320,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":400,"org.easymock.tests2.DelegateToTest.testReturnException":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":194,"org.easymock.tests.MockingTest.testPartialClassMocking":15,"org.easymock.tests.MockClassControlTest.testToString":28,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":494,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":65,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":225,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":353,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":131,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":299,"org.easymock.tests2.UsageTest.wrongArguments":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":265,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":505,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":191,"org.easymock.samples.ExampleTest.answerVsDelegate":157,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":1,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":455,"org.easymock.tests2.UsageConstraintsTest.testNull":144,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":42,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":33,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":340,"org.easymock.tests2.CaptureTest.testPrimitive":361,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":269,"org.easymock.tests.UsageTest.moreThanOneArgument":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":244,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":294,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":276,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":465,"org.easymock.tests.UsageTest.argumentsOrdered":115,"org.easymock.tests.UsageVarargTest.varargIntAccepted":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":446,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":135,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":492,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":479,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":433,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":208,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":142,"org.easymock.tests.ReplayStateInvalidUsageTest.times":462,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":343,"org.easymock.tests2.DependencyTest.testClassMocking":507,"org.easymock.tests2.AnswerTest.answer":160,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":447,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":329,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":415,"org.easymock.tests2.CaptureTest.testAnd":148,"org.easymock.tests2.UsageTest.strictResetToDefault":317,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":475,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":275,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":335,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":467,"org.easymock.tests2.DelegateToTest.testDelegate":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":240,"org.easymock.tests.LimitationsTest.mockFinalMethod":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":197,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":213,"org.easymock.tests2.DependencyTest.testClassMockingSupport":508,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":127,"org.easymock.tests2.CaptureTest.testCapture1_2446744":362,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":469,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":238,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":327,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":459,"org.easymock.tests.UsageThrowableTest.throwError":181,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":417,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":493,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":426,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":79,"org.easymock.samples.PartialClassMockTest.testGetArea":35,"org.easymock.tests.MockingTest.testInterfaceMocking":453,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":392,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":205,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":176,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":226,"org.easymock.tests2.UsageTest.niceToStrict":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":93,"org.easymock.tests2.MockBuilderTest.testCreateMock":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":74,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":502,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":153,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":234,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":336,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":414,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":170,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":189,"org.easymock.tests.UsageOverloadedMethodTest.overloading":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":76,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":200,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":304,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":178,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":256,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":303,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":367,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":427,"org.easymock.tests.MockClassControlTest.testEquals":32,"org.easymock.tests2.EasyMockSupportClassTest.testAll":58,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":9,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":512,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":328,"org.easymock.tests2.CaptureTest.testCaptureAll":360,"org.easymock.tests.MockNameTest.defaultName":425,"org.easymock.tests2.UsageConstraintsTest.testMatches":305,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":458,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":277,"org.easymock.samples.ExampleTest.voteForRemovals":291,"org.easymock.tests.UsageVarargTest.allKinds":219,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":280,"org.easymock.samples.BasicClassMockTest.testPrintContent":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":212,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":187,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":371,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":198,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":358,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":457,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":136,"org.easymock.tests2.UsageConstraintsTest.greaterThan":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":59,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":52,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":25,"org.easymock.samples.ExampleTest.voteForRemoval":289,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":53,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":346,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":418,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":480,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":45,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":34,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":316,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":333,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":193,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":354,"org.easymock.tests2.CaptureTest.testCaptureFirst":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":334,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":325,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":110,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":252,"org.easymock.tests2.UsageTest.moreThanOneArgument":318,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":348,"org.easymock.tests2.CaptureTest.testCapture2_2446744":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":448,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":99,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":390,"org.easymock.tests.GenericTest.testBridgedEquals":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":412,"org.easymock.tests.UsageExpectAndReturnTest.longType":248,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":209,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":331,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":100,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":243,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":279,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":311,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":274,"org.easymock.tests.UsageCallCountTest.tooManyCalls":413,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":140,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":504,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":230,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":186,"org.easymock.tests.MockingTest.testNiceClassMocking":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":81,"org.easymock.tests.MockingTest.testClassMocking":13,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":89,"org.easymock.tests2.UsageConstraintsTest.testContains":302,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":378,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":109,"org.easymock.tests2.UsageConstraintsTest.testFind":167,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":180,"org.easymock.tests.MockTypeTest.fromEasyMockClass":416,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":159,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":283,"org.easymock.tests.UsageExpectAndReturnTest.object":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":503,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":339,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":386,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":132,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":423,"org.easymock.tests.UsageTest.exactCallCountByLastCall":218,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":429,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":281,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":261,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":382,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":199,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":484,"org.easymock.tests.MockClassControlTest.testHashCode":31,"org.easymock.tests2.EasyMockSupportTest.testVerify":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":68,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":141,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":282,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":169,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":326,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":509,"org.easymock.tests.UsageVarargTest.varargCharAccepted":385,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":456,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":452,"org.easymock.tests2.UsageTest.openCallCountByLastCall":321,"org.easymock.tests.DefaultClassInstantiatorTest.object":19,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":342,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":168,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":421,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":498,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":483,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":30,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":231,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":172,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":511,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":77,"org.easymock.tests2.UsageTest.resumeIfFailure":324,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":0,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":478,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":196,"org.easymock.tests2.StubTest.stubWithReturnValue":351,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":129,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":254,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":312,"org.easymock.tests2.SerializationTest.testAllMockedMethod":87,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":223,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":154,"org.easymock.samples.SupportTest.voteForRemovals":293,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":7,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":486,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":237,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":224,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":161,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":430,"org.easymock.tests.UsageExpectAndThrowTest.object":235,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":309,"org.easymock.tests2.DelegateToTest.testWrongClass":357,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":202,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":203,"org.easymock.tests.UsageStrictMockTest.range":120,"org.easymock.samples.ConstructorCalledMockTest.testTax":36,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":481,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":338,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":236,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":95,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":463,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":55,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":190,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":151,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":177,"org.easymock.tests2.CaptureTest.testCaptureNone":366,"org.easymock.tests.UsageUnorderedTest.message":116,"org.easymock.tests.UsageVerifyTest.twoReturns":118,"org.easymock.tests.UsageVarargTest.varargByteAccepted":389,"org.easymock.tests2.ThreadingTest.testThreadSafe":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":72,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":381,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":424,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":38,"org.easymock.tests2.CaptureTest.testCapture_2617107":149,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":268,"org.easymock.tests2.UsageConstraintsTest.any":300,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":461,"org.easymock.tests2.StubTest.stub":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":195,"org.easymock.tests.UsageExpectAndThrowTest.longType":228,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":23,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":394,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":373,"org.easymock.tests2.SerializationTest.testClass":86,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":330,"org.easymock.tests.LimitationsTest.mockNativeMethod":5,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":10,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":264,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":497,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":375,"org.easymock.tests2.NameTest.nameForMocksControl":407,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":499,"org.easymock.tests2.MockedExceptionTest.testMockedException":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":60,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":472,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":17,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":229,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":96,"org.easymock.tests.MockingTest.testNicePartialClassMocking":16,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":44,"org.easymock.tests2.CompareToTest.testNotComparable":510,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":495,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":130,"org.easymock.tests2.CaptureTest.testCaptureLast":365,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":128,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":145,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":85,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":310,"org.easymock.tests.MockingTest.testTwoMocks":14,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":233,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":122,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":313,"org.easymock.samples.ExampleTest.removeNonExistingDocument":468,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":501,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":393,"org.easymock.tests.UsageStrictMockTest.differentMethods":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":485,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":21,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":347,"org.easymock.tests2.MockBuilderTest.testCreateMockString":101,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":62,"org.easymock.tests.UsageExpectAndThrowTest.floatType":227,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":57,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":506,"org.easymock.tests.UsageVerifyTest.twoThrows":117,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":71,"org.easymock.samples.ExampleTest.voteAgainstRemoval":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":442,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":175,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":51,"org.easymock.tests.LimitationsTest.privateConstructor":4,"org.easymock.tests2.UsageConstraintsTest.testNotNull":147,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":188,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":107,"org.easymock.tests2.UsageTest.defaultResetToNice":323,"org.easymock.samples.ExampleTest.voteAgainstRemovals":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":260,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":496,"org.easymock.tests.UsageVarargTest.differentLength":428,"org.easymock.tests2.CallbackTest.callback":166,"org.easymock.tests2.UsageConstraintsTest.equals":473,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":47,"org.easymock.tests.UsageTest.openCallCountByLastCall":216,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":267,"org.easymock.tests.UsageCallCountTest.tooFewCalls":379,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":192,"org.easymock.tests.UsageThrowableTest.throwCheckedException":185,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":152,"org.easymock.tests.MockingTest.testStrictClassMocking":12,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":84,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":500,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":82,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":395,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":295,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":165,"org.easymock.tests.ObjectMethodsTest.testHashCode":422,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":134,"org.easymock.tests2.NameTest.nameForNiceMock":406,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":349,"org.easymock.tests2.DependencyTest.testInterfaceMocking":352,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":133,"org.easymock.samples.ExampleTest.addDocument":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":78,"org.easymock.tests2.DelegateToTest.testStubDelegate":356,"org.easymock.tests2.AnswerTest.stubAnswer":164,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":284,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":476,"org.easymock.tests.UsageVarargTest.varargLongAccepted":388,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndReturnTest.floatType":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":104,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":37,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":491,"org.easymock.tests.UsageThrowableTest.noUpperLimit":182,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":126,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":308,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":297,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":102,"org.easymock.tests2.SerializationTest.test":315,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":363,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":246,"org.easymock.tests2.UsageConstraintsTest.testSame":298,"org.easymock.samples.SupportTest.addDocument":402,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":470,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":63,"org.easymock.tests.GenericTest.testPackageScope":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":490,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":454,"org.easymock.tests2.NameTest.nameForMock":404,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":257,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":477,"org.easymock.tests2.UsageStrictMockTest.differentMethods":374,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":239,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":420,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":273,"org.easymock.tests2.MockedExceptionTest.testRealException":344,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":419,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":444,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":372,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":396,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":266,"org.easymock.tests2.NameTest.nameForStrictMock":405,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":92,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":158,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":43,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":103,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":155,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":146,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":22,"org.easymock.tests.ErrorMessageTest.testGetters":409,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":90,"org.easymock.tests2.UsageStrictMockTest.range":124,"org.easymock.tests2.UsageConstraintsTest.lessThan":314,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":332,"org.easymock.tests2.CaptureTest.testCaptureRightOne":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":67,"org.easymock.tests2.UsageConstraintsTest.testOr":138,"org.easymock.tests.UsageRangeTest.combination":270,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":41,"org.easymock.tests.UsageTest.wrongArguments":113,"org.easymock.tests2.MockBuilderTest.testWithConstructor":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":64,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":27,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":258,"org.easymock.tests.UsageVarargTest.varargShortAccepted":387,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":24,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":411,"org.easymock.tests2.UsageConstraintsTest.cmpTo":301,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":434,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":322,"org.easymock.tests2.CaptureTest.testCaptureFromStub":368,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":391,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":91,"org.easymock.tests.UsageTest.unexpectedCallWithArray":112,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":119,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":380,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":259,"org.easymock.tests2.UsageConstraintsTest.constraints":143,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.samples.ExampleTest.addAndChangeDocument":292,"org.easymock.tests.UsageStrictMockTest.testVerify":398,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":401,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":397,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":210,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":364,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":206,"org.easymock.tests.LimitationsTest.abstractClass":3,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":251,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":337,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":383}}]
