[{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"propertyFileName"}},{"transplant":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[1,2,3,4,4,5,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[6,7,8,9,10],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[110],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"expected"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[110],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[166,63,167,168,169,170,171],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[172,173,15,174,112,175,176,113,114,177,178,179,126,180,181,182],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[183],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[1,2,3,184,4,5,185,186,187,188,189,190,191,192,193,194,195,148,196,197,149,150,198,199,200,201,202,6,7,8,9,10,11,12,13,14,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,15,253,254,255,256,257,258,111,259,260,261,262,263,264,265,174,112,175,176,113,114,177,178,266,267,268,269,115,116,270,117,118,119,120,121,16,17,18,19,20,21,22,23,24,25,26,27,271,28,272,273,29,274,275,276,277,151,278,279,280,152,153,281,154,282,283,155,284,285,286,287,288,289,290,291,292,293,294,122,295,296,297,298,299,300,301,302,303,304,305,306,307,30,31,32,33,34,35,36,37,308,309,310,311,123,312,313,124,314,315,316,317,38,318,319,320,321,39,322,323,324,325,326,327,156,328,329,330,157,158,331,159,332,333,160,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,125,356,179,126,357,161,162,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,163,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,127,128,393,129,130,131,394,132,133,395,396,397,40,41,398,42,399,400,43,44,45,401,402,403,404,405,406,407,408,409,134,410,411,412,413,414,415,416,417,418,419,420,421,135,183,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,182,459,460,0,461,462,463,464,465,466,136,467,468,469,46,47,470,471,48,472,49,473,474,475,476,477,478,479,480,481,482,50,51,52,53,54,55,56,57,483,58,59,60,61,484,485,486,137,138,139,487,488,489,140,141,490,491,62,63,492,493,494,142,143,495,496,497,498,64,65,499,66,67,68,69,500,70,71,72,73,74,75,76,77,78,79,80,81,82,501,502,83,84,503,504,144,145,505,506,507,508,509,146,510,147,511,164,165,512,513,514,515,516,517,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[1,2,3,184,4,5,185,186,187,188,189,190,191,192,193,195,198,199,200,201,202,7,8,13,203,204,205,206,207,208,211,212,213,214,215,216,217,240,15,253,254,255,256,257,258,111,259,264,265,174,112,175,176,113,114,177,178,266,115,116,270,117,118,119,120,121,26,27,28,274,275,276,277,151,278,279,280,152,153,281,154,282,283,155,284,285,286,287,288,289,290,291,292,293,294,122,295,296,297,298,300,301,302,303,304,305,306,307,308,310,311,123,312,313,124,314,324,325,326,327,156,328,329,330,157,158,331,159,332,333,160,334,335,336,337,338,340,341,342,344,345,348,352,353,354,355,125,356,179,126,357,161,162,358,392,127,128,393,129,130,131,394,132,133,395,396,397,43,44,45,401,402,403,404,405,407,408,409,134,410,411,413,414,415,416,417,418,419,420,421,135,183,422,423,424,425,426,427,434,441,443,445,446,452,182,459,460,0,461,462,463,464,465,466,136,467,468,469,470,471,48,472,49,474,475,476,478,479,480,481,482,50,51,54,55,56,57,59,60,61,484,485,486,137,138,139,487,488,489,140,141,490,491,62,492,142,143,495,496,498,64,65,499,66,67,68,69,70,73,74,75,76,79,80,81,82,502,83,84,504,144,145,146,510,147,511,164,165,512,88,91,101,107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[195,240,259,265,274,279,282,285,287,324,329,332,335,337,384,402,417,420,427,441,443,444,459,464,465,469,478,486,496,498,145],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[1,2,3,184,4,5,185,186,187,188,189,190,191,192,193,194,195,148,196,197,149,150,198,199,200,201,202,6,7,8,9,10,11,12,13,14,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,15,253,254,255,256,257,258,111,259,260,261,262,263,264,265,174,112,175,176,113,114,177,178,266,267,268,269,115,116,270,117,118,119,120,121,16,17,18,19,20,21,22,23,24,25,26,27,271,28,272,273,29,274,275,276,277,151,278,279,280,152,153,281,154,282,283,155,284,285,286,287,288,289,290,291,292,293,294,122,295,296,297,298,299,300,301,302,303,304,305,306,307,30,31,32,33,34,35,36,37,308,309,310,311,123,312,313,124,314,315,316,317,38,318,319,320,321,39,322,323,324,325,326,327,156,328,329,330,157,158,331,159,332,333,160,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,125,356,179,126,357,161,162,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,163,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,127,128,393,129,130,131,394,132,133,395,396,397,40,41,398,42,399,400,43,44,45,401,402,403,404,405,406,407,408,409,134,410,411,412,413,414,415,416,417,418,419,420,421,135,183,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,182,459,460,0,461,462,463,464,465,466,136,467,468,469,46,47,470,471,48,472,49,473,474,475,476,477,478,479,480,481,482,50,51,52,53,54,55,56,57,483,58,59,60,61,484,485,486,137,138,139,487,488,489,140,141,490,491,62,63,492,493,494,142,143,495,496,497,498,64,65,499,66,67,68,69,500,70,71,72,73,74,75,76,77,78,79,80,81,82,501,502,83,84,503,504,144,145,505,506,507,508,509,146,510,147,511,164,165,512,513,514,518,515,516,517,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[375,493],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[1,187,188,190,191,193,7,9,13,258,111,259,264,265,175,176,177,178,115,270,117,118,119,120,121,26,27,28,274,275,276,277,151,278,279,280,152,153,281,154,282,283,155,284,285,286,287,288,289,290,291,292,293,294,295,308,309,310,311,123,312,314,340,341,347,126,161,162,392,127,128,393,129,130,131,394,132,133,395,396,45,402,403,404,405,407,408,409,134,410,411,413,414,415,416,417,418,419,420,421,135,183,422,424,425,426,427,434,441,443,444,445,446,452,182,459,0,461,464,465,466,136,468,469,470,471,48,472,475,51,54,56,57,60,484,485,486,138,487,488,489,490,491,62,492,143,64,65,499,66,67,68,70,74,75,76,79,80,81,82,502,83,84,144,147,164,165,88,91,101,107],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[519,520,166,110,521,63,81,84,503,522,523,524],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[362],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[247,419,139,67],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":405,"org.easymock.tests2.UsageTest.argumentsOrdered":141,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":264,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":395,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":378,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":139,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":184,"org.easymock.tests2.DelegateToTest.testReturnException":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":204,"org.easymock.tests.MockingTest.testPartialClassMocking":26,"org.easymock.tests.MockClassControlTest.testToString":32,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":505,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":95,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":91,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":324,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":471,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":239,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":167,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":411,"org.easymock.tests2.UsageTest.wrongArguments":137,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":123,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":458,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":354,"org.easymock.samples.ExampleTest.answerVsDelegate":189,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":39,"org.easymock.tests2.UsageConstraintsTest.testNull":408,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":273,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":66,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":133,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":37,"org.easymock.tests2.CaptureTest.testPrimitive":0,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":314,"org.easymock.tests.UsageTest.moreThanOneArgument":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":338,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":499,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":255,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":148,"org.easymock.tests.UsageTest.argumentsOrdered":114,"org.easymock.tests.UsageVarargTest.varargIntAccepted":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":171,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":439,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":398,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":293,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":223,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":452,"org.easymock.tests.ReplayStateInvalidUsageTest.times":249,"org.easymock.tests2.DependencyTest.testClassMocking":46,"org.easymock.tests2.AnswerTest.answer":492,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":385,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":482,"org.easymock.tests2.CaptureTest.testAnd":182,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":319,"org.easymock.tests2.UsageTest.strictResetToDefault":485,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":520,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":73,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":129,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":310,"org.easymock.tests2.DelegateToTest.testDelegate":478,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":150,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":334,"org.easymock.tests.LimitationsTest.mockFinalMethod":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":207,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":202,"org.easymock.tests2.DependencyTest.testClassMockingSupport":47,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":315,"org.easymock.tests2.CaptureTest.testCapture1_2446744":461,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":500,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":480,"org.easymock.tests.UsageThrowableTest.throwError":115,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":243,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":321,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":440,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":257,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":522,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":109,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":226,"org.easymock.samples.PartialClassMockTest.testGetArea":1,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":244,"org.easymock.tests.MockingTest.testInterfaceMocking":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":361,"org.easymock.tests2.UsageTest.niceToStrict":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":325,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":368,"org.easymock.tests2.ThreadingTest.testChangeDefault":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":54,"org.easymock.tests2.MockBuilderTest.testCreateMock":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":104,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":455,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":180,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":158,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":130,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":318,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":269,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":209,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":352,"org.easymock.tests.UsageOverloadedMethodTest.overloading":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":100,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":417,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":345,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":154,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":258,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":416,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":466,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":299,"org.easymock.tests.MockClassControlTest.testEquals":36,"org.easymock.tests2.EasyMockSupportClassTest.testAll":88,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":481,"org.easymock.tests2.CaptureTest.testCaptureAll":459,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":200,"org.easymock.tests.MockNameTest.defaultName":263,"org.easymock.tests2.UsageConstraintsTest.testMatches":418,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":256,"org.easymock.samples.ExampleTest.voteForRemovals":193,"org.easymock.tests.UsageVarargTest.allKinds":307,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":294,"org.easymock.samples.BasicClassMockTest.testPrintContent":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":201,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":120,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":146,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":477,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":208,"org.easymock.tests2.UsageConstraintsTest.greaterThan":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":89,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":76,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":227,"org.easymock.samples.ExampleTest.voteForRemoval":190,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":22,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":443,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":77,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":322,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":69,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":219,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":484,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":15,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":128,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":203,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":473,"org.easymock.tests2.CaptureTest.testCaptureFirst":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":393,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":491,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":280,"org.easymock.tests2.UsageTest.moreThanOneArgument":486,"org.easymock.tests2.CaptureTest.testCapture2_2446744":468,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":386,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":60,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":306,"org.easymock.tests.GenericTest.testBridgedEquals":10,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":524,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":216,"org.easymock.tests.UsageExpectAndReturnTest.longType":277,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":198,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":337,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":423,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":339,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":335,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":253,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":350,"org.easymock.tests.UsageCallCountTest.tooManyCalls":217,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":328,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":119,"org.easymock.tests.MockingTest.testNiceClassMocking":29,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":80,"org.easymock.tests.MockingTest.testClassMocking":24,"org.easymock.tests2.UsageConstraintsTest.testContains":415,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":210,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":45,"org.easymock.tests2.UsageConstraintsTest.testFind":407,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":259,"org.easymock.tests.MockTypeTest.fromEasyMockClass":320,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":498,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":125,"org.easymock.tests.UsageExpectAndReturnTest.object":281,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":168,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":301,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":366,"org.easymock.tests.UsageTest.exactCallCountByLastCall":177,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":196,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":63,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":285,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":296,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":430,"org.easymock.tests.MockClassControlTest.testHashCode":35,"org.easymock.tests2.EasyMockSupportTest.testVerify":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":98,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":197,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":342,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":479,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":428,"org.easymock.tests.UsageVarargTest.varargCharAccepted":300,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":391,"org.easymock.tests2.UsageTest.openCallCountByLastCall":487,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":396,"org.easymock.tests.DefaultClassInstantiatorTest.object":16,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":267,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":99,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":330,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":450,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":429,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":34,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":74,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":329,"org.easymock.tests.ReplayStateInvalidCallsTest.times":231,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":286,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":349,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":107,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":33,"org.easymock.tests2.UsageTest.resumeIfFailure":490,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":206,"org.easymock.tests2.StubTest.stubWithReturnValue":144,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":424,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":153,"org.easymock.tests2.SerializationTest.testAllMockedMethod":49,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":384,"org.easymock.samples.SupportTest.voteForRemovals":187,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":181,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":6,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":432,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":332,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":390,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":493,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":262,"org.easymock.tests.UsageExpectAndThrowTest.object":331,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":183,"org.easymock.tests2.DelegateToTest.testWrongClass":476,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":229,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":340,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":341,"org.easymock.tests.UsageStrictMockTest.range":161,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":399,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":394,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":79,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":159,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":56,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":85,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":251,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":353,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":172,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":221,"org.easymock.tests2.CaptureTest.testCaptureNone":465,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":362,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":514,"org.easymock.tests.UsageUnorderedTest.message":240,"org.easymock.tests.UsageVerifyTest.twoReturns":295,"org.easymock.tests.UsageVarargTest.varargByteAccepted":305,"org.easymock.tests2.ThreadingTest.testThreadSafe":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":102,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":214,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":2,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":367,"org.easymock.tests2.CaptureTest.testCapture_2617107":460,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":124,"org.easymock.tests2.UsageConstraintsTest.any":413,"org.easymock.tests2.StubTest.stub":504,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":248,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":389,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":205,"org.easymock.tests.UsageExpectAndThrowTest.longType":327,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":20,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":247,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":511,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":434,"org.easymock.tests2.SerializationTest.testClass":48,"org.easymock.tests.LimitationsTest.mockNativeMethod":13,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":9,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":288,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":449,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":237,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":512,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":518,"org.easymock.tests2.NameTest.nameForMocksControl":509,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":451,"org.easymock.tests2.MockedExceptionTest.testMockedException":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":90,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":176,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":497,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":156,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":28,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":57,"org.easymock.tests.MockingTest.testNicePartialClassMocking":27,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":68,"org.easymock.tests2.CaptureTest.testCaptureLast":464,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":447,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":316,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":410,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":84,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":236,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":422,"org.easymock.tests.MockingTest.testTwoMocks":25,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":233,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":274,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":157,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":140,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":426,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":517,"org.easymock.samples.ExampleTest.removeNonExistingDocument":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":454,"org.easymock.tests.UsageStrictMockTest.differentMethods":162,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":245,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":431,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":516,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":18,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":444,"org.easymock.tests2.MockBuilderTest.testCreateMockString":61,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":92,"org.easymock.tests.UsageExpectAndThrowTest.floatType":326,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":142,"org.easymock.tests.UsageVerifyTest.twoThrows":122,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":101,"org.easymock.samples.ExampleTest.voteAgainstRemoval":191,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":75,"org.easymock.tests.LimitationsTest.privateConstructor":12,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":523,"org.easymock.tests2.UsageConstraintsTest.testNotNull":425,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":121,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":43,"org.easymock.tests2.UsageTest.defaultResetToNice":489,"org.easymock.samples.ExampleTest.voteAgainstRemovals":188,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":380,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":448,"org.easymock.tests.UsageVarargTest.differentLength":302,"org.easymock.tests2.CallbackTest.callback":145,"org.easymock.tests2.UsageConstraintsTest.equals":406,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":71,"org.easymock.tests.UsageTest.openCallCountByLastCall":175,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":402,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":313,"org.easymock.tests.UsageCallCountTest.tooFewCalls":212,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":355,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":515,"org.easymock.tests.UsageThrowableTest.throwCheckedException":118,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":173,"org.easymock.tests.MockingTest.testStrictClassMocking":23,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":266,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":453,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":81,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":250,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":502,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":495,"org.easymock.tests.ObjectMethodsTest.testHashCode":365,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":170,"org.easymock.tests2.NameTest.nameForNiceMock":508,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":446,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":235,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":230,"org.easymock.tests2.DependencyTest.testInterfaceMocking":470,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":169,"org.easymock.samples.ExampleTest.addDocument":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":103,"org.easymock.tests2.DelegateToTest.testStubDelegate":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":108,"org.easymock.tests2.AnswerTest.stubAnswer":143,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":126,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":483,"org.easymock.tests.UsageVarargTest.varargLongAccepted":304,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":377,"org.easymock.tests.UsageExpectAndReturnTest.floatType":276,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":62,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":438,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":421,"org.easymock.tests.UsageThrowableTest.noUpperLimit":116,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":403,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":40,"org.easymock.tests2.SerializationTest.test":472,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":462,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":17,"org.easymock.tests2.UsageConstraintsTest.testSame":409,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":275,"org.easymock.samples.SupportTest.addDocument":186,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":501,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":220,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":93,"org.easymock.tests.GenericTest.testPackageScope":7,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":437,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":272,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":218,"org.easymock.tests2.NameTest.nameForMock":506,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":282,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":521,"org.easymock.tests2.UsageStrictMockTest.differentMethods":165,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":72,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":151,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":160,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":363,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":311,"org.easymock.tests2.MockedExceptionTest.testRealException":401,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":323,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":381,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":252,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":312,"org.easymock.tests2.NameTest.nameForStrictMock":507,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":53,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":496,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":67,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":42,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":135,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":51,"org.easymock.tests2.UsageStrictMockTest.range":164,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":224,"org.easymock.tests2.UsageConstraintsTest.lessThan":427,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":163,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":127,"org.easymock.tests2.CaptureTest.testCaptureRightOne":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":97,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":513,"org.easymock.tests2.UsageConstraintsTest.testOr":134,"org.easymock.tests.UsageRangeTest.combination":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":65,"org.easymock.tests.UsageTest.wrongArguments":112,"org.easymock.tests2.MockBuilderTest.testWithConstructor":519,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":94,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":31,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":370,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":21,"org.easymock.tests.UsageVarargTest.varargShortAccepted":303,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":215,"org.easymock.tests2.UsageConstraintsTest.cmpTo":414,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":238,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":494,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":372,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":488,"org.easymock.tests2.CaptureTest.testCaptureFromStub":467,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":242,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":52,"org.easymock.tests.UsageTest.unexpectedCallWithArray":174,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":234,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":179,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":213,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":110,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":155,"org.easymock.tests2.UsageConstraintsTest.constraints":404,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":357,"org.easymock.samples.ExampleTest.addAndChangeDocument":195,"org.easymock.tests.UsageStrictMockTest.testVerify":359,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":185,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":356,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":199,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":463,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":291,"org.easymock.tests.LimitationsTest.abstractClass":11,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":292,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":131,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":297}}]
