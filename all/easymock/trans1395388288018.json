[{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[2],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[17,18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:299","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[20,21],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,1,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,17,18,19,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,4,5,6,7,8,9,10,11,289,12,13,14,15,16,290,291,292,293,294,295,296,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:211","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[17,18,19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Or:39","sourceCode":"if (org.easymock.IArgumentMatcher.matches(java.lang.Object)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[30,104,299,291,293,300,294],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:233","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()))","type":"CtThrowImpl"},"failures":[301,302],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[23,23,24,24,27,36,37,303,304,305,61,62,63,107,20,131,132,306,21,307,156,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,215,324,17,19,325,326,327,224,328,329,225,330,331,332,333,334,335,336,337,338,226,339,340,341,342,343,227,344,345,228,229,346,347,230,231,232,233,348,234,235,236,237,238,239,240,242,243,276,277,279,280,281,282,283,349,350,284,285,286,287,351,352,353,354,295,296,297],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[23,24,215,324,17,325,326,327,224,328,329,225,330,331,332,333,334,335,336,337,338,226,339,340,341,342,343,227,344,345,355,356,357,348,358,359,239,243,360,361,362],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[363,364,218,219],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[365,304,311,312,313,366,232,239,242,353],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:200","sourceCode":"if (!java.lang.Character.(java.lang.Character.isJavaIdentifierPart(char))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[365,367],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[30,103,175,176,194,216,368,217,219],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[306],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[20,21],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[369,370,371,372,373,374],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[23,23,24,24,215,324,17,375,348,349],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":252,"org.easymock.tests2.UsageTest.argumentsOrdered":205,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":52,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":111,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":200,"org.easymock.tests2.StubTest.stubWithReturnValue":178,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":357,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":272,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":73,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":28,"org.easymock.tests2.SerializationTest.testAllMockedMethod":19,"org.easymock.tests2.DelegateToTest.testReturnException":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":109,"org.easymock.tests.MockingTest.testPartialClassMocking":61,"org.easymock.samples.SupportTest.voteForRemovals":26,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":20,"org.easymock.tests.MockClassControlTest.testToString":311,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":367,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":352,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":136,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":364,"org.easymock.tests.UsageExpectAndThrowTest.object":146,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":269,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":193,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":369,"org.easymock.tests2.DelegateToTest.testWrongClass":293,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":157,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":158,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":258,"org.easymock.tests2.UsageTest.wrongArguments":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":94,"org.easymock.tests.UsageStrictMockTest.range":89,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":101,"org.easymock.samples.ExampleTest.answerVsDelegate":30,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":186,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":304,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":237,"org.easymock.tests2.UsageConstraintsTest.testNull":254,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":279,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":147,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":314,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":232,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":188,"org.easymock.tests2.CaptureTest.testPrimitive":7,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":325,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":58,"org.easymock.tests.UsageTest.moreThanOneArgument":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":155,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":278,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":100,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":169,"org.easymock.tests2.CaptureTest.testCaptureNone":289,"org.easymock.tests.UsageUnorderedTest.message":1,"org.easymock.tests.UsageVerifyTest.twoReturns":51,"org.easymock.tests.UsageVarargTest.varargByteAccepted":46,"org.easymock.tests2.ThreadingTest.testThreadSafe":244,"org.easymock.tests.UsageTest.argumentsOrdered":59,"org.easymock.tests.UsageVarargTest.varargIntAccepted":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":339,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":127,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":36,"org.easymock.tests2.CaptureTest.testCapture_2617107":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":114,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":373,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":228,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":97,"org.easymock.tests2.UsageConstraintsTest.any":259,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":299,"org.easymock.tests2.StubTest.stub":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":110,"org.easymock.tests.UsageExpectAndThrowTest.longType":139,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":320,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":290,"org.easymock.tests.LimitationsTest.mockNativeMethod":156,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":306,"org.easymock.tests2.AnswerTest.answer":216,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":83,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":223,"org.easymock.tests2.CaptureTest.testAnd":4,"org.easymock.tests2.UsageTest.strictResetToDefault":196,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":356,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":284,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":214,"org.easymock.tests2.MockedExceptionTest.testMockedException":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":329,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":183,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":57,"org.easymock.tests2.DelegateToTest.testDelegate":294,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":140,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":276,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":233,"org.easymock.tests.MockingTest.testNicePartialClassMocking":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":151,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":281,"org.easymock.tests.LimitationsTest.mockFinalMethod":308,"org.easymock.tests2.CaptureTest.testCaptureLast":11,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":112,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":257,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":243,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":123,"org.easymock.tests.MockingTest.testTwoMocks":305,"org.easymock.tests2.CaptureTest.testCapture1_2446744":8,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":149,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":144,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":204,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":274,"org.easymock.tests.UsageThrowableTest.throwError":159,"org.easymock.tests.UsageStrictMockTest.differentMethods":90,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":318,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":246,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":365,"org.easymock.tests2.MockBuilderTest.testCreateMockString":236,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":330,"org.easymock.tests.UsageExpectAndThrowTest.floatType":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":171,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":327,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":217,"org.easymock.tests.UsageVerifyTest.twoThrows":50,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":226,"org.easymock.samples.PartialClassMockTest.testGetArea":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":115,"org.easymock.samples.ExampleTest.voteAgainstRemoval":32,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":286,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":334,"org.easymock.tests2.UsageTest.niceToStrict":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":137,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":362,"org.easymock.tests2.UsageConstraintsTest.testNotNull":273,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":295,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":166,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":230,"org.easymock.tests2.MockBuilderTest.testCreateMock":234,"org.easymock.tests2.UsageTest.defaultResetToNice":203,"org.easymock.samples.ExampleTest.voteAgainstRemovals":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":341,"org.easymock.tests.UsageVarargTest.differentLength":43,"org.easymock.tests2.CallbackTest.callback":194,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":349,"org.easymock.tests.UsageTest.openCallCountByLastCall":56,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":145,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":184,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":249,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":96,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":99,"org.easymock.tests.UsageCallCountTest.tooFewCalls":125,"org.easymock.tests.UsageOverloadedMethodTest.overloading":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":338,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":263,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":105,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":75,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":133,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":262,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":102,"org.easymock.tests.UsageThrowableTest.throwCheckedException":163,"org.easymock.tests2.EasyMockSupportClassTest.testAll":224,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":132,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":153,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":222,"org.easymock.tests2.CaptureTest.testCaptureAll":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":121,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":242,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":302,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":239,"org.easymock.tests2.UsageConstraintsTest.testMatches":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":241,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":170,"org.easymock.samples.ExampleTest.voteForRemovals":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":372,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":248,"org.easymock.tests.UsageVarargTest.allKinds":48,"org.easymock.tests2.DependencyTest.testInterfaceMocking":192,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":371,"org.easymock.samples.BasicClassMockTest.testPrintContent":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":122,"org.easymock.samples.ExampleTest.addDocument":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.DelegateToTest.testStubDelegate":292,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":165,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":208,"org.easymock.tests2.AnswerTest.stubAnswer":218,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":113,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":87,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":374,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":322,"org.easymock.tests2.UsageConstraintsTest.greaterThan":266,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":287,"org.easymock.tests.UsageVarargTest.varargLongAccepted":45,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":91,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":323,"org.easymock.samples.ExampleTest.voteForRemoval":31,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":351,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":82,"org.easymock.tests.UsageExpectAndReturnTest.floatType":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":215,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":267,"org.easymock.tests.UsageThrowableTest.noUpperLimit":160,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":250,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":195,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":107,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":353,"org.easymock.tests2.SerializationTest.test":18,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":9,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":348,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":181,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":161,"org.easymock.tests2.UsageConstraintsTest.testSame":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":326,"org.easymock.samples.SupportTest.addDocument":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":108,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":182,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":207,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":106,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":331,"org.easymock.tests.GenericTest.testPackageScope":131,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":247,"org.easymock.tests2.UsageTest.moreThanOneArgument":197,"org.easymock.tests2.CaptureTest.testCapture2_2446744":15,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":235,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":47,"org.easymock.tests.GenericTest.testBridgedEquals":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":129,"org.easymock.tests.UsageExpectAndReturnTest.longType":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":119,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":76,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":154,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":271,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":359,"org.easymock.tests2.UsageStrictMockTest.differentMethods":213,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":167,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":350,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":68,"org.easymock.tests.UsageCallCountTest.tooManyCalls":130,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":150,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":174,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":342,"org.easymock.tests2.MockedExceptionTest.testRealException":298,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":72,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":210,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":164,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":238,"org.easymock.tests2.UsageConstraintsTest.testContains":261,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":297,"org.easymock.tests2.UsageConstraintsTest.testFind":253,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":135,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":347,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":280,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":84,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":176,"org.easymock.tests.UsageExpectAndReturnTest.object":74,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":354,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":319,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":268,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":283,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":229,"org.easymock.tests2.UsageStrictMockTest.range":212,"org.easymock.tests2.UsageConstraintsTest.lessThan":275,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":187,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":370,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":42,"org.easymock.tests.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":92,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":2,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":335,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.UsageConstraintsTest.testOr":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":324,"org.easymock.tests.UsageRangeTest.combination":172,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":277,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":80,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":38,"org.easymock.tests.UsageTest.wrongArguments":55,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":104,"org.easymock.tests2.MockBuilderTest.testWithConstructor":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":332,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":69,"org.easymock.tests2.EasyMockSupportTest.testVerify":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":336,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":321,"org.easymock.tests.UsageVarargTest.varargShortAccepted":44,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":103,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":220,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":128,"org.easymock.tests2.UsageConstraintsTest.cmpTo":260,"org.easymock.tests.UsageVarargTest.varargCharAccepted":41,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":315,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":368,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":209,"org.easymock.tests2.UsageTest.openCallCountByLastCall":201,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests.DefaultClassInstantiatorTest.object":316,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":190,"org.easymock.tests2.CaptureTest.testCaptureFromStub":14,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":346,"org.easymock.tests.UsageTest.unexpectedCallWithArray":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":337,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":143,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":86,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":162,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":126,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":78,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":313,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":285,"org.easymock.tests2.UsageConstraintsTest.constraints":251,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":88,"org.easymock.samples.ExampleTest.addAndChangeDocument":35,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":142,"org.easymock.tests.CapturesMatcherTest.test":3,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":81,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":22,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":227,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":120,"org.easymock.tests2.UsageTest.resumeIfFailure":206,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":10,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":116,"org.easymock.tests.LimitationsTest.abstractClass":307,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":303,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":117,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":39,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":185}}]
