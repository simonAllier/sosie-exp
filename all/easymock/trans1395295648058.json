[{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1975","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Double>(org.easymock.Capture<java.lang.Double>))","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[52,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[54,55,0,56,57,58,59,60,61,62,63,64,65,65,66,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,26,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,52,136,137,138,53,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,30,31,32,173,174,175,176,33,177,34,178,179,35,36,180,181,182,183,184,185,186,187,188,2,189,190,191,192,193,194,37,38,195,39,40,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,3,4,5,6,7,8,9,10,11,12,13,14,15,16,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,17,337,338,18,19,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,20,21,22,371,23,372,373,374,375,376,377,378,379,380,381,382,383,384,45,46,385,386,387,388,389,47,48,390,391,392,393,49,394,50,51,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,24,446,25,447,448],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) == null) && ((org.easymock.internal.matchers.Equals.java.lang.Object) == null)) || (((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[55,56,57,59,63,269],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[340,377,449],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[450,435],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[432,439,444,445],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:243","failures":[54,55,56,57,59,63,91,92,94,97,99,102,103,104,105,106,107,110,111,113,114,115,117,118,119,120,121,122,123,124,125,128,168,38,39,40,201,202,204,241,244,245,246,247,267,268,269,270,271,287,288,291,296,297,298,299,300,301,303,307,308,309,314,317,319,326,329,451,452,365,366,367,368,453,21,372,374,376,454,455,49,50,51,400,401,447],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[26,456,31,32,177,34,35,36,192,37,39,46,47,48,50],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[457],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[67,68,97,98,100,134,135,52,136,137,138,53,139,152,153,154,155,156,157,158,159,198,199,200,207,289,290,291,292,296,297,299,300,301,303,305,306,309,310,458,316,317,318,459,320,460,324,461,327,328,334,335,342,451,366,379,380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[419],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[462],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[463,464,465],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[340,466,467,468,469,470,471,472,473,377,474,447,448],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[221,332],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[26,475,476,477,456,31,32,177,34,35,36,37,39,40,46,47,48,50,51],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[427],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:108","failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,160,163,164,165,166,167,171,31,185,189,243,403],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[101,26,122,154,155,156,30,31,32,478,173,479,174,480,175,176,33,177,34,35,36,180,188,190,191,192,193,37,38,195,39,40,196,232,234,235,238,239,240,250,253,254,281,293,294,297,306,309,458,332,344,481,347,482,483,349,358,359,452,365,368,453,41,42,43,44,484,372,485,376,454,378,455,486,383,45,46,385,386,47,48,390,391,392,49,394,50,51,395,409,410,418,434],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[487,488,177,37,489,490],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"position":"org.easymock.internal.RecordState:85","failures":[54,55,0,56,57,58,59,60,61,62,63,64,65,65,66,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,97,98,26,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,135,140,141,142,143,144,145,146,147,148,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,30,31,32,176,33,177,34,178,179,35,36,180,181,182,183,184,185,186,187,2,189,191,192,193,194,37,38,195,39,40,196,197,201,202,204,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,275,276,277,279,280,281,282,283,284,285,286,287,288,291,296,297,298,299,300,301,302,303,306,307,308,309,3,4,5,6,7,8,9,10,11,12,13,14,15,16,311,312,313,314,315,317,319,326,329,332,333,334,335,336,17,18,19,339,340,341,342,343,344,345,481,346,347,482,348,483,349,350,351,352,358,451,452,365,366,367,368,453,41,42,43,44,20,21,22,23,484,372,374,375,376,454,378,455,486,383,384,45,46,385,386,387,388,389,47,48,390,391,392,393,49,394,50,51,395,396,397,398,399,400,401,402,403,409,416,417,418,419,421,422,423,424,425,426,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,24,25,447],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"candidateParameters","i":"i"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[26,28,29,31,32,39,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[491,444],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":419,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":176,"org.easymock.tests2.UsageTest.argumentsOrdered":48,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":350,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":218,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":386,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":69,"org.easymock.tests2.DelegateToTest.testReturnException":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":182,"org.easymock.tests.MockingTest.testPartialClassMocking":201,"org.easymock.tests.MockClassControlTest.testToString":154,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":369,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":94,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":70,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":319,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":27,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":401,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":467,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":168,"org.easymock.tests2.UsageTest.wrongArguments":46,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":142,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":174,"org.easymock.tests2.UsageConstraintsTest.testNull":422,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":206,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":299,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":159,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":349,"org.easymock.tests2.CaptureTest.testPrimitive":6,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":172,"org.easymock.tests.UsageTest.moreThanOneArgument":33,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":89,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":246,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":129,"org.easymock.tests.UsageTest.argumentsOrdered":36,"org.easymock.tests.UsageVarargTest.varargIntAccepted":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":223,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":267,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":484,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":464,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":414,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":271,"org.easymock.tests.ReplayStateInvalidUsageTest.times":263,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":358,"org.easymock.tests2.AnswerTest.answer":17,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":225,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":399,"org.easymock.tests2.CaptureTest.testAnd":3,"org.easymock.tests2.UsageTest.strictResetToDefault":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":306,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":245,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":124,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":346,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":133,"org.easymock.tests2.DelegateToTest.testDelegate":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":85,"org.easymock.tests.LimitationsTest.mockFinalMethod":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":148,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":293,"org.easymock.tests2.CaptureTest.testCapture1_2446744":7,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":83,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":397,"org.easymock.tests.UsageThrowableTest.throwError":160,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":257,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":479,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":476,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":331,"org.easymock.samples.PartialClassMockTest.testGetArea":54,"org.easymock.tests.MockingTest.testInterfaceMocking":203,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":460,"org.easymock.tests2.UsageTest.niceToStrict":385,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":71,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":208,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":374,"org.easymock.tests2.MockBuilderTest.testCreateMock":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":361,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":489,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":79,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":347,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":274,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":140,"org.easymock.tests.UsageOverloadedMethodTest.overloading":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":328,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":432,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":113,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":241,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":431,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":12,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":278,"org.easymock.tests.MockClassControlTest.testEquals":158,"org.easymock.tests2.EasyMockSupportClassTest.testAll":317,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":98,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":87,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":398,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":146,"org.easymock.tests2.CaptureTest.testCaptureAll":4,"org.easymock.tests.MockNameTest.defaultName":101,"org.easymock.tests2.UsageConstraintsTest.testMatches":433,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":247,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":255,"org.easymock.samples.ExampleTest.voteForRemovals":59,"org.easymock.tests.UsageVarargTest.allKinds":286,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":30,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":147,"org.easymock.samples.BasicClassMockTest.testPrintContent":68,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":166,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":392,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":186,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":371,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":472,"org.easymock.tests2.UsageConstraintsTest.greaterThan":435,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":123,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":309,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":139,"org.easymock.samples.ExampleTest.voteForRemoval":56,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":310,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":312,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":480,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":302,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":134,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":383,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":345,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":181,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":481,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":391,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":192,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":109,"org.easymock.tests2.UsageTest.moreThanOneArgument":45,"org.easymock.tests2.CaptureTest.testCapture2_2446744":15,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":314,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":226,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":285,"org.easymock.tests.GenericTest.testBridgedEquals":100,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":239,"org.easymock.tests.UsageExpectAndReturnTest.longType":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":144,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":343,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":88,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":440,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":128,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":86,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":244,"org.easymock.tests.UsageCallCountTest.tooManyCalls":240,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":75,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":452,"org.easymock.tests.MockingTest.testNiceClassMocking":207,"org.easymock.tests.MockingTest.testClassMocking":199,"org.easymock.tests2.UsageConstraintsTest.testContains":430,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":233,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":335,"org.easymock.tests2.UsageConstraintsTest.testFind":421,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":243,"org.easymock.tests.MockTypeTest.fromEasyMockClass":173,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":25,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":193,"org.easymock.tests.UsageExpectAndReturnTest.object":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":483,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":468,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":280,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":252,"org.easymock.tests.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":213,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":130,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":448,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":118,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":275,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":2,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":405,"org.easymock.tests.MockClassControlTest.testHashCode":157,"org.easymock.tests2.EasyMockSupportTest.testVerify":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":323,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":131,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":187,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":273,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":477,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":396,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":445,"org.easymock.tests.UsageVarargTest.varargCharAccepted":279,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":231,"org.easymock.tests2.UsageTest.openCallCountByLastCall":387,"org.easymock.tests.DefaultClassInstantiatorTest.object":135,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":272,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":250,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":456,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":356,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":404,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":156,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":76,"org.easymock.tests.CapturesMatcherTest.test":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":149,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":329,"org.easymock.tests2.UsageTest.resumeIfFailure":390,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":478,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":184,"org.easymock.tests2.StubTest.stubWithReturnValue":403,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":473,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":441,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":111,"org.easymock.tests2.SerializationTest.testAllMockedMethod":342,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":224,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":449,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":490,"org.easymock.samples.SupportTest.voteForRemovals":63,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":407,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":82,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":230,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":337,"org.easymock.tests.UsageExpectAndThrowTest.object":80,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":95,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":438,"org.easymock.tests2.DelegateToTest.testWrongClass":22,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":287,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":288,"org.easymock.tests.UsageStrictMockTest.range":39,"org.easymock.samples.ConstructorCalledMockTest.testTax":65,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":381,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":81,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":376,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":316,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":141,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":487,"org.easymock.tests2.CaptureTest.testCaptureNone":11,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":92,"org.easymock.tests.UsageUnorderedTest.message":26,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":475,"org.easymock.tests.UsageVerifyTest.twoReturns":32,"org.easymock.tests.UsageVarargTest.varargByteAccepted":284,"org.easymock.tests2.ThreadingTest.testThreadSafe":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":461,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":237,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":67,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":253,"org.easymock.tests2.CaptureTest.testCapture_2617107":5,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":228,"org.easymock.tests2.UsageConstraintsTest.any":428,"org.easymock.tests2.StubTest.stub":402,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":262,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":183,"org.easymock.tests.UsageExpectAndThrowTest.longType":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":229,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":138,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":261,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":394,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":409,"org.easymock.tests2.SerializationTest.testClass":340,"org.easymock.tests.LimitationsTest.mockNativeMethod":291,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":121,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":355,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":395,"org.easymock.tests2.NameTest.nameForMocksControl":44,"org.easymock.tests2.MockedExceptionTest.testMockedException":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":318,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":179,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":446,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":74,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":204,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":296,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":454,"org.easymock.tests.MockingTest.testNicePartialClassMocking":202,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":301,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":466,"org.easymock.tests2.CompareToTest.testCompareEqual":457,"org.easymock.tests2.CaptureTest.testCaptureLast":10,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":353,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":294,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":453,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":425,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":439,"org.easymock.tests.MockingTest.testTwoMocks":200,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":102,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":78,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":47,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":443,"org.easymock.samples.ExampleTest.removeNonExistingDocument":60,"org.easymock.tests.UsageStrictMockTest.differentMethods":40,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":406,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":136,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":313,"org.easymock.tests2.MockBuilderTest.testCreateMockString":486,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":459,"org.easymock.tests.UsageExpectAndThrowTest.floatType":72,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":434,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":18,"org.easymock.tests.UsageVerifyTest.twoThrows":31,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":326,"org.easymock.samples.ExampleTest.voteAgainstRemoval":57,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":219,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":308,"org.easymock.tests.LimitationsTest.privateConstructor":290,"org.easymock.tests2.UsageConstraintsTest.testNotNull":442,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":167,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":333,"org.easymock.tests2.UsageTest.defaultResetToNice":389,"org.easymock.samples.ExampleTest.voteAgainstRemovals":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":220,"org.easymock.tests.UsageVarargTest.differentLength":281,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":354,"org.easymock.tests2.CallbackTest.callback":332,"org.easymock.tests2.UsageConstraintsTest.equals":420,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":304,"org.easymock.tests.UsageTest.openCallCountByLastCall":178,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":416,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":170,"org.easymock.tests.UsageCallCountTest.tooFewCalls":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":143,"org.easymock.tests.UsageThrowableTest.throwCheckedException":164,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":488,"org.easymock.tests.MockingTest.testStrictClassMocking":198,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":127,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":368,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":359,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":365,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":367,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":339,"org.easymock.tests.ObjectMethodsTest.testHashCode":251,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":471,"org.easymock.tests2.NameTest.nameForNiceMock":43,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":315,"org.easymock.tests2.DependencyTest.testInterfaceMocking":400,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":469,"org.easymock.samples.ExampleTest.addDocument":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":327,"org.easymock.tests2.DelegateToTest.testStubDelegate":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.AnswerTest.stubAnswer":19,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":38,"org.easymock.tests.UsageVarargTest.varargLongAccepted":283,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":217,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":120,"org.easymock.tests.UsageExpectAndReturnTest.floatType":104,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":447,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":66,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":436,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":413,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":190,"org.easymock.tests.UsageThrowableTest.noUpperLimit":161,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":417,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":379,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":8,"org.easymock.tests2.SerializationTest.test":341,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":52,"org.easymock.tests2.UsageConstraintsTest.testSame":423,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":103,"org.easymock.samples.SupportTest.addDocument":62,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":320,"org.easymock.tests.GenericTest.testPackageScope":97,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":212,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":412,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":205,"org.easymock.tests2.NameTest.nameForMock":41,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":114,"org.easymock.tests2.UsageStrictMockTest.differentMethods":51,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":106,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":84,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":125,"org.easymock.tests2.MockedExceptionTest.testRealException":336,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":222,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":382,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":474,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":221,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":169,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":266,"org.easymock.tests2.NameTest.nameForStrictMock":42,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":373,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":24,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":300,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":380,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":437,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":137,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":28,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":372,"org.easymock.tests2.UsageStrictMockTest.range":50,"org.easymock.tests2.UsageConstraintsTest.lessThan":444,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":408,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":216,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":344,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":322,"org.easymock.tests2.UsageConstraintsTest.testOr":424,"org.easymock.tests.UsageRangeTest.combination":122,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":297,"org.easymock.tests.UsageTest.wrongArguments":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":321,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":153,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":209,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":53,"org.easymock.tests.UsageVarargTest.varargShortAccepted":282,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":238,"org.easymock.tests2.UsageConstraintsTest.cmpTo":429,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":338,"org.easymock.tests2.CompareToTest.testLessThan":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":211,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":388,"org.easymock.tests2.CaptureTest.testCaptureFromStub":14,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":256,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":485,"org.easymock.tests.UsageTest.unexpectedCallWithArray":177,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":236,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":116,"org.easymock.tests2.UsageConstraintsTest.constraints":418,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":195,"org.easymock.samples.ExampleTest.addAndChangeDocument":61,"org.easymock.tests2.ConstraintsToStringTest.notToString":462,"org.easymock.tests.UsageStrictMockTest.testVerify":197,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":64,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":194,"org.easymock.tests2.CompareToTest.testGreateThan":450,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":145,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":269,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":108,"org.easymock.tests.LimitationsTest.abstractClass":289,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":482,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":29,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":276}}]
