[{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:95","sourceCode":"int = java.lang.Integer.int","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"max"}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:54","sourceCode":"continue","type":"CtContinueImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[21,22,23,24,25],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[26],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:314","failures":[27,28,29,30],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[31,32,33,34],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[21,35,36,37,38,39,40,41,22,23,24,42,43,44,45,46,47,48,49,50],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,21,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,0,81,82,1,83,84,85,86,87,88,89,35,90,91,92,93,94,95,96,97,98,36,99,100,101,102,103,37,104,105,106,107,108,109,110,111,112,38,113,114,115,116,31,117,118,119,120,121,122,32,123,124,125,126,127,128,129,130,131,132,2,3,133,134,4,135,5,6,136,137,138,139,140,7,141,142,8,143,144,9,145,146,147,148,149,150,10,151,152,153,154,155,11,12,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,39,208,40,41,209,210,22,211,23,212,24,213,214,215,42,216,43,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,44,234,235,236,237,238,45,46,239,240,47,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,48,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,26,359,360,361,362,363,364,365,366,367,13,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,49,402,403,404,405,50,406,407,408,27,28,409,410,14,411,412,413,414,415,416,417,418,419,420,421,15,16,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,17,18,19,20,454,29,30,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,33,476,477,34,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[207],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[489],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[51,52,53,54,55,56,58,59,60,61,62,63,66,70,71,72,74,75,76,77,0,81,1,83,38,113,115,116,31,117,118,119,120,122,32,123,124,127,128,129,131,133,135,6,136,150,153,154,155,11,12,156,162,165,166,168,169,175,176,178,181,186,192,22,23,24,219,220,229,232,46,246,253,254,255,257,275,276,277,278,279,282,283,286,287,288,289,290,291,292,303,304,307,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,367,13,368,369,370,371,372,373,374,375,376,377,378,379,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,418,420,421,15,16,422,424,426,427,431,432,433,443,444,445,446,447,448,449,450,451,452,453,464,465,466,468,469,471,472,473,474,475],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[51,52,53,54,55,56,58,59,60,61,62,63,21,64,65,66,67,71,72,74,75,78,0,1,83,87,35,36,37,106,107,108,109,110,112,38,113,114,115,116,31,117,118,119,120,121,122,32,123,124,125,127,128,131,132,2,3,133,4,135,5,6,136,137,139,140,7,141,142,8,143,144,9,145,146,147,149,150,10,151,153,154,12,156,158,159,160,161,162,165,166,167,168,169,170,171,173,174,175,176,177,178,181,182,183,184,185,186,192,199,200,201,202,204,205,206,39,22,211,23,24,219,220,228,230,231,232,233,235,238,46,246,253,254,257,258,261,263,264,265,266,270,271,272,273,274,276,277,279,287,288,291,296,297,299,303,304,306,307,311,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,13,368,374,375,376,377,378,379,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,409,410,14,411,412,413,418,420,16,422,423,429,431,432,433,443,444,445,446,447,448,449,450,451,452,453,17,18,19,20,464,465,466,468,469,471,472,473,474,475,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,21,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,0,81,1,83,87,35,36,37,106,107,108,109,110,112,38,113,114,115,116,31,117,118,119,120,121,122,32,123,124,125,127,128,129,131,132,2,3,133,4,135,5,6,136,137,139,140,7,141,142,8,143,144,9,145,146,147,148,149,150,10,151,152,153,154,155,11,12,156,158,159,160,161,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,192,199,200,201,202,204,205,206,39,40,22,211,23,24,215,42,43,219,220,228,229,230,231,232,233,44,235,238,45,46,239,246,253,254,255,256,257,258,261,263,264,265,266,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,296,297,299,303,304,306,307,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,26,359,360,361,362,363,364,365,366,367,13,368,369,370,371,372,373,374,375,376,377,378,379,380,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,409,410,14,411,412,413,414,415,416,417,418,419,420,421,15,16,422,423,424,426,427,429,430,431,432,433,435,443,444,445,446,447,448,449,450,451,452,453,17,18,19,20,464,465,466,468,469,470,471,472,473,474,475,476,477,34,480,481,482,483,484,485,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[70,72,73,74,75,79,80,0,81,116,117,119,120,122,32,3,143,152,154,155,11,12,156,158,159,160,161,186,192,193,200,201,205,206,39,40,41,23,24,215,42,43,229,238,239,47,246,247,278,279,280,281,284,285,286,292,309,310,381,49,404,405,50,406,407,409,14,411,414,415,416,417,419,420,421,15,16,422,425,428,429,430,431,432,433,17,470,476,478,479,482,483,484],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,21,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,0,81,82,1,83,84,85,86,87,88,89,35,90,91,92,93,94,95,96,97,98,36,99,100,101,102,103,37,104,105,106,107,108,109,110,111,112,38,113,114,115,116,31,117,118,119,120,121,122,32,123,124,125,126,127,128,129,130,131,132,2,3,133,134,4,135,5,6,136,137,138,139,140,7,141,142,8,143,144,9,145,146,147,148,149,150,10,151,152,153,154,155,11,12,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,39,208,40,41,209,210,22,211,23,212,24,213,214,215,42,216,43,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,44,234,235,236,237,238,45,46,239,240,47,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,48,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,26,359,360,361,362,363,364,365,366,367,13,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,49,402,403,404,405,50,406,407,408,27,28,409,410,14,411,412,413,414,415,416,417,418,419,420,421,15,16,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,17,18,19,20,454,29,30,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,33,476,477,34,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[23],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[51,53,54,56,60,451],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[162],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[68,490,491,492,493,494,212],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[190,244],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":133,"org.easymock.tests2.UsageTest.argumentsOrdered":80,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":278,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":123,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":322,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":75,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":61,"org.easymock.tests2.DelegateToTest.testReturnException":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":444,"org.easymock.tests.MockingTest.testPartialClassMocking":296,"org.easymock.tests.MockClassControlTest.testToString":482,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":157,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":93,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":382,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":490,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":137,"org.easymock.tests2.UsageTest.wrongArguments":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":287,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":252,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":265,"org.easymock.samples.ExampleTest.answerVsDelegate":52,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":50,"org.easymock.tests2.UsageConstraintsTest.testNull":135,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":301,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":231,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":487,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":32,"org.easymock.tests2.CaptureTest.testPrimitive":171,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":291,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":401,"org.easymock.tests.UsageTest.moreThanOneArgument":279,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":376,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":459,"org.easymock.tests.UsageTest.argumentsOrdered":285,"org.easymock.tests.UsageVarargTest.varargIntAccepted":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":449,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":494,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":197,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":223,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":453,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":246,"org.easymock.tests.ReplayStateInvalidUsageTest.times":363,"org.easymock.tests2.DependencyTest.testClassMocking":217,"org.easymock.tests2.AnswerTest.answer":162,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":185,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":403,"org.easymock.tests2.CaptureTest.testAnd":168,"org.easymock.tests2.UsageTest.strictResetToDefault":71,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":209,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":118,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":19,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":463,"org.easymock.tests2.DelegateToTest.testDelegate":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":397,"org.easymock.tests.LimitationsTest.mockFinalMethod":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":447,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":274,"org.easymock.tests2.DependencyTest.testClassMockingSupport":218,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":309,"org.easymock.tests2.CaptureTest.testCapture1_2446744":172,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":234,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":395,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":183,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":358,"org.easymock.tests.UsageThrowableTest.throwError":367,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":405,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":488,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":105,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":26,"org.easymock.tests.MockingTest.testInterfaceMocking":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":450,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":456,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":479,"org.easymock.tests2.UsageTest.niceToStrict":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":22,"org.easymock.tests2.MockBuilderTest.testCreateMock":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":101,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":249,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":391,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":119,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":402,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":28,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":409,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":263,"org.easymock.tests.UsageOverloadedMethodTest.overloading":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":98,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":427,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":142,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":347,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":141,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":177,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":467,"org.easymock.tests.MockClassControlTest.testEquals":486,"org.easymock.tests2.EasyMockSupportClassTest.testAll":87,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":399,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":184,"org.easymock.tests2.CaptureTest.testCaptureAll":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":272,"org.easymock.tests.MockNameTest.defaultName":381,"org.easymock.tests2.UsageConstraintsTest.testMatches":8,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":377,"org.easymock.samples.ExampleTest.voteForRemovals":56,"org.easymock.tests.UsageVarargTest.allKinds":475,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":431,"org.easymock.samples.BasicClassMockTest.testPrintContent":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":273,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":372,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":448,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":194,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":441,"org.easymock.tests2.UsageConstraintsTest.greaterThan":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":88,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":18,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":239,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":442,"org.easymock.samples.ExampleTest.voteForRemoval":53,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":240,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":254,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":44,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":70,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":258,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":31,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":443,"org.easymock.tests2.CaptureTest.testCaptureFirst":181,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":117,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":81,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":343,"org.easymock.tests2.CaptureTest.testCapture2_2446744":180,"org.easymock.tests2.UsageTest.moreThanOneArgument":72,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":256,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":330,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":474,"org.easymock.tests.GenericTest.testBridgedEquals":308,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":415,"org.easymock.tests.UsageExpectAndReturnTest.longType":339,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":400,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":25,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":458,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":148,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":398,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":374,"org.easymock.tests.UsageCallCountTest.tooManyCalls":416,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":251,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":387,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":371,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":200,"org.easymock.tests.MockingTest.testNiceClassMocking":302,"org.easymock.tests.MockingTest.testClassMocking":294,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":410,"org.easymock.tests2.UsageConstraintsTest.testContains":7,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":108,"org.easymock.tests2.UsageConstraintsTest.testFind":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":277,"org.easymock.tests.MockTypeTest.fromEasyMockClass":404,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":417,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":112,"org.easymock.tests.UsageExpectAndReturnTest.object":346,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":491,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":469,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":34,"org.easymock.tests.UsageTest.exactCallCountByLastCall":286,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":460,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":267,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":68,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":464,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":352,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":426,"org.easymock.tests.MockClassControlTest.testHashCode":485,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":188,"org.easymock.tests2.EasyMockSupportTest.testVerify":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":96,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":461,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":424,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":27,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":182,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":82,"org.easymock.tests.UsageVarargTest.varargCharAccepted":468,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":434,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":335,"org.easymock.tests2.UsageTest.openCallCountByLastCall":76,"org.easymock.tests.DefaultClassInstantiatorTest.object":435,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":124,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":408,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":476,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":97,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":244,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":187,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":484,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":388,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":353,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":454,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":37,"org.easymock.tests2.UsageTest.resumeIfFailure":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":446,"org.easymock.tests2.StubTest.stubWithReturnValue":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":212,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":345,"org.easymock.tests2.SerializationTest.testAllMockedMethod":114,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":328,"org.easymock.samples.SupportTest.voteForRemovals":60,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":394,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":334,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":163,"org.easymock.tests.UsageExpectAndThrowTest.object":392,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":269,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":146,"org.easymock.tests2.DelegateToTest.testWrongClass":129,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":303,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":304,"org.easymock.tests.UsageStrictMockTest.range":15,"org.easymock.samples.ConstructorCalledMockTest.testTax":64,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":226,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":121,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":393,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":84,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":284,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":264,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":457,"org.easymock.tests2.CaptureTest.testCaptureNone":176,"org.easymock.tests.UsageUnorderedTest.message":292,"org.easymock.tests.UsageVerifyTest.twoReturns":433,"org.easymock.tests.UsageVarargTest.varargByteAccepted":473,"org.easymock.tests2.ThreadingTest.testThreadSafe":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":99,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":413,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":478,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":62,"org.easymock.tests2.CaptureTest.testCapture_2617107":170,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":311,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":332,"org.easymock.tests2.UsageConstraintsTest.any":139,"org.easymock.tests2.StubTest.stub":1,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":445,"org.easymock.tests.UsageExpectAndThrowTest.longType":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":333,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":439,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":361,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":155,"org.easymock.tests2.SerializationTest.testClass":38,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":192,"org.easymock.tests.LimitationsTest.mockNativeMethod":261,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":355,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":243,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":156,"org.easymock.tests2.NameTest.nameForMocksControl":161,"org.easymock.tests2.MockedExceptionTest.testMockedException":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":89,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":283,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":386,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":111,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":299,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":228,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":24,"org.easymock.tests.MockingTest.testNicePartialClassMocking":297,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":233,"org.easymock.tests2.CaptureTest.testCaptureLast":175,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":241,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":310,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":136,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":206,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":147,"org.easymock.tests.MockingTest.testTwoMocks":295,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":207,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":390,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":79,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":10,"org.easymock.samples.ExampleTest.removeNonExistingDocument":57,"org.easymock.tests.UsageStrictMockTest.differentMethods":16,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":248,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":189,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":437,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":255,"org.easymock.tests2.MockBuilderTest.testCreateMockString":43,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":480,"org.easymock.tests.UsageExpectAndThrowTest.floatType":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":90,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":86,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":165,"org.easymock.tests.UsageVerifyTest.twoThrows":432,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":69,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":36,"org.easymock.samples.ExampleTest.voteAgainstRemoval":54,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":323,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests.LimitationsTest.privateConstructor":260,"org.easymock.tests2.UsageConstraintsTest.testNotNull":150,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":106,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":373,"org.easymock.tests2.UsageTest.defaultResetToNice":78,"org.easymock.samples.ExampleTest.voteAgainstRemovals":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":324,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":351,"org.easymock.tests.UsageVarargTest.differentLength":470,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":242,"org.easymock.tests2.CallbackTest.callback":186,"org.easymock.tests2.UsageConstraintsTest.equals":134,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":236,"org.easymock.tests.UsageTest.openCallCountByLastCall":282,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":289,"org.easymock.tests.UsageCallCountTest.tooFewCalls":411,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":202,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":266,"org.easymock.tests.UsageThrowableTest.throwCheckedException":370,"org.easymock.tests.MockingTest.testStrictClassMocking":293,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":205,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":380,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":247,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":204,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":167,"org.easymock.tests.ObjectMethodsTest.testHashCode":477,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":493,"org.easymock.tests2.NameTest.nameForNiceMock":160,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":257,"org.easymock.tests2.DependencyTest.testInterfaceMocking":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":492,"org.easymock.samples.ExampleTest.addDocument":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":100,"org.easymock.tests2.DelegateToTest.testStubDelegate":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":104,"org.easymock.tests2.AnswerTest.stubAnswer":166,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":420,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":213,"org.easymock.tests.UsageVarargTest.varargLongAccepted":472,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":321,"org.easymock.tests.UsageExpectAndReturnTest.floatType":338,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":354,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":67,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":65,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":9,"org.easymock.tests.UsageThrowableTest.noUpperLimit":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":196,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":2,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":221,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":173,"org.easymock.tests2.SerializationTest.test":113,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":436,"org.easymock.tests2.UsageConstraintsTest.testSame":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":337,"org.easymock.samples.SupportTest.addDocument":59,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":203,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":91,"org.easymock.tests.GenericTest.testPackageScope":306,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":195,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":300,"org.easymock.tests2.NameTest.nameForMock":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":348,"org.easymock.tests2.UsageStrictMockTest.differentMethods":12,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":216,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":237,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":340,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":396,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":33,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":20,"org.easymock.tests2.MockedExceptionTest.testRealException":109,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":288,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":366,"org.easymock.tests2.NameTest.nameForStrictMock":159,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":210,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":110,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":232,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":225,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":438,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":145,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":40,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests2.UsageConstraintsTest.lessThan":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":191,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":320,"org.easymock.tests2.CaptureTest.testCaptureRightOne":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":95,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":489,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":17,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":229,"org.easymock.tests.UsageTest.wrongArguments":281,"org.easymock.tests2.MockBuilderTest.testWithConstructor":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":92,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":481,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":349,"org.easymock.tests.UsageVarargTest.varargShortAccepted":471,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":440,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":414,"org.easymock.tests2.UsageConstraintsTest.cmpTo":140,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":315,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":77,"org.easymock.tests2.CaptureTest.testCaptureFromStub":179,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":357,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":41,"org.easymock.tests.UsageTest.unexpectedCallWithArray":280,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":419,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":412,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":350,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":421,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.samples.ExampleTest.addAndChangeDocument":58,"org.easymock.tests.UsageStrictMockTest.testVerify":423,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":66,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":418,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":271,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":451,"org.easymock.tests.LimitationsTest.abstractClass":259,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":452,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":120}}]
