[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[43,44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,36,65,66,67,68,69,70,71,72,73,73,74,74,75],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,43,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,0,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,1,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,2,184,185,186,3,4,187,188,5,6,189,190,191,192,193,194,195,196,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,197,198,199,200,28,201,202,203,204,205,206,207,208,209,210,211,212,47,213,214,48,215,49,216,217,218,219,50,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,29,30,31,32,33,34,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,35,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,51,52,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,53,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,54,380,55,56,381,57,58,382,59,383,60,61,62,384,63,385,64,36,37,38,39,386,387,388,389,40,390,391,392,393,394,395,41,396,397,398,399,400,401,44,402,403,45,46,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,42,424,425,426,427,428,429,430,431,432,433,434,65,435,436,437,438,439,440,441,442,443,66,444,445,446,447,448,67,449,450,451,452,453,454,455,456,68,457,458,69,459,460,70,71,461,462,72,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,73,74,75,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[47],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[77,78,139,167,488,489,320],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,43,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,134,135,0,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,1,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,2,184,185,186,3,4,187,188,5,6,189,190,191,192,193,194,195,196,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,197,198,199,200,28,201,202,203,204,205,206,207,208,209,210,211,212,47,213,214,48,215,218,50,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,29,30,31,32,33,34,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,35,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,51,52,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,53,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,361,363,364,365,366,369,370,372,373,376,377,378,379,55,57,58,382,59,62,384,36,37,38,39,386,387,388,389,40,390,391,392,393,394,395,41,396,397,398,399,400,401,44,402,403,45,46,404,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,42,424,425,426,427,428,429,432,434,65,436,437,440,441,442,443,66,445,448,67,449,450,451,452,453,454,455,456,68,458,69,459,460,70,71,461,462,465,466,467,471,472,473,474,475,476,477,478,73,73,74,74,75,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[490,491,492,493,51,52,53,383,62],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[494],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[82,83,85,373,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[327,328,330,331,332,333,334,335,336,337,346,347,351,352,409,410,411,412,419,420],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[495],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"position":"org.easymock.internal.RecordState:153","failures":[0,5,29,30,31,32,33,34,36,37,38,39],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[496,344],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[76,90,91,94,104,1,167,168,200,28,320,321,326,327,330,332,333,339,342,345,352,395,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:40","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(double.double, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[493],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[77,78,139,497,498,164,167,198,199,201,202,263,320,392,397,398],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:217","failures":[77,78,82,83,85,94,139,140,141,142,144,145,147,148,149,150,151,153,154,163,164,165,166,167,168,169,181,182,183,2,184,185,186,3,4,187,188,5,6,194,195,9,10,12,17,22,199,201,202,203,207,208,209,211,212,213,214,242,258,260,35,262,266,267,269,274,279,289,297,299,301,51,303,309,317,318,319,320,321,322,53,323,324,328,331,334,335,337,338,340,343,346,347,348,349,350,351,354,355,356,357,358,359,360,362,363,364,365,366,367,368,369,370,372,373,374,58,59,60,38,40,390,392,393,394,397,398,400,401,403,409,410,411,412,414,415,416,417,418,419,422,427,428,432,65,66,67,451,452,453,454,455,456,458,71,465,466,474,475,476,477,478,75,479,480,481,482,483,484,486,487],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[499,500,164,198,501,502],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,43,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,134,135,0,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,1,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,2,184,185,186,3,4,187,188,5,6,189,190,191,192,193,194,195,196,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,197,198,199,200,28,201,202,203,204,205,206,207,208,209,210,211,212,47,213,214,48,215,49,216,217,218,219,50,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,29,30,31,32,33,34,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,35,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,51,52,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,53,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,54,55,56,57,58,382,59,60,62,384,63,64,36,37,38,39,387,388,389,40,390,391,392,393,394,395,41,396,397,398,399,400,401,44,402,403,45,46,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,42,424,425,426,427,428,429,430,431,432,433,434,65,435,436,437,438,439,440,441,442,443,66,444,445,446,447,448,67,449,450,451,452,453,454,455,456,68,457,458,69,459,460,70,71,461,462,72,463,464,465,466,467,471,472,473,474,475,476,477,478,73,74,75,479,480,481,482,483,484,485,486,487],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[503,327,335,341,353],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[227,237],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[328,334,346],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[79,80,81,82,83,85,88,127,181,213,214,48,49,50,242,247,248,249,250,251,252,253,254,51,53,324,367,368,369,370,373,374,54,55,56,57,58,382,59,60,384,63,64,36,37,38,432,65,66,67,451,452,454,455,456,68,458,459,460,70,71,461,462,72,471,474,476,477,73,73,74,74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:111","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[77,0,1,182,2,184,185,186,3,4,5,6,192,193,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,245,246,35,36,37,38,39,40,41,42],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[151,164,340],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[422],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[412],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[127,128,132],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":328,"org.easymock.tests2.UsageTest.argumentsOrdered":398,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":364,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":112,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":394,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":478,"org.easymock.tests2.DelegateToTest.testReturnException":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":30,"org.easymock.tests.MockingTest.testPartialClassMocking":82,"org.easymock.tests.MockClassControlTest.testToString":249,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":404,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":438,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":7,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":65,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":466,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":490,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":335,"org.easymock.tests2.UsageTest.wrongArguments":392,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":187,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":224,"org.easymock.samples.ExampleTest.answerVsDelegate":480,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":50,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":87,"org.easymock.tests2.UsageConstraintsTest.testNull":331,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":454,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":254,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":363,"org.easymock.tests2.CaptureTest.testPrimitive":412,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":189,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":26,"org.easymock.tests.UsageTest.moreThanOneArgument":197,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":453,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":178,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":89,"org.easymock.tests.UsageTest.argumentsOrdered":202,"org.easymock.tests.UsageVarargTest.varargIntAccepted":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":117,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":171,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":54,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":469,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":294,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":105,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":175,"org.easymock.tests.ReplayStateInvalidUsageTest.times":234,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":309,"org.easymock.tests2.DependencyTest.testClassMocking":463,"org.easymock.tests2.AnswerTest.answer":401,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":119,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":379,"org.easymock.tests2.CaptureTest.testAnd":409,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":217,"org.easymock.tests2.UsageTest.strictResetToDefault":390,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":460,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":381,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":358,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":93,"org.easymock.tests2.DelegateToTest.testDelegate":301,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":22,"org.easymock.tests.LimitationsTest.mockFinalMethod":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":102,"org.easymock.tests2.DependencyTest.testClassMockingSupport":464,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":194,"org.easymock.tests2.CaptureTest.testCapture1_2446744":413,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":20,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":377,"org.easymock.tests.UsageThrowableTest.throwError":182,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":228,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":219,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":152,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":450,"org.easymock.samples.PartialClassMockTest.testGetArea":75,"org.easymock.tests.MockingTest.testInterfaceMocking":84,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":439,"org.easymock.tests2.UsageTest.niceToStrict":393,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":103,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":58,"org.easymock.tests2.MockBuilderTest.testCreateMock":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":446,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":312,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":16,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":359,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":216,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":246,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":204,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":222,"org.easymock.tests.UsageOverloadedMethodTest.overloading":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":443,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":35,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":341,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":153,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":275,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":340,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":418,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":143,"org.easymock.tests2.EasyMockSupportClassTest.testAll":432,"org.easymock.tests.MockClassControlTest.testEquals":253,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":214,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":24,"org.easymock.tests2.CaptureTest.testCaptureAll":410,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":100,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":378,"org.easymock.tests.MockNameTest.defaultName":190,"org.easymock.tests2.UsageConstraintsTest.testMatches":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":179,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":226,"org.easymock.samples.ExampleTest.voteForRemovals":484,"org.easymock.tests.UsageVarargTest.allKinds":151,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":76,"org.easymock.samples.BasicClassMockTest.testPrintContent":477,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":101,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":3,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":291,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":300,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":493,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":133,"org.easymock.tests2.UsageConstraintsTest.greaterThan":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":433,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":95,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":461,"org.easymock.samples.ExampleTest.voteForRemoval":481,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":134,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":462,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":425,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":220,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":68,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":181,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":40,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":356,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":29,"org.easymock.tests2.CaptureTest.testCaptureFirst":422,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":357,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":400,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":271,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":427,"org.easymock.tests2.CaptureTest.testCapture2_2446744":421,"org.easymock.tests2.UsageTest.moreThanOneArgument":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":120,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":63,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":150,"org.easymock.tests.GenericTest.testBridgedEquals":215,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":211,"org.easymock.tests.UsageExpectAndReturnTest.longType":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":98,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":354,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":25,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":155,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":192,"org.easymock.tests.UsageCallCountTest.tooManyCalls":212,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":186,"org.easymock.tests.MockingTest.testNiceClassMocking":88,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":368,"org.easymock.tests.MockingTest.testClassMocking":80,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":205,"org.easymock.tests2.UsageConstraintsTest.testContains":339,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":38,"org.easymock.tests2.UsageConstraintsTest.testFind":330,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":1,"org.easymock.tests.MockTypeTest.fromEasyMockClass":218,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":389,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":162,"org.easymock.tests.UsageExpectAndReturnTest.object":274,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":458,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":362,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":491,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":145,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":159,"org.easymock.tests.UsageTest.exactCallCountByLastCall":203,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":108,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":90,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":255,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":52,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":260,"org.easymock.tests.MockClassControlTest.testHashCode":252,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":285,"org.easymock.tests2.EasyMockSupportTest.testVerify":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":441,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":91,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":245,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":258,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":376,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":386,"org.easymock.tests.UsageVarargTest.varargCharAccepted":144,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":126,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":125,"org.easymock.tests2.UsageTest.openCallCountByLastCall":395,"org.easymock.tests.DefaultClassInstantiatorTest.object":127,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":365,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":244,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":157,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":442,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":284,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":70,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":251,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":281,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":67,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":250,"org.easymock.tests2.UsageTest.resumeIfFailure":399,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":49,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":468,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":32,"org.easymock.tests2.StubTest.stubWithReturnValue":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":383,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":273,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":350,"org.easymock.tests2.SerializationTest.testAllMockedMethod":324,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":118,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":502,"org.easymock.samples.SupportTest.voteForRemovals":475,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":287,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":19,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":124,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":44,"org.easymock.tests.UsageExpectAndThrowTest.object":17,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":257,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":347,"org.easymock.tests2.DelegateToTest.testWrongClass":299,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":238,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":239,"org.easymock.tests.UsageStrictMockTest.range":167,"org.easymock.samples.ConstructorCalledMockTest.testTax":73,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":472,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":361,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":429,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":201,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":236,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":223,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":499,"org.easymock.tests2.CaptureTest.testCaptureNone":417,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":138,"org.easymock.tests.UsageUnorderedTest.message":139,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":494,"org.easymock.tests.UsageVerifyTest.twoReturns":78,"org.easymock.tests.UsageVarargTest.varargByteAccepted":149,"org.easymock.tests2.ThreadingTest.testThreadSafe":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":444,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":209,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":476,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":160,"org.easymock.tests2.CaptureTest.testCapture_2617107":411,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":6,"org.easymock.tests2.UsageConstraintsTest.any":337,"org.easymock.tests2.StubTest.stub":423,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":31,"org.easymock.tests.UsageExpectAndThrowTest.longType":10,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":131,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":232,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":319,"org.easymock.tests2.SerializationTest.testClass":53,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":289,"org.easymock.tests.LimitationsTest.mockNativeMethod":242,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":283,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":306,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":322,"org.easymock.tests2.NameTest.nameForMocksControl":408,"org.easymock.tests2.MockedExceptionTest.testMockedException":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":434,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":28,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":388,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":11,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":85,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":451,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":60,"org.easymock.tests.MockingTest.testNicePartialClassMocking":83,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":456,"org.easymock.tests2.CaptureTest.testCaptureLast":416,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":195,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":334,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":374,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":348,"org.easymock.tests.MockingTest.testTwoMocks":81,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":15,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":397,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":352,"org.easymock.samples.ExampleTest.removeNonExistingDocument":485,"org.easymock.tests.UsageStrictMockTest.differentMethods":168,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":311,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":286,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":129,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":426,"org.easymock.tests2.MockBuilderTest.testCreateMockString":64,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":435,"org.easymock.tests.UsageExpectAndThrowTest.floatType":9,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":431,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":403,"org.easymock.tests.UsageVerifyTest.twoThrows":77,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":302,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":66,"org.easymock.samples.ExampleTest.voteAgainstRemoval":482,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":113,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":71,"org.easymock.tests.LimitationsTest.privateConstructor":241,"org.easymock.tests2.UsageConstraintsTest.testNotNull":351,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":4,"org.easymock.tests2.UsageTest.defaultResetToNice":396,"org.easymock.samples.ExampleTest.voteAgainstRemovals":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":279,"org.easymock.tests.UsageVarargTest.differentLength":146,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":305,"org.easymock.tests2.CallbackTest.callback":303,"org.easymock.tests2.UsageConstraintsTest.equals":329,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":69,"org.easymock.tests.UsageTest.openCallCountByLastCall":200,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":325,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":5,"org.easymock.tests.UsageCallCountTest.tooFewCalls":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":225,"org.easymock.tests.UsageThrowableTest.throwCheckedException":185,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":500,"org.easymock.tests.MockingTest.testStrictClassMocking":79,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":0,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":373,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":310,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":372,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":46,"org.easymock.tests2.CompareToTest.testGreateOrEqual":503,"org.easymock.tests.ObjectMethodsTest.testHashCode":158,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":495,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":428,"org.easymock.tests2.NameTest.nameForNiceMock":407,"org.easymock.tests2.DependencyTest.testInterfaceMocking":465,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":492,"org.easymock.samples.ExampleTest.addDocument":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":449,"org.easymock.tests2.DelegateToTest.testStubDelegate":298,"org.easymock.tests2.AnswerTest.stubAnswer":45,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":165,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":61,"org.easymock.tests.UsageVarargTest.varargLongAccepted":148,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":111,"org.easymock.tests.UsageExpectAndReturnTest.floatType":266,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":51,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":74,"org.easymock.tests.UsageThrowableTest.noUpperLimit":183,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":293,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":345,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":326,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":467,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":414,"org.easymock.tests2.SerializationTest.test":323,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":265,"org.easymock.tests2.UsageConstraintsTest.testSame":332,"org.easymock.samples.SupportTest.addDocument":474,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":371,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":436,"org.easymock.tests.GenericTest.testPackageScope":213,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":107,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":292,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":86,"org.easymock.tests2.NameTest.nameForMock":405,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":276,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":385,"org.easymock.tests2.UsageStrictMockTest.differentMethods":321,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":459,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":268,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":21,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":156,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":97,"org.easymock.tests2.MockedExceptionTest.testRealException":39,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":221,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":116,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":115,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":188,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":237,"org.easymock.tests2.NameTest.nameForStrictMock":406,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":57,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":387,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":471,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":488,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":130,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":346,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":55,"org.easymock.tests2.UsageStrictMockTest.range":320,"org.easymock.tests2.UsageConstraintsTest.lessThan":353,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":110,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":440,"org.easymock.tests2.CaptureTest.testCaptureRightOne":419,"org.easymock.tests2.UsageConstraintsTest.testOr":333,"org.easymock.tests.UsageRangeTest.combination":94,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":452,"org.easymock.tests.UsageTest.wrongArguments":199,"org.easymock.tests2.MockBuilderTest.testWithConstructor":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":437,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":104,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":277,"org.easymock.tests.UsageVarargTest.varargShortAccepted":147,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":132,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":210,"org.easymock.tests2.UsageConstraintsTest.cmpTo":338,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":106,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests2.CaptureTest.testCaptureFromStub":420,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":227,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":56,"org.easymock.tests.UsageTest.unexpectedCallWithArray":198,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":164,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":208,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":278,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.tests2.UsageConstraintsTest.constraints":327,"org.easymock.samples.ExampleTest.addAndChangeDocument":486,"org.easymock.tests.UsageStrictMockTest.testVerify":170,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":487,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":163,"org.easymock.tests2.CompareToTest.testGreateThan":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":99,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":173,"org.easymock.tests.LimitationsTest.abstractClass":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":270,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":174,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":262,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":489,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":360}}]
