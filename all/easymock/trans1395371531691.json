[{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"name":"name"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,5,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,6,7,8,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,190,191,191,192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjenesisClassInstantiator:26","sourceCode":"return org.objenesis.ObjenesisHelper.org.objenesis.ObjenesisHelper.newInstance(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[193,194,195,196,38,197,39,198,199,200,201,202,203,204,40,205,206,207,208,209,41,210,211,49,212,67,213,214,68,215,69,70,216,71,217,218,96,97,99,101,103,104,106,107,108,219,109,220,221,110,111,112,222,223,224,225,226,227,228,229,230,231,232,233,113,234,235,236,237,238,126,127,128,239,240,241,242,183,243,184,244,245,246,192],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[247,45,46,51,55,56,59,71,75,248,249,221,250,120,121,237,126,127,251,252,239,133],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,253,20,21,22,23,24,25,26,27,28,29,30,31,254,32,33,34,35,36,37,38,39,40,41,42,255,0,256,43,257,247,44,258,45,46,259,260,47,48,210,211,49,261,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,212,67,68,69,70,71,217,72,73,74,262,75,263,76,77,78,264,265,5,79,266,267,80,268,269,270,81,82,83,84,85,271,86,87,272,273,88,89,90,91,92,93,94,248,95,96,97,98,99,100,101,102,274,275,276,277,278,103,104,105,106,107,108,109,110,111,112,113,114,279,115,116,117,280,281,282,118,283,284,285,286,287,288,235,250,289,119,290,120,121,291,122,292,123,293,124,125,294,295,296,126,127,128,129,130,131,297,298,132,133,6,7,8,134,135,299,300,301,302,303,136,137,304,305,138,139,306,307,140,308,309,310,141,142,143,144,145,311,146,312,147,148,149,150,151,313,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,176,342,177,178,179,180,181,182,183,184,185,343,186,187,188,344,189,190,190,191,191,192],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[345,346,190,190,191,191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[42,44,72,76,77,79,119,122,123,136,138,139,140],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:172","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[45,262,264,265,347,348,289,120,292,123,304,305,306,307,313],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[349],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,42,256,43,257,350,44,46,259,260,47,210,211,49,261,62,63,66,212,68,215,73,74,75,263,78,5,267,80,270,81,82,218,83,84,85,271,86,272,273,88,89,90,91,94,248,97,98,101,102,274,275,276,351,277,278,103,105,106,107,108,109,221,111,352,353,354,355,225,113,114,116,117,118,283,284,285,286,287,288,235,356,119,121,291,357,122,292,123,126,127,128,130,131,132,133,6,7,8,299,300,301,302,303,137,308,309,310,358,141,142,143,144,145,359,360,311,361,362,363,364,365,366,367,368,369,370,371,372,312,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,373,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,177,183,243,185,343,186,187,374,188,344],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[42,267,268,280,281],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[375],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:36","sourceCode":"return !(org.easymock.IArgumentMatcher.matches(java.lang.Object))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[376,175],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[47,210,211,49,261,377,279,283,284,285,286,287,288,297,378,314,315,316],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[36,37,38,39,40,41,44,45,46,65,67,68,69,70,71,80,83,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,119,120,121,126,127,128,130,133,6,7,8,141,142,143,144,147,148,149,150,151,152,153,154,155,156,157,160,161,163,164,165,167,168,169,170,171,172,173,185,186,187,188,189,192],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[55,75],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:121","sourceCode":"java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":13,"org.easymock.tests2.UsageTest.argumentsOrdered":265,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":136,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":286,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":263,"org.easymock.tests2.StubTest.stubWithReturnValue":47,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":161,"org.easymock.tests2.SerializationTest.testAllMockedMethod":218,"org.easymock.tests2.DelegateToTest.testReturnException":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":284,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":134,"org.easymock.tests.MockingTest.testPartialClassMocking":126,"org.easymock.samples.SupportTest.voteForRemovals":189,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":242,"org.easymock.tests.MockClassControlTest.testToString":226,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":129,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":322,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":39,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":135,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":255,"org.easymock.tests.UsageExpectAndThrowTest.object":332,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":30,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":37,"org.easymock.tests2.DelegateToTest.testWrongClass":268,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":172,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":173,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":19,"org.easymock.tests2.UsageTest.wrongArguments":262,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":130,"org.easymock.tests.UsageStrictMockTest.range":120,"org.easymock.samples.ConstructorCalledMockTest.testTax":190,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":310,"org.easymock.samples.ExampleTest.answerVsDelegate":343,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":57,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":241,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":96,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":252,"org.easymock.tests2.UsageConstraintsTest.testNull":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":333,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":106,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":231,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":69,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":59,"org.easymock.tests2.CaptureTest.testPrimitive":86,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":132,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":377,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":341,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":195,"org.easymock.tests.UsageTest.moreThanOneArgument":137,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":309,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":143,"org.easymock.tests2.CaptureTest.testCaptureNone":89,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":125,"org.easymock.tests.UsageUnorderedTest.message":313,"org.easymock.tests.UsageVerifyTest.twoReturns":123,"org.easymock.tests.UsageVarargTest.varargByteAccepted":371,"org.easymock.tests2.ThreadingTest.testThreadSafe":62,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":317,"org.easymock.tests.UsageTest.argumentsOrdered":307,"org.easymock.tests.UsageVarargTest.varargIntAccepted":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":205,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":363,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":245,"org.easymock.tests2.CaptureTest.testCapture_2617107":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":147,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":212,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":373,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":298,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":215,"org.easymock.tests2.UsageConstraintsTest.any":20,"org.easymock.tests2.StubTest.stub":260,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":151,"org.easymock.tests.UsageExpectAndThrowTest.longType":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":285,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":2,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":258,"org.easymock.tests2.SerializationTest.testClass":81,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":48,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":95,"org.easymock.tests.LimitationsTest.mockNativeMethod":113,"org.easymock.tests2.AnswerTest.answer":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":171,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":184,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":9,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":351,"org.easymock.tests2.CaptureTest.testAnd":84,"org.easymock.tests2.UsageTest.strictResetToDefault":73,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":259,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":221,"org.easymock.tests2.NameTest.nameForMocksControl":355,"org.easymock.tests2.MockedExceptionTest.testMockedException":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":7,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":321,"org.easymock.tests2.DelegateToTest.testDelegate":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":326,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":128,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":103,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":70,"org.easymock.tests.MockingTest.testNicePartialClassMocking":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":337,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":108,"org.easymock.tests2.CompareToTest.testNotComparable":375,"org.easymock.tests.LimitationsTest.mockFinalMethod":234,"org.easymock.tests2.CaptureTest.testCaptureLast":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":175,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":102,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":303,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":31,"org.easymock.tests.MockingTest.testTwoMocks":238,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":174,"org.easymock.tests2.CaptureTest.testCapture1_2446744":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":335,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":275,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":264,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":34,"org.easymock.tests.UsageThrowableTest.throwError":176,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":376,"org.easymock.tests.UsageStrictMockTest.differentMethods":121,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":64,"org.easymock.tests2.MockBuilderTest.testCreateMockString":217,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":224,"org.easymock.tests.UsageExpectAndThrowTest.floatType":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":145,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":26,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":256,"org.easymock.tests.UsageVerifyTest.twoThrows":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":40,"org.easymock.samples.PartialClassMockTest.testGetArea":192,"org.easymock.tests.MockingTest.testInterfaceMocking":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":148,"org.easymock.samples.ExampleTest.voteAgainstRemoval":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":293,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":124,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":201,"org.easymock.tests2.UsageTest.niceToStrict":75,"org.easymock.tests.LimitationsTest.privateConstructor":233,"org.easymock.tests2.UsageConstraintsTest.testNotNull":33,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":182,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":68,"org.easymock.tests2.MockBuilderTest.testCreateMock":216,"org.easymock.tests2.UsageTest.defaultResetToNice":78,"org.easymock.samples.ExampleTest.voteAgainstRemovals":185,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":207,"org.easymock.tests2.CallbackTest.callback":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":346,"org.easymock.tests.UsageTest.openCallCountByLastCall":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":331,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":55,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":10,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":296,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":359,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":308,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":297,"org.easymock.tests.UsageCallCountTest.tooFewCalls":361,"org.easymock.tests.UsageOverloadedMethodTest.overloading":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":209,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":282,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":24,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":99,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":163,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":23,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":3,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":358,"org.easymock.tests.UsageThrowableTest.throwCheckedException":179,"org.easymock.tests.MockClassControlTest.testEquals":230,"org.easymock.tests2.EasyMockSupportClassTest.testAll":38,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":243,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":339,"org.easymock.tests.MockingTest.testStrictClassMocking":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":301,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":276,"org.easymock.tests2.CaptureTest.testCaptureAll":85,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":279,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":101,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":98,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":349,"org.easymock.tests2.UsageConstraintsTest.testMatches":25,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":100,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":144,"org.easymock.samples.ExampleTest.voteForRemovals":188,"org.easymock.tests2.NameTest.nameForNiceMock":354,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":66,"org.easymock.tests.UsageVarargTest.allKinds":312,"org.easymock.tests2.DependencyTest.testInterfaceMocking":36,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":302,"org.easymock.samples.BasicClassMockTest.testPrintContent":246,"org.easymock.samples.ExampleTest.addDocument":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":206,"org.easymock.tests2.DelegateToTest.testStubDelegate":80,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":181,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":247,"org.easymock.tests2.AnswerTest.stubAnswer":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":288,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":269,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":119,"org.easymock.tests2.UsageConstraintsTest.greaterThan":27,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":6,"org.easymock.tests.UsageVarargTest.varargLongAccepted":370,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":112,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":291,"org.easymock.samples.ExampleTest.voteForRemoval":186,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":222,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":63,"org.easymock.tests.UsageExpectAndReturnTest.floatType":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":83,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":191,"org.easymock.tests.UsageThrowableTest.noUpperLimit":342,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":28,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":235,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":11,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":193,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":272,"org.easymock.tests2.SerializationTest.test":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":378,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":52,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":177,"org.easymock.tests2.UsageConstraintsTest.testSame":16,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":283,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":266,"org.easymock.tests2.CaptureTest.testCaptureFirst":94,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":53,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":79,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":199,"org.easymock.tests.GenericTest.testPackageScope":183,"org.easymock.tests2.CaptureTest.testCapture2_2446744":93,"org.easymock.tests2.UsageTest.moreThanOneArgument":74,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":65,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":320,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":71,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":372,"org.easymock.tests.GenericTest.testBridgedEquals":244,"org.easymock.tests2.NameTest.nameForMock":352,"org.easymock.tests.UsageExpectAndReturnTest.longType":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":299,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":164,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":254,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":146,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":338,"org.easymock.tests2.UsageStrictMockTest.differentMethods":46,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":141,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":336,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":8,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":311,"org.easymock.tests2.MockedExceptionTest.testRealException":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":208,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":1,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":131,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":180,"org.easymock.tests.MockingTest.testNiceClassMocking":239,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":97,"org.easymock.tests.MockingTest.testClassMocking":237,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":360,"org.easymock.tests2.NameTest.nameForStrictMock":353,"org.easymock.tests2.UsageConstraintsTest.testContains":22,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":49,"org.easymock.tests2.UsageConstraintsTest.testFind":14,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":117,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":214,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":277,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":107,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":278,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":250,"org.easymock.tests.UsageExpectAndReturnTest.object":162,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":194,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":29,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":67,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.UsageConstraintsTest.lessThan":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":58,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":368,"org.easymock.tests.UsageTest.exactCallCountByLastCall":140,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":114,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":202,"org.easymock.tests2.CaptureTest.testCaptureRightOne":91,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":318,"org.easymock.tests2.UsageConstraintsTest.testOr":17,"org.easymock.tests.UsageRangeTest.combination":133,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":364,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":104,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":168,"org.easymock.tests.UsageTest.wrongArguments":305,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":281,"org.easymock.tests.MockClassControlTest.testHashCode":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":200,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":203,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":319,"org.easymock.tests.UsageVarargTest.varargShortAccepted":369,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":295,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":280,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":274,"org.easymock.tests2.UsageConstraintsTest.cmpTo":21,"org.easymock.tests.UsageVarargTest.varargCharAccepted":367,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":350,"org.easymock.tests2.UsageTest.openCallCountByLastCall":76,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":77,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":61,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":294,"org.easymock.tests2.CaptureTest.testCaptureFromStub":92,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":213,"org.easymock.tests.UsageTest.unexpectedCallWithArray":304,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":204,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":362,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":345,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":166,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":290,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":228,"org.easymock.tests2.UsageConstraintsTest.constraints":12,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":110,"org.easymock.samples.ExampleTest.addAndChangeDocument":344,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":328,"org.easymock.tests.UsageStrictMockTest.testVerify":357,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":314,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":356,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":300,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":273,"org.easymock.tests2.UsageTest.resumeIfFailure":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":240,"org.easymock.tests.LimitationsTest.abstractClass":232,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":158,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":150,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":365,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":56}}]
