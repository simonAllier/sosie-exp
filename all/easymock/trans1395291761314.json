[{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:205","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1064","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[2,37,38,39,40,41,42,43,44,45,46,47,48,10],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[50,51,52,53,54,11,55,56,12,13,57,58,15,59,60,16,17,20,21,22,23,24,25,26,61,62,7,63,64,8,65,27,28,29,47,66,48,67,68,69,70,71,72,73,74,75,76,77,78,79,31,80,81,82,83,84,85,86,87,88,89,90,91,91,92,92,34],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[93],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[51,56,57,7,9,94,95,96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[30,97],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[12,14,17,25],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[99],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[15,59,60,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[145,146,147,148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[2,37,41,42,43,149,46,47,48,10],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[150,151,152,153,154,155,125,156,157,158,159,160,161,162],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[76,163,164,165,166,167],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[168,161],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected"}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[50,51,52,53,54,11,55,56,12,13,57,60,16,169,17,18,20,21,22,23,24,25,170,26,61,62,7,63,64,8,171,172,173,65,27,28,29,47,66,48,69,77,78,79,31,32,33,82,83,84,85,86,89,90,91,91,92,92,34],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[174],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[22,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[168,175,176,177,157,161],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[145,178,146,179,147,180,181,182,148,183],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[179],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[87,184,185,186,187,188],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[189],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[145,178,146,179,147,180,181,182,190,191,192,193,148,183,93,194,195,196,197,198],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":182,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":140,"org.easymock.tests2.UsageTest.argumentsOrdered":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":137,"org.easymock.tests2.StubTest.stubWithReturnValue":101,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":2,"org.easymock.tests2.SerializationTest.testAllMockedMethod":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":135,"org.easymock.tests.MockingTest.testPartialClassMocking":83,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":39,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":175,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":30,"org.easymock.tests.MockClassControlTest.testToString":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":14,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":116,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":27,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":104,"org.easymock.tests.UsageExpectAndThrowTest.object":114,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":196,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":41,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":167,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":183,"org.easymock.tests2.UsageTest.wrongArguments":150,"org.easymock.samples.ConstructorCalledMockTest.testTax":91,"org.easymock.tests.UsageStrictMockTest.range":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":61,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":33,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":189,"org.easymock.tests2.UsageConstraintsTest.testNull":191,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":115,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":75,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":22,"org.easymock.tests2.CaptureTest.testPrimitive":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":123,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":159,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":176,"org.easymock.tests.UsageUnorderedTest.message":155,"org.easymock.tests.UsageVerifyTest.twoReturns":156,"org.easymock.tests.UsageTest.argumentsOrdered":160,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":80,"org.easymock.tests2.CaptureTest.testCapture_2617107":146,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":143,"org.easymock.tests2.UsageConstraintsTest.any":194,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":21,"org.easymock.tests.UsageExpectAndThrowTest.longType":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":136,"org.easymock.tests2.SerializationTest.testClass":47,"org.easymock.tests.LimitationsTest.mockNativeMethod":77,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":31,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":93,"org.easymock.tests2.CaptureTest.testAnd":145,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":173,"org.easymock.tests2.UsageTest.strictResetToDefault":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":56,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":1,"org.easymock.tests2.MockedExceptionTest.testMockedException":59,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":141,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":108,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":50,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":23,"org.easymock.tests.MockingTest.testNicePartialClassMocking":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":119,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":8,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":148,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":35,"org.easymock.tests.MockingTest.testTwoMocks":82,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":112,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":151,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":198,"org.easymock.tests.UsageThrowableTest.throwError":126,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":185,"org.easymock.tests2.MockBuilderTest.testCreateMockString":26,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":68,"org.easymock.tests.UsageExpectAndThrowTest.floatType":106,"org.easymock.tests.UsageVerifyTest.twoThrows":125,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":28,"org.easymock.samples.PartialClassMockTest.testGetArea":34,"org.easymock.tests2.CompareToTest.testLessOrEqual":99,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":81,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":105,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":6,"org.easymock.tests2.UsageConstraintsTest.testNotNull":197,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":15,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":132,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":20,"org.easymock.tests2.MockBuilderTest.testCreateMock":24,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":165,"org.easymock.tests2.CallbackTest.callback":67,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":113,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":94,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":133,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":88,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":63,"org.easymock.tests.UsageThrowableTest.throwCheckedException":129,"org.easymock.tests.MockClassControlTest.testEquals":74,"org.easymock.tests2.EasyMockSupportClassTest.testAll":65,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":79,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":121,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":177,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":171,"org.easymock.tests2.CaptureTest.testCaptureAll":178,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":64,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":124,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":7,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":43,"org.easymock.samples.BasicClassMockTest.testPrintContent":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":95,"org.easymock.tests2.DelegateToTest.testStubDelegate":49,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":46,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":174,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":57,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":92,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":86,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":102,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":37,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":184,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":127,"org.easymock.tests2.UsageConstraintsTest.testSame":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":134,"org.easymock.tests2.CaptureTest.testCaptureFirst":36,"org.easymock.tests.GenericTest.testPackageScope":78,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":25,"org.easymock.tests.GenericTest.testBridgedEquals":97,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":122,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":170,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":120,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":118,"org.easymock.tests2.MockedExceptionTest.testRealException":100,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":38,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":109,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":130,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":62,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":169,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":60,"org.easymock.tests2.UsageConstraintsTest.testFind":190,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":144,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":19,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":53,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":195,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":17,"org.easymock.tests2.UsageStrictMockTest.range":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":42,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":149,"org.easymock.tests2.CaptureTest.testCaptureRightOne":147,"org.easymock.tests2.UsageConstraintsTest.testOr":193,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":51,"org.easymock.tests.UsageTest.wrongArguments":158,"org.easymock.tests2.MockBuilderTest.testWithConstructor":0,"org.easymock.tests.MockClassControlTest.testHashCode":73,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":69,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":187,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":103,"org.easymock.tests.DefaultClassInstantiatorTest.object":87,"org.easymock.tests2.CaptureTest.testCaptureFromStub":180,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":18,"org.easymock.tests.UsageTest.unexpectedCallWithArray":157,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":154,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":111,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":128,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":161,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":3,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":72,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":12,"org.easymock.tests2.UsageConstraintsTest.constraints":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":110,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":29,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":172,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":32}}]
