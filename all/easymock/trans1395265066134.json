[{"position":"org.easymock.internal.RecordState:217","failures":[0,1,2,3,4,5,6,7,8],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[9,9,10,10,11,12,13,14,15,4,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,8,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[35,49,44,50],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[9,10,11,13,14,15,4,21,22,23,24,25,26,27,28,29,30,31,32,33,8,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[51,52,53,54,55,56],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[90,91,92,93,94,95,96],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[51,52,53,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[97,98,99],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[62,100,101,102],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[103,52,104,105,106,1,2,107,108,109,110,111,4,112,113,114,115,116,55,117,118,119,120,121,8,122,123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[124],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[125,126,127,128,129],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[130,131],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[132,133,134,135,136,9,9,10,10,137,138,139,140,141,142,143,144,145,146,147,148,21,22,24,26,28,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:249","sourceCode":"return ","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[149,150,151,152,153,154],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[103,155,156,157,106,1,2,107,158,159,160,54,4,112,113,161,162,163,164,121,165,166,167,8,122,123],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[90,91,92,168,93,94,169,95,170,96],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[171,132,172,133,134,173,135,174,175,136,176,9,10,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,130,130,200,201,103,137,138,139,140,141,202,203,204,142,143,205,206,207,208,209,144,145,146,147,148,210,211,212,11,213,214,215,216,217,218,219,220,221,222,223,224,225,0,226,227,228,229,230,13,14,231,232,15,106,1,2,233,107,53,158,234,235,159,160,3,236,237,238,239,240,241,242,243,244,111,245,246,54,4,247,112,113,248,249,250,251,252,253,254,255,256,257,258,259,260,261,21,22,23,24,25,26,27,28,29,30,262,263,264,265,266,267,268,269,270,271,272,31,32,273,274,275,276,277,100,278,149,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,33,295,296,297,298,299,300,301,302,151,303,304,305,152,306,307,308,5,309,310,311,97,98,99,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,153,337,338,154,339,340,341,342,343,6,344,121,165,345,101,346,347,348,166,167,349,7,350,351,8,352,122,123,353,354,355,356,357,358,359,360,34,361,35,36,49,362,37,38,39,40,363,364,365,366,41,367,42,43,102,44,45,368,369,370,371,50,46,47,48,372,373,374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[249,250,251,275,280,283,375,376,377,331,378],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"position":"org.easymock.internal.MockBuilder:71","failures":[171,379,380,381,149,281,282,150,151,303,304,97,153,337,382,338,154,339,340,341,342,343],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[171,132,172,133,134,173,135,174,175,136,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,103,137,138,139,140,141,202,203,204,142,143,205,206,207,208,209,144,145,146,147,148,210,383,211,212,11,214,225,0,13,14,231,232,15,106,1,2,233,107,158,159,160,3,240,110,245,246,54,4,247,112,113,248,249,250,251,384,252,253,254,255,257,258,260,261,26,27,28,29,30,262,263,264,265,266,267,268,269,270,271,272,31,32,273,274,275,276,277,100,278,279,281,282,283,284,285,286,287,289,290,291,292,293,294,296,297,298,301,302,151,303,304,305,307,5,309,310,311,97,98,99,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,161,162,163,164,333,334,336,337,338,339,340,342,6,344,121,165,345,101,166,167,349,7,350,351,8,352,122,123,353,358,359,360,34,361,35,36,49,362,37,38,39,40,363,364,365,366,41,367,42,43,102,44,45,368,369,370,50,46,47,48,372,373,374],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"max"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[103,105,1,2,53,158,159,160,111,54,112,165,166,167,122],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[171,177,178,385,200,201,379,386,214,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,380,381,402,403,404,249,250,251,405,406,407,273,408,274,275,277,100,278,149,279,409,280,281,282,283,410,150,411,412,302,413,151,414,415,375,416,376,377,417,303,418,419,420,421,422,304,152,306,307,99,326,327,329,331,153,337,382,423,338,154,339,340,341,342,343,424,425],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[171,9,9,10,10,177,178,200,201,379,214,395,380,381,404,249,250,251,273,274,275,277,100,278,149,279,280,281,282,283,302,151,303,304,307,97,99,426,427,326,327,328,329,331,332,153,428,337,382,338,154,339,340,341,342,429,343,374],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[430],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[369],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[171,132,133,134,135,136,430,431,432,433,200,379,137,138,139,140,141,202,203,204,142,143,205,206,207,208,209,144,145,146,147,148,210,383,211,212,11,224,0,226,227,228,229,230,13,14,15,106,2,233,107,234,235,3,110,4,112,113,249,250,251,125,126,127,128,129,259,260,261,26,27,28,29,30,31,32,273,274,275,276,277,100,278,279,281,282,283,284,285,287,288,291,292,293,294,295,296,297,298,299,300,301,302,151,303,304,5,310,97,98,312,313,314,315,316,317,318,320,321,322,323,325,326,327,328,329,330,331,332,334,338,339,340,342,6,344,121,345,346,347,349,7,8,122,123,358,359,34,361,35,36,49,362,37,38,39,40,363,364,365,366,41,367,42,43,102,44,45,368,369,370,50,46,47,48,374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[434],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[213,435,436,437,231,236,237,238,239,240,241,438,66,152,306,307,308,34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[51,52,53,54,55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[439,440,441],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":362,"org.easymock.tests2.UsageTest.argumentsOrdered":167,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":233,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":322,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":101,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":179,"org.easymock.tests2.DelegateToTest.testReturnException":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":237,"org.easymock.tests.MockingTest.testPartialClassMocking":249,"org.easymock.tests.MockClassControlTest.testToString":396,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":180,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":151,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":155,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":359,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":90,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":364,"org.easymock.tests2.UsageTest.wrongArguments":165,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":13,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":217,"org.easymock.samples.ExampleTest.answerVsDelegate":172,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":381,"org.easymock.tests2.UsageConstraintsTest.testNull":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":277,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":401,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":321,"org.easymock.tests2.CaptureTest.testPrimitive":287,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":15,"org.easymock.tests.UsageTest.moreThanOneArgument":107,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":199,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":23,"org.easymock.tests.UsageTest.argumentsOrdered":160,"org.easymock.tests.UsageVarargTest.varargIntAccepted":264,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":26,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":94,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":30,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":73,"org.easymock.tests.ReplayStateInvalidUsageTest.times":64,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":325,"org.easymock.tests2.AnswerTest.answer":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":357,"org.easymock.tests2.CaptureTest.testAnd":284,"org.easymock.tests2.UsageTest.strictResetToDefault":344,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":22,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":316,"org.easymock.tests2.DelegateToTest.testDelegate":336,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":72,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":195,"org.easymock.tests.LimitationsTest.mockFinalMethod":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":223,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":114,"org.easymock.tests2.CaptureTest.testCapture1_2446744":288,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":440,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":193,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":355,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":59,"org.easymock.tests.UsageThrowableTest.throwError":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":25,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":76,"org.easymock.samples.PartialClassMockTest.testGetArea":171,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":416,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":181,"org.easymock.tests2.UsageTest.niceToStrict":345,"org.easymock.tests2.ThreadingTest.testChangeDefault":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":16,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":338,"org.easymock.tests2.MockBuilderTest.testCreateMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":420,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":189,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":55,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":317,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":384,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":215,"org.easymock.tests.UsageOverloadedMethodTest.overloading":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":422,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":42,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":206,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":259,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":367,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":293,"org.easymock.tests.MockClassControlTest.testEquals":400,"org.easymock.tests2.EasyMockSupportClassTest.testAll":302,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":201,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":197,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":426,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":221,"org.easymock.tests2.CaptureTest.testCaptureAll":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":356,"org.easymock.tests2.UsageConstraintsTest.testMatches":43,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":24,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":57,"org.easymock.samples.ExampleTest.voteForRemovals":135,"org.easymock.tests.UsageVarargTest.allKinds":272,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":106,"org.easymock.samples.BasicClassMockTest.testPrintContent":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":222,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":229,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":169,"org.easymock.tests2.UsageConstraintsTest.greaterThan":44,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":383,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":283,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":77,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":393,"org.easymock.samples.ExampleTest.voteForRemoval":133,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":410,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":149,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":69,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":6,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":314,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":236,"org.easymock.tests2.CaptureTest.testCaptureFirst":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":315,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":7,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":204,"org.easymock.tests2.UsageTest.moreThanOneArgument":121,"org.easymock.tests2.CaptureTest.testCapture2_2446744":295,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":300,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":342,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":271,"org.easymock.tests.GenericTest.testBridgedEquals":386,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":257,"org.easymock.tests.UsageExpectAndReturnTest.longType":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":219,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":312,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":429,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":198,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":12,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":371,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":196,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":436,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":21,"org.easymock.tests.UsageCallCountTest.tooManyCalls":258,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":421,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":142,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":185,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":228,"org.easymock.tests.MockingTest.testNiceClassMocking":405,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":327,"org.easymock.tests.MockingTest.testClassMocking":403,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":428,"org.easymock.tests2.UsageConstraintsTest.testContains":41,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":307,"org.easymock.tests2.UsageConstraintsTest.testFind":37,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":261,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":245,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":373,"org.easymock.tests.UsageExpectAndReturnTest.object":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":91,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":266,"org.easymock.tests.UsageTest.exactCallCountByLastCall":3,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":18,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":96,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":145,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":262,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":243,"org.easymock.tests.MockClassControlTest.testHashCode":399,"org.easymock.tests2.EasyMockSupportTest.testVerify":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":377,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":354,"org.easymock.tests.UsageVarargTest.varargCharAccepted":265,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":129,"org.easymock.tests2.UsageTest.openCallCountByLastCall":346,"org.easymock.tests.DefaultClassInstantiatorTest.object":387,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":323,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":417,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":226,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":398,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":75,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":281,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":186,"org.easymock.tests.CapturesMatcherTest.test":130,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":146,"org.easymock.tests.ReplayStateInvalidCallsTest.times":81,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":435,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":82,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":397,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":304,"org.easymock.tests2.UsageTest.resumeIfFailure":349,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":239,"org.easymock.tests2.StubTest.stubWithReturnValue":34,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":143,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":50,"org.easymock.tests2.SerializationTest.testAllMockedMethod":99,"org.easymock.samples.SupportTest.voteForRemovals":136,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":56,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":192,"org.easymock.tests.UsageExpectAndThrowTest.object":190,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":369,"org.easymock.tests2.DelegateToTest.testWrongClass":335,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":31,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":79,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":32,"org.easymock.tests.UsageStrictMockTest.range":112,"org.easymock.samples.ConstructorCalledMockTest.testTax":9,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":319,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":191,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":411,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":159,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":216,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":51,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":71,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":432,"org.easymock.tests2.CaptureTest.testCaptureNone":292,"org.easymock.tests.UsageUnorderedTest.message":103,"org.easymock.tests.UsageVerifyTest.twoReturns":2,"org.easymock.tests.UsageVarargTest.varargByteAccepted":270,"org.easymock.tests2.ThreadingTest.testThreadSafe":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":418,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":255,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":177,"org.easymock.tests2.CaptureTest.testCapture_2617107":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":127,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":232,"org.easymock.tests2.UsageConstraintsTest.any":365,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":63,"org.easymock.tests2.StubTest.stub":360,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":437,"org.easymock.tests.UsageExpectAndThrowTest.longType":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":238,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":391,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":62,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":352,"org.easymock.tests2.SerializationTest.testClass":97,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":361,"org.easymock.tests.LimitationsTest.mockNativeMethod":273,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":148,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":379,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":87,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":353,"org.easymock.tests2.NameTest.nameForMocksControl":164,"org.easymock.tests2.MockedExceptionTest.testMockedException":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":413,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":235,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":184,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":251,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":274,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":340,"org.easymock.tests.MockingTest.testNicePartialClassMocking":250,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":278,"org.easymock.tests2.CaptureTest.testCaptureLast":291,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":115,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":86,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":332,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":363,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":370,"org.easymock.tests.MockingTest.testTwoMocks":404,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":83,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":378,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":137,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":188,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":166,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":47,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":439,"org.easymock.tests.UsageStrictMockTest.differentMethods":113,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":61,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":389,"org.easymock.tests2.ConstraintsToStringTest.andToString":119,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":299,"org.easymock.tests2.MockBuilderTest.testCreateMockString":343,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":414,"org.easymock.tests.UsageExpectAndThrowTest.floatType":182,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":102,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":309,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":303,"org.easymock.samples.ExampleTest.voteAgainstRemoval":134,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":126,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":282,"org.easymock.tests.LimitationsTest.privateConstructor":407,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":124,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":152,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":230,"org.easymock.tests2.UsageTest.defaultResetToNice":348,"org.easymock.samples.ExampleTest.voteAgainstRemovals":132,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":144,"org.easymock.tests.UsageVarargTest.differentLength":267,"org.easymock.tests2.CallbackTest.callback":305,"org.easymock.tests.UsageTest.openCallCountByLastCall":234,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":231,"org.easymock.tests.UsageCallCountTest.tooFewCalls":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":218,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":434,"org.easymock.tests.UsageThrowableTest.throwCheckedException":227,"org.easymock.tests.MockingTest.testStrictClassMocking":402,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":52,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":213,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":331,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":328,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":65,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":330,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":311,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":93,"org.easymock.tests2.NameTest.nameForNiceMock":163,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":85,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":301,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":80,"org.easymock.tests2.DependencyTest.testInterfaceMocking":358,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":92,"org.easymock.samples.ExampleTest.addDocument":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":419,"org.easymock.tests2.DelegateToTest.testStubDelegate":334,"org.easymock.tests2.AnswerTest.stubAnswer":310,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":4,"org.easymock.tests.UsageVarargTest.varargLongAccepted":269,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":147,"org.easymock.tests.UsageExpectAndReturnTest.floatType":139,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":374,"org.easymock.tests2.ConstraintsToStringTest.orToString":116,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":10,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":109,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":45,"org.easymock.tests.UsageThrowableTest.noUpperLimit":225,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":36,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":424,"org.easymock.tests2.SerializationTest.test":98,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":289,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":138,"org.easymock.tests2.UsageConstraintsTest.testSame":39,"org.easymock.samples.SupportTest.addDocument":175,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":415,"org.easymock.tests.GenericTest.testPackageScope":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":17,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":68,"org.easymock.tests2.NameTest.nameForMock":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":207,"org.easymock.tests2.UsageStrictMockTest.differentMethods":123,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":409,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":141,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":194,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":212,"org.easymock.tests2.MockedExceptionTest.testRealException":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":19,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":170,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":14,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":67,"org.easymock.tests2.NameTest.nameForStrictMock":162,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":423,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":100,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":425,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":390,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":156,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":368,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":337,"org.easymock.tests2.UsageStrictMockTest.range":122,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":74,"org.easymock.tests2.UsageConstraintsTest.lessThan":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":168,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":313,"org.easymock.tests2.CaptureTest.testCaptureRightOne":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":376,"org.easymock.tests2.UsageConstraintsTest.testOr":40,"org.easymock.tests.UsageRangeTest.combination":210,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":275,"org.easymock.tests.UsageTest.wrongArguments":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":375,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":395,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":208,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":392,"org.easymock.tests.UsageVarargTest.varargShortAccepted":268,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":256,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":88,"org.easymock.tests2.UsageConstraintsTest.cmpTo":366,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":78,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":347,"org.easymock.tests2.CaptureTest.testCaptureFromStub":33,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":58,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":382,"org.easymock.tests.UsageTest.unexpectedCallWithArray":53,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":84,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":54,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":254,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":209,"org.easymock.tests2.CaptureTest.testCapture":131,"org.easymock.tests2.UsageConstraintsTest.constraints":49,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":247,"org.easymock.samples.ExampleTest.addAndChangeDocument":174,"org.easymock.tests2.ConstraintsToStringTest.notToString":117,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":176,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":220,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":290,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":28,"org.easymock.tests.LimitationsTest.abstractClass":406,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":203,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":29,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":157,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":318}}]
