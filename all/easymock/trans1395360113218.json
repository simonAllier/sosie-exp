[{"transplant":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:210","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,73,74,134,135,136],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,73,74,134,135,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[137],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[138,139],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[140,141],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:163","failures":[142,143],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[98,102,103],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[144,142,143],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[145,22,23,26,27,146,28,147,148,149,150,138,151,152,73,74,85],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[145,22,23,153,146,154,147,148,155,149,156,150,138,139,36,37,140,141,151,157],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[158,159,21,160],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[71,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[2,3,4,162,5,6,7,8,163,9,164,164,165,165,10,166,11,12,13,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,14,15,16,17,18,19,20,158,159,21,190,191,192,193,194,195,196,197,145,22,23,153,198,24,25,26,27,199,146,154,200,28,29,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,91,92,93,94,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,30,245,246,247,248,249,31,32,33,34,35,95,250,251,147,148,252,155,149,156,150,138,139,36,37,253,254,255,256,257,258,259,260,140,141,261,38,39,151,157,262,263,40,41,42,43,264,144,265,266,142,143,267,44,268,269,45,270,271,272,273,274,46,275,276,277,278,279,96,280,281,47,282,48,283,97,284,49,50,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,51,313,314,315,316,317,318,319,98,320,321,322,323,324,325,326,327,328,329,330,331,99,52,100,101,102,103,104,105,53,54,55,56,57,58,59,60,61,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,106,107,108,109,110,111,348,349,350,351,352,353,62,354,63,64,65,66,355,67,68,356,357,69,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,112,395,396,397,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,70,398,399,400,401,402,71,72,403,404,405,133,406,407,408,409,410,411,412,152,73,74,413,414,415,134,75,76,77,416,78,79,80,81,82,83,84,85,86,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,87,441,442,443,444,161,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,135,471,472,88,473,136,89,90,474],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[2,3,4,162,5,6,7,8,9,164,164,165,165,10,166,11,12,13,167,168,169,170,171,177,186,187,188,14,15,16,17,18,19,20,158,159,21,190,191,192,193,194,195,196,197,145,22,23,153,198,24,25,26,27,199,146,154,200,28,29,201,202,203,204,205,208,212,213,214,217,219,91,92,93,94,225,236,237,238,239,240,241,242,243,244,30,245,246,247,248,249,31,32,33,34,35,95,250,251,147,148,155,149,156,150,138,139,36,37,253,254,255,256,257,258,259,260,140,141,261,38,39,151,157,262,40,41,42,43,264,144,265,266,142,143,44,45,271,272,46,96,280,281,47,282,48,283,97,284,49,50,285,286,290,293,303,309,312,51,313,314,319,98,320,321,322,323,324,325,327,329,330,99,52,100,101,102,103,104,105,53,54,55,56,57,58,59,60,61,332,333,334,106,107,108,109,110,111,62,63,64,65,66,67,68,357,69,358,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,392,393,394,112,395,396,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,70,400,71,72,405,133,412,152,73,74,413,414,415,134,75,76,77,78,79,80,81,82,83,84,85,86,417,418,419,420,421,422,426,427,429,87,441,442,443,459,465,467,468,469,470,135,471,88,473,136,89,90,474],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":148,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests2.UsageTest.argumentsOrdered":50,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":453,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":48,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testReturnException":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":107,"org.easymock.tests.MockingTest.testPartialClassMocking":426,"org.easymock.tests.MockClassControlTest.testToString":435,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":263,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":297,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":113,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":293,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":187,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":412,"org.easymock.tests2.UsageTest.wrongArguments":47,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":183,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":317,"org.easymock.samples.ExampleTest.answerVsDelegate":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":351,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":431,"org.easymock.tests2.UsageConstraintsTest.testNull":149,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":203,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":440,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":31,"org.easymock.tests2.CaptureTest.testPrimitive":153,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":413,"org.easymock.tests.UsageTest.moreThanOneArgument":471,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":132,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":420,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":402,"org.easymock.tests.UsageTest.argumentsOrdered":90,"org.easymock.tests.UsageVarargTest.varargIntAccepted":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":458,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":321,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":230,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":445,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":325,"org.easymock.tests.ReplayStateInvalidUsageTest.times":388,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":177,"org.easymock.tests2.DependencyTest.testClassMocking":184,"org.easymock.tests2.AnswerTest.answer":264,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":460,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":235,"org.easymock.tests2.CaptureTest.testAnd":145,"org.easymock.tests2.UsageTest.strictResetToDefault":280,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":419,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":245,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":404,"org.easymock.tests2.DelegateToTest.testDelegate":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":128,"org.easymock.tests.LimitationsTest.mockFinalMethod":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":411,"org.easymock.tests2.DependencyTest.testClassMockingSupport":185,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":329,"org.easymock.tests2.CaptureTest.testCapture1_2446744":198,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":233,"org.easymock.tests.UsageThrowableTest.throwError":99,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":382,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":350,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":311,"org.easymock.samples.PartialClassMockTest.testGetArea":166,"org.easymock.tests.MockingTest.testInterfaceMocking":428,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":322,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":313,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":114,"org.easymock.tests2.UsageTest.niceToStrict":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":298,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":347,"org.easymock.tests2.ThreadingTest.testChangeDefault":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":45,"org.easymock.tests2.MockBuilderTest.testCreateMock":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":306,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":180,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":122,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":246,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":443,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":315,"org.easymock.tests.UsageOverloadedMethodTest.overloading":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":308,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":112,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":256,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":371,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":255,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":199,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":416,"org.easymock.tests.MockClassControlTest.testEquals":439,"org.easymock.tests2.EasyMockSupportClassTest.testAll":290,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":69,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":409,"org.easymock.tests2.CaptureTest.testCaptureAll":22,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":234,"org.easymock.tests.MockNameTest.defaultName":406,"org.easymock.tests2.UsageConstraintsTest.testMatches":257,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":421,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":380,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":85,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":319,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":410,"org.easymock.samples.BasicClassMockTest.testPrintContent":12,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":104,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":14,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":227,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":240,"org.easymock.tests2.UsageConstraintsTest.greaterThan":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":291,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":468,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":214,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":341,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":168,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":215,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":352,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":206,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":87,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":244,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":106,"org.easymock.tests2.CaptureTest.testCaptureFirst":28,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":30,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":286,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":397,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":367,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":170,"org.easymock.tests2.CaptureTest.testCapture2_2446744":200,"org.easymock.tests2.UsageTest.moreThanOneArgument":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":461,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":46,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":84,"org.easymock.tests.GenericTest.testBridgedEquals":359,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":67,"org.easymock.tests.UsageExpectAndReturnTest.longType":363,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":407,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":242,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":131,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":38,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":312,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":418,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":333,"org.easymock.tests.UsageCallCountTest.tooManyCalls":68,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":307,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":368,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":118,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":103,"org.easymock.tests.MockingTest.testNiceClassMocking":432,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":192,"org.easymock.tests.MockingTest.testClassMocking":424,"org.easymock.tests2.UsageConstraintsTest.testContains":254,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":354,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":93,"org.easymock.tests2.UsageConstraintsTest.testFind":155,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":134,"org.easymock.tests.MockTypeTest.fromEasyMockClass":349,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":53,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":219,"org.easymock.tests.UsageExpectAndReturnTest.object":370,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":249,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":79,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":345,"org.easymock.tests.UsageTest.exactCallCountByLastCall":474,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":71,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":326,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":189,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":75,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":376,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":394,"org.easymock.tests.MockClassControlTest.testHashCode":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":221,"org.easymock.tests2.EasyMockSupportTest.testVerify":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":300,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":72,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":442,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":392,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":232,"org.easymock.tests.UsageVarargTest.varargCharAccepted":78,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":466,"org.easymock.tests2.UsageTest.openCallCountByLastCall":283,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":33,"org.easymock.tests.DefaultClassInstantiatorTest.object":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":441,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":343,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":175,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":220,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":437,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":212,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":119,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":377,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":332,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":309,"org.easymock.tests2.UsageTest.resumeIfFailure":285,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":109,"org.easymock.tests2.StubTest.stubWithReturnValue":95,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":39,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":369,"org.easymock.tests2.SerializationTest.testAllMockedMethod":21,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":459,"org.easymock.samples.SupportTest.voteForRemovals":3,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":356,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":125,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":160,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":465,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":144,"org.easymock.tests.UsageExpectAndThrowTest.object":123,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":328,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":141,"org.easymock.tests2.DelegateToTest.testWrongClass":239,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":86,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":417,"org.easymock.samples.ConstructorCalledMockTest.testTax":164,"org.easymock.tests.UsageStrictMockTest.range":58,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":278,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":191,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":124,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":271,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":390,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":287,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":316,"org.easymock.tests2.CaptureTest.testCaptureNone":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":314,"org.easymock.tests.UsageUnorderedTest.message":70,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":137,"org.easymock.tests.UsageVerifyTest.twoReturns":320,"org.easymock.tests.UsageVarargTest.varargByteAccepted":83,"org.easymock.tests2.ThreadingTest.testThreadSafe":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":304,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":66,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":11,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":346,"org.easymock.tests2.CaptureTest.testCapture_2617107":23,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":74,"org.easymock.tests2.UsageConstraintsTest.any":37,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":387,"org.easymock.tests2.StubTest.stub":35,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndThrowTest.longType":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":108,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":339,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":386,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":17,"org.easymock.tests2.SerializationTest.testClass":158,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":225,"org.easymock.tests.LimitationsTest.mockNativeMethod":400,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":358,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":174,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":20,"org.easymock.tests2.NameTest.nameForMocksControl":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":176,"org.easymock.tests2.MockedExceptionTest.testMockedException":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":292,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":136,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":429,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":117,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":218,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":29,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":272,"org.easymock.tests.MockingTest.testNicePartialClassMocking":427,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":172,"org.easymock.tests2.CaptureTest.testCaptureLast":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":330,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":138,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":197,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":261,"org.easymock.tests.MockingTest.testTwoMocks":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":121,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":49,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":157,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":1,"org.easymock.samples.ExampleTest.removeNonExistingDocument":163,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":384,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":179,"org.easymock.tests.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":222,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":337,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":169,"org.easymock.tests2.MockBuilderTest.testCreateMockString":275,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":433,"org.easymock.tests.UsageExpectAndThrowTest.floatType":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":294,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":289,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":266,"org.easymock.tests.UsageVerifyTest.twoThrows":98,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":303,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":454,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":51,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":213,"org.easymock.tests.LimitationsTest.privateConstructor":399,"org.easymock.tests2.UsageConstraintsTest.testNotNull":151,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":105,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":91,"org.easymock.tests2.UsageTest.defaultResetToNice":284,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":375,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":173,"org.easymock.tests.UsageVarargTest.differentLength":80,"org.easymock.tests2.CallbackTest.callback":190,"org.easymock.tests2.UsageConstraintsTest.equals":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":209,"org.easymock.tests.UsageTest.openCallCountByLastCall":473,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":250,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":73,"org.easymock.tests.UsageCallCountTest.tooFewCalls":64,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":194,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":318,"org.easymock.tests.UsageThrowableTest.throwCheckedException":102,"org.easymock.tests.MockingTest.testStrictClassMocking":423,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":133,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":178,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":193,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":389,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":195,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":143,"org.easymock.tests.ObjectMethodsTest.testHashCode":344,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":171,"org.easymock.tests2.NameTest.nameForNiceMock":42,"org.easymock.tests2.DependencyTest.testInterfaceMocking":186,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":305,"org.easymock.tests2.DelegateToTest.testStubDelegate":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":310,"org.easymock.tests2.AnswerTest.stubAnswer":142,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":56,"org.easymock.tests.UsageVarargTest.varargLongAccepted":82,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.floatType":362,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":378,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":188,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":165,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests.UsageThrowableTest.noUpperLimit":52,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":229,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":260,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":251,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":276,"org.easymock.tests2.SerializationTest.test":159,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":24,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":336,"org.easymock.tests2.UsageConstraintsTest.testSame":156,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":361,"org.easymock.samples.SupportTest.addDocument":2,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":295,"org.easymock.tests.GenericTest.testPackageScope":357,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":228,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":430,"org.easymock.tests2.NameTest.nameForMock":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":372,"org.easymock.tests2.UsageStrictMockTest.differentMethods":19,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":210,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":364,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":127,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":470,"org.easymock.tests2.MockedExceptionTest.testRealException":94,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":456,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":16,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":391,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":152,"org.easymock.tests2.NameTest.nameForStrictMock":41,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":269,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":217,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":204,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":277,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":140,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":338,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":44,"org.easymock.tests2.UsageStrictMockTest.range":18,"org.easymock.tests2.UsageConstraintsTest.lessThan":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":243,"org.easymock.tests2.CaptureTest.testCaptureRightOne":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":299,"org.easymock.tests2.UsageConstraintsTest.testOr":150,"org.easymock.tests.UsageRangeTest.combination":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":201,"org.easymock.tests.UsageTest.wrongArguments":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":296,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":434,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":161,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":373,"org.easymock.tests.UsageVarargTest.varargShortAccepted":81,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":340,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":355,"org.easymock.tests2.UsageConstraintsTest.cmpTo":253,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":446,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":97,"org.easymock.tests2.CaptureTest.testCaptureFromStub":154,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":381,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":268,"org.easymock.tests.UsageTest.unexpectedCallWithArray":472,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":65,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":374,"org.easymock.tests2.UsageConstraintsTest.constraints":147,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":57,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests.UsageStrictMockTest.testVerify":61,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":13,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":408,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":323,"org.easymock.tests.LimitationsTest.abstractClass":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":366,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":324,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":76,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":247}}]
