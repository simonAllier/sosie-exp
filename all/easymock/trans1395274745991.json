[{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[0,1,2,2,3,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[264,265,266,267,268,110],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[5,15,46,52,53,58,178,208,211,212,215,227,229],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[90,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,270,10,11,15,17,18,271,272,273,274,275,276,277,278,20,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,279,280,39,281,40,42,43,44,45,46,47,48,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,282,88,89,90,283,284,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,285,286,287,288,289,290,291,292,123,124,125,126,128,129,2,2,3,3,131,293,294,295,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,178,180,181,184,185,186,187,188,190,191,192,296,297,194,195,196,298,197,198,199,299,200,201,202,203,204,205,206,207,208,209,211,212,215,300,301,302,303,304,216,217,218,219,220,221,222,305,306,307,308,223,224,225,226,309,227,228,229,230,231,232,233,234,235,237,238,240,242,243,244,245,246,258,259,260,310,261,262],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5,8,9,270,10,11,12,311,312,313,14,15,18,19,271,272,273,274,275,276,277,278,314,315,316,317,20,21,22,23,25,26,27,28,29,30,33,34,35,36,37,279,280,39,281,40,41,43,45,47,48,50,51,54,57,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,318,89,90,284,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,319,113,114,117,118,119,285,286,287,288,289,290,291,292,120,121,122,123,124,125,126,127,128,129,2,3,130,131,132,293,294,295,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,176,178,181,182,183,184,185,186,187,188,191,192,296,193,320,321,298,322,323,324,198,199,299,201,202,209,325,326,327,328,217,218,219,220,221,222,329,305,306,307,308,309,227,228,229,230,231,234,240,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,259,263,330,331,332,333],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[334,335,336],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[12,311,312,313,15,17,18,48,49,55,56,177,178,180,181,209,210,213,214,227,228,229,338],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.ConstructorArgs:77","failures":[336],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[36,45,120,132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[339,340,341,342,5,6,7,8,9,270,10,343,11,13,14,15,16,17,18,19,344,271,345,272,346,347,348,349,350,351,273,352,353,274,354,355,275,276,277,278,314,315,316,317,337,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,356,357,358,359,360,36,361,362,363,364,365,366,37,38,279,280,39,281,367,40,0,368,41,42,43,44,369,370,371,372,373,374,45,375,376,377,378,379,380,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,381,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,282,382,88,318,89,383,384,284,266,91,92,93,94,95,96,97,98,100,101,103,105,106,107,108,109,110,111,319,112,113,114,115,116,117,118,119,287,288,289,290,292,120,121,122,123,124,125,126,127,128,385,129,2,2,3,3,130,131,132,386,387,388,389,293,294,390,295,391,392,393,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,173,410,411,412,413,414,174,415,175,176,177,178,179,180,181,182,183,416,417,418,419,420,421,184,185,186,187,188,189,190,422,191,192,423,296,193,297,424,194,195,196,320,321,298,322,323,324,425,426,427,197,198,199,428,429,299,430,200,201,202,203,204,205,206,207,208,209,431,210,211,212,213,214,215,325,326,327,328,300,301,302,303,304,432,216,433,217,218,219,220,221,222,434,329,435,436,437,438,439,440,305,306,307,308,441,442,443,444,445,446,447,223,224,225,226,448,449,450,309,451,452,453,454,455,456,457,458,459,460,461,462,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,463,250,251,252,253,254,255,256,257,258,259,260,310,261,262,263,330,331,332,333],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[464,465,177,431,466,467],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[468,21,31,32,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[424],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[264,383,284,266,469,470,471,472,473,110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[92,93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:827","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[83],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[216,226,261],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[339,340,344,271,345,474,346,475,350,476,352,353,276,277,37,38,280,39,281,40,368,41,44,369,477,319,285,288,121,122,387,388,389,393,296,193,424,428,429,299,430,434,329,435,436,437,438,439,440,441,442,443,444,445,446,447,309],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[478,77],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[89,449],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[5,6,7,8,9,270,10,11,12,311,312,313,13,14,15,16,17,18,19,271,275,276,277,278,314,315,316,317,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,361,37,279,45,375,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,479,480,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,289,120,123,124,125,126,127,128,129,130,131,132,386,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,416,417,418,419,420,184,185,186,187,188,189,190,191,192,194,195,196,320,298,322,323,324,425,426,427,197,198,199,200,201,202,203,204,205,206,207,208,209,431,210,211,212,213,214,215,325,326,327,328,300,301,302,303,304,216,217,218,219,220,221,222,305,306,307,308,223,224,225,226,448,481,482,450,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,310,261,262,263,330,331,332,333],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[272,273,274,367,42,43,477,87,282,483,88,89,90,283,484,110,292,297,269,449],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[110,111,319,485],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[339,486,487,340,341,342,5,6,7,8,9,270,10,343,11,488,12,311,312,313,13,14,15,16,17,18,19,344,489,490,271,491,345,272,474,346,347,492,475,348,349,350,351,273,476,352,493,494,353,274,354,355,275,276,277,278,314,315,316,317,337,20,21,22,23,24,25,26,27,28,29,30,31,32,33,495,496,34,35,497,498,499,500,501,356,357,358,359,360,36,361,362,363,364,365,366,37,38,279,280,39,281,367,502,40,0,368,41,42,43,44,369,477,370,371,372,373,374,45,375,376,377,378,379,380,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,381,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,282,483,382,88,318,89,90,503,383,384,283,484,284,266,91,504,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,319,112,113,114,115,116,117,118,119,285,286,287,288,505,289,290,291,506,292,120,121,122,123,124,125,126,127,128,385,129,2,3,130,131,132,386,387,388,389,293,294,390,295,391,392,393,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,173,410,411,412,413,414,174,415,175,176,177,178,179,180,181,182,183,416,417,418,419,420,421,184,185,186,187,188,189,190,422,191,192,423,296,193,297,424,194,195,196,320,321,298,322,323,324,425,426,427,197,198,199,428,429,299,430,200,201,202,203,204,205,206,207,208,209,431,210,211,212,213,214,215,325,326,327,328,300,301,302,303,304,432,216,433,217,218,219,220,221,222,434,329,435,436,437,438,439,440,305,306,307,308,441,442,443,444,445,446,447,223,224,225,226,269,507,508,448,481,449,482,450,309,451,452,453,454,455,456,457,458,459,460,461,462,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,463,250,251,252,253,254,255,256,257,258,259,260,310,261,262,263,330,331,332,333,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[223,224,225],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,531,532,264,383,533,284,266,534,110,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[344,489,490,271,491,345,272,474,346,347,492,475,348,349,350,351,273,476,352,493,494,353,274,354,355,531,532,264,383,1,533,284,266,110,287,291,506,535,536,2,3],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[64,82,94,257],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[62,66,69],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[264,383,284,266,469,470,471,472,473,110],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[9,15,17,18,271,272,273,274,277,20,21,23,24,27,28,29,30,32,33,34,35,36,37,38,279,280,39,281,40,42,43,44,45,46,47,48,50,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,282,88,89,90,283,284,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,114,119,285,286,287,288,289,290,291,292,123,125,126,128,131,293,294,295,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,178,180,181,191,192,296,297,197,198,199,299,200,202,203,204,205,206,207,208,209,211,212,215,305,306,307,308,227,229,230,231,234,240,242,243,244,245,246,259],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[537,464,538,539,540,541,15,17,18,48,178,180,181,189,190,209,467,542,543,227,228,229,258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":62,"org.easymock.tests2.UsageTest.argumentsOrdered":56,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":208,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":404,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":51,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":132,"org.easymock.tests2.DelegateToTest.testReturnException":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":218,"org.easymock.tests.MockingTest.testPartialClassMocking":293,"org.easymock.tests.MockClassControlTest.testToString":435,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":488,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":492,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":153,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":272,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":338,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":35,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":530,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":469,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":68,"org.easymock.tests2.UsageTest.wrongArguments":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":230,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":380,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":327,"org.easymock.samples.ExampleTest.answerVsDelegate":124,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":449,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":392,"org.easymock.tests2.UsageConstraintsTest.testNull":64,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":280,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":440,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":105,"org.easymock.tests2.CaptureTest.testPrimitive":23,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":172,"org.easymock.tests.UsageTest.moreThanOneArgument":209,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":279,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":186,"org.easymock.tests.UsageTest.argumentsOrdered":214,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":300,"org.easymock.tests.UsageVarargTest.varargIntAccepted":249,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":480,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":541,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":409,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":242,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":365,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":246,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":514,"org.easymock.tests.ReplayStateInvalidUsageTest.times":459,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":45,"org.easymock.tests2.DependencyTest.testClassMocking":495,"org.easymock.tests2.AnswerTest.answer":5,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":317,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":508,"org.easymock.tests2.CaptureTest.testAnd":20,"org.easymock.tests2.UsageTest.strictResetToDefault":47,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":532,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":185,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":100,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":307,"org.easymock.tests2.DelegateToTest.testDelegate":117,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":304,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":513,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":168,"org.easymock.tests.LimitationsTest.mockFinalMethod":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":221,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":333,"org.easymock.tests2.DependencyTest.testClassMockingSupport":496,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":189,"org.easymock.tests2.CaptureTest.testCapture1_2446744":24,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":502,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":166,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":315,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":453,"org.easymock.tests.UsageThrowableTest.throwError":200,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":481,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":188,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":535,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":517,"org.easymock.samples.PartialClassMockTest.testGetArea":292,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":454,"org.easymock.tests.MockingTest.testInterfaceMocking":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":243,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":475,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":421,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":154,"org.easymock.tests2.UsageTest.niceToStrict":50,"org.easymock.tests2.ThreadingTest.testChangeDefault":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":336,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":88,"org.easymock.tests2.MockBuilderTest.testCreateMock":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":493,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":377,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":464,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":162,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":101,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":507,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":225,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":325,"org.easymock.tests.UsageOverloadedMethodTest.overloading":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":353,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":74,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":144,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":197,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":73,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":29,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":463,"org.easymock.tests.MockClassControlTest.testEquals":439,"org.easymock.tests2.EasyMockSupportClassTest.testAll":271,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":193,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":170,"org.easymock.tests2.CaptureTest.testCaptureAll":21,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":331,"org.easymock.tests.MockNameTest.defaultName":386,"org.easymock.tests2.UsageConstraintsTest.testMatches":75,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":451,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":187,"org.easymock.samples.ExampleTest.voteForRemovals":128,"org.easymock.tests.UsageVarargTest.allKinds":257,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":227,"org.easymock.samples.BasicClassMockTest.testPrintContent":122,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":332,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":206,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":13,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":362,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":473,"org.easymock.tests2.UsageConstraintsTest.greaterThan":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":491,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":306,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":44,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":518,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":447,"org.easymock.samples.ExampleTest.voteForRemoval":125,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":92,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":369,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":367,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":510,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":309,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":98,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":217,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":112,"org.easymock.tests2.CaptureTest.testCaptureFirst":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":99,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":58,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":140,"org.easymock.tests2.CaptureTest.testCapture2_2446744":32,"org.easymock.tests2.UsageTest.moreThanOneArgument":48,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":411,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":283,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":256,"org.easymock.tests.GenericTest.testBridgedEquals":424,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":426,"org.easymock.tests.UsageExpectAndReturnTest.longType":136,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":263,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":171,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":82,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":226,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":184,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":195,"org.easymock.tests.UsageCallCountTest.tooManyCalls":427,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":494,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":379,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":158,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":205,"org.easymock.tests.MockingTest.testNiceClassMocking":393,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":286,"org.easymock.tests.MockingTest.testClassMocking":388,"org.easymock.tests2.UsageConstraintsTest.testContains":72,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":321,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":277,"org.easymock.tests2.UsageConstraintsTest.testFind":63,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":199,"org.easymock.tests.MockTypeTest.fromEasyMockClass":448,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":175,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":11,"org.easymock.tests.UsageExpectAndReturnTest.object":143,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":378,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":104,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":470,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":251,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":419,"org.easymock.tests.UsageTest.exactCallCountByLastCall":215,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":432,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":266,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":149,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":247,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":237,"org.easymock.tests.MockClassControlTest.testHashCode":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":357,"org.easymock.tests2.EasyMockSupportTest.testVerify":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":349,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":302,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":224,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":314,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":337,"org.easymock.tests.UsageVarargTest.varargCharAccepted":250,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":479,"org.easymock.tests2.CaptureTest.testCaptureMultiple":468,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastCall":52,"org.easymock.tests.DefaultClassInstantiatorTest.object":441,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":107,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":334,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":223,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":417,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":543,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":350,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":356,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":516,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":437,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":159,"org.easymock.tests.CapturesMatcherTest.test":4,"org.easymock.tests.ReplayStateInvalidCallsTest.times":522,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":150,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":194,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":523,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":539,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":274,"org.easymock.tests2.UsageTest.resumeIfFailure":57,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":269,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":220,"org.easymock.tests2.StubTest.stubWithReturnValue":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":264,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":142,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":83,"org.easymock.tests2.SerializationTest.testAllMockedMethod":319,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":173,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":465,"org.easymock.samples.SupportTest.voteForRemovals":131,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":423,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":359,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":165,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":485,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":174,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":6,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":433,"org.easymock.tests.UsageExpectAndThrowTest.object":163,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":80,"org.easymock.tests2.DelegateToTest.testWrongClass":115,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":520,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":191,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":192,"org.easymock.tests.UsageStrictMockTest.range":180,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":341,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":103,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":285,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":164,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":89,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":461,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":326,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":466,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":512,"org.easymock.tests2.CaptureTest.testCaptureNone":28,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":262,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":498,"org.easymock.tests.UsageUnorderedTest.message":258,"org.easymock.tests.UsageVerifyTest.twoReturns":229,"org.easymock.tests.UsageVarargTest.varargByteAccepted":255,"org.easymock.tests2.ThreadingTest.testThreadSafe":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":476,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":324,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":420,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":121,"org.easymock.tests2.CaptureTest.testCapture_2617107":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":233,"org.easymock.tests2.UsageConstraintsTest.any":70,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":458,"org.easymock.tests2.StubTest.stub":118,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndThrowTest.longType":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":219,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":445,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":457,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":16,"org.easymock.tests2.SerializationTest.testClass":110,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":36,"org.easymock.tests.LimitationsTest.mockNativeMethod":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":152,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":297,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":372,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":528,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":19,"org.easymock.tests2.NameTest.nameForMocksControl":313,"org.easymock.tests2.MockedExceptionTest.testMockedException":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":345,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":212,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":157,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":295,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":343,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":37,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":90,"org.easymock.tests.MockingTest.testNicePartialClassMocking":294,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":281,"org.easymock.tests2.CaptureTest.testCaptureLast":27,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":267,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":370,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":190,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":527,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":67,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":291,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":81,"org.easymock.tests.MockingTest.testTwoMocks":389,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":524,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":506,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":133,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":161,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":55,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":85,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":501,"org.easymock.samples.ExampleTest.removeNonExistingDocument":385,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":455,"org.easymock.tests.UsageStrictMockTest.differentMethods":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":376,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":358,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":500,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":443,"org.easymock.tests2.ConstraintsToStringTest.andToString":540,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":93,"org.easymock.tests2.MockBuilderTest.testCreateMockString":484,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":474,"org.easymock.tests.UsageExpectAndThrowTest.floatType":155,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":490,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":8,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":534,"org.easymock.tests.UsageVerifyTest.twoThrows":228,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":273,"org.easymock.samples.ExampleTest.voteAgainstRemoval":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":405,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":310,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":43,"org.easymock.tests.LimitationsTest.privateConstructor":429,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":536,"org.easymock.tests2.UsageConstraintsTest.testNotNull":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":207,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":275,"org.easymock.tests2.UsageTest.defaultResetToNice":54,"org.easymock.samples.ExampleTest.voteAgainstRemovals":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":148,"org.easymock.tests.UsageVarargTest.differentLength":252,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":371,"org.easymock.tests2.CallbackTest.callback":109,"org.easymock.tests2.UsageConstraintsTest.equals":381,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":0,"org.easymock.tests.UsageTest.openCallCountByLastCall":211,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":232,"org.easymock.tests.UsageCallCountTest.tooFewCalls":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":288,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":328,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":499,"org.easymock.tests.UsageThrowableTest.throwCheckedException":204,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":467,"org.easymock.tests.MockingTest.testStrictClassMocking":387,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":260,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":290,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":375,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":460,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":289,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":270,"org.easymock.tests.ObjectMethodsTest.testHashCode":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":268,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":526,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":95,"org.easymock.tests2.NameTest.nameForNiceMock":312,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":521,"org.easymock.tests2.DependencyTest.testInterfaceMocking":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":471,"org.easymock.samples.ExampleTest.addDocument":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":352,"org.easymock.tests2.DelegateToTest.testStubDelegate":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":354,"org.easymock.tests2.AnswerTest.stubAnswer":9,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":178,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":503,"org.easymock.tests.UsageVarargTest.varargLongAccepted":254,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":151,"org.easymock.tests.UsageExpectAndReturnTest.floatType":135,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":284,"org.easymock.tests2.ConstraintsToStringTest.orToString":537,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":78,"org.easymock.tests.UsageThrowableTest.noUpperLimit":201,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":60,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":339,"org.easymock.tests2.SerializationTest.test":111,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":25,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":134,"org.easymock.tests2.UsageConstraintsTest.testSame":65,"org.easymock.samples.SupportTest.addDocument":130,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":505,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":511,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":346,"org.easymock.tests.GenericTest.testPackageScope":296,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":391,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":509,"org.easymock.tests2.NameTest.nameForMock":12,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":533,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":368,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":137,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":167,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":416,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":308,"org.easymock.tests2.MockedExceptionTest.testRealException":278,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":342,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":542,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":407,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":462,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":231,"org.easymock.tests2.NameTest.nameForStrictMock":311,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":382,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":10,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":335,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":39,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":340,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":444,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":79,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":282,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":515,"org.easymock.tests2.UsageConstraintsTest.lessThan":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":360,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":97,"org.easymock.tests2.CaptureTest.testCaptureRightOne":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":348,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":497,"org.easymock.tests2.UsageConstraintsTest.testOr":66,"org.easymock.tests.UsageRangeTest.combination":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":38,"org.easymock.tests.UsageTest.wrongArguments":210,"org.easymock.tests2.MockBuilderTest.testWithConstructor":531,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":347,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":395,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":146,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":446,"org.easymock.tests.UsageVarargTest.varargShortAccepted":253,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":425,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":529,"org.easymock.tests2.UsageConstraintsTest.cmpTo":71,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":7,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":519,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":397,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":53,"org.easymock.tests2.CaptureTest.testCaptureFromStub":31,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":452,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":483,"org.easymock.tests.UsageTest.unexpectedCallWithArray":431,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":525,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":177,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":323,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":1,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":147,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":179,"org.easymock.tests2.UsageConstraintsTest.constraints":61,"org.easymock.samples.ExampleTest.addAndChangeDocument":129,"org.easymock.tests2.ConstraintsToStringTest.notToString":538,"org.easymock.tests.UsageStrictMockTest.testVerify":183,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":120,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":176,"org.easymock.tests2.CompareToTest.testGreateThan":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":330,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":244,"org.easymock.tests.LimitationsTest.abstractClass":428,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":139,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":102,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":248}}]
