[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,3,4,5,491],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:93","sourceCode":"org.easymock.internal.Range.getMinimum()","type":"CtInvocationImpl"},"failures":[32,49,51,52,54,55,56,93,95,98,99,144,231,235,236,237,289,291,293,294,295,316,317,318,319,323,324,358,433,437,438,441,480,491],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[13,18,33,34,35,36,37,38,39,40,41,42,43,44,57,94,134,135,136,137,138,145,162,163,164,200,201,202,203,204,205,206,207,238,239,240,241,243,262,278,322,327,328,344,351,357,360,392,397,432,439,444,451,458,459,460,461],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,11,14,22,24,27,28,29,30,31,32,47,52,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,89,90,91,92,93,96,97,100,117,123,125,126,127,128,129,130,131,132,133,139,141,142,144,158,159,160,167,171,172,174,178,179,180,181,182,183,184,185,186,187,188,197,198,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,251,252,253,254,255,256,257,258,259,261,263,264,264,265,265,266,272,278,287,288,291,293,294,296,297,305,306,307,308,310,311,312,314,315,316,318,320,321,322,325,326,327,328,329,330,331,332,333,334,335,336,346,350,352,354,358,364,367,377,383,386,387,388,389,390,391,394,398,399,400,403,404,405,406,407,408,409,411,412,413,414,415,416,417,418,419,421,422,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,451,462,463,464,465,467,468,469,470,471,472,474,475,476,477,478,479,480,481,482,483,484,485,487,488,489,490,3,4,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[7,474],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[332,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[493,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[92,104,182,236,297,314],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[54,494,236,237,293],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:136","failures":[7,27,28,31,52,129,130,131,132,133,197,198,251,252,253,254,255,264,264,265,265,291,429,462,463,467,468,469,470,476,478,479,481,482,488,489,490],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[21,22,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","candidateMethod":"bridgeMethod","candidateMethods":"candidateMethods","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[22,23,24,47,128,170,171,172,174,189,194,201,264,264,265,265,266,269,270,495,496,497,305,306,307,308,311,312,329,336,344,498,346,347,350,351,352,354,357,358,499,360,364,367,377,383,386,387,389,390,391,392,394,397,398,399,400,3,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[157,334,468,486],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[493,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[493,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[264,265,336,500,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[418,420,428,464,465,468,470,471,473,483,488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:112","sourceCode":"if (!(org.easymock.Capture<T>.hasCaptured())) {\n    this.java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[501,502,419,426,429,430],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[21,24,189,194,266,327,344,346,347,349,350,351,352,354,357,358,360,367,377,383,392,398,399,402],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[51,503,504,94,505,506],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[7,8,12,13,14,15,16,17,18,19,20,22,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,92,93,94,95,96,97,98,99,100,128,129,130,131,132,133,134,135,136,137,138,139,141,142,144,145,146,147,148,150,151,152,153,154,155,156,157,162,163,164,171,172,174,178,179,180,181,182,183,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,251,252,253,254,255,256,257,258,259,260,261,262,263,264,264,265,265,266,267,268,269,270,271,272,278,287,288,289,290,291,292,293,294,295,296,297,305,306,307,308,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,340,341,342,343,344,346,350,351,352,354,357,358,360,364,367,377,383,386,387,388,389,390,391,392,394,397,398,399,400,403,406,407,408,409,411,413,414,415,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,451,458,459,460,461,462,463,464,465,467,468,469,470,471,472,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,3,4,5,491],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[243,244,245,246,248,250],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,3,4,5,491],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:229","failures":[346,358,367,398,402],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":465,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":92,"org.easymock.tests2.UsageTest.argumentsOrdered":324,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":442,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":111,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":319,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":267,"org.easymock.tests2.DelegateToTest.testReturnException":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":179,"org.easymock.tests.MockingTest.testPartialClassMocking":171,"org.easymock.tests.MockClassControlTest.testToString":202,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":339,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":90,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":371,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":211,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":367,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":288,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":472,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":27,"org.easymock.tests2.UsageTest.wrongArguments":317,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":457,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":240,"org.easymock.samples.ExampleTest.answerVsDelegate":257,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":194,"org.easymock.tests2.UsageConstraintsTest.testNull":468,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":176,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":389,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":441,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":207,"org.easymock.tests2.CaptureTest.testPrimitive":421,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":31,"org.easymock.tests.UsageTest.moreThanOneArgument":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":230,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":388,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":253,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":184,"org.easymock.tests.UsageTest.argumentsOrdered":99,"org.easymock.tests.UsageVarargTest.varargIntAccepted":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":129,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":344,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":283,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":300,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":103,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":133,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":451,"org.easymock.tests.ReplayStateInvalidUsageTest.times":41,"org.easymock.tests2.DependencyTest.testClassMocking":285,"org.easymock.tests2.AnswerTest.answer":403,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":118,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":461,"org.easymock.tests2.CaptureTest.testAnd":418,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":191,"org.easymock.tests2.UsageTest.strictResetToDefault":315,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":397,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":436,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":233,"org.easymock.tests2.DelegateToTest.testDelegate":417,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":188,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":226,"org.easymock.tests.LimitationsTest.mockFinalMethod":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":138,"org.easymock.tests2.DependencyTest.testClassMockingSupport":286,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":86,"org.easymock.tests2.CaptureTest.testCapture1_2446744":422,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":393,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":459,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":35,"org.easymock.tests.UsageThrowableTest.throwError":58,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":193,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":26,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":255,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":385,"org.easymock.samples.PartialClassMockTest.testGetArea":266,"org.easymock.tests.MockingTest.testInterfaceMocking":173,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":36,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":130,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":159,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":212,"org.easymock.tests2.UsageTest.niceToStrict":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":101,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":2,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":350,"org.easymock.tests2.MockBuilderTest.testCreateMock":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":380,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":454,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":505,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":220,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":437,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":190,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":238,"org.easymock.tests.UsageOverloadedMethodTest.overloading":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":382,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":478,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":77,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":208,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":477,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":427,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":149,"org.easymock.tests.MockClassControlTest.testEquals":206,"org.easymock.tests2.EasyMockSupportClassTest.testAll":364,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":23,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":228,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":495,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":460,"org.easymock.tests2.CaptureTest.testCaptureAll":419,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":136,"org.easymock.tests.MockNameTest.defaultName":199,"org.easymock.tests2.UsageConstraintsTest.testMatches":479,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":254,"org.easymock.samples.ExampleTest.voteForRemovals":261,"org.easymock.tests.UsageVarargTest.allKinds":157,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":137,"org.easymock.samples.BasicClassMockTest.testPrintContent":270,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":64,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":289,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":280,"org.easymock.tests2.UsageConstraintsTest.greaterThan":481,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":232,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":400,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":250,"org.easymock.samples.ExampleTest.voteForRemoval":258,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":401,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":332,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":195,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":392,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":128,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":314,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":108,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":434,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":362,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":178,"org.easymock.tests2.CaptureTest.testCaptureFirst":431,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":435,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":326,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":145,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":73,"org.easymock.tests2.CaptureTest.testCapture2_2446744":430,"org.easymock.tests2.UsageTest.moreThanOneArgument":316,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":119,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":358,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":156,"org.easymock.tests.GenericTest.testBridgedEquals":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":19,"org.easymock.tests.UsageExpectAndReturnTest.longType":69,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":432,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":134,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":499,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":229,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":486,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":167,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":227,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":251,"org.easymock.tests.UsageCallCountTest.tooManyCalls":20,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":456,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":216,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":63,"org.easymock.tests.MockingTest.testNiceClassMocking":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":306,"org.easymock.tests.MockingTest.testClassMocking":169,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":498,"org.easymock.tests2.UsageConstraintsTest.testContains":476,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":13,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":329,"org.easymock.tests2.UsageConstraintsTest.testFind":467,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":210,"org.easymock.tests.MockTypeTest.fromEasyMockClass":192,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":411,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":49,"org.easymock.tests.UsageExpectAndReturnTest.object":76,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":394,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":455,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":440,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":151,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":164,"org.easymock.tests.UsageTest.exactCallCountByLastCall":100,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":6,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":106,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":185,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":337,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":82,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":141,"org.easymock.tests.MockClassControlTest.testHashCode":205,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":274,"org.easymock.tests2.EasyMockSupportTest.testVerify":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":374,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":186,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":139,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":10,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":458,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":445,"org.easymock.tests.UsageVarargTest.varargCharAccepted":150,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":242,"org.easymock.tests2.CaptureTest.testCaptureMultiple":502,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":124,"org.easymock.tests2.UsageTest.openCallCountByLastCall":320,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":443,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":0,"org.easymock.tests.DefaultClassInstantiatorTest.object":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":9,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":375,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":449,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":273,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":398,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":217,"org.easymock.tests.CapturesMatcherTest.test":501,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":83,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":125,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":383,"org.easymock.tests2.UsageTest.resumeIfFailure":325,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":189,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":181,"org.easymock.tests2.StubTest.stubWithReturnValue":297,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":353,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":487,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":75,"org.easymock.tests2.SerializationTest.testAllMockedMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":117,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":506,"org.easymock.samples.SupportTest.voteForRemovals":272,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":276,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":223,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":123,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":404,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":91,"org.easymock.tests.UsageExpectAndThrowTest.object":221,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":484,"org.easymock.tests2.DelegateToTest.testWrongClass":415,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":197,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":198,"org.easymock.tests.UsageStrictMockTest.range":54,"org.easymock.samples.ConstructorCalledMockTest.testTax":264,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":303,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":439,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":222,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":352,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":98,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":239,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":503,"org.easymock.tests2.CaptureTest.testCaptureNone":426,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":160,"org.easymock.tests.UsageUnorderedTest.message":32,"org.easymock.tests.UsageVerifyTest.twoReturns":237,"org.easymock.tests.UsageVarargTest.varargByteAccepted":155,"org.easymock.tests2.ThreadingTest.testThreadSafe":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":378,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":17,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":165,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":269,"org.easymock.tests2.CaptureTest.testCapture_2617107":420,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":30,"org.easymock.tests2.UsageConstraintsTest.any":474,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":40,"org.easymock.tests2.StubTest.stub":296,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":122,"org.easymock.tests.UsageExpectAndThrowTest.longType":214,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":247,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":39,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":292,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":278,"org.easymock.tests.LimitationsTest.mockNativeMethod":47,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":24,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":85,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":497,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":448,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":295,"org.easymock.tests2.NameTest.nameForMocksControl":343,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":450,"org.easymock.tests2.MockedExceptionTest.testMockedException":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":366,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":97,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":410,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":174,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":215,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":386,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":354,"org.easymock.tests.MockingTest.testNicePartialClassMocking":172,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":391,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":446,"org.easymock.tests2.CaptureTest.testCaptureLast":425,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":87,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":471,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":312,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":485,"org.easymock.tests.MockingTest.testTwoMocks":170,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":313,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":219,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":323,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":489,"org.easymock.samples.ExampleTest.removeNonExistingDocument":262,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":453,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":37,"org.easymock.tests.UsageStrictMockTest.differentMethods":55,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":275,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":245,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":333,"org.easymock.tests2.MockBuilderTest.testCreateMockString":360,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":200,"org.easymock.tests.UsageExpectAndThrowTest.floatType":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":368,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":363,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":406,"org.easymock.tests.UsageVerifyTest.twoThrows":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":338,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":377,"org.easymock.samples.ExampleTest.voteAgainstRemoval":259,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":112,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":399,"org.easymock.tests.LimitationsTest.privateConstructor":46,"org.easymock.tests2.UsageConstraintsTest.testNotNull":488,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":65,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":327,"org.easymock.tests2.UsageTest.defaultResetToNice":322,"org.easymock.samples.ExampleTest.voteAgainstRemovals":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":113,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":81,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":447,"org.easymock.tests.UsageVarargTest.differentLength":152,"org.easymock.tests2.CallbackTest.callback":491,"org.easymock.tests2.UsageConstraintsTest.equals":466,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":395,"org.easymock.tests.UsageTest.openCallCountByLastCall":96,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":462,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":29,"org.easymock.tests.UsageCallCountTest.tooFewCalls":15,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":241,"org.easymock.tests.UsageThrowableTest.throwCheckedException":62,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":504,"org.easymock.tests.MockingTest.testStrictClassMocking":168,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":452,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":307,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":42,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":310,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":408,"org.easymock.tests.ObjectMethodsTest.testHashCode":163,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":335,"org.easymock.tests2.NameTest.nameForNiceMock":342,"org.easymock.tests2.DependencyTest.testInterfaceMocking":287,"org.easymock.samples.ExampleTest.addDocument":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":379,"org.easymock.tests2.DelegateToTest.testStubDelegate":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":384,"org.easymock.tests2.AnswerTest.stubAnswer":407,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":52,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":355,"org.easymock.tests.UsageVarargTest.varargLongAccepted":154,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":110,"org.easymock.tests.UsageExpectAndReturnTest.floatType":68,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":336,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":265,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":482,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":143,"org.easymock.tests.UsageThrowableTest.noUpperLimit":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":282,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":463,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":298,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":423,"org.easymock.tests2.SerializationTest.test":4,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":244,"org.easymock.tests2.UsageConstraintsTest.testSame":469,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":67,"org.easymock.samples.SupportTest.addDocument":271,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":309,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":369,"org.easymock.tests.GenericTest.testPackageScope":22,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":105,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":281,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":175,"org.easymock.tests2.NameTest.nameForMock":340,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":78,"org.easymock.tests2.UsageStrictMockTest.differentMethods":294,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":359,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":396,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":70,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":225,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":161,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":234,"org.easymock.tests2.MockedExceptionTest.testRealException":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":115,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":114,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":291,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":28,"org.easymock.tests2.NameTest.nameForStrictMock":341,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":349,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":409,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":390,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":302,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":483,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":246,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":346,"org.easymock.tests2.UsageStrictMockTest.range":293,"org.easymock.tests2.UsageConstraintsTest.lessThan":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":277,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":109,"org.easymock.tests2.CaptureTest.testCaptureRightOne":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":373,"org.easymock.tests2.UsageConstraintsTest.testOr":470,"org.easymock.tests.UsageRangeTest.combination":231,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":387,"org.easymock.tests.UsageTest.wrongArguments":95,"org.easymock.tests2.MockBuilderTest.testWithConstructor":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":370,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":79,"org.easymock.tests.UsageVarargTest.varargShortAccepted":153,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":248,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":18,"org.easymock.tests2.UsageConstraintsTest.cmpTo":475,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":104,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":321,"org.easymock.tests2.CaptureTest.testCaptureFromStub":429,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":34,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":347,"org.easymock.tests.UsageTest.unexpectedCallWithArray":94,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":16,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":80,"org.easymock.tests2.UsageConstraintsTest.constraints":464,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":53,"org.easymock.samples.ExampleTest.addAndChangeDocument":263,"org.easymock.tests.UsageStrictMockTest.testVerify":57,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":268,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":50,"org.easymock.tests2.CompareToTest.testGreateThan":492,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":135,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":424,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":496,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":131,"org.easymock.tests.LimitationsTest.abstractClass":45,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":72,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":132,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":494,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":438,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":147}}]
