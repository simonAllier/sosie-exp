[{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1263","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[22,23,24,25,26,27],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[28,29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[30],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[31,32,33,34,35,36,37],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[21,52,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[54,55,56,57],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,47,89,90,91,58,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,51,127,128,129,130,131,132,133,134],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[135,136,137,138],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[139,140,141,142,44,45,88,89,143,144,126,127,145],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[54,55,56,57],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:327","failures":[146,147,148,149],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[150,151,152,153],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Injection:74","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[39,40,41,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,43,172,173,174,175,46,176,47,89,143,3,4,97,98,99,177,100,178,179,180,181,101,48,182,49,50,103,183,138,184,185,186,187,188,189,190,51,127,145,191,192,193,194,195,196,197],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"matched":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[198,199,164,200,201,202,63,64,65,203,204,205,174,206,30,207,208,87,209,22,23,24,25,210,26,27,1,211,212,213,2,214,215,96,216,216,217,217,179,180,218,219,102,220,221,103,222,104,105,223,224,106,225,28,109,110,112,113,114,226,115,227,228,229,116,117,118,230,29,231,232,233,234,235,236,136,138,121,37,237,238,239,240,241,122,242,243,123,244,245,246,247,248,249,250,251,252,124,253,254,255,256,257,125,258,259,128,129,130,131,133,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.Range:44","failures":[59,60,61,62,260,261,139,38,39,262,263,40,41,264,265,266,267,198,268,269,270,271,199,272,273,274,146,147,275,148,149,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,154,155,156,296,157,158,297,159,160,161,162,163,164,298,299,300,165,166,167,301,168,169,302,303,304,200,201,202,63,64,305,65,306,307,203,66,67,68,69,308,309,310,311,312,140,313,314,315,316,170,171,141,43,70,317,172,318,319,142,44,45,71,72,73,74,75,76,320,321,77,78,322,79,80,81,323,82,83,84,85,86,324,173,325,326,327,328,329,330,331,332,333,334,335,204,205,174,206,30,336,337,338,339,340,341,207,208,87,209,342,343,344,345,346,347,348,349,350,351,352,353,354,22,23,24,25,210,26,355,27,356,357,358,359,360,361,150,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,0,385,386,387,388,175,46,88,176,47,89,143,389,90,91,390,391,392,393,394,395,396,397,398,399,1,400,211,212,213,2,214,215,58,92,93,94,95,3,96,4,97,401,98,99,177,100,402,178,216,217,179,180,181,101,403,404,144,48,405,182,406,407,408,49,50,409,410,219,411,102,220,412,221,103,222,104,31,105,413,223,224,106,414,28,415,416,107,108,109,110,111,112,113,114,226,417,115,227,228,229,116,117,118,230,29,418,419,420,421,422,423,424,425,426,427,54,428,429,430,431,432,55,433,434,435,436,437,438,439,183,440,441,442,56,443,151,444,445,152,153,446,447,448,449,231,232,233,450,451,452,453,454,455,456,119,457,458,5,6,7,459,8,460,9,10,11,461,462,12,463,464,120,465,466,467,136,137,138,121,37,468,469,470,471,184,472,473,474,475,476,185,186,187,188,477,478,479,480,481,237,482,483,484,238,485,486,239,240,241,122,242,243,123,244,245,246,247,248,249,250,251,252,124,253,254,255,256,257,125,258,259,13,14,15,487,16,488,17,18,19,489,490,20,491,189,126,190,51,127,145,492,493,494,128,129,130,131,495,132,133,134,496,497,191,192,498,499,193,194,195,196,500,501,502,503,197],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:65","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.createMocksForAnnotations(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[3,4,459,8,460,9,10,461,462,487,16,488,17,18,489,490],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[504,497,192,498,499,193,194,195,500,505,501,502,197],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[352],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[135,136,137,138],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[428],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[59,60,61,62,260,261,139,262,263,264,266,274,146,147,275,148,149,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,164,300,303,304,63,64,65,66,67,68,69,308,310,311,140,314,315,316,171,43,70,317,172,318,319,142,44,45,71,72,73,74,75,76,320,321,77,78,322,79,80,81,323,82,83,84,85,86,324,173,325,326,327,328,329,330,205,206,336,337,338,339,340,341,87,371,377,88,47,89,90,91,390,391,392,393,394,395,396,397,398,58,92,93,94,95,96,97,401,98,99,100,178,216,216,217,217,101,403,404,144,405,406,407,408,409,410,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,418,419,420,421,423,424,425,426,427,54,429,430,431,432,55,433,434,435,436,437,438,439,440,441,442,56,443,151,444,445,152,153,231,232,233,450,451,453,454,455,456,119,457,458,460,463,464,120,465,466,467,136,137,121,469,470,471,184,472,473,474,475,476,185,186,187,122,123,124,125,488,126,51,127,492,493,128,129,130,131,132,133,134,497,191,498,499,195,196,500,501,502,503,197],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":421,"org.easymock.tests2.UsageTest.argumentsOrdered":50,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":261,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":186,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":365,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":182,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":4,"org.easymock.tests2.DelegateToTest.testReturnException":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":337,"org.easymock.tests.MockingTest.testPartialClassMocking":63,"org.easymock.tests.MockClassControlTest.testToString":211,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":477,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":247,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":123,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":276,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":32,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":54,"org.easymock.tests2.UsageTest.wrongArguments":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":70,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":20,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":381,"org.easymock.samples.ExampleTest.answerVsDelegate":401,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":199,"org.easymock.tests2.UsageConstraintsTest.testNull":424,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":307,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":112,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":185,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":215,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":234,"org.easymock.tests2.CaptureTest.testPrimitive":498,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":319,"org.easymock.tests.UsageTest.moreThanOneArgument":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":295,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":61,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":394,"org.easymock.tests.UsageTest.argumentsOrdered":41,"org.easymock.tests.UsageVarargTest.varargIntAccepted":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":36,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":219,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":462,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":95,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":488,"org.easymock.tests.ReplayStateInvalidUsageTest.times":350,"org.easymock.tests2.DependencyTest.testClassMocking":415,"org.easymock.tests2.AnswerTest.answer":443,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":449,"org.easymock.tests2.CaptureTest.testAnd":497,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":269,"org.easymock.tests2.UsageTest.strictResetToDefault":404,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":60,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":472,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":68,"org.easymock.tests2.DelegateToTest.testDelegate":467,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":398,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":291,"org.easymock.tests.LimitationsTest.mockFinalMethod":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":340,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":335,"org.easymock.tests2.DependencyTest.testClassMockingSupport":416,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":170,"org.easymock.tests2.CaptureTest.testCapture1_2446744":499,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":417,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":447,"org.easymock.tests.UsageThrowableTest.throwError":324,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":344,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":271,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":399,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":12,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":259,"org.easymock.samples.PartialClassMockTest.testGetArea":96,"org.easymock.tests.MockingTest.testInterfaceMocking":305,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":92,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":391,"org.easymock.tests2.UsageTest.niceToStrict":405,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":277,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":103,"org.easymock.tests2.MockBuilderTest.testCreateMock":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":255,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":19,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":285,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":473,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":268,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":149,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":298,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":379,"org.easymock.tests.UsageOverloadedMethodTest.overloading":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":257,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":55,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":79,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":314,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":432,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":500,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":296,"org.easymock.tests2.EasyMockSupportClassTest.testAll":122,"org.easymock.tests.MockClassControlTest.testEquals":214,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":174,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":293,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":448,"org.easymock.tests2.CaptureTest.testCaptureAll":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":333,"org.easymock.tests.MockNameTest.defaultName":302,"org.easymock.tests2.UsageConstraintsTest.testMatches":433,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":62,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":342,"org.easymock.samples.ExampleTest.voteForRemovals":100,"org.easymock.tests.UsageVarargTest.allKinds":163,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":142,"org.easymock.samples.BasicClassMockTest.testPrintContent":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":334,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":329,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":491,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":341,"org.easymock.tests2.UsageConstraintsTest.greaterThan":435,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":242,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":67,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":118,"org.easymock.samples.ExampleTest.voteForRemoval":98,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":27,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":455,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":230,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":225,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":272,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":226,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":403,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":164,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":471,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":336,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":463,"org.easymock.tests2.CaptureTest.testCaptureFirst":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":184,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":410,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":321,"org.easymock.tests2.CaptureTest.testCapture2_2446744":503,"org.easymock.tests2.UsageTest.moreThanOneArgument":144,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":119,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":373,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":162,"org.easymock.tests.GenericTest.testBridgedEquals":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":168,"org.easymock.tests.UsageExpectAndReturnTest.longType":74,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":469,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":331,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":294,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":393,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":183,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":59,"org.easymock.tests.UsageCallCountTest.tooManyCalls":169,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":256,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":490,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":281,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":328,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":129,"org.easymock.tests.MockingTest.testNiceClassMocking":203,"org.easymock.tests.MockingTest.testClassMocking":201,"org.easymock.tests2.UsageConstraintsTest.testContains":431,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":299,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":233,"org.easymock.tests2.UsageConstraintsTest.testFind":423,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":316,"org.easymock.tests.MockTypeTest.fromEasyMockClass":270,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":453,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":388,"org.easymock.tests.UsageExpectAndReturnTest.object":322,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":489,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":476,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":33,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":385,"org.easymock.tests.UsageTest.exactCallCountByLastCall":264,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":395,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":265,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":37,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":154,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":83,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":310,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":6,"org.easymock.tests.MockClassControlTest.testHashCode":2,"org.easymock.tests2.EasyMockSupportTest.testVerify":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":250,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":396,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":148,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":308,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":446,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":494,"org.easymock.tests.UsageVarargTest.varargCharAccepted":157,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":354,"org.easymock.tests2.CaptureTest.testCaptureMultiple":504,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":378,"org.easymock.tests2.UsageTest.openCallCountByLastCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":187,"org.easymock.tests.DefaultClassInstantiatorTest.object":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":52,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":275,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":384,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":251,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":283,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":326,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":487,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":5,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":116,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":213,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":282,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":125,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":212,"org.easymock.tests2.UsageTest.resumeIfFailure":409,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":198,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":339,"org.easymock.tests2.StubTest.stubWithReturnValue":493,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":440,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":78,"org.easymock.tests2.SerializationTest.testAllMockedMethod":138,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":371,"org.easymock.samples.SupportTest.voteForRemovals":101,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":288,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":135,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":377,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":151,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":267,"org.easymock.tests.UsageExpectAndThrowTest.object":286,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":438,"org.easymock.tests2.DelegateToTest.testWrongClass":465,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":90,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":91,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.samples.ConstructorCalledMockTest.testTax":216,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":485,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":475,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":287,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":104,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":239,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":352,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":380,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":392,"org.easymock.tests2.CaptureTest.testCaptureNone":196,"org.easymock.tests.UsageUnorderedTest.message":43,"org.easymock.tests.UsageVerifyTest.twoReturns":45,"org.easymock.tests.UsageVarargTest.varargByteAccepted":161,"org.easymock.tests2.ThreadingTest.testThreadSafe":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":253,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":167,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":386,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":179,"org.easymock.tests2.CaptureTest.testCapture_2617107":192,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":375,"org.easymock.tests2.UsageConstraintsTest.any":429,"org.easymock.tests2.StubTest.stub":492,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":349,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":147,"org.easymock.tests.UsageExpectAndThrowTest.longType":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":376,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":210,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":348,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":190,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":460,"org.easymock.tests2.SerializationTest.testClass":136,"org.easymock.tests.LimitationsTest.mockNativeMethod":87,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":86,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":206,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":15,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":145,"org.easymock.tests2.NameTest.nameForMocksControl":481,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":16,"org.easymock.tests2.MockedExceptionTest.testMockedException":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":243,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":263,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":452,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":65,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":280,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":105,"org.easymock.tests.MockingTest.testNicePartialClassMocking":64,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":114,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":13,"org.easymock.tests2.CaptureTest.testCaptureLast":195,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":171,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":427,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":134,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":439,"org.easymock.tests.MockingTest.testTwoMocks":202,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":496,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":284,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":49,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":442,"org.easymock.samples.ExampleTest.removeNonExistingDocument":402,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":18,"org.easymock.tests.UsageStrictMockTest.differentMethods":89,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":346,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":7,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":24,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":456,"org.easymock.tests2.MockBuilderTest.testCreateMockString":28,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":244,"org.easymock.tests.UsageExpectAndThrowTest.floatType":278,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":241,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":445,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":468,"org.easymock.tests.UsageVerifyTest.twoThrows":44,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":124,"org.easymock.samples.ExampleTest.voteAgainstRemoval":99,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":366,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":117,"org.easymock.tests.LimitationsTest.privateConstructor":208,"org.easymock.tests2.UsageConstraintsTest.testNotNull":441,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":231,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":330,"org.easymock.tests2.UsageTest.defaultResetToNice":408,"org.easymock.samples.ExampleTest.voteAgainstRemovals":97,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":367,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":14,"org.easymock.tests.UsageVarargTest.differentLength":297,"org.easymock.tests2.CallbackTest.callback":458,"org.easymock.tests2.UsageConstraintsTest.equals":422,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":227,"org.easymock.tests.UsageTest.openCallCountByLastCall":262,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":172,"org.easymock.tests.UsageCallCountTest.tooFewCalls":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":382,"org.easymock.tests.UsageThrowableTest.throwCheckedException":327,"org.easymock.tests.MockingTest.testStrictClassMocking":200,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":304,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":17,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":351,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":132,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":153,"org.easymock.tests.ObjectMethodsTest.testHashCode":0,"org.easymock.tests2.CompareToTest.testGreateOrEqual":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":35,"org.easymock.tests2.NameTest.nameForNiceMock":480,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":457,"org.easymock.tests2.DependencyTest.testInterfaceMocking":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":34,"org.easymock.samples.ExampleTest.addDocument":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":254,"org.easymock.tests2.DelegateToTest.testStubDelegate":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":258,"org.easymock.tests2.AnswerTest.stubAnswer":152,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":88,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":413,"org.easymock.tests.UsageVarargTest.varargLongAccepted":160,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":364,"org.easymock.tests.UsageExpectAndReturnTest.floatType":73,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":121,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":461,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":436,"org.easymock.tests.UsageThrowableTest.noUpperLimit":173,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":312,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":419,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":237,"org.easymock.tests2.SerializationTest.test":137,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":193,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":23,"org.easymock.tests2.UsageConstraintsTest.testSame":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":72,"org.easymock.samples.SupportTest.addDocument":181,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":495,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":245,"org.easymock.tests.GenericTest.testPackageScope":205,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":11,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":306,"org.easymock.tests2.NameTest.nameForMock":478,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":80,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":414,"org.easymock.tests2.UsageStrictMockTest.differentMethods":127,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":228,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":290,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":383,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":69,"org.easymock.tests2.MockedExceptionTest.testRealException":450,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":273,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":368,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":317,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":353,"org.easymock.tests2.NameTest.nameForStrictMock":479,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":221,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":451,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":113,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":238,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":437,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":25,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":102,"org.easymock.tests2.UsageStrictMockTest.range":51,"org.easymock.tests2.UsageConstraintsTest.lessThan":56,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":8,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":218,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":363,"org.easymock.tests2.CaptureTest.testCaptureRightOne":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":249,"org.easymock.tests2.UsageConstraintsTest.testOr":426,"org.easymock.tests.UsageRangeTest.combination":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":110,"org.easymock.tests.UsageTest.wrongArguments":39,"org.easymock.tests2.MockBuilderTest.testWithConstructor":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":246,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":400,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":76,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":357,"org.easymock.tests.UsageVarargTest.varargShortAccepted":159,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":26,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":301,"org.easymock.tests2.UsageConstraintsTest.cmpTo":430,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":359,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":407,"org.easymock.tests2.CaptureTest.testCaptureFromStub":502,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":343,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":220,"org.easymock.tests.UsageTest.unexpectedCallWithArray":38,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":46,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":166,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":323,"org.easymock.tests2.CaptureTest.testCapture":505,"org.easymock.tests2.UsageConstraintsTest.constraints":420,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":176,"org.easymock.samples.ExampleTest.addAndChangeDocument":178,"org.easymock.tests.UsageStrictMockTest.testVerify":389,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":3,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":332,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":93,"org.easymock.tests.LimitationsTest.abstractClass":207,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":320,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":140,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":94,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":474,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":155}}]
