[{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:299","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[5,7,9,11],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[17,17,18,18,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[21,22,23,24,25,26,27,28,29,30,31,15,32,33,2,16,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[75,76,77,78,79,80,81,13,82,14,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[113,21,22,114,17,18,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,23,24,137,25,26,27,28,29,138,139,140,141,75,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,30,166,167,168,169,170,171,172,76,173,174,175,176,77,177,178,179,180,78,181,182,183,184,185,79,80,81,13,186,82,14,83,84,85,86,187,31,15,32,33,2,16,188,34,35,36,37,189,190,191,192,193,194,38,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,87,221,222,223,224,225,226,227,228,229,230,231,232,233,39,40,41,42,43,44,45,46,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,254,255,256,257,258,259,108,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,109,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,47,324,325,326,48,327,328,329,49,50,330,331,332,333,334,335,336,5,6,337,338,339,7,8,340,341,342,343,344,345,346,347,9,10,348,349,350,11,12,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,51,0,402,403,404,1,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,110,427,428,429,430,431,432,111,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,52,53,450,54,55,56,451,452,57,20,58,59,453,454,60,61,62,63,455,456,64,457,458,459,460,461,462,112,463,464,465,466,467,468,469,470,471,472,473,474,475,65,476,477,66,478,67,479,68,69,480,481,70,482,483,71,484,485,72,73,486,487,74,488,489,490],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:102","sourceCode":"return new org.easymock.internal.Result(org.easymock.IAnswer<?> , false)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[113,117,118,120,121,123,23,28,171,172,76,77,177,180,78,183,184,185,13,82,14,83,84,85,86,189,190,192,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,234,235,236,237,238,239,242,243,255,256,261,273,275,276,311,312,313,314,315,316,317,318,319,320,321,322,50,331,332,333,334,336,5,6,337,338,339,8,340,341,342,343,344,345,346,347,9,10,348,349,350,11,12,351,358,365,366,367,368,369,375,382,383,384,385,386,389,390,391,392,394,395,398,399,400,401,403,412,416,418,420,424,110,427,428,430,432,111,433,436,437,438,441,445,52,53,450,54,55,56,57,453,454,60,63,455,456,64,458,459,460,112,471,473,474,66,479,485,488],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[415],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":334,"org.easymock.tests2.UsageTest.argumentsOrdered":435,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":77,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":321,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":297,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":431,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":114,"org.easymock.tests2.DelegateToTest.testReturnException":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":139,"org.easymock.tests.MockingTest.testPartialClassMocking":189,"org.easymock.tests.MockClassControlTest.testToString":41,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":464,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":481,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":479,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":88,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":399,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":339,"org.easymock.tests2.UsageTest.wrongArguments":429,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":238,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":268,"org.easymock.samples.ExampleTest.answerVsDelegate":119,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":251,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":54,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":46,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":320,"org.easymock.tests2.CaptureTest.testPrimitive":385,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":242,"org.easymock.tests.UsageTest.moreThanOneArgument":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":107,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":450,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":168,"org.easymock.tests.UsageTest.argumentsOrdered":182,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":126,"org.easymock.tests.UsageVarargTest.varargIntAccepted":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":215,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":410,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":325,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":363,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":219,"org.easymock.tests.ReplayStateInvalidUsageTest.times":161,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":375,"org.easymock.tests2.DependencyTest.testClassMocking":396,"org.easymock.tests2.AnswerTest.answer":441,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":409,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":248,"org.easymock.tests2.CaptureTest.testAnd":382,"org.easymock.tests2.UsageTest.strictResetToDefault":427,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":167,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":315,"org.easymock.tests2.DelegateToTest.testDelegate":405,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":103,"org.easymock.tests.LimitationsTest.mockFinalMethod":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":135,"org.easymock.tests2.DependencyTest.testClassMockingSupport":397,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":243,"org.easymock.tests2.CaptureTest.testCapture1_2446744":386,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":452,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":101,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":407,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":155,"org.easymock.tests.UsageThrowableTest.throwError":13,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":250,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":165,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":490,"org.easymock.samples.PartialClassMockTest.testGetArea":113,"org.easymock.tests.MockingTest.testInterfaceMocking":191,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":280,"org.easymock.tests2.UsageTest.niceToStrict":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":89,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":288,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":416,"org.easymock.tests2.MockBuilderTest.testCreateMock":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":486,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":97,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":316,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":81,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":143,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":266,"org.easymock.tests.UsageOverloadedMethodTest.overloading":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":74,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":108,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":343,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":206,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":3,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":342,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":391,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":225,"org.easymock.tests.MockClassControlTest.testEquals":45,"org.easymock.tests2.EasyMockSupportClassTest.testAll":66,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":24,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":105,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":408,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":133,"org.easymock.tests2.CaptureTest.testCaptureAll":383,"org.easymock.tests.MockNameTest.defaultName":176,"org.easymock.tests2.UsageConstraintsTest.testMatches":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":169,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":153,"org.easymock.samples.ExampleTest.voteForRemovals":123,"org.easymock.tests.UsageVarargTest.allKinds":233,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":134,"org.easymock.samples.BasicClassMockTest.testPrintContent":22,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":85,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":142,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":360,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":188,"org.easymock.tests2.UsageConstraintsTest.greaterThan":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":478,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":235,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":60,"org.easymock.samples.ExampleTest.voteForRemoval":120,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":34,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":61,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":366,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":252,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":326,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":451,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":110,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":30,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":313,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":138,"org.easymock.tests2.CaptureTest.testCaptureFirst":395,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":314,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":437,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":262,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":202,"org.easymock.tests2.UsageTest.moreThanOneArgument":428,"org.easymock.tests2.CaptureTest.testCapture2_2446744":394,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":368,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":305,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":232,"org.easymock.tests.GenericTest.testBridgedEquals":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":150,"org.easymock.tests.UsageExpectAndReturnTest.longType":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":131,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":311,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":106,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":254,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":104,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":166,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":264,"org.easymock.tests.UsageCallCountTest.tooManyCalls":151,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":487,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":380,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":84,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":455,"org.easymock.tests.MockingTest.testNiceClassMocking":38,"org.easymock.tests.MockingTest.testClassMocking":36,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":144,"org.easymock.tests2.UsageConstraintsTest.testContains":341,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":336,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":76,"org.easymock.tests.MockTypeTest.fromEasyMockClass":249,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":449,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":270,"org.easymock.tests.UsageExpectAndReturnTest.object":205,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":379,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":319,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":227,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":285,"org.easymock.tests.UsageTest.exactCallCountByLastCall":183,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":292,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":173,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":439,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":211,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":222,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":259,"org.easymock.tests.MockClassControlTest.testHashCode":44,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":354,"org.easymock.tests2.EasyMockSupportTest.testVerify":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":483,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":128,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":80,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":406,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":352,"org.easymock.tests.UsageVarargTest.varargCharAccepted":226,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":187,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":310,"org.easymock.tests2.UsageTest.openCallCountByLastCall":432,"org.easymock.tests.DefaultClassInstantiatorTest.object":31,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":322,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":79,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":353,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":453,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":43,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":488,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":42,"org.easymock.tests2.UsageTest.resumeIfFailure":436,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":246,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":141,"org.easymock.tests2.StubTest.stubWithReturnValue":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":419,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":204,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":350,"org.easymock.tests2.SerializationTest.testAllMockedMethod":51,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":303,"org.easymock.samples.SupportTest.voteForRemovals":117,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":136,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":100,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":309,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":442,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":175,"org.easymock.tests.UsageExpectAndThrowTest.object":98,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":10,"org.easymock.tests2.DelegateToTest.testWrongClass":404,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":255,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":256,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests.UsageStrictMockTest.range":275,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":327,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":99,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":418,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":181,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":65,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":267,"org.easymock.tests2.CaptureTest.testCaptureNone":390,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":281,"org.easymock.tests.UsageUnorderedTest.message":152,"org.easymock.tests.UsageVerifyTest.twoReturns":221,"org.easymock.tests.UsageVarargTest.varargByteAccepted":231,"org.easymock.tests2.ThreadingTest.testThreadSafe":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":72,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":148,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":21,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":286,"org.easymock.tests2.CaptureTest.testCapture_2617107":384,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":307,"org.easymock.tests2.UsageConstraintsTest.any":8,"org.easymock.tests2.StubTest.stub":462,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":160,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":140,"org.easymock.tests.UsageExpectAndThrowTest.longType":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":308,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":2,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":159,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":472,"org.easymock.tests2.SerializationTest.testClass":400,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":358,"org.easymock.tests.LimitationsTest.mockNativeMethod":28,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":137,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":214,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":372,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":475,"org.easymock.tests2.NameTest.nameForMocksControl":468,"org.easymock.tests2.MockedExceptionTest.testMockedException":49,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":67,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":78,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":448,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":92,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":192,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":52,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":420,"org.easymock.tests.MockingTest.testNicePartialClassMocking":190,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":56,"org.easymock.tests2.CaptureTest.testCaptureLast":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":370,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":244,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":460,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":338,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":348,"org.easymock.tests.MockingTest.testTwoMocks":37,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":96,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":434,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":12,"org.easymock.samples.ExampleTest.removeNonExistingDocument":124,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":157,"org.easymock.tests.UsageStrictMockTest.differentMethods":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":355,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":32,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":367,"org.easymock.tests2.MockBuilderTest.testCreateMockString":426,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":68,"org.easymock.tests.UsageExpectAndThrowTest.floatType":90,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":477,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":444,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":440,"org.easymock.tests.UsageVerifyTest.twoThrows":87,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":485,"org.easymock.samples.ExampleTest.voteAgainstRemoval":121,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":298,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":454,"org.easymock.tests.LimitationsTest.privateConstructor":27,"org.easymock.tests2.UsageConstraintsTest.testNotNull":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":86,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":329,"org.easymock.tests2.UsageTest.defaultResetToNice":433,"org.easymock.samples.ExampleTest.voteAgainstRemovals":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":299,"org.easymock.tests.UsageVarargTest.differentLength":228,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":371,"org.easymock.tests2.CallbackTest.callback":463,"org.easymock.tests2.UsageConstraintsTest.equals":335,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":20,"org.easymock.tests.UsageTest.openCallCountByLastCall":180,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":240,"org.easymock.tests.UsageCallCountTest.tooFewCalls":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":269,"org.easymock.tests.UsageThrowableTest.throwCheckedException":83,"org.easymock.tests.MockingTest.testStrictClassMocking":35,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":459,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":185,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":456,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":376,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":458,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":446,"org.easymock.tests.ObjectMethodsTest.testHashCode":284,"org.easymock.tests2.NameTest.nameForNiceMock":467,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":369,"org.easymock.tests2.DependencyTest.testInterfaceMocking":398,"org.easymock.samples.ExampleTest.addDocument":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":489,"org.easymock.tests2.DelegateToTest.testStubDelegate":403,"org.easymock.tests2.AnswerTest.stubAnswer":445,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":273,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":421,"org.easymock.tests.UsageVarargTest.varargLongAccepted":230,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":296,"org.easymock.tests.UsageExpectAndReturnTest.floatType":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":213,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":438,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests.UsageThrowableTest.noUpperLimit":186,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":260,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":362,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":332,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":47,"org.easymock.tests2.SerializationTest.test":401,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":387,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":4,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":15,"org.easymock.tests2.UsageConstraintsTest.testSame":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":196,"org.easymock.samples.SupportTest.addDocument":116,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":457,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":69,"org.easymock.tests.GenericTest.testPackageScope":23,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":291,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":361,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":193,"org.easymock.tests2.NameTest.nameForMock":465,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":207,"org.easymock.tests2.UsageStrictMockTest.differentMethods":474,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":425,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":199,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":102,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":282,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":237,"org.easymock.tests2.MockedExceptionTest.testRealException":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":301,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":328,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":300,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":239,"org.easymock.tests2.NameTest.nameForStrictMock":466,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":415,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":447,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":55,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":48,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":33,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":412,"org.easymock.tests2.UsageStrictMockTest.range":473,"org.easymock.tests2.UsageConstraintsTest.lessThan":351,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":295,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":482,"org.easymock.tests2.CaptureTest.testCaptureRightOne":392,"org.easymock.tests2.UsageConstraintsTest.testOr":337,"org.easymock.tests.UsageRangeTest.combination":234,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":53,"org.easymock.tests.UsageTest.wrongArguments":179,"org.easymock.tests2.MockBuilderTest.testWithConstructor":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":480,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":289,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":16,"org.easymock.tests.UsageVarargTest.varargShortAccepted":229,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":149,"org.easymock.tests2.UsageConstraintsTest.cmpTo":340,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":109,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":111,"org.easymock.tests2.CaptureTest.testCaptureFromStub":393,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":154,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":413,"org.easymock.tests.UsageTest.unexpectedCallWithArray":178,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":147,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":19,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":209,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":274,"org.easymock.tests2.UsageConstraintsTest.constraints":333,"org.easymock.samples.ExampleTest.addAndChangeDocument":125,"org.easymock.tests.UsageStrictMockTest.testVerify":278,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":115,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":132,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":217,"org.easymock.tests.LimitationsTest.abstractClass":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":218,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":317}}]
