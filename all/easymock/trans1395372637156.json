[{"transplant":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[18,19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[22,23,24,25,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[28,29,30,31,32,33,34,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[36,37,20,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,80,81,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[96,3,15],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[28,29,97,30,98,99,100,101,0,102,103,39,104,40,105,106,107,108,109,31,32,33,110,111,112,113,114,115,18,116,117,36,118,119,19,120,121,122,123,124,125,126,1,127,128,20,129,130,131,38,132,133,48,52,53,57,59,134,135,136,21,137,138,22,23,24,139,25,140,141,142,27,143,144,60,145,146,147,148,149,150,151,152,153,154,155,156,2,157,158,159,160,161,3,4,162,163,61,63,64,66,67,164,165,68,69,166,70,71,72,74,75,77,167,168,34,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,5,189,190,6,191,192,193,194,195,196,197,84,198,199,200,201,202,85,203,204,205,206,207,208,209,10,11,210,211,212,213,214,215,216,217,218,219,88,89,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,12,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,13,14,272,273,15,16,274,275,276,277,278,279,280,281,282,283,284,285,286,287,92,93,94,288,289,290,291,292,293,95],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[294,295,5,296,297,13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[213,230,231,238,245,277],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[39,300,301,302,303,304,305,306,61,307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[39,104,40,308],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[28,29,97,30,98,99,100,101,0,102,39,104,40,309,105,106,108,109,44,45,46,47,31,32,33,114,115,18,116,117,36,118,119,19,120,121,122,123,124,125,126,1,127,128,20,129,130,131,38,132,133,52,54,55,57,59,135,136,21,137,138,22,23,24,139,25,140,141,142,27,310,311,312,313,314,315,316,317,318,319,320,321,322,143,144,60,145,146,147,148,149,150,151,152,154,155,156,2,157,158,159,160,3,4,163,61,62,63,64,65,323,66,67,165,68,166,70,71,72,74,77,167,324,79,325,80,81,326,327,328,168,34,169,170,171,172,173,82,83,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,5,189,190,6,191,194,195,196,84,198,200,201,85,204,205,206,207,208,209,10,11,210,211,212,213,214,215,216,217,218,219,88,89,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,12,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,13,14,272,273,15,16,274,276,277,278,279,280,281,282,283,284,285,286,287,92,93,94,290,292,293],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[39,104,40,308],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[28,29,97,30,98,99,100,101,0,102,103,39,104,40,309,105,106,107,108,109,44,45,46,47,31,32,33,110,111,112,113,114,115,18,116,117,36,118,119,19,120,37,121,122,123,124,125,126,1,127,128,20,129,130,329,131,38,132,133,50,52,54,55,57,135,136,21,137,138,22,23,24,139,25,140,142,27,310,311,312,313,314,315,316,317,330,318,319,320,321,322,60,146,147,148,149,154,155,156,2,157,158,159,160,161,3,4,162,163,61,62,63,64,65,323,66,67,164,165,68,69,166,70,71,72,74,76,77,78,167,324,79,325,326,327,328,168,34,169,170,171,172,173,82,83,174,175,176,177,178,183,331,185,186,17,187,188,5,189,190,6,191,192,193,84,198,199,200,201,85,35,332,333,203,204,205,206,207,208,209,10,11,88,89,220,221,222,223,224,334,225,226,227,228,229,335,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,12,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,14,272,273,15,16,274,336,337,276,277,278,279,280,281,282,283,284,285,286,287,92,93,94,288,290,291,292,293,338,339],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[100,114,115,117,36,118,119,123,125,126,127,128,38,132,133,141,165,80,80,81,81,174,175,176,177,178,189,204,205,208,210,211,212,213,214,276,277,286],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[116],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[39,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,80,81,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[121,286],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[28,29,97,30,98,99,100,101,0,102,103,39,104,40,309,105,106,107,108,109,44,45,46,47,31,32,33,110,111,112,113,114,115,18,116,117,36,118,119,19,120,121,122,123,124,125,126,1,127,128,20,129,130,131,38,132,133,48,52,53,54,55,57,59,135,136,21,137,138,22,23,24,139,25,140,141,142,27,310,311,312,313,314,315,316,317,330,318,319,320,321,322,143,144,60,145,146,147,148,149,150,151,152,153,154,155,156,2,157,158,159,160,161,3,4,162,163,61,62,63,64,65,323,66,67,164,165,68,69,166,70,71,72,74,75,77,167,324,79,325,80,80,81,81,326,327,328,168,34,169,170,171,172,173,82,83,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,5,189,190,6,191,192,193,194,195,196,197,84,198,199,200,201,340,341,202,342,343,344,85,203,204,205,206,207,208,209,10,11,210,211,212,213,214,215,216,217,218,219,88,89,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,12,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,13,14,272,273,15,16,274,276,277,278,279,280,281,282,283,284,285,286,287,92,93,94,288,289,290,291,292,293,95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[298,299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":116,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":270,"org.easymock.tests2.UsageTest.argumentsOrdered":4,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":320,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":182,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":158,"org.easymock.tests2.StubTest.stubWithReturnValue":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":305,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":325,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":239,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":131,"org.easymock.tests2.SerializationTest.testAllMockedMethod":40,"org.easymock.tests2.DelegateToTest.testReturnException":146,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":180,"org.easymock.tests.MockingTest.testPartialClassMocking":92,"org.easymock.samples.SupportTest.voteForRemovals":327,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":295,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":298,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":262,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":308,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":250,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":45,"org.easymock.tests.UsageExpectAndThrowTest.object":260,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":324,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":300,"org.easymock.tests2.DelegateToTest.testWrongClass":148,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":276,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":277,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":204,"org.easymock.tests2.UsageTest.wrongArguments":2,"org.easymock.samples.ConstructorCalledMockTest.testTax":80,"org.easymock.tests.UsageStrictMockTest.range":6,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":196,"org.easymock.samples.ExampleTest.answerVsDelegate":34,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":330,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":87,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":62,"org.easymock.tests2.UsageConstraintsTest.testNull":36,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":261,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":70,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":319,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":54,"org.easymock.tests2.CaptureTest.testPrimitive":137,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":208,"org.easymock.tests.UsageTest.moreThanOneArgument":271,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":269,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":195,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":166,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":212,"org.easymock.tests2.CaptureTest.testCaptureNone":139,"org.easymock.tests.UsageUnorderedTest.message":12,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageVarargTest.varargByteAccepted":227,"org.easymock.tests2.ThreadingTest.testThreadSafe":105,"org.easymock.tests.UsageTest.argumentsOrdered":16,"org.easymock.tests.UsageVarargTest.varargIntAccepted":222,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":293,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":82,"org.easymock.tests2.CaptureTest.testCapture_2617107":21,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":174,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":207,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":53,"org.easymock.tests2.UsageConstraintsTest.any":121,"org.easymock.tests2.StubTest.stub":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":178,"org.easymock.tests.UsageExpectAndThrowTest.longType":253,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":181,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":342,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":101,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":310,"org.easymock.tests2.SerializationTest.testClass":39,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":309,"org.easymock.tests.LimitationsTest.mockNativeMethod":85,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":249,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":90,"org.easymock.tests2.AnswerTest.answer":28,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":153,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":43,"org.easymock.tests2.CaptureTest.testAnd":135,"org.easymock.tests2.UsageTest.strictResetToDefault":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":75,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":103,"org.easymock.tests2.NameTest.nameForMocksControl":113,"org.easymock.tests2.MockedExceptionTest.testMockedException":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":315,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":200,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":273,"org.easymock.tests2.DelegateToTest.testDelegate":149,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":254,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":94,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":68,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":55,"org.easymock.tests.MockingTest.testNicePartialClassMocking":93,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":265,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":72,"org.easymock.tests2.CaptureTest.testCaptureLast":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":183,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":275,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":219,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":130,"org.easymock.tests.MockingTest.testTwoMocks":91,"org.easymock.tests2.CaptureTest.testCapture1_2446744":138,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":258,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":151,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":132,"org.easymock.tests.UsageThrowableTest.throwError":278,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":202,"org.easymock.tests.UsageStrictMockTest.differentMethods":191,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":107,"org.easymock.tests2.MockBuilderTest.testCreateMockString":59,"org.easymock.tests.UsageExpectAndThrowTest.floatType":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":214,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":1,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":29,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":46,"org.easymock.samples.PartialClassMockTest.testGetArea":79,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":341,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":175,"org.easymock.samples.ExampleTest.voteAgainstRemoval":170,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":77,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":251,"org.easymock.tests2.UsageTest.niceToStrict":157,"org.easymock.tests2.UsageConstraintsTest.testNotNull":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":285,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":143,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":52,"org.easymock.tests2.MockBuilderTest.testCreateMock":56,"org.easymock.tests2.UsageTest.defaultResetToNice":161,"org.easymock.samples.ExampleTest.voteAgainstRemovals":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":245,"org.easymock.tests.UsageVarargTest.differentLength":334,"org.easymock.tests2.CallbackTest.callback":33,"org.easymock.tests2.UsageConstraintsTest.equals":96,"org.easymock.tests.UsageTest.openCallCountByLastCall":272,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":294,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":259,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":316,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":114,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":288,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":194,"org.easymock.tests.UsageCallCountTest.tooFewCalls":291,"org.easymock.tests.UsageOverloadedMethodTest.overloading":185,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":333,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":125,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":331,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":241,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":65,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":124,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":197,"org.easymock.tests.UsageThrowableTest.throwCheckedException":282,"org.easymock.tests2.EasyMockSupportClassTest.testAll":44,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":89,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":297,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":267,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":217,"org.easymock.tests2.CaptureTest.testCaptureAll":136,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":152,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":287,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":66,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":64,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":343,"org.easymock.tests2.UsageConstraintsTest.testMatches":126,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":323,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":213,"org.easymock.samples.ExampleTest.voteForRemovals":172,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":109,"org.easymock.tests2.NameTest.nameForNiceMock":112,"org.easymock.tests.UsageVarargTest.allKinds":229,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":209,"org.easymock.tests2.DependencyTest.testInterfaceMocking":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":302,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":218,"org.easymock.samples.BasicClassMockTest.testPrintContent":83,"org.easymock.samples.ExampleTest.addDocument":171,"org.easymock.tests2.DelegateToTest.testStubDelegate":147,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":284,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":98,"org.easymock.tests2.AnswerTest.stubAnswer":97,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":184,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":189,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":304,"org.easymock.tests2.UsageConstraintsTest.greaterThan":127,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":199,"org.easymock.tests.UsageVarargTest.varargLongAccepted":226,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":78,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":192,"org.easymock.samples.ExampleTest.voteForRemoval":169,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":106,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":248,"org.easymock.tests.UsageExpectAndReturnTest.floatType":232,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":73,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":61,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":81,"org.easymock.tests.UsageThrowableTest.noUpperLimit":279,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":128,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":84,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":115,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":154,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":22,"org.easymock.tests2.SerializationTest.test":104,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":306,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":313,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":231,"org.easymock.tests2.UsageConstraintsTest.testSame":118,"org.easymock.samples.SupportTest.addDocument":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":179,"org.easymock.tests2.CaptureTest.testCaptureFirst":27,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":314,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":237,"org.easymock.tests.GenericTest.testPackageScope":88,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":108,"org.easymock.tests2.CaptureTest.testCapture2_2446744":142,"org.easymock.tests2.UsageTest.moreThanOneArgument":156,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":57,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":228,"org.easymock.tests.GenericTest.testBridgedEquals":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":338,"org.easymock.tests2.NameTest.nameForMock":110,"org.easymock.tests.UsageExpectAndReturnTest.longType":233,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":268,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":242,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":58,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":329,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":266,"org.easymock.tests2.UsageStrictMockTest.differentMethods":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":210,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":234,"org.easymock.tests.UsageCallCountTest.tooManyCalls":339,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":201,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":290,"org.easymock.tests2.MockedExceptionTest.testRealException":145,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":238,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":8,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":255,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":100,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":344,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":283,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":205,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":63,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":289,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":49,"org.easymock.tests2.NameTest.nameForStrictMock":111,"org.easymock.tests2.UsageConstraintsTest.testContains":123,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":60,"org.easymock.tests2.UsageConstraintsTest.testFind":117,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":186,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":31,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":71,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":32,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":187,"org.easymock.tests.UsageExpectAndReturnTest.object":240,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":20,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":74,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":50,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":301,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":224,"org.easymock.tests.UsageTest.exactCallCountByLastCall":274,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":286,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":312,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":303,"org.easymock.tests2.CaptureTest.testCaptureRightOne":140,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":336,"org.easymock.tests2.UsageConstraintsTest.testOr":119,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":307,"org.easymock.tests.UsageRangeTest.combination":198,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":246,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":220,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":69,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":332,"org.easymock.tests.UsageTest.wrongArguments":14,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":95,"org.easymock.tests2.EasyMockSupportTest.testVerify":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":243,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":337,"org.easymock.tests.UsageVarargTest.varargShortAccepted":225,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":35,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":150,"org.easymock.tests2.UsageConstraintsTest.cmpTo":122,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":134,"org.easymock.tests.UsageVarargTest.varargCharAccepted":223,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":99,"org.easymock.tests2.UsageTest.openCallCountByLastCall":159,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":160,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":321,"org.easymock.tests2.CaptureTest.testCaptureFromStub":141,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":340,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":51,"org.easymock.tests.UsageTest.unexpectedCallWithArray":13,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":335,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":9,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":281,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":292,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":244,"org.easymock.tests2.CaptureTest.testCapture":26,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":76,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":256,"org.easymock.samples.ExampleTest.addAndChangeDocument":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":247,"org.easymock.tests.UsageStrictMockTest.testVerify":193,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":47,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":216,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":23,"org.easymock.tests2.UsageTest.resumeIfFailure":162,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":176,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":236,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":86,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":317,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":221}}]
