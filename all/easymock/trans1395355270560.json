[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,41,42,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[57,58,59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:69","sourceCode":"continue","type":"CtContinueImpl"},"failures":[60,61,62,63,64,65,66,67,25,28,68],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[30,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:613","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1263","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[69,70],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[71,72,21,73,74,75,76,77,78,79,80,81,82],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[0,83,1,84],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterTypeNames":"parameterTypeNames","i":"i","parameterTypes":"parameterTypes"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[85,86,87,88,89,90,91,92,93,94,95,0,83,1,96,97,98,99,100,101,5,6,7,8,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,9,11,13,14,15,16,17,18,20,70,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,71,72,21,73,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,22,23,24,25,26,184,27,28,185,74,29,30,186,31,32,33,34,35,36,37,38,39,187,188,40,189,41,41,42,42,190,191,192,193,194,195,196,197,198,199,200,43,44,201,202,203,204,205,75,76,77,78,79,80,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,45,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,46,239,240,241,242,243,244,245,246,81,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,49,50,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,82,53,54,55,338,339,340,341,342,343,344,345,346,347,56,348,349,350,351,352,353],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[354],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1397","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[355,296],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[93,94,356,214,215,280,284,285,287,290,301,305,306,308,311,357,358,359],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[360,361,362],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[0,1,363,364,365,5,366,367,6,368,369,370,371,372,373,374,375,376,7,377,378,379,380,381,8,382,383,9,11,12,384,13,14,15,16,385,17,18,20,71,72,21,386,387,22,67,23,24,25,26,27,28,29,30,31,32,33,34,35,388,389,36,37,38,39,390,391,40,41,41,42,42,43,44,45,226,392,393,394,395,396,397,398,399,46,400,47,48,401,49,50,51,402,403,404,52,53,54,55,405,347,56,348,349,350,351,352,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockClass":"toMock","this":"enhancer"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[106,39,391],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,83,1,84],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,41,42,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[406],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":112,"org.easymock.tests2.UsageTest.argumentsOrdered":181,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":317,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":160,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":176,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":189,"org.easymock.tests2.DelegateToTest.testReturnException":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":76,"org.easymock.tests.MockingTest.testPartialClassMocking":53,"org.easymock.tests.MockClassControlTest.testToString":348,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":6,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":297,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":188,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":118,"org.easymock.tests2.UsageTest.wrongArguments":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":245,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":220,"org.easymock.samples.ExampleTest.answerVsDelegate":194,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":48,"org.easymock.tests2.UsageConstraintsTest.testNull":114,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":31,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":159,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":353,"org.easymock.tests2.CaptureTest.testPrimitive":138,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":316,"org.easymock.tests.UsageTest.moreThanOneArgument":318,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":254,"org.easymock.tests.UsageTest.argumentsOrdered":324,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":357,"org.easymock.tests.UsageVarargTest.varargIntAccepted":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":201,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":9,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":205,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":96,"org.easymock.tests.ReplayStateInvalidUsageTest.times":235,"org.easymock.tests2.AnswerTest.answer":85,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":170,"org.easymock.tests2.CaptureTest.testAnd":70,"org.easymock.tests2.UsageTest.strictResetToDefault":172,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":154,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":224,"org.easymock.tests2.DelegateToTest.testDelegate":166,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":312,"org.easymock.tests.LimitationsTest.mockFinalMethod":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":261,"org.easymock.tests2.CaptureTest.testCapture1_2446744":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":310,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":168,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":229,"org.easymock.tests.UsageThrowableTest.throwError":329,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":256,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":383,"org.easymock.samples.PartialClassMockTest.testGetArea":40,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":230,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":202,"org.easymock.tests2.UsageTest.niceToStrict":175,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":372,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":13,"org.easymock.tests2.MockBuilderTest.testCreateMock":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":379,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":306,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":218,"org.easymock.tests.UsageOverloadedMethodTest.overloading":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":381,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":123,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":242,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":206,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":287,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":122,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":144,"org.easymock.tests2.EasyMockSupportClassTest.testAll":5,"org.easymock.tests.MockClassControlTest.testEquals":352,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":50,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":314,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":362,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":2,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":169,"org.easymock.tests2.CaptureTest.testCaptureAll":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":259,"org.easymock.tests2.UsageConstraintsTest.testMatches":124,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":255,"org.easymock.samples.ExampleTest.voteForRemovals":198,"org.easymock.tests.UsageVarargTest.allKinds":272,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":249,"org.easymock.samples.BasicClassMockTest.testPrintContent":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":260,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":335,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":80,"org.easymock.tests2.UsageConstraintsTest.greaterThan":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":223,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":39,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":397,"org.easymock.samples.ExampleTest.voteForRemoval":195,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":390,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":34,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":45,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":152,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":75,"org.easymock.tests2.CaptureTest.testCaptureFirst":148,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":153,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":183,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":283,"org.easymock.tests2.UsageTest.moreThanOneArgument":173,"org.easymock.tests2.CaptureTest.testCapture2_2446744":147,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":100,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":18,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":271,"org.easymock.tests.GenericTest.testBridgedEquals":402,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":345,"org.easymock.tests.UsageExpectAndReturnTest.longType":279,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":257,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":19,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":315,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":252,"org.easymock.tests.UsageCallCountTest.tooManyCalls":346,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":380,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":302,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":334,"org.easymock.tests.MockingTest.testNiceClassMocking":405,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":24,"org.easymock.tests.MockingTest.testClassMocking":404,"org.easymock.tests2.UsageConstraintsTest.testContains":121,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":10,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":339,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":21,"org.easymock.tests2.UsageConstraintsTest.testFind":113,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":208,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":103,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":209,"org.easymock.tests.UsageExpectAndReturnTest.object":286,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":158,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":266,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":275,"org.easymock.tests.UsageTest.exactCallCountByLastCall":325,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":337,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":67,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":262,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":292,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":241,"org.easymock.tests.MockClassControlTest.testHashCode":351,"org.easymock.tests2.EasyMockSupportTest.testVerify":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":374,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":360,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":167,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":69,"org.easymock.tests.UsageVarargTest.varargCharAccepted":265,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":90,"org.easymock.tests2.UsageTest.openCallCountByLastCall":177,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":161,"org.easymock.tests.DefaultClassInstantiatorTest.object":226,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":273,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":375,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":332,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":37,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":350,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":303,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":8,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":349,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":361,"org.easymock.tests2.UsageTest.resumeIfFailure":182,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":78,"org.easymock.tests2.StubTest.stubWithReturnValue":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":64,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":132,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":285,"org.easymock.tests2.SerializationTest.testAllMockedMethod":1,"org.easymock.samples.SupportTest.voteForRemovals":191,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":401,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":309,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":84,"org.easymock.tests.UsageExpectAndThrowTest.object":307,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":129,"org.easymock.tests2.DelegateToTest.testWrongClass":165,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":327,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":328,"org.easymock.samples.ConstructorCalledMockTest.testTax":41,"org.easymock.tests.UsageStrictMockTest.range":214,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":308,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":15,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":237,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":219,"org.easymock.tests2.CaptureTest.testCaptureNone":143,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":57,"org.easymock.tests.UsageUnorderedTest.message":296,"org.easymock.tests.UsageVerifyTest.twoReturns":251,"org.easymock.tests.UsageVarargTest.varargByteAccepted":270,"org.easymock.tests2.ThreadingTest.testThreadSafe":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":377,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":343,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":43,"org.easymock.tests2.CaptureTest.testCapture_2617107":137,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":247,"org.easymock.tests2.UsageConstraintsTest.any":119,"org.easymock.tests2.StubTest.stub":185,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":77,"org.easymock.tests.UsageExpectAndThrowTest.longType":300,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":395,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":233,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":92,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.LimitationsTest.mockNativeMethod":46,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":51,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":295,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":4,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":95,"org.easymock.tests2.NameTest.nameForMocksControl":108,"org.easymock.tests2.MockedExceptionTest.testMockedException":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":367,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":322,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":301,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":29,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":16,"org.easymock.tests.MockingTest.testNicePartialClassMocking":54,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":33,"org.easymock.tests2.CaptureTest.testCaptureLast":142,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":326,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":117,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":28,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":130,"org.easymock.tests.MockingTest.testTwoMocks":52,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":305,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":180,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":134,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":59,"org.easymock.samples.ExampleTest.removeNonExistingDocument":199,"org.easymock.tests.UsageStrictMockTest.differentMethods":215,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":231,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":393,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":58,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":99,"org.easymock.tests2.MockBuilderTest.testCreateMockString":20,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":347,"org.easymock.tests.UsageExpectAndThrowTest.floatType":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":368,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":86,"org.easymock.tests.UsageVerifyTest.twoThrows":250,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":7,"org.easymock.samples.ExampleTest.voteAgainstRemoval":196,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":38,"org.easymock.tests.LimitationsTest.privateConstructor":399,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":61,"org.easymock.tests2.UsageConstraintsTest.testNotNull":133,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":336,"org.easymock.tests2.UsageTest.defaultResetToNice":179,"org.easymock.samples.ExampleTest.voteAgainstRemovals":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":291,"org.easymock.tests.UsageVarargTest.differentLength":267,"org.easymock.tests2.CallbackTest.callback":104,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":388,"org.easymock.tests.UsageTest.openCallCountByLastCall":321,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":81,"org.easymock.tests.UsageCallCountTest.tooFewCalls":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":26,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":221,"org.easymock.tests.UsageThrowableTest.throwCheckedException":333,"org.easymock.tests.MockingTest.testStrictClassMocking":403,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":27,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":82,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":25,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":236,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":184,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":88,"org.easymock.tests2.CompareToTest.testGreateOrEqual":406,"org.easymock.tests.ObjectMethodsTest.testHashCode":274,"org.easymock.tests2.NameTest.nameForNiceMock":107,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":101,"org.easymock.tests2.DependencyTest.testInterfaceMocking":187,"org.easymock.samples.ExampleTest.addDocument":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":378,"org.easymock.tests2.DelegateToTest.testStubDelegate":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.AnswerTest.stubAnswer":87,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":212,"org.easymock.tests.UsageVarargTest.varargLongAccepted":269,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests.UsageExpectAndReturnTest.floatType":278,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":22,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":42,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":127,"org.easymock.tests.UsageThrowableTest.noUpperLimit":330,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":110,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":386,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":140,"org.easymock.tests2.SerializationTest.test":83,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":392,"org.easymock.tests2.UsageConstraintsTest.testSame":115,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":277,"org.easymock.samples.SupportTest.addDocument":190,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":369,"org.easymock.tests.GenericTest.testPackageScope":49,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":358,"org.easymock.tests2.NameTest.nameForMock":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":288,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":66,"org.easymock.tests2.UsageStrictMockTest.differentMethods":94,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":389,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":311,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":225,"org.easymock.tests2.MockedExceptionTest.testRealException":73,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":91,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":238,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":246,"org.easymock.tests2.NameTest.nameForStrictMock":106,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":102,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":32,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":387,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":394,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":128,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":355,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":11,"org.easymock.tests2.UsageStrictMockTest.range":93,"org.easymock.tests2.UsageConstraintsTest.lessThan":135,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":356,"org.easymock.tests2.CaptureTest.testCaptureRightOne":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":373,"org.easymock.tests2.UsageConstraintsTest.testOr":116,"org.easymock.tests.UsageRangeTest.combination":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":30,"org.easymock.tests.UsageTest.wrongArguments":320,"org.easymock.tests2.MockBuilderTest.testWithConstructor":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":370,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":56,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":289,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":396,"org.easymock.tests.UsageVarargTest.varargShortAccepted":268,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":344,"org.easymock.tests2.UsageConstraintsTest.cmpTo":120,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":178,"org.easymock.tests2.CaptureTest.testCaptureFromStub":146,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":228,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":12,"org.easymock.tests.UsageTest.unexpectedCallWithArray":319,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":211,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":342,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":65,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":290,"org.easymock.tests2.UsageConstraintsTest.constraints":111,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":213,"org.easymock.samples.ExampleTest.addAndChangeDocument":200,"org.easymock.tests.UsageStrictMockTest.testVerify":217,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":192,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":258,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":141,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":3,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":203,"org.easymock.tests.LimitationsTest.abstractClass":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":204,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":156,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":263}}]
