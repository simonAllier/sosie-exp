[{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[0,1,2,3],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[4,5,6,7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[8,4,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[4,5,6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matching"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,0,63,64,65,66,67,5,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,1,109,110,26,111,112,113,114,115,116,117,118,119,120,121,122,123,124,2,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,3,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[100],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[309],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[64,310,311,312],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:85","failures":[1,112,122,126],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2124","failures":[33,36,37,66,313,67,142],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[314,315,166,316,317,281],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[107,108],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:47","sourceCode":"java.lang.StringBuffer.append(((((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol())) + \" 0\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[116],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"expected"}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[318],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[319,320,321,322,315,323,324,41,43,44,87,88,94,95,151,167,169,170,272,273,274,280,282,285,286,292,293],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.Range:36","failures":[27,28,29,30,325,326,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,327,328,329,330,331,46,332,333,334,335,336,337,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,0,63,64,338,339,65,66,313,67,4,5,6,68,69,340,341,342,343,344,70,345,346,347,348,349,350,351,352,353,354,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,355,104,105,106,107,318,108,1,109,110,26,111,112,113,114,115,116,117,118,119,120,121,122,123,124,2,125,126,127,128,356,129,130,131,132,133,357,134,358,359,360,9,361,362,363,364,365,366,367,368,369,370,10,371,12,13,372,373,14,15,16,374,17,375,376,18,19,377,21,378,379,380,381,382,135,383,384,385,386,387,388,136,137,138,139,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,140,414,415,141,142,143,144,145,146,416,147,311,312,148,149,150,22,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,151,152,432,433,434,435,436,437,438,439,440,441,442,153,154,155,156,157,158,159,160,161,162,163,309,443,444,23,445,446,447,448,449,450,451,452,453,164,165,166,167,168,169,170,171,172,173,174,175,176,454,177,178,179,180,181,182,183,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,184,471,472,473,474,475,185,476,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,477,478,216,479,480,481,482,483,484,485,486,487,488,489,490,491,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,492,247,493,248,249,250,251,252,253,254,255,256,257,258,259,260,494,261,262,263,264,265,266,267,3,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,495,24,496,497,498,499,25,500,501,294,295,296,297,298,299,300,301,302,502,303,304,305,306,307,308],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[64,338,4,310,503,342,346,347,371,372,374,376,504,377,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,311,312],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[71,73,81,106,107,1,110,26,112,122,126],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[100],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[4,5,6,7],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[136,137,138,139,188,246,303,304,305,306,307,308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[64,505,8,506,4,6,340,341,342,343,345,346,133,357,358,359,360,9,362,365,366,367,368,10,11,12,13,14,15,16,17,18,19,20,21,138,392,395,405,411,414,415,311,311,312,312,22,443,444,23,447,216,484,485,486,488,24,25,502],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[507],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[107,110,112],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[508,509,510,511],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[27,28,29,30,325,326,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,327,328,329,330,331,46,332,333,334,335,336,337,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,0,63,64,338,339,65,66,313,67,4,5,6,68,69,340,341,342,343,344,70,345,346,347,348,349,350,351,352,353,354,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,355,104,105,106,107,318,108,1,109,110,26,111,112,113,114,115,116,117,118,119,120,121,122,123,124,2,125,126,127,128,356,129,130,131,132,133,357,134,358,359,360,9,361,362,363,364,365,366,367,368,369,370,10,371,12,13,372,373,14,15,16,374,17,375,376,18,19,377,21,378,379,380,381,382,135,383,384,385,386,387,388,136,137,138,139,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,140,414,415,141,142,143,144,145,146,416,147,311,312,148,149,150,22,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,151,152,432,433,434,435,436,437,438,439,440,441,442,153,154,155,156,157,158,159,160,161,162,163,309,443,444,23,445,446,447,448,449,450,451,452,453,164,165,166,167,168,169,170,171,172,173,174,175,176,454,177,178,179,180,181,182,183,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,184,471,472,473,474,475,185,476,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,477,478,216,479,480,481,482,483,484,485,486,487,488,489,490,491,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,492,247,493,248,249,250,251,252,253,254,255,256,257,258,259,260,494,261,262,263,264,265,266,267,3,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,495,24,496,497,498,499,25,500,501,294,295,296,297,298,299,300,301,302,502,303,304,305,306,307,308],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:137","sourceCode":"int = java.lang.Math.java.lang.Math.min(int, ((java.lang.Class<?>[].int) - 1))","type":"CtAssignmentImpl"},"failures":[258,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[309,445],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[512,71,73,74,75,76,77,78,80,513,81,82,84],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[514],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matched"}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":107,"org.easymock.tests2.UsageTest.argumentsOrdered":95,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":279,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":465,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":90,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":150,"org.easymock.tests2.DelegateToTest.testReturnException":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":304,"org.easymock.tests.MockingTest.testPartialClassMocking":485,"org.easymock.tests.MockClassControlTest.testToString":448,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":356,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":399,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":395,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":196,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":32,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":186,"org.easymock.tests2.UsageTest.wrongArguments":88,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":290,"org.easymock.samples.ExampleTest.answerVsDelegate":142,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":25,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":490,"org.easymock.tests2.UsageConstraintsTest.testNull":1,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":358,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":453,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":56,"org.easymock.tests2.CaptureTest.testPrimitive":74,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":190,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":215,"org.easymock.tests.UsageTest.moreThanOneArgument":280,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":158,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":191,"org.easymock.tests.UsageTest.argumentsOrdered":286,"org.easymock.tests.UsageVarargTest.varargIntAccepted":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":470,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":253,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":387,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":350,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":457,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":257,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":321,"org.easymock.tests.ReplayStateInvalidUsageTest.times":439,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":46,"org.easymock.tests2.DependencyTest.testClassMocking":325,"org.easymock.tests2.AnswerTest.answer":33,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":30,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":497,"org.easymock.tests2.CaptureTest.testAnd":71,"org.easymock.tests2.UsageTest.strictResetToDefault":86,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":365,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":372,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":157,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":51,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":270,"org.easymock.tests2.DelegateToTest.testDelegate":103,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":211,"org.easymock.tests.LimitationsTest.mockFinalMethod":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":252,"org.easymock.tests2.DependencyTest.testClassMockingSupport":326,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":292,"org.easymock.tests2.CaptureTest.testCapture1_2446744":75,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":361,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":28,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":433,"org.easymock.tests.UsageThrowableTest.throwError":217,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":499,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":480,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":388,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":160,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":413,"org.easymock.samples.PartialClassMockTest.testGetArea":22,"org.easymock.tests.MockingTest.testInterfaceMocking":487,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":254,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":174,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":400,"org.easymock.tests2.UsageTest.niceToStrict":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":14,"org.easymock.tests2.MockBuilderTest.testCreateMock":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":408,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":205,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":314,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":52,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":496,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":176,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":288,"org.easymock.tests.UsageOverloadedMethodTest.overloading":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":404,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":117,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":236,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":276,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":116,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":80,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":494,"org.easymock.tests.MockClassControlTest.testEquals":452,"org.easymock.tests2.EasyMockSupportClassTest.testAll":392,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":444,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":213,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":505,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":29,"org.easymock.tests2.CaptureTest.testCaptureAll":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":250,"org.easymock.tests.MockNameTest.defaultName":481,"org.easymock.tests2.UsageConstraintsTest.testMatches":118,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":159,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":152,"org.easymock.samples.ExampleTest.voteForRemovals":146,"org.easymock.tests.UsageVarargTest.allKinds":3,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":272,"org.easymock.samples.BasicClassMockTest.testPrintContent":415,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":251,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":223,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":384,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":308,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":430,"org.easymock.tests2.UsageConstraintsTest.greaterThan":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":393,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":269,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":368,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":431,"org.easymock.samples.ExampleTest.voteForRemoval":143,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":61,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":369,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":514,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":500,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":351,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":9,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":502,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":85,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":462,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":49,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":303,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":98,"org.easymock.tests2.CaptureTest.testCaptureFirst":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":50,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":97,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":232,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":0,"org.easymock.tests2.CaptureTest.testCapture2_2446744":83,"org.easymock.tests2.UsageTest.moreThanOneArgument":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":472,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":19,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":267,"org.easymock.tests.GenericTest.testBridgedEquals":445,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":182,"org.easymock.tests.UsageExpectAndReturnTest.longType":228,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":248,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":20,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":214,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":2,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":275,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":156,"org.easymock.tests.UsageCallCountTest.tooManyCalls":183,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":409,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":201,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":222,"org.easymock.tests.MockingTest.testNiceClassMocking":491,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":341,"org.easymock.tests.MockingTest.testClassMocking":483,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":454,"org.easymock.tests2.UsageConstraintsTest.testContains":115,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":11,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":138,"org.easymock.tests2.UsageConstraintsTest.testFind":108,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":278,"org.easymock.tests.MockTypeTest.fromEasyMockClass":498,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":67,"org.easymock.tests.UsageExpectAndReturnTest.object":235,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":55,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":262,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":420,"org.easymock.tests.UsageTest.exactCallCountByLastCall":287,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":492,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":338,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":241,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":258,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":298,"org.easymock.tests.MockClassControlTest.testHashCode":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":379,"org.easymock.tests2.EasyMockSupportTest.testVerify":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":402,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":193,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":154,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":296,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":27,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":355,"org.easymock.tests.UsageVarargTest.varargCharAccepted":261,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":423,"org.easymock.tests2.CaptureTest.testCaptureMultiple":512,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":476,"org.easymock.tests2.UsageTest.openCallCountByLastCall":91,"org.easymock.tests.DefaultClassInstantiatorTest.object":424,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":58,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":153,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":403,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":220,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":378,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":450,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":366,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":202,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":242,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":161,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":411,"org.easymock.tests2.UsageTest.resumeIfFailure":96,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":24,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":306,"org.easymock.tests2.StubTest.stubWithReturnValue":69,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":374,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":125,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":234,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":184,"org.easymock.samples.SupportTest.voteForRemovals":149,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":315,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":208,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":7,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":185,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":34,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":493,"org.easymock.tests.UsageExpectAndThrowTest.object":206,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":123,"org.easymock.tests2.DelegateToTest.testWrongClass":101,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":294,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":295,"org.easymock.tests.UsageStrictMockTest.range":169,"org.easymock.samples.ConstructorCalledMockTest.testTax":311,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":353,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":54,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":16,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":389,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":289,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":316,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":175,"org.easymock.tests2.CaptureTest.testCaptureNone":79,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":509,"org.easymock.tests.UsageUnorderedTest.message":151,"org.easymock.tests.UsageVerifyTest.twoReturns":274,"org.easymock.tests.UsageVarargTest.varargByteAccepted":266,"org.easymock.tests2.ThreadingTest.testThreadSafe":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":406,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":180,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":421,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":414,"org.easymock.tests2.CaptureTest.testCapture_2617107":73,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":324,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":474,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":189,"org.easymock.tests2.UsageConstraintsTest.any":113,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":438,"org.easymock.tests2.StubTest.stub":68,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndThrowTest.longType":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":305,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":428,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":437,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":42,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":135,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests.LimitationsTest.mockNativeMethod":216,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":23,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":244,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":506,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":329,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":45,"org.easymock.tests2.NameTest.nameForMocksControl":132,"org.easymock.tests2.MockedExceptionTest.testMockedException":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":394,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":284,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":488,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":200,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":313,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":133,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":17,"org.easymock.tests.MockingTest.testNicePartialClassMocking":486,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":360,"org.easymock.tests2.CaptureTest.testCaptureLast":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":293,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":26,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":346,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":124,"org.easymock.tests.MockingTest.testTwoMocks":484,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":347,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":204,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":94,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":127,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":511,"org.easymock.samples.ExampleTest.removeNonExistingDocument":416,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":435,"org.easymock.tests.UsageStrictMockTest.differentMethods":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":380,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":426,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":62,"org.easymock.tests2.ConstraintsToStringTest.andToString":322,"org.easymock.tests2.MockBuilderTest.testCreateMockString":21,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":396,"org.easymock.tests.UsageExpectAndThrowTest.floatType":198,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":36,"org.easymock.tests.UsageVerifyTest.twoThrows":273,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":339,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":405,"org.easymock.samples.ExampleTest.voteAgainstRemoval":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":466,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":173,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":367,"org.easymock.tests.LimitationsTest.privateConstructor":478,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":503,"org.easymock.tests2.UsageConstraintsTest.testNotNull":126,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":224,"org.easymock.tests2.UsageTest.defaultResetToNice":93,"org.easymock.samples.ExampleTest.voteAgainstRemovals":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":240,"org.easymock.tests.UsageVarargTest.differentLength":263,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":328,"org.easymock.tests2.CallbackTest.callback":65,"org.easymock.tests2.UsageConstraintsTest.equals":318,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":363,"org.easymock.tests.UsageTest.openCallCountByLastCall":283,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":104,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":188,"org.easymock.tests.UsageCallCountTest.tooFewCalls":178,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":291,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":510,"org.easymock.tests.UsageThrowableTest.throwCheckedException":221,"org.easymock.tests.MockingTest.testStrictClassMocking":482,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":317,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":246,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":345,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":332,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":342,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":440,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":70,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":38,"org.easymock.tests.ObjectMethodsTest.testHashCode":419,"org.easymock.tests2.NameTest.nameForNiceMock":131,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":63,"org.easymock.tests2.DependencyTest.testInterfaceMocking":31,"org.easymock.samples.ExampleTest.addDocument":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":412,"org.easymock.tests2.DelegateToTest.testStubDelegate":100,"org.easymock.tests2.AnswerTest.stubAnswer":37,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":167,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":375,"org.easymock.tests.UsageVarargTest.varargLongAccepted":265,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndReturnTest.floatType":227,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":64,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":312,"org.easymock.tests2.ConstraintsToStringTest.orToString":319,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":386,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":121,"org.easymock.tests.UsageThrowableTest.noUpperLimit":218,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":105,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":348,"org.easymock.tests2.SerializationTest.test":5,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":76,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":507,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":425,"org.easymock.tests2.UsageConstraintsTest.testSame":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":226,"org.easymock.samples.SupportTest.addDocument":148,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":344,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":397,"org.easymock.tests.GenericTest.testPackageScope":443,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":385,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":489,"org.easymock.tests2.NameTest.nameForMock":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":237,"org.easymock.tests2.UsageStrictMockTest.differentMethods":44,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":377,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":364,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":210,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":417,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":271,"org.easymock.tests2.MockedExceptionTest.testRealException":139,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":468,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":41,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":187,"org.easymock.tests2.NameTest.nameForStrictMock":130,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":373,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":359,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":352,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":427,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":122,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":12,"org.easymock.tests2.UsageStrictMockTest.range":43,"org.easymock.tests2.UsageConstraintsTest.lessThan":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":463,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":401,"org.easymock.tests2.CaptureTest.testCaptureRightOne":81,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":508,"org.easymock.tests2.UsageConstraintsTest.testOr":110,"org.easymock.tests.UsageRangeTest.combination":268,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":357,"org.easymock.tests.UsageTest.wrongArguments":282,"org.easymock.tests2.MockBuilderTest.testWithConstructor":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":398,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":238,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":429,"org.easymock.tests.UsageVarargTest.varargShortAccepted":264,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":181,"org.easymock.tests2.UsageConstraintsTest.cmpTo":114,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":458,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":92,"org.easymock.tests2.CaptureTest.testCaptureFromStub":82,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":432,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":13,"org.easymock.tests.UsageTest.unexpectedCallWithArray":281,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":166,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":179,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":504,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":239,"org.easymock.tests2.CaptureTest.testCapture":513,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":168,"org.easymock.tests2.UsageConstraintsTest.constraints":106,"org.easymock.samples.ExampleTest.addAndChangeDocument":147,"org.easymock.tests2.ConstraintsToStringTest.notToString":320,"org.easymock.tests.UsageStrictMockTest.testVerify":172,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":140,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":249,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":77,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":255,"org.easymock.tests.LimitationsTest.abstractClass":477,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":256,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":53,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":259}}]
