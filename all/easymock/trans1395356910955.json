[{"transplant":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[1,2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[5,6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,5,6,28,29,30,2,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,7,8,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,4,88,89,90,91,92,93,94,95],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[96,97,98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[96,97,98,99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[100,101,50],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[5,6,7,8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[102,103,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[104,105,106],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[107,108],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[109,110],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[111,111,112,112,113,20,21,108,114,115,101,116,117,118,119,120,121,122,123,124,125,46,126,47,127,109,128,129,48,130,131,132,133,134,135,136,137,102,53,138,139,140,141,142,60,143,144,145,146,147,148,149,110,150,151,152,153,154,89],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:200","sourceCode":"throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[10,155,11,12,14,15,111,111,112,112,113,19,156,157,22,23,26,5,6,158,159,160,161,162,163,1,164,165,166,167,30,168,169,170,171,172,100,173,174,175,176,177,31,178,179,180,181,32,182,183,36,37,184,185,186,187,38,39,188,189,40,190,191,108,114,192,115,101,116,118,120,121,122,124,193,104,105,3,194,195,196,197,41,198,199,200,201,202,42,43,44,46,47,109,128,48,203,204,205,206,207,208,209,210,211,212,213,131,214,215,132,133,134,135,216,136,137,102,103,138,139,140,141,217,218,219,220,221,222,58,59,223,142,143,224,225,226,227,228,64,7,8,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,9,260,261,262,263,264,265,266,145,146,147,267,268,269,270,271,272,150,69,273,96,97,274,275,276,277,278,88,279,280,281,282,283,89,284,285,90,91,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,92,309,93,310,311,312,313,314,315,316,94,95,317,318,319,98,99,320,321,322,323],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.matchers.Same:37","failures":[164],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[212,213,131,214,223,249,250,251,252,253,254,263,324,325,273,96,97,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[102,103,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[326,327,328,329,217,218,219,220,221,222,58,330,331,332,333,334,335,336,337,338,339,340,341,342,343,0,142,60,143,344,345,346,347,348,349,350,351,352,150,353,354,355,151,152,153,154,356,357,358,359,89,360,361,92,320,362,321,363,323,364],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:275","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[365],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[366,367],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[368,369,370,371,372,373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((this.org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[111,112,374,375,376,377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":162,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":274,"org.easymock.tests2.UsageTest.argumentsOrdered":52,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":252,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":50,"org.easymock.tests2.StubTest.stubWithReturnValue":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":238,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":17,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":31,"org.easymock.tests2.SerializationTest.testAllMockedMethod":53,"org.easymock.tests2.DelegateToTest.testReturnException":218,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":250,"org.easymock.tests.MockingTest.testPartialClassMocking":145,"org.easymock.samples.SupportTest.voteForRemovals":19,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests.MockClassControlTest.testToString":152,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":123,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":289,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":266,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":139,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":188,"org.easymock.tests.UsageExpectAndThrowTest.object":299,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":157,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":331,"org.easymock.tests2.DelegateToTest.testWrongClass":220,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":287,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":288,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":284,"org.easymock.tests2.UsageTest.wrongArguments":49,"org.easymock.tests.UsageStrictMockTest.range":7,"org.easymock.samples.ConstructorCalledMockTest.testTax":111,"org.easymock.samples.ExampleTest.answerVsDelegate":155,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":201,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":132,"org.easymock.tests2.UsageConstraintsTest.testNull":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":300,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":358,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":42,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":109,"org.easymock.tests.UsageCallCountTest.initializationError":354,"org.easymock.tests2.CaptureTest.testPrimitive":182,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":286,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":325,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":308,"org.easymock.tests.UsageTest.moreThanOneArgument":275,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":76,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":269,"org.easymock.tests2.CaptureTest.testCaptureNone":37,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":327,"org.easymock.tests.UsageUnorderedTest.message":92,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":347,"org.easymock.tests.UsageVerifyTest.twoReturns":261,"org.easymock.tests.UsageVarargTest.varargByteAccepted":86,"org.easymock.tests2.ThreadingTest.testThreadSafe":193,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":316,"org.easymock.tests.UsageTest.argumentsOrdered":77,"org.easymock.tests.UsageVarargTest.varargIntAccepted":80,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":72,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":340,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":20,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":88,"org.easymock.tests2.CaptureTest.testCapture_2617107":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":341,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":91,"org.easymock.tests2.UsageConstraintsTest.any":30,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":127,"org.easymock.tests2.StubTest.stub":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":97,"org.easymock.tests.UsageExpectAndThrowTest.longType":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":251,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":27,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":215,"org.easymock.tests2.SerializationTest.testClass":102,"org.easymock.tests.LimitationsTest.mockNativeMethod":150,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":248,"org.easymock.tests2.AnswerTest.answer":39,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":143,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":29,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":338,"org.easymock.tests2.CaptureTest.testAnd":181,"org.easymock.tests2.UsageTest.strictResetToDefault":204,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":28,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":119,"org.easymock.tests2.NameTest.nameForMocksControl":57,"org.easymock.tests2.MockedExceptionTest.testMockedException":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":225,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":198,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":277,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":318,"org.easymock.tests2.DelegateToTest.testDelegate":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":293,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":147,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":108,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":128,"org.easymock.tests.MockingTest.testNicePartialClassMocking":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":304,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":116,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":349,"org.easymock.tests.LimitationsTest.mockFinalMethod":353,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":330,"org.easymock.tests2.CaptureTest.testCaptureLast":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":253,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":264,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":137,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":166,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":177,"org.easymock.tests.MockingTest.testTwoMocks":144,"org.easymock.tests2.CaptureTest.testCapture1_2446744":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":297,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":51,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":179,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":329,"org.easymock.tests.UsageThrowableTest.throwError":309,"org.easymock.tests.UsageStrictMockTest.differentMethods":8,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":370,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":105,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":348,"org.easymock.tests2.MockBuilderTest.testCreateMockString":130,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":355,"org.easymock.tests.UsageExpectAndThrowTest.floatType":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":228,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":100,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":40,"org.easymock.tests.UsageVerifyTest.twoThrows":260,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":140,"org.easymock.samples.PartialClassMockTest.testGetArea":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":279,"org.easymock.samples.ExampleTest.voteAgainstRemoval":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":290,"org.easymock.tests2.UsageTest.niceToStrict":206,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":148,"org.easymock.tests.LimitationsTest.privateConstructor":352,"org.easymock.tests2.UsageConstraintsTest.testNotNull":178,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":315,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":212,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":47,"org.easymock.tests2.UsageTest.defaultResetToNice":209,"org.easymock.tests2.MockBuilderTest.testCreateMock":129,"org.easymock.samples.ExampleTest.voteAgainstRemovals":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":244,"org.easymock.tests.UsageVarargTest.differentLength":83,"org.easymock.tests2.CallbackTest.callback":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":374,"org.easymock.tests.UsageTest.openCallCountByLastCall":276,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":298,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":199,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":159,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":99,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":90,"org.easymock.tests.UsageCallCountTest.tooFewCalls":70,"org.easymock.tests.UsageOverloadedMethodTest.overloading":271,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":322,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":171,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":135,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":170,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":184,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":359,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":328,"org.easymock.tests.UsageThrowableTest.throwCheckedException":312,"org.easymock.tests.MockClassControlTest.testEquals":357,"org.easymock.tests2.EasyMockSupportClassTest.testAll":138,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":60,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":306,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":333,"org.easymock.tests2.CaptureTest.testCaptureAll":32,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":263,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":136,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":134,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":106,"org.easymock.tests2.UsageConstraintsTest.testMatches":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":216,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":227,"org.easymock.samples.ExampleTest.voteForRemovals":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":339,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":194,"org.easymock.tests2.NameTest.nameForNiceMock":56,"org.easymock.tests.UsageVarargTest.allKinds":4,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":361,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":9,"org.easymock.tests2.DependencyTest.testInterfaceMocking":156,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":335,"org.easymock.samples.BasicClassMockTest.testPrintContent":21,"org.easymock.samples.ExampleTest.addDocument":13,"org.easymock.tests2.DelegateToTest.testStubDelegate":219,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":314,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":24,"org.easymock.tests2.AnswerTest.stubAnswer":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":254,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":221,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":64,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":342,"org.easymock.tests2.UsageConstraintsTest.greaterThan":173,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":256,"org.easymock.tests.UsageVarargTest.varargLongAccepted":85,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":122,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":66,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":373,"org.easymock.samples.ExampleTest.voteForRemoval":11,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":104,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":247,"org.easymock.tests.UsageExpectAndReturnTest.floatType":231,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":117,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":124,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":112,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":363,"org.easymock.tests.UsageThrowableTest.noUpperLimit":93,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":174,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":203,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":89,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":160,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":34,"org.easymock.tests2.SerializationTest.test":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":324,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":197,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":310,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":230,"org.easymock.tests2.UsageConstraintsTest.testSame":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":365,"org.easymock.samples.SupportTest.addDocument":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":249,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":350,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":217,"org.easymock.tests2.CaptureTest.testCaptureFirst":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":41,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":211,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":236,"org.easymock.tests.GenericTest.testPackageScope":142,"org.easymock.tests2.UsageTest.moreThanOneArgument":205,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":3,"org.easymock.tests2.CaptureTest.testCapture2_2446744":187,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":317,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":48,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":87,"org.easymock.tests.GenericTest.testBridgedEquals":344,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":73,"org.easymock.tests2.NameTest.nameForMock":54,"org.easymock.tests.UsageExpectAndReturnTest.longType":232,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":307,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":241,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":283,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":305,"org.easymock.tests2.UsageStrictMockTest.differentMethods":6,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":224,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":96,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":233,"org.easymock.tests.UsageCallCountTest.tooManyCalls":74,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":303,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":258,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":69,"org.easymock.tests2.MockedExceptionTest.testRealException":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":346,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":294,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":26,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":367,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":313,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":285,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":133,"org.easymock.tests2.NameTest.nameForStrictMock":55,"org.easymock.tests2.UsageConstraintsTest.testContains":169,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":131,"org.easymock.tests.ObjectMethodsTest.initializationError":351,"org.easymock.tests2.UsageConstraintsTest.testFind":163,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":272,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":22,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":101,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":61,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":23,"org.easymock.tests.UsageExpectAndReturnTest.object":239,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":371,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":118,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":46,"org.easymock.tests2.UsageStrictMockTest.range":5,"org.easymock.tests2.UsageConstraintsTest.lessThan":180,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":334,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":82,"org.easymock.tests.UsageTest.exactCallCountByLastCall":278,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":262,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":336,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":196,"org.easymock.tests2.CaptureTest.testCaptureRightOne":185,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":326,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":94,"org.easymock.tests2.UsageConstraintsTest.testOr":165,"org.easymock.tests.UsageRangeTest.combination":255,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":245,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":114,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":321,"org.easymock.tests.UsageTest.wrongArguments":75,"org.easymock.tests2.MockBuilderTest.testWithConstructor":375,"org.easymock.tests.MockClassControlTest.testHashCode":356,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":234,"org.easymock.tests2.EasyMockSupportTest.testVerify":45,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":242,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":95,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":372,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":320,"org.easymock.tests.UsageVarargTest.varargShortAccepted":84,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":98,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":107,"org.easymock.tests2.UsageConstraintsTest.cmpTo":168,"org.easymock.tests.UsageVarargTest.varargCharAccepted":81,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":332,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":189,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":25,"org.easymock.tests2.UsageTest.openCallCountByLastCall":207,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests.DefaultClassInstantiatorTest.object":368,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":44,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":319,"org.easymock.tests2.CaptureTest.testCaptureFromStub":186,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":366,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":126,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":296,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":343,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":311,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":63,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":71,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":376,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":243,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":65,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":120,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":154,"org.easymock.tests2.UsageConstraintsTest.constraints":161,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":295,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":246,"org.easymock.tests.UsageStrictMockTest.testVerify":67,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":273,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":16,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":141,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":153,"org.easymock.tests2.UsageTest.resumeIfFailure":210,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":35,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":280,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":235,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":149,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":281,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":200,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":79}}]
