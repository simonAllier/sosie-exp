[{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[0,1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[11],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Find:41","failures":[13],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[21,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[32],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[33,34,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[3,38,39,40,41,42,43,44,45,46],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[48,49,50,51,52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,21,67,49,50,68,69,70,71,72,52,73,74,75,76,77,78,79,80],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[38,41,42,43,44,81,82],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[83],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,47,100,101,102,103,53,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,14,131,132,133,134,135,136,137,138,139,140,141,142,143,54,17,18,144,145,19,20,146,147,148,149,150,151,152,153,154,155,156,157,158,159,21,160,161,162,163,164,24,165,166,49,50,68,167,168,169,170,171,172,173,12,174,175,176,177,178,179,69,180,181,70,182,183,184,185,186,187,188,83,71,189,190,191,192,77,193,194,195,196,197,78,79,198,199,200,201,80,202,203],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,204,205,206,207,208,209,210,211,47,100,101,102,103,53,212,104,105,106,213,214,215,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,14,131,132,216,133,134,135,136,137,138,139,140,141,142,143,54,17,18,144,145,19,20,146,147,148,149,217,150,151,152,153,154,155,156,157,218,219,220,221,222,223,224,158,159,33,34,35,36,37,225,226,227,228,229,230,231,232,233,234,235,236,55,48,237,238,56,239,240,241,242,243,244,245,57,246,247,248,249,250,58,251,252,253,254,255,59,256,257,258,60,259,61,260,62,261,262,263,264,265,63,266,267,268,269,270,64,271,272,273,65,274,66,275,276,277,278,279,280,281,282,283,284,285,21,160,161,162,163,164,286,287,288,289,290,8,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,22,23,329,330,331,332,333,334,335,24,165,336,25,337,338,339,340,341,342,343,344,345,346,347,67,348,349,350,351,352,353,354,355,356,0,357,358,359,360,361,362,166,363,364,1,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,49,404,50,68,167,168,169,11,170,171,172,173,12,174,175,176,177,178,179,69,180,181,70,182,183,184,185,186,187,188,83,71,3,4,5,405,406,407,408,409,410,411,412,413,38,414,415,39,416,417,418,419,420,421,72,26,422,423,424,425,31,27,28,426,427,428,429,430,431,432,433,434,51,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,40,41,486,487,488,489,490,52,73,74,75,491,189,492,493,494,495,190,191,6,496,497,498,7,76,192,77,193,194,195,196,197,78,79,198,199,200,201,80,202,499,500,203,501,29,502,503],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[504,505,506],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[507,508,509,16,54,17,21,316,317,328,22,23,24,165,25,337,72,510,511,512,505,513,514,515,203,29,502],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[180],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[350,351,444,445,446,447,448,449,450,451,452,453,454,455,474,475,476,477,478,479,480,481,482,483,484,485],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[119,120,121,122,123,124,159,162,487,488,489,490],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[143,240,246,251,256,259,260,261,266,271,274,275,21,195,201],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":169,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":84,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":143,"org.easymock.tests2.UsageTest.argumentsOrdered":28,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":235,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":423,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":350,"org.easymock.tests2.DelegateToTest.testReturnException":496,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":120,"org.easymock.tests.MockingTest.testPartialClassMocking":279,"org.easymock.tests.MockClassControlTest.testToString":321,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":469,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":241,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":380,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":57,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":376,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":42,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":160,"org.easymock.tests2.UsageTest.wrongArguments":26,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":485,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":117,"org.easymock.samples.ExampleTest.answerVsDelegate":342,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":209,"org.easymock.tests2.UsageConstraintsTest.testNull":171,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":284,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":358,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":465,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":326,"org.easymock.tests2.CaptureTest.testPrimitive":194,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":164,"org.easymock.tests.UsageTest.moreThanOneArgument":54,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":260,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":357,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":312,"org.easymock.tests.UsageTest.argumentsOrdered":20,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":329,"org.easymock.tests.UsageVarargTest.varargIntAccepted":149,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":133,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":405,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":82,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":430,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":227,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":137,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":479,"org.easymock.tests.ReplayStateInvalidUsageTest.times":302,"org.easymock.tests2.DependencyTest.testClassMocking":494,"org.easymock.tests2.AnswerTest.answer":51,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":443,"org.easymock.tests2.CaptureTest.testAnd":192,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":206,"org.easymock.tests2.UsageTest.strictResetToDefault":421,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":460,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":308,"org.easymock.tests2.DelegateToTest.testDelegate":76,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":333,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":258,"org.easymock.tests.LimitationsTest.mockFinalMethod":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":142,"org.easymock.tests2.DependencyTest.testClassMockingSupport":495,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":316,"org.easymock.tests2.CaptureTest.testCapture1_2446744":195,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":441,"org.easymock.tests.UsageThrowableTest.throwError":107,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":296,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":208,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":455,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":394,"org.easymock.samples.PartialClassMockTest.testGetArea":340,"org.easymock.tests.MockingTest.testInterfaceMocking":281,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":134,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":100,"org.easymock.tests2.UsageTest.niceToStrict":422,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":214,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":225,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":411,"org.easymock.tests2.MockBuilderTest.testCreateMock":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":389,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":482,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":511,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":253,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":461,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":205,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":87,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":115,"org.easymock.tests.UsageOverloadedMethodTest.overloading":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":385,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":128,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":69,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":270,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":179,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":9,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":198,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":217,"org.easymock.tests.MockClassControlTest.testEquals":325,"org.easymock.tests2.EasyMockSupportClassTest.testAll":373,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":35,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":259,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":140,"org.easymock.tests2.CaptureTest.testCaptureAll":77,"org.easymock.tests.MockNameTest.defaultName":215,"org.easymock.tests2.UsageConstraintsTest.testMatches":180,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":294,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":313,"org.easymock.samples.ExampleTest.voteForRemovals":346,"org.easymock.tests.UsageVarargTest.allKinds":157,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":328,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":141,"org.easymock.samples.BasicClassMockTest.testPrintContent":355,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":113,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":499,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":124,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":46,"org.easymock.tests2.UsageConstraintsTest.greaterThan":70,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":374,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":307,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":367,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":293,"org.easymock.samples.ExampleTest.voteForRemoval":343,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":74,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":368,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":210,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":431,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":361,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":420,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":327,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":458,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":371,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":119,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":6,"org.easymock.tests2.CaptureTest.testCaptureFirst":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":231,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":459,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":427,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":14,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":266,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":491,"org.easymock.tests2.UsageTest.moreThanOneArgument":72,"org.easymock.tests2.CaptureTest.testCapture2_2446744":201,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":240,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":156,"org.easymock.tests.GenericTest.testBridgedEquals":37,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":95,"org.easymock.tests.UsageExpectAndReturnTest.longType":263,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":456,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":138,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":61,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":186,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":315,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":60,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":310,"org.easymock.tests.UsageCallCountTest.tooManyCalls":96,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":484,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":250,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":112,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":396,"org.easymock.tests.MockingTest.testNiceClassMocking":285,"org.easymock.tests.MockingTest.testClassMocking":277,"org.easymock.tests2.UsageConstraintsTest.testContains":178,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":89,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":489,"org.easymock.tests2.UsageConstraintsTest.testFind":170,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":53,"org.easymock.tests.MockTypeTest.fromEasyMockClass":207,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":50,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":334,"org.easymock.tests.UsageExpectAndReturnTest.object":269,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":483,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":464,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":43,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":106,"org.easymock.tests.UsageTest.exactCallCountByLastCall":146,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":230,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":218,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":330,"org.easymock.tests2.ConstraintsToStringTest.findToString":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":41,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":147,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":65,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":127,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":445,"org.easymock.tests.MockClassControlTest.testHashCode":324,"org.easymock.tests2.EasyMockSupportTest.testVerify":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":383,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":504,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":331,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":125,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":86,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":440,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":15,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":202,"org.easymock.tests.UsageVarargTest.varargCharAccepted":150,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":286,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":245,"org.easymock.tests2.UsageTest.openCallCountByLastCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":467,"org.easymock.tests.DefaultClassInstantiatorTest.object":287,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":85,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":104,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":384,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":477,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":444,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":323,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":365,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":58,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":274,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":97,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":392,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":322,"org.easymock.tests2.UsageTest.resumeIfFailure":426,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":204,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":122,"org.easymock.tests2.StubTest.stubWithReturnValue":493,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":38,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":268,"org.easymock.tests2.SerializationTest.testAllMockedMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":56,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":514,"org.easymock.samples.SupportTest.voteForRemovals":353,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":447,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":59,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":244,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":435,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":220,"org.easymock.tests.UsageExpectAndThrowTest.object":254,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":184,"org.easymock.tests2.DelegateToTest.testWrongClass":498,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":131,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":132,"org.easymock.tests.UsageStrictMockTest.range":25,"org.easymock.samples.ConstructorCalledMockTest.testTax":348,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":433,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":463,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":255,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":413,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":116,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":507,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":101,"org.easymock.tests2.CaptureTest.testCaptureNone":79,"org.easymock.tests.UsageUnorderedTest.message":21,"org.easymock.tests.UsageVerifyTest.twoReturns":23,"org.easymock.tests.UsageVarargTest.varargByteAccepted":155,"org.easymock.tests2.ThreadingTest.testThreadSafe":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":387,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":93,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":213,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":354,"org.easymock.tests2.CaptureTest.testCapture_2617107":193,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":242,"org.easymock.tests2.UsageConstraintsTest.any":176,"org.easymock.tests2.StubTest.stub":492,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":243,"org.easymock.tests.UsageExpectAndThrowTest.longType":248,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":8,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":300,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":501,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":449,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests.LimitationsTest.mockNativeMethod":223,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":275,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":476,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":503,"org.easymock.tests2.NameTest.nameForMocksControl":473,"org.easymock.tests2.MockedExceptionTest.testMockedException":488,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":375,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":404,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":249,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":282,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":356,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":414,"org.easymock.tests.MockingTest.testNicePartialClassMocking":280,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":360,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":474,"org.easymock.tests2.CaptureTest.testCaptureLast":78,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":317,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":402,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":12,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":185,"org.easymock.tests.MockingTest.testTwoMocks":278,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":403,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":252,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":83,"org.easymock.samples.ExampleTest.removeNonExistingDocument":347,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":481,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":298,"org.easymock.tests.UsageStrictMockTest.differentMethods":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":446,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":289,"org.easymock.tests2.ConstraintsToStringTest.andToString":513,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":75,"org.easymock.tests2.MockBuilderTest.testCreateMockString":419,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":319,"org.easymock.tests.UsageExpectAndThrowTest.floatType":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":377,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":437,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":486,"org.easymock.tests.UsageVerifyTest.twoThrows":22,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":386,"org.easymock.samples.ExampleTest.voteAgainstRemoval":344,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":236,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":366,"org.easymock.tests.LimitationsTest.privateConstructor":222,"org.easymock.tests2.UsageConstraintsTest.testNotNull":188,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":487,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":114,"org.easymock.tests2.UsageTest.defaultResetToNice":31,"org.easymock.samples.ExampleTest.voteAgainstRemovals":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":273,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":475,"org.easymock.tests.UsageVarargTest.differentLength":152,"org.easymock.tests2.CallbackTest.callback":52,"org.easymock.tests2.UsageConstraintsTest.equals":11,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":363,"org.easymock.tests.UsageTest.openCallCountByLastCall":144,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":162,"org.easymock.tests.UsageCallCountTest.tooFewCalls":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":398,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":118,"org.easymock.tests.UsageThrowableTest.throwCheckedException":111,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":508,"org.easymock.tests.MockingTest.testStrictClassMocking":276,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":401,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":480,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":397,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":303,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":400,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":439,"org.easymock.tests.ObjectMethodsTest.testHashCode":105,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":81,"org.easymock.tests2.NameTest.nameForNiceMock":472,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":189,"org.easymock.tests2.DependencyTest.testInterfaceMocking":190,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":44,"org.easymock.samples.ExampleTest.addDocument":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":388,"org.easymock.tests2.DelegateToTest.testStubDelegate":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":393,"org.easymock.tests2.AnswerTest.stubAnswer":438,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":165,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":415,"org.easymock.tests.UsageVarargTest.varargLongAccepted":154,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":66,"org.easymock.tests.UsageExpectAndReturnTest.floatType":262,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":40,"org.easymock.tests2.ConstraintsToStringTest.orToString":510,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":453,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":182,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":129,"org.easymock.tests.UsageThrowableTest.noUpperLimit":108,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":167,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":428,"org.easymock.tests2.SerializationTest.test":4,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":196,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":10,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":288,"org.easymock.tests2.UsageConstraintsTest.testSame":172,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":261,"org.easymock.samples.SupportTest.addDocument":352,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":399,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":378,"org.easymock.tests.GenericTest.testPackageScope":34,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":229,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":452,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":283,"org.easymock.tests2.NameTest.nameForMock":470,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":64,"org.easymock.tests2.UsageStrictMockTest.differentMethods":502,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":418,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":364,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":264,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":257,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":212,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":309,"org.easymock.tests2.MockedExceptionTest.testRealException":490,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":211,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":237,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":48,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":203,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":161,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":305,"org.easymock.tests2.NameTest.nameForStrictMock":471,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":410,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":359,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":432,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":183,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":30,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":290,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":407,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests2.UsageConstraintsTest.lessThan":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":448,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":457,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":233,"org.easymock.tests2.CaptureTest.testCaptureRightOne":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":382,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":32,"org.easymock.tests2.UsageConstraintsTest.testOr":173,"org.easymock.tests.UsageRangeTest.combination":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":0,"org.easymock.tests.UsageTest.wrongArguments":18,"org.easymock.tests2.MockBuilderTest.testWithConstructor":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":379,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":226,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":271,"org.easymock.tests.UsageVarargTest.varargShortAccepted":153,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":291,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":94,"org.easymock.tests2.UsageConstraintsTest.cmpTo":177,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":228,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":425,"org.easymock.tests2.CaptureTest.testCaptureFromStub":200,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":295,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":408,"org.easymock.tests.UsageTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":92,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":272,"org.easymock.tests2.UsageConstraintsTest.constraints":168,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":336,"org.easymock.samples.ExampleTest.addAndChangeDocument":67,"org.easymock.tests2.ConstraintsToStringTest.notToString":512,"org.easymock.tests.UsageStrictMockTest.testVerify":339,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":351,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":139,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":135,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":63,"org.easymock.tests.LimitationsTest.abstractClass":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":136,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":130,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":462,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":148}}]
