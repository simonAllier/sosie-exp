[{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"matched"}},{"position":"org.easymock.internal.Range:36","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,1,423,2,424,425,426,427,428,429,430,3,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,4,5,466,467,6,468,7,8,469,9,470,471,472,473,474,475,476,477,478,10,479,480,481,482,11,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,19,20,21,22,24,25,27,28,29,32,33,34,35,36,37,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,97,98,100,101,102,103,104,105,122,128,130,131,132,133,134,135,136,137,138,144,145,146,147,148,149,151,152,153,155,156,157,158,159,160,161,162,163,164,165,172,175,176,177,179,183,184,185,186,187,188,189,190,191,192,193,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,256,257,258,259,260,261,262,263,264,265,266,268,269,269,270,270,271,272,273,274,275,276,277,283,292,293,294,295,296,297,298,299,300,301,302,310,311,312,313,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,345,346,347,348,351,355,357,359,363,369,372,382,388,391,392,393,394,395,396,399,403,404,405,408,409,410,411,412,413,414,416,417,418,419,420,421,422,1,423,2,424,425,426,427,428,429,430,3,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,453,464,465,4,5,467,6,468,7,8,469,470,471,472,473,474,475,476,477,478,10,479,480,482,11,483,484,485,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[269,269,270,270,341,342,361,400,485],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[38,57,106,110,111,120,125,172,296,478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[26,30],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[489,490,491],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[392],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[124,191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[492,493,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[252,495],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[496,464,477,482],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[497,498,499,500,501,342,358],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[12,13,19,20,21,22,23,24,25,27,28,32,33,34,35,36,37,52,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,133,502,502,134,135,136,137,138,139,140,141,142,143,144,146,147,150,151,152,153,155,156,157,158,159,160,161,162,176,177,179,183,184,185,186,187,188,202,203,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,283,292,293,294,295,296,297,298,299,300,301,302,310,311,312,313,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,349,351,355,356,357,359,362,363,365,369,372,382,388,391,392,393,394,395,396,397,399,402,403,404,405,408,411,412,413,414,416,418,419,420,422,1,423,2,424,425,426,427,428,429,430,3,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,453,460,461,462,463,464,465,4,5,467,6,468,7,8,469,470,471,472,473,474,475,476,477,478,10,479,480,481,482,11,483,484,485,486,487,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[497,498,499,503,500,501,504,342,358,505],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"parameterType"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.LastControl:94","failures":[1,423,2,424,3,431,4,5,467,6,468,7,8,469,9,470,10,479,11,483],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[12,13,14,15,16,17,19,27,29,32,33,34,35,36,37,52,54,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,97,98,99,100,101,102,103,104,105,122,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,162,163,164,165,167,168,170,171,172,175,176,177,179,183,184,185,186,187,188,189,190,191,192,193,194,197,198,199,200,201,202,203,204,205,207,208,209,210,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,256,257,258,259,260,261,262,263,264,266,268,269,269,270,270,271,277,283,284,292,293,294,296,297,298,299,300,301,302,310,311,312,313,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,345,349,351,352,355,356,357,359,362,363,365,369,372,382,388,391,392,393,394,395,396,397,399,402,403,404,405,407,408,409,410,411,412,413,414,416,417,418,419,420,421,422,1,423,2,424,425,426,427,428,429,430,3,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,453,454,460,461,462,463,464,465,4,5,467,6,468,7,8,469,9,470,471,472,473,474,475,476,477,478,10,479,480,481,482,11,483,484,485,486,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[93],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1507","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[26,30],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[506,485,486,487],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[489,490,491],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[249,253],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[506,485,486,487],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[497,498,499,504,341,342,358,361,485],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[327],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:70","failures":[59,60,298,299],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[5,7,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[56,507,508,99,509,510],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[12,27,29,32,33,36,52,57,59,60,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,101,102,105,134,135,136,137,138,149,176,177,179,202,203,213,214,215,236,237,238,239,240,242,261,263,264,266,271,277,283,292,293,296,298,299,302,310,311,312,313,315,316,317,319,320,321,323,325,326,327,330,331,334,336,337,338,339,340,341,351,355,357,359,363,369,372,382,388,391,392,393,394,395,396,399,403,404,405,408,412,419,1,423,424,425,428,429,430,3,432,433,434,435,436,437,438,439,440,441,442,443,444,445,453,464,465,4,5,467,6,468,7,8,469,470,471,472,473,474,475,476,477,478,10,479,480,482,11,483,484,485,486],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[5,9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[497,498,499,503,500,501,504,342,358,505],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[417,419],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[410],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection","obj":"obj","targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[21,22,24,25,27,28,35,42,52,55,56,58,61,63,64,65,66,67,68,69,70,73,74,76,81,86,92,100,103,104,105,133,144,146,147,149,151,152,153,155,156,158,159,160,161,162,176,177,179,213,214,218,219,221,226,231,241,242,261,262,263,264,265,266,271,272,273,274,275,276,277,283,292,293,295,297,300,310,311,312,313,315,316,317,319,320,322,323,324,328,329,331,334,339,340,341,355,357,359,369,372,382,388,391,392,393,394,395,396,399,404,408,411,418,420,1,423,2,424,426,427,428,429,430,3,433,434,435,436,437,438,439,440,442,443,444,445,446,453,5,8,469,470,471,473,476,10,479,480,481,482,485,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests2.UsageTest.argumentsOrdered":329,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":444,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":116,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":324,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":272,"org.easymock.tests2.DelegateToTest.testReturnException":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":184,"org.easymock.tests.MockingTest.testPartialClassMocking":176,"org.easymock.tests.MockClassControlTest.testToString":207,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":344,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":95,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":376,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":216,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":372,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":293,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":32,"org.easymock.tests2.UsageTest.wrongArguments":322,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":459,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":245,"org.easymock.samples.ExampleTest.answerVsDelegate":262,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":199,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":181,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":394,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":443,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":212,"org.easymock.tests2.CaptureTest.testPrimitive":424,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":36,"org.easymock.tests.UsageTest.moreThanOneArgument":98,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":235,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":258,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":189,"org.easymock.tests.UsageTest.argumentsOrdered":104,"org.easymock.tests.UsageVarargTest.varargIntAccepted":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":501,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":349,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":288,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":305,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":138,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":453,"org.easymock.tests.ReplayStateInvalidUsageTest.times":46,"org.easymock.tests2.DependencyTest.testClassMocking":290,"org.easymock.tests2.AnswerTest.answer":408,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":123,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":463,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":196,"org.easymock.tests2.UsageTest.strictResetToDefault":320,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":402,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":257,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":438,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":238,"org.easymock.tests2.DelegateToTest.testDelegate":422,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":193,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":231,"org.easymock.tests.LimitationsTest.mockFinalMethod":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":143,"org.easymock.tests2.DependencyTest.testClassMockingSupport":291,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":91,"org.easymock.tests2.CaptureTest.testCapture1_2446744":425,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":398,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":461,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":40,"org.easymock.tests.UsageThrowableTest.throwError":63,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":198,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":31,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":390,"org.easymock.samples.PartialClassMockTest.testGetArea":271,"org.easymock.tests.MockingTest.testInterfaceMocking":178,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":41,"org.easymock.tests2.CompareToTest.testLessOrEqual":496,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":135,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":164,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":217,"org.easymock.tests2.UsageTest.niceToStrict":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":377,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":106,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":355,"org.easymock.tests2.MockBuilderTest.testCreateMock":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":385,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":456,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":509,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":225,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":439,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":195,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":243,"org.easymock.tests.UsageOverloadedMethodTest.overloading":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":381,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":474,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":82,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":213,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":473,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":430,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":154,"org.easymock.tests.MockClassControlTest.testEquals":211,"org.easymock.tests2.EasyMockSupportClassTest.testAll":369,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":28,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":233,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":462,"org.easymock.tests2.CaptureTest.testCaptureAll":423,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":141,"org.easymock.tests.MockNameTest.defaultName":204,"org.easymock.tests2.UsageConstraintsTest.testMatches":475,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":259,"org.easymock.samples.ExampleTest.voteForRemovals":266,"org.easymock.tests.UsageVarargTest.allKinds":162,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":142,"org.easymock.samples.BasicClassMockTest.testPrintContent":275,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":69,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":294,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":188,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":504,"org.easymock.tests2.UsageConstraintsTest.greaterThan":477,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":370,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":237,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":405,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":255,"org.easymock.samples.ExampleTest.voteForRemoval":263,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":406,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":337,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":200,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":397,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":133,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":319,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":113,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":436,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":183,"org.easymock.tests2.CaptureTest.testCaptureFirst":433,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":437,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":331,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":150,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":78,"org.easymock.tests2.CaptureTest.testCapture2_2446744":432,"org.easymock.tests2.UsageTest.moreThanOneArgument":321,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":124,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":363,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":161,"org.easymock.tests.GenericTest.testBridgedEquals":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":24,"org.easymock.tests.UsageExpectAndReturnTest.longType":74,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":434,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":139,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":234,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":481,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":172,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":232,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":256,"org.easymock.tests.UsageCallCountTest.tooManyCalls":25,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":386,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":458,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":221,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":68,"org.easymock.tests.MockingTest.testNiceClassMocking":182,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":311,"org.easymock.tests.MockingTest.testClassMocking":174,"org.easymock.tests2.UsageConstraintsTest.testContains":472,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":18,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":334,"org.easymock.tests2.UsageConstraintsTest.testFind":467,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":215,"org.easymock.tests.MockTypeTest.fromEasyMockClass":197,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":416,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":54,"org.easymock.tests.UsageExpectAndReturnTest.object":81,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":399,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":442,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":156,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":169,"org.easymock.tests.UsageTest.exactCallCountByLastCall":105,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":111,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":190,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":94,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":342,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":151,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":87,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":146,"org.easymock.tests.MockClassControlTest.testHashCode":210,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":279,"org.easymock.tests2.EasyMockSupportTest.testVerify":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":379,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":191,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":15,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":460,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":447,"org.easymock.tests.UsageVarargTest.varargCharAccepted":155,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":247,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":129,"org.easymock.tests2.UsageTest.openCallCountByLastCall":325,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":489,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":445,"org.easymock.tests.DefaultClassInstantiatorTest.object":248,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":14,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":167,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":380,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":278,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":403,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":209,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":222,"org.easymock.tests.CapturesMatcherTest.test":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":88,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":388,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":208,"org.easymock.tests2.UsageTest.resumeIfFailure":330,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":194,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":186,"org.easymock.tests2.StubTest.stubWithReturnValue":302,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":358,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":482,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":80,"org.easymock.tests2.SerializationTest.testAllMockedMethod":487,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":122,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":510,"org.easymock.samples.SupportTest.voteForRemovals":277,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":228,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":506,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":128,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":409,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":96,"org.easymock.tests.UsageExpectAndThrowTest.object":226,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":479,"org.easymock.tests2.DelegateToTest.testWrongClass":420,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":202,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":203,"org.easymock.tests.UsageStrictMockTest.range":59,"org.easymock.samples.ConstructorCalledMockTest.testTax":269,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":308,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":441,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":310,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":227,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":357,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":103,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":244,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":507,"org.easymock.tests2.CaptureTest.testCaptureNone":429,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":165,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":492,"org.easymock.tests.UsageUnorderedTest.message":37,"org.easymock.tests.UsageVerifyTest.twoReturns":242,"org.easymock.tests.UsageVarargTest.varargByteAccepted":160,"org.easymock.tests2.ThreadingTest.testThreadSafe":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":383,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":22,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":170,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":274,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":126,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":35,"org.easymock.tests2.UsageConstraintsTest.any":470,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":45,"org.easymock.tests2.StubTest.stub":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":127,"org.easymock.tests.UsageExpectAndThrowTest.longType":219,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":252,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":44,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":297,"org.easymock.tests2.SerializationTest.testClass":485,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":283,"org.easymock.tests.LimitationsTest.mockNativeMethod":52,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":29,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":90,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":450,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":300,"org.easymock.tests2.NameTest.nameForMocksControl":348,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":452,"org.easymock.tests2.MockedExceptionTest.testMockedException":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":371,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":102,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":415,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":220,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":391,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":359,"org.easymock.tests.MockingTest.testNicePartialClassMocking":177,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":396,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":448,"org.easymock.tests2.CaptureTest.testCaptureLast":428,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":92,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":317,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":480,"org.easymock.tests.MockingTest.testTwoMocks":175,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":71,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":224,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":328,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":483,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":494,"org.easymock.samples.ExampleTest.removeNonExistingDocument":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":455,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":42,"org.easymock.tests.UsageStrictMockTest.differentMethods":60,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":280,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":493,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":250,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":338,"org.easymock.tests2.MockBuilderTest.testCreateMockString":365,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":205,"org.easymock.tests.UsageExpectAndThrowTest.floatType":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":373,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":368,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":411,"org.easymock.tests.UsageVerifyTest.twoThrows":241,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":343,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":382,"org.easymock.samples.ExampleTest.voteAgainstRemoval":264,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":117,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":404,"org.easymock.tests.LimitationsTest.privateConstructor":51,"org.easymock.tests2.UsageConstraintsTest.testNotNull":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":70,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":332,"org.easymock.tests2.UsageTest.defaultResetToNice":327,"org.easymock.samples.ExampleTest.voteAgainstRemovals":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":449,"org.easymock.tests.UsageVarargTest.differentLength":157,"org.easymock.tests2.CallbackTest.callback":488,"org.easymock.tests2.UsageConstraintsTest.equals":466,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":400,"org.easymock.tests.UsageTest.openCallCountByLastCall":101,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":464,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":34,"org.easymock.tests.UsageCallCountTest.tooFewCalls":20,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":313,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":246,"org.easymock.tests.UsageThrowableTest.throwCheckedException":67,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":508,"org.easymock.tests.MockingTest.testStrictClassMocking":173,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":13,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":316,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":454,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":312,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":47,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":315,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":413,"org.easymock.tests.ObjectMethodsTest.testHashCode":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":500,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":340,"org.easymock.tests2.NameTest.nameForNiceMock":347,"org.easymock.tests2.DependencyTest.testInterfaceMocking":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":384,"org.easymock.tests2.DelegateToTest.testStubDelegate":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.AnswerTest.stubAnswer":412,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":57,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":360,"org.easymock.tests.UsageVarargTest.varargLongAccepted":159,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":115,"org.easymock.tests.UsageExpectAndReturnTest.floatType":73,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":341,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":270,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":478,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests.UsageThrowableTest.noUpperLimit":64,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":287,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":465,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":303,"org.easymock.tests2.SerializationTest.test":486,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":426,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":495,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":249,"org.easymock.tests2.UsageConstraintsTest.testSame":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":72,"org.easymock.samples.SupportTest.addDocument":276,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":314,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":374,"org.easymock.tests.GenericTest.testPackageScope":27,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":110,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":286,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":180,"org.easymock.tests2.NameTest.nameForMock":345,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":83,"org.easymock.tests2.UsageStrictMockTest.differentMethods":299,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":364,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":230,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":239,"org.easymock.tests2.MockedExceptionTest.testRealException":335,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":120,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":309,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":119,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":33,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":49,"org.easymock.tests2.NameTest.nameForStrictMock":346,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":354,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":490,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":414,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":307,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":351,"org.easymock.tests2.UsageStrictMockTest.range":298,"org.easymock.tests2.UsageConstraintsTest.lessThan":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":282,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":503,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":114,"org.easymock.tests2.CaptureTest.testCaptureRightOne":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":378,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":236,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":392,"org.easymock.tests.UsageTest.wrongArguments":100,"org.easymock.tests2.MockBuilderTest.testWithConstructor":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":375,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":206,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":84,"org.easymock.tests.UsageVarargTest.varargShortAccepted":158,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":253,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":23,"org.easymock.tests2.UsageConstraintsTest.cmpTo":471,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":109,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":326,"org.easymock.tests2.CaptureTest.testCaptureFromStub":431,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":39,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":352,"org.easymock.tests.UsageTest.unexpectedCallWithArray":99,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":56,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":21,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":85,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":58,"org.easymock.samples.ExampleTest.addAndChangeDocument":268,"org.easymock.tests.UsageStrictMockTest.testVerify":62,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":273,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":140,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":427,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":136,"org.easymock.tests.LimitationsTest.abstractClass":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":77,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":440,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":152}}]
